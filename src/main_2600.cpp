// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single X
[[deprecated("Use field access instead!")]] float& PDollarGestureRecognizer::Point::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Point::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Y
[[deprecated("Use field access instead!")]] float& PDollarGestureRecognizer::Point::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Point::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Z
[[deprecated("Use field access instead!")]] float& PDollarGestureRecognizer::Point::dyn_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Point::dyn_Z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StrokeID
[[deprecated("Use field access instead!")]] int& PDollarGestureRecognizer::Point::dyn_StrokeID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Point::dyn_StrokeID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrokeID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PDollarGestureRecognizer.PointCloudRecognizer
#include "PDollarGestureRecognizer/PointCloudRecognizer.hpp"
// Including type: PDollarGestureRecognizer.Result
#include "PDollarGestureRecognizer/Result.hpp"
// Including type: PDollarGestureRecognizer.Gesture
#include "PDollarGestureRecognizer/Gesture.hpp"
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PDollarGestureRecognizer.PointCloudRecognizer.Classify
::PDollarGestureRecognizer::Result PDollarGestureRecognizer::PointCloudRecognizer::Classify(::PDollarGestureRecognizer::Gesture* candidate, ::ArrayW<::PDollarGestureRecognizer::Gesture*> trainingSet, int numStrokes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::PointCloudRecognizer::Classify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "PointCloudRecognizer", "Classify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate), ::il2cpp_utils::ExtractType(trainingSet), ::il2cpp_utils::ExtractType(numStrokes)})));
  return ::il2cpp_utils::RunMethodRethrow<::PDollarGestureRecognizer::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, candidate, trainingSet, numStrokes);
}
// Autogenerated method: PDollarGestureRecognizer.PointCloudRecognizer.GreedyCloudMatch
float PDollarGestureRecognizer::PointCloudRecognizer::GreedyCloudMatch(::ArrayW<::PDollarGestureRecognizer::Point*> points1, ::ArrayW<::PDollarGestureRecognizer::Point*> points2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::PointCloudRecognizer::GreedyCloudMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "PointCloudRecognizer", "GreedyCloudMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points1), ::il2cpp_utils::ExtractType(points2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points1, points2);
}
// Autogenerated method: PDollarGestureRecognizer.PointCloudRecognizer.CloudDistance
float PDollarGestureRecognizer::PointCloudRecognizer::CloudDistance(::ArrayW<::PDollarGestureRecognizer::Point*> points1, ::ArrayW<::PDollarGestureRecognizer::Point*> points2, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::PointCloudRecognizer::CloudDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "PointCloudRecognizer", "CloudDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points1), ::il2cpp_utils::ExtractType(points2), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points1, points2, startIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.DistributeOnPath
#include "Jacovone/DistributeOnPath.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject target
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Jacovone::DistributeOnPath::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& Jacovone::DistributeOnPath::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingFrom
[[deprecated("Use field access instead!")]] float& Jacovone::DistributeOnPath::dyn_startingFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::dyn_startingFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingFrom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endTo
[[deprecated("Use field access instead!")]] float& Jacovone::DistributeOnPath::dyn_endTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::dyn_endTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endTo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic path
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& Jacovone::DistributeOnPath::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.DistributeOnPath.Awake
void Jacovone::DistributeOnPath::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.DistributeOnPath.Generate
void Jacovone::DistributeOnPath::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::DistributeOnPath::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.MathUtils
#include "Jacovone/MathUtils.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Jacovone.MathUtils.QuaternionBezier
::UnityEngine::Quaternion Jacovone::MathUtils::QuaternionBezier(::UnityEngine::Quaternion p, ::UnityEngine::Quaternion prevP, ::UnityEngine::Quaternion nextP, ::UnityEngine::Quaternion nextNextP, float stepPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::MathUtils::QuaternionBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Jacovone", "MathUtils", "QuaternionBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(prevP), ::il2cpp_utils::ExtractType(nextP), ::il2cpp_utils::ExtractType(nextNextP), ::il2cpp_utils::ExtractType(stepPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, prevP, nextP, nextNextP, stepPos);
}
// Autogenerated method: Jacovone.MathUtils.QuaternionNormalize
::UnityEngine::Quaternion Jacovone::MathUtils::QuaternionNormalize(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::MathUtils::QuaternionNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Jacovone", "MathUtils", "QuaternionNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Jacovone.MathUtils.Vector3Bezier
::UnityEngine::Vector3 Jacovone::MathUtils::Vector3Bezier(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::MathUtils::Vector3Bezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Jacovone", "MathUtils", "Vector3Bezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated method: Jacovone.MathUtils.FloatBezier
float Jacovone::MathUtils::FloatBezier(float p0, float p1, float p2, float p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::MathUtils::FloatBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Jacovone", "MathUtils", "FloatBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
// Including type: Jacovone.PathMagic/WaypointChangedEvent
#include "Jacovone/PathMagic_WaypointChangedEvent.hpp"
// Including type: Jacovone.Waypoint
#include "Jacovone/Waypoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color pathColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Jacovone::PathMagic::dyn_pathColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_pathColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Waypoint[] waypoints
[[deprecated("Use field access instead!")]] ::ArrayW<::Jacovone::Waypoint*>& Jacovone::PathMagic::dyn_waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_waypoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypoints"))->offset;
  return *reinterpret_cast<::ArrayW<::Jacovone::Waypoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::PathMagic::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableOrientation
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_disableOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_disableOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableOrientation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform globalLookAt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::PathMagic::dyn_globalLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_globalLookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalLookAt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean globalFollowPath
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_globalFollowPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_globalFollowPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalFollowPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single globalFollowPathBias
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagic::dyn_globalFollowPathBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_globalFollowPathBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalFollowPathBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic/UpdateModeType updateMode
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic::UpdateModeType& Jacovone::PathMagic::dyn_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_updateMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateMode"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic::UpdateModeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loop
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoStart
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_autoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_autoStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityBias
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagic::dyn_velocityBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_velocityBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentPos
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagic::dyn_currentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_currentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPlaying
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_isPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic/WaypointChangedEvent waypointChanged
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic::WaypointChangedEvent*& Jacovone::PathMagic::dyn_waypointChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_waypointChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointChanged"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic::WaypointChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean presampledPath
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_presampledPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_presampledPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "presampledPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samplesNum
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagic::dyn_samplesNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_samplesNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplesNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastPassedWayponint
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagic::dyn__lastPassedWayponint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn__lastPassedWayponint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPassedWayponint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] positionSamples
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Jacovone::PathMagic::dyn_positionSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_positionSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionSamples"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] rotationSamples
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& Jacovone::PathMagic::dyn_rotationSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_rotationSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSamples"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] velocitySamples
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Jacovone::PathMagic::dyn_velocitySamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_velocitySamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocitySamples"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] waypointSamples
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Jacovone::PathMagic::dyn_waypointSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_waypointSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointSamples"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] samplesDistances
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Jacovone::PathMagic::dyn_samplesDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_samplesDistances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplesDistances"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single totalDistance
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagic::dyn_totalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_totalDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateTransform
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagic::dyn_updateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn_updateTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastVelocity
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagic::dyn__lastVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::dyn__lastVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.PathMagic.OnEnable
void Jacovone::PathMagic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.OnDisable
void Jacovone::PathMagic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_Waypoints
::ArrayW<::Jacovone::Waypoint*> Jacovone::PathMagic::get_Waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_Waypoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Waypoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Jacovone::Waypoint*>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_Waypoints
void Jacovone::PathMagic::set_Waypoints(::ArrayW<::Jacovone::Waypoint*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_Waypoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Waypoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_Target
::UnityEngine::Transform* Jacovone::PathMagic::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_Target
void Jacovone::PathMagic::set_Target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_DisableOrientation
bool Jacovone::PathMagic::get_DisableOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_DisableOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisableOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_DisableOrientation
void Jacovone::PathMagic::set_DisableOrientation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_DisableOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisableOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_GlobalLookAt
::UnityEngine::Transform* Jacovone::PathMagic::get_GlobalLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_GlobalLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_GlobalLookAt
void Jacovone::PathMagic::set_GlobalLookAt(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_GlobalLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_GlobalFollowPath
bool Jacovone::PathMagic::get_GlobalFollowPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_GlobalFollowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalFollowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_GlobalFollowPath
void Jacovone::PathMagic::set_GlobalFollowPath(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_GlobalFollowPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalFollowPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_GlobalFollowPathBias
float Jacovone::PathMagic::get_GlobalFollowPathBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_GlobalFollowPathBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalFollowPathBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_GlobalFollowPathBias
void Jacovone::PathMagic::set_GlobalFollowPathBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_GlobalFollowPathBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalFollowPathBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_UpdateMode
::Jacovone::PathMagic::UpdateModeType Jacovone::PathMagic::get_UpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_UpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagic::UpdateModeType, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_UpdateMode
void Jacovone::PathMagic::set_UpdateMode(::Jacovone::PathMagic::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_UpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_Loop
bool Jacovone::PathMagic::get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_Loop
void Jacovone::PathMagic::set_Loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_AutoStart
bool Jacovone::PathMagic::get_AutoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_AutoStart
void Jacovone::PathMagic::set_AutoStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_VelocityBias
float Jacovone::PathMagic::get_VelocityBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_VelocityBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_VelocityBias
void Jacovone::PathMagic::set_VelocityBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_VelocityBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_CurrentPos
float Jacovone::PathMagic::get_CurrentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_CurrentPos
void Jacovone::PathMagic::set_CurrentPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_IsPlaying
bool Jacovone::PathMagic::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_WaypointChanged
::Jacovone::PathMagic::WaypointChangedEvent* Jacovone::PathMagic::get_WaypointChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_WaypointChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaypointChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagic::WaypointChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_WaypointChanged
void Jacovone::PathMagic::set_WaypointChanged(::Jacovone::PathMagic::WaypointChangedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_WaypointChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WaypointChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.get_PresampledPath
bool Jacovone::PathMagic::get_PresampledPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_PresampledPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PresampledPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_SamplesNum
int Jacovone::PathMagic::get_SamplesNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_SamplesNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SamplesNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_LastPassedWayponint
int Jacovone::PathMagic::get_LastPassedWayponint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_LastPassedWayponint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastPassedWayponint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_PositionSamples
::ArrayW<::UnityEngine::Vector3> Jacovone::PathMagic::get_PositionSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_PositionSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_RotationSamples
::ArrayW<::UnityEngine::Quaternion> Jacovone::PathMagic::get_RotationSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_RotationSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RotationSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Quaternion>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_VelocitySamples
::ArrayW<float> Jacovone::PathMagic::get_VelocitySamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_VelocitySamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocitySamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_WaypointSamples
::ArrayW<int> Jacovone::PathMagic::get_WaypointSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_WaypointSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaypointSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_SamplesDistances
::ArrayW<float> Jacovone::PathMagic::get_SamplesDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_SamplesDistances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SamplesDistances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_TotalDistance
float Jacovone::PathMagic::get_TotalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_TotalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.get_UpdateTransform
bool Jacovone::PathMagic::get_UpdateTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::get_UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.set_UpdateTransform
void Jacovone::PathMagic::set_UpdateTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::set_UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagic.Start
void Jacovone::PathMagic::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.Update
void Jacovone::PathMagic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.FixedUpdate
void Jacovone::PathMagic::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.DoUpdate
void Jacovone::PathMagic::DoUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::DoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.Play
void Jacovone::PathMagic::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.Pause
void Jacovone::PathMagic::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.Rewind
void Jacovone::PathMagic::Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.Stop
void Jacovone::PathMagic::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.sampledPositionAndRotationAndVelocityAndWaypointAtPos
void Jacovone::PathMagic::sampledPositionAndRotationAndVelocityAndWaypointAtPos(float pos, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<float> velocity, ByRef<int> waypoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::sampledPositionAndRotationAndVelocityAndWaypointAtPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sampledPositionAndRotationAndVelocityAndWaypointAtPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, byref(position), byref(rotation), byref(velocity), byref(waypoint));
}
// Autogenerated method: Jacovone.PathMagic.computeRotationAtPos
::UnityEngine::Quaternion Jacovone::PathMagic::computeRotationAtPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::computeRotationAtPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computeRotationAtPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, pos);
}
// Autogenerated method: Jacovone.PathMagic.GetWaypointRotation
::UnityEngine::Quaternion Jacovone::PathMagic::GetWaypointRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::GetWaypointRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWaypointRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: Jacovone.PathMagic.computePositionAtPos
::UnityEngine::Vector3 Jacovone::PathMagic::computePositionAtPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::computePositionAtPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computePositionAtPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos);
}
// Autogenerated method: Jacovone.PathMagic.computeVelocityAtPos
float Jacovone::PathMagic::computeVelocityAtPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::computeVelocityAtPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computeVelocityAtPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pos);
}
// Autogenerated method: Jacovone.PathMagic.UpdateTarget
void Jacovone::PathMagic::UpdateTarget(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: Jacovone.PathMagic.UpdateTarget
void Jacovone::PathMagic::UpdateTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.GetCurrentWaypoint
int Jacovone::PathMagic::GetCurrentWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::GetCurrentWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.GetWaypointFromPos
int Jacovone::PathMagic::GetWaypointFromPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::GetWaypointFromPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWaypointFromPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: Jacovone.PathMagic.GetFaceForwardForPos
::UnityEngine::Quaternion Jacovone::PathMagic::GetFaceForwardForPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::GetFaceForwardForPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFaceForwardForPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, pos);
}
// Autogenerated method: Jacovone.PathMagic.UpdatePathSamples
void Jacovone::PathMagic::UpdatePathSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdatePathSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePathSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagic.OnDrawGizmos
void Jacovone::PathMagic::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagic/WaypointChangedEvent
#include "Jacovone/PathMagic_WaypointChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagic/UpdateModeType
#include "Jacovone/PathMagic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Jacovone.PathMagic/UpdateModeType OnUpdate
::Jacovone::PathMagic::UpdateModeType Jacovone::PathMagic::UpdateModeType::_get_OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateModeType::_get_OnUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::PathMagic::UpdateModeType>("Jacovone", "PathMagic/UpdateModeType", "OnUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.PathMagic/UpdateModeType OnUpdate
void Jacovone::PathMagic::UpdateModeType::_set_OnUpdate(::Jacovone::PathMagic::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateModeType::_set_OnUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "PathMagic/UpdateModeType", "OnUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.PathMagic/UpdateModeType OnFixedUpdate
::Jacovone::PathMagic::UpdateModeType Jacovone::PathMagic::UpdateModeType::_get_OnFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateModeType::_get_OnFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::PathMagic::UpdateModeType>("Jacovone", "PathMagic/UpdateModeType", "OnFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.PathMagic/UpdateModeType OnFixedUpdate
void Jacovone::PathMagic::UpdateModeType::_set_OnFixedUpdate(::Jacovone::PathMagic::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateModeType::_set_OnFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "PathMagic/UpdateModeType", "OnFixedUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagic::UpdateModeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagic::UpdateModeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagicAnimator
#include "Jacovone/PathMagicAnimator.hpp"
// Including type: Jacovone.PathMagicAnimator/WaypointChangedEvent
#include "Jacovone/PathMagicAnimator_WaypointChangedEvent.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic pathMagic
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& Jacovone::PathMagicAnimator::dyn_pathMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_pathMagic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathMagic"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::PathMagicAnimator::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagicAnimator/UpdateModeType updateMode
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagicAnimator::UpdateModeType& Jacovone::PathMagicAnimator::dyn_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_updateMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateMode"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagicAnimator::UpdateModeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoStart
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicAnimator::dyn_autoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_autoStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityBias
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagicAnimator::dyn_velocityBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_velocityBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentPos
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagicAnimator::dyn_currentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_currentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPlaying
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicAnimator::dyn_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_isPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform globalLookAt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::PathMagicAnimator::dyn_globalLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_globalLookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalLookAt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableOrientation
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicAnimator::dyn_disableOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_disableOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableOrientation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean globalFollowPath
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicAnimator::dyn_globalFollowPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_globalFollowPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalFollowPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagicAnimator/WaypointChangedEvent waypointChanged
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagicAnimator::WaypointChangedEvent*& Jacovone::PathMagicAnimator::dyn_waypointChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn_waypointChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointChanged"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagicAnimator::WaypointChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastPassedWayponint
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagicAnimator::dyn__lastPassedWayponint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn__lastPassedWayponint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPassedWayponint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastVelocity
[[deprecated("Use field access instead!")]] float& Jacovone::PathMagicAnimator::dyn__lastVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::dyn__lastVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.PathMagicAnimator.OnEnable
void Jacovone::PathMagicAnimator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.OnDisable
void Jacovone::PathMagicAnimator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_PathMagic
::Jacovone::PathMagic* Jacovone::PathMagicAnimator::get_PathMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_PathMagic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathMagic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagic*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_PathMagic
void Jacovone::PathMagicAnimator::set_PathMagic(::Jacovone::PathMagic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_PathMagic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PathMagic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_Target
::UnityEngine::Transform* Jacovone::PathMagicAnimator::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_UpdateMode
::Jacovone::PathMagicAnimator::UpdateModeType Jacovone::PathMagicAnimator::get_UpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_UpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagicAnimator::UpdateModeType, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_UpdateMode
void Jacovone::PathMagicAnimator::set_UpdateMode(::Jacovone::PathMagicAnimator::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_UpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_AutoStart
bool Jacovone::PathMagicAnimator::get_AutoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_AutoStart
void Jacovone::PathMagicAnimator::set_AutoStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_VelocityBias
float Jacovone::PathMagicAnimator::get_VelocityBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_VelocityBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VelocityBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_VelocityBias
void Jacovone::PathMagicAnimator::set_VelocityBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_VelocityBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VelocityBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_CurrentPos
float Jacovone::PathMagicAnimator::get_CurrentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_CurrentPos
void Jacovone::PathMagicAnimator::set_CurrentPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_IsPlaying
bool Jacovone::PathMagicAnimator::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_GlobalLookAt
::UnityEngine::Transform* Jacovone::PathMagicAnimator::get_GlobalLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_GlobalLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_GlobalLookAt
void Jacovone::PathMagicAnimator::set_GlobalLookAt(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_GlobalLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_DisableOrientation
bool Jacovone::PathMagicAnimator::get_DisableOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_DisableOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisableOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_DisableOrientation
void Jacovone::PathMagicAnimator::set_DisableOrientation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_DisableOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisableOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_WaypointChanged
::Jacovone::PathMagicAnimator::WaypointChangedEvent* Jacovone::PathMagicAnimator::get_WaypointChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_WaypointChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaypointChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagicAnimator::WaypointChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.set_WaypointChanged
void Jacovone::PathMagicAnimator::set_WaypointChanged(::Jacovone::PathMagicAnimator::WaypointChangedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::set_WaypointChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WaypointChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicAnimator.get_LastPassedWayponint
int Jacovone::PathMagicAnimator::get_LastPassedWayponint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::get_LastPassedWayponint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastPassedWayponint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Start
void Jacovone::PathMagicAnimator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Update
void Jacovone::PathMagicAnimator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.FixedUpdate
void Jacovone::PathMagicAnimator::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.DoUpdate
void Jacovone::PathMagicAnimator::DoUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::DoUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Play
void Jacovone::PathMagicAnimator::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Pause
void Jacovone::PathMagicAnimator::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Rewind
void Jacovone::PathMagicAnimator::Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.Stop
void Jacovone::PathMagicAnimator::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicAnimator.UpdateTarget
void Jacovone::PathMagicAnimator::UpdateTarget(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: Jacovone.PathMagicAnimator.UpdateTarget
void Jacovone::PathMagicAnimator::UpdateTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagicAnimator/WaypointChangedEvent
#include "Jacovone/PathMagicAnimator_WaypointChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagicAnimator/UpdateModeType
#include "Jacovone/PathMagicAnimator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Jacovone.PathMagicAnimator/UpdateModeType OnUpdate
::Jacovone::PathMagicAnimator::UpdateModeType Jacovone::PathMagicAnimator::UpdateModeType::_get_OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateModeType::_get_OnUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::PathMagicAnimator::UpdateModeType>("Jacovone", "PathMagicAnimator/UpdateModeType", "OnUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.PathMagicAnimator/UpdateModeType OnUpdate
void Jacovone::PathMagicAnimator::UpdateModeType::_set_OnUpdate(::Jacovone::PathMagicAnimator::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateModeType::_set_OnUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "PathMagicAnimator/UpdateModeType", "OnUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.PathMagicAnimator/UpdateModeType OnFixedUpdate
::Jacovone::PathMagicAnimator::UpdateModeType Jacovone::PathMagicAnimator::UpdateModeType::_get_OnFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateModeType::_get_OnFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::PathMagicAnimator::UpdateModeType>("Jacovone", "PathMagicAnimator/UpdateModeType", "OnFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.PathMagicAnimator/UpdateModeType OnFixedUpdate
void Jacovone::PathMagicAnimator::UpdateModeType::_set_OnFixedUpdate(::Jacovone::PathMagicAnimator::UpdateModeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateModeType::_set_OnFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "PathMagicAnimator/UpdateModeType", "OnFixedUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagicAnimator::UpdateModeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicAnimator::UpdateModeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.PathMagicJoint
#include "Jacovone/PathMagicJoint.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic connectedPath
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& Jacovone::PathMagicJoint::dyn_connectedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_connectedPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPath"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rb
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Jacovone::PathMagicJoint::dyn__rb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn__rb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rb"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::PathMagicJoint::dyn__tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn__tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision1
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagicJoint::dyn_precision1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_precision1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision2
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagicJoint::dyn_precision2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_precision2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean followPathOrientation
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicJoint::dyn_followPathOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_followPathOrientation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followPathOrientation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean motor
[[deprecated("Use field access instead!")]] bool& Jacovone::PathMagicJoint::dyn_motor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_motor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 motorForce
[[deprecated("Use field access instead!")]] int& Jacovone::PathMagicJoint::dyn_motorForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::dyn_motorForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motorForce"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.PathMagicJoint.get_Precision1
int Jacovone::PathMagicJoint::get_Precision1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::get_Precision1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precision1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.set_Precision1
void Jacovone::PathMagicJoint::set_Precision1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::set_Precision1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Precision1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicJoint.get_Precision2
int Jacovone::PathMagicJoint::get_Precision2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::get_Precision2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precision2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.set_Precision2
void Jacovone::PathMagicJoint::set_Precision2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::set_Precision2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Precision2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicJoint.get_FollowPathOrientation
bool Jacovone::PathMagicJoint::get_FollowPathOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::get_FollowPathOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FollowPathOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.set_FollowPathOrientation
void Jacovone::PathMagicJoint::set_FollowPathOrientation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::set_FollowPathOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FollowPathOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicJoint.get_Motor
bool Jacovone::PathMagicJoint::get_Motor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::get_Motor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Motor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.set_Motor
void Jacovone::PathMagicJoint::set_Motor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::set_Motor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Motor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicJoint.get_MotorForce
int Jacovone::PathMagicJoint::get_MotorForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::get_MotorForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MotorForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.set_MotorForce
void Jacovone::PathMagicJoint::set_MotorForce(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::set_MotorForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MotorForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.PathMagicJoint.Awake
void Jacovone::PathMagicJoint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.FixedUpdate
void Jacovone::PathMagicJoint::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.computePosAtMinDistance
float Jacovone::PathMagicJoint::computePosAtMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::computePosAtMinDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computePosAtMinDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.PathMagicJoint.GetPositionForPos
::UnityEngine::Vector3 Jacovone::PathMagicJoint::GetPositionForPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::PathMagicJoint::GetPositionForPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionForPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Waypoint
#include "Jacovone/Waypoint.hpp"
// Including type: Jacovone.Waypoint/ReachedEvent
#include "Jacovone/Waypoint_ReachedEvent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Waypoint::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Waypoint::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform lookAt
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::Waypoint::dyn_lookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_lookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookAt"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 inTangent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Waypoint::dyn_inTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_inTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inTangent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 outTangent
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Waypoint::dyn_outTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_outTangent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outTangent"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean symmetricTangents
[[deprecated("Use field access instead!")]] bool& Jacovone::Waypoint::dyn_symmetricTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_symmetricTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symmetricTangents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocity
[[deprecated("Use field access instead!")]] float& Jacovone::Waypoint::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Waypoint/VelocityVariation inVariation
[[deprecated("Use field access instead!")]] ::Jacovone::Waypoint::VelocityVariation& Jacovone::Waypoint::dyn_inVariation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_inVariation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inVariation"))->offset;
  return *reinterpret_cast<::Jacovone::Waypoint::VelocityVariation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Waypoint/VelocityVariation outVariation
[[deprecated("Use field access instead!")]] ::Jacovone::Waypoint::VelocityVariation& Jacovone::Waypoint::dyn_outVariation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_outVariation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outVariation"))->offset;
  return *reinterpret_cast<::Jacovone::Waypoint::VelocityVariation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Waypoint/ReachedEvent reached
[[deprecated("Use field access instead!")]] ::Jacovone::Waypoint::ReachedEvent*& Jacovone::Waypoint::dyn_reached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::dyn_reached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reached"))->offset;
  return *reinterpret_cast<::Jacovone::Waypoint::ReachedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.Waypoint.get_Position
::UnityEngine::Vector3 Jacovone::Waypoint::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_Position
void Jacovone::Waypoint::set_Position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_Rotation
::UnityEngine::Vector3 Jacovone::Waypoint::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_Rotation
void Jacovone::Waypoint::set_Rotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_LookAt
::UnityEngine::Transform* Jacovone::Waypoint::get_LookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_LookAt
void Jacovone::Waypoint::set_LookAt(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_InTangent
::UnityEngine::Vector3 Jacovone::Waypoint::get_InTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_InTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_InTangent
void Jacovone::Waypoint::set_InTangent(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_InTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_OutTangent
::UnityEngine::Vector3 Jacovone::Waypoint::get_OutTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_OutTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_OutTangent
void Jacovone::Waypoint::set_OutTangent(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_OutTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_SymmetricTangents
bool Jacovone::Waypoint::get_SymmetricTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_SymmetricTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SymmetricTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_SymmetricTangents
void Jacovone::Waypoint::set_SymmetricTangents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_SymmetricTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SymmetricTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_InVariation
::Jacovone::Waypoint::VelocityVariation Jacovone::Waypoint::get_InVariation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_InVariation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InVariation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::Waypoint::VelocityVariation, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_InVariation
void Jacovone::Waypoint::set_InVariation(::Jacovone::Waypoint::VelocityVariation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_InVariation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InVariation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_OutVariation
::Jacovone::Waypoint::VelocityVariation Jacovone::Waypoint::get_OutVariation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_OutVariation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutVariation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::Waypoint::VelocityVariation, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_OutVariation
void Jacovone::Waypoint::set_OutVariation(::Jacovone::Waypoint::VelocityVariation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_OutVariation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutVariation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_Velocity
float Jacovone::Waypoint::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_Velocity
void Jacovone::Waypoint::set_Velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.Waypoint.get_Reached
::Jacovone::Waypoint::ReachedEvent* Jacovone::Waypoint::get_Reached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::get_Reached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::Waypoint::ReachedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Waypoint.set_Reached
void Jacovone::Waypoint::set_Reached(::Jacovone::Waypoint::ReachedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::set_Reached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Waypoint/ReachedEvent
#include "Jacovone/Waypoint_ReachedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Waypoint/VelocityVariation
#include "Jacovone/Waypoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Jacovone.Waypoint/VelocityVariation Slow
::Jacovone::Waypoint::VelocityVariation Jacovone::Waypoint::VelocityVariation::_get_Slow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_get_Slow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Waypoint::VelocityVariation>("Jacovone", "Waypoint/VelocityVariation", "Slow"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Waypoint/VelocityVariation Slow
void Jacovone::Waypoint::VelocityVariation::_set_Slow(::Jacovone::Waypoint::VelocityVariation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_set_Slow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "Waypoint/VelocityVariation", "Slow", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.Waypoint/VelocityVariation Medium
::Jacovone::Waypoint::VelocityVariation Jacovone::Waypoint::VelocityVariation::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Waypoint::VelocityVariation>("Jacovone", "Waypoint/VelocityVariation", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Waypoint/VelocityVariation Medium
void Jacovone::Waypoint::VelocityVariation::_set_Medium(::Jacovone::Waypoint::VelocityVariation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "Waypoint/VelocityVariation", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.Waypoint/VelocityVariation Fast
::Jacovone::Waypoint::VelocityVariation Jacovone::Waypoint::VelocityVariation::_get_Fast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_get_Fast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Waypoint::VelocityVariation>("Jacovone", "Waypoint/VelocityVariation", "Fast"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Waypoint/VelocityVariation Fast
void Jacovone::Waypoint::VelocityVariation::_set_Fast(::Jacovone::Waypoint::VelocityVariation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::_set_Fast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone", "Waypoint/VelocityVariation", "Fast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Jacovone::Waypoint::VelocityVariation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Waypoint::VelocityVariation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.CameraTools.PathMagicFollower
#include "Jacovone/CameraTools/PathMagicFollower.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
// Including type: Jacovone.PathMagicAnimator
#include "Jacovone/PathMagicAnimator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic pathMagic
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& Jacovone::CameraTools::PathMagicFollower::dyn_pathMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_pathMagic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathMagic"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagicAnimator pathMagicAnimator
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagicAnimator*& Jacovone::CameraTools::PathMagicFollower::dyn_pathMagicAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_pathMagicAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathMagicAnimator"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagicAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Jacovone::CameraTools::PathMagicFollower::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated("Use field access instead!")]] int& Jacovone::CameraTools::PathMagicFollower::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_precision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean accurate
[[deprecated("Use field access instead!")]] bool& Jacovone::CameraTools::PathMagicFollower::dyn_accurate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_accurate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accurate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean waypointsOnly
[[deprecated("Use field access instead!")]] bool& Jacovone::CameraTools::PathMagicFollower::dyn_waypointsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_waypointsOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypointsOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lerpPosition
[[deprecated("Use field access instead!")]] bool& Jacovone::CameraTools::PathMagicFollower::dyn_lerpPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_lerpPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpFactor
[[deprecated("Use field access instead!")]] float& Jacovone::CameraTools::PathMagicFollower::dyn_lerpFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::dyn_lerpFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_Target
::UnityEngine::Transform* Jacovone::CameraTools::PathMagicFollower::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_Target
void Jacovone::CameraTools::PathMagicFollower::set_Target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_Precision
int Jacovone::CameraTools::PathMagicFollower::get_Precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_Precision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Precision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_Precision
void Jacovone::CameraTools::PathMagicFollower::set_Precision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_Precision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Precision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_Accurate
bool Jacovone::CameraTools::PathMagicFollower::get_Accurate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_Accurate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Accurate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_Accurate
void Jacovone::CameraTools::PathMagicFollower::set_Accurate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_Accurate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Accurate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_WaypointsOnly
bool Jacovone::CameraTools::PathMagicFollower::get_WaypointsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_WaypointsOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaypointsOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_WaypointsOnly
void Jacovone::CameraTools::PathMagicFollower::set_WaypointsOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_WaypointsOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WaypointsOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_LerpPosition
bool Jacovone::CameraTools::PathMagicFollower::get_LerpPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_LerpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LerpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_LerpPosition
void Jacovone::CameraTools::PathMagicFollower::set_LerpPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_LerpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LerpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_LerpFactor
float Jacovone::CameraTools::PathMagicFollower::get_LerpFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_LerpFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LerpFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_LerpFactor
void Jacovone::CameraTools::PathMagicFollower::set_LerpFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_LerpFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LerpFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.Awake
void Jacovone::CameraTools::PathMagicFollower::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.OnEnable
void Jacovone::CameraTools::PathMagicFollower::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.OnDisable
void Jacovone::CameraTools::PathMagicFollower::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_CurrentPos
float Jacovone::CameraTools::PathMagicFollower::get_CurrentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.set_CurrentPos
void Jacovone::CameraTools::PathMagicFollower::set_CurrentPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::set_CurrentPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_Path
::Jacovone::PathMagic* Jacovone::CameraTools::PathMagicFollower::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Jacovone::PathMagic*, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.get_PointOfView
::UnityEngine::Vector3 Jacovone::CameraTools::PathMagicFollower::get_PointOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::get_PointOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PointOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.Update
void Jacovone::CameraTools::PathMagicFollower::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.computeWaypointPosAtMinDistance
float Jacovone::CameraTools::PathMagicFollower::computeWaypointPosAtMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::computeWaypointPosAtMinDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computeWaypointPosAtMinDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.computePosAtMinDistance
float Jacovone::CameraTools::PathMagicFollower::computePosAtMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::computePosAtMinDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "computePosAtMinDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.CameraTools.PathMagicFollower.GetPositionForPos
::UnityEngine::Vector3 Jacovone::CameraTools::PathMagicFollower::GetPositionForPos(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::GetPositionForPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionForPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Meshes.PathMagicMesh
#include "Jacovone/Meshes/PathMagicMesh.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _mf
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& Jacovone::Meshes::PathMagicMesh::dyn__mf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn__mf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mf"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Jacovone::Meshes::PathMagicMesh::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.PathMagic path
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& Jacovone::Meshes::PathMagicMesh::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingFrom
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicMesh::dyn_startingFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_startingFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingFrom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endTo
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicMesh::dyn_endTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_endTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endTo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pieces
[[deprecated("Use field access instead!")]] int& Jacovone::Meshes::PathMagicMesh::dyn_pieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_pieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pieces"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sections
[[deprecated("Use field access instead!")]] int& Jacovone::Meshes::PathMagicMesh::dyn_sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipped
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicMesh::dyn_flipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_flipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Vector3> vertices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Jacovone::Meshes::PathMagicMesh::dyn_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> triangles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicMesh::dyn_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> triangles2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicMesh::dyn_triangles2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_triangles2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> triangles3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicMesh::dyn_triangles3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_triangles3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Vector3> normals
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Jacovone::Meshes::PathMagicMesh::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<UnityEngine.Vector2> UVs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& Jacovone::Meshes::PathMagicMesh::dyn_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_UVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UVs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoUpdateMesh
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicMesh::dyn_autoUpdateMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::dyn_autoUpdateMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoUpdateMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.Generate
void Jacovone::Meshes::PathMagicMesh::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.AddQuad1
void Jacovone::Meshes::PathMagicMesh::AddQuad1(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::AddQuad1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQuad1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.AddQuad2
void Jacovone::Meshes::PathMagicMesh::AddQuad2(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::AddQuad2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQuad2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.AddQuad3
void Jacovone::Meshes::PathMagicMesh::AddQuad3(int a, int b, int c, int d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::AddQuad3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQuad3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c, d);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.GetNumberOfMaterials
int Jacovone::Meshes::PathMagicMesh::GetNumberOfMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::GetNumberOfMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.InitializeMesh
void Jacovone::Meshes::PathMagicMesh::InitializeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::InitializeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.FinalizeMesh
void Jacovone::Meshes::PathMagicMesh::FinalizeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::FinalizeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicMesh.GenerateMeshPart
void Jacovone::Meshes::PathMagicMesh::GenerateMeshPart(int piece, ::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 xd, ::UnityEngine::Vector3 yd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicMesh::GenerateMeshPart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, position, direction, xd, yd);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Meshes.PathMagicRoad
#include "Jacovone/Meshes/PathMagicRoad.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean closeFront
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicRoad::dyn_closeFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_closeFront");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeFront"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean closeBack
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicRoad::dyn_closeBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_closeBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeBack"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Meshes.PathMagicRoad/WidthType widthType
[[deprecated("Use field access instead!")]] ::Jacovone::Meshes::PathMagicRoad::WidthType& Jacovone::Meshes::PathMagicRoad::dyn_widthType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_widthType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "widthType"))->offset;
  return *reinterpret_cast<::Jacovone::Meshes::PathMagicRoad::WidthType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicRoad::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicRoad::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve widthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Jacovone::Meshes::PathMagicRoad::dyn_widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_widthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "widthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> frontVertices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicRoad::dyn_frontVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_frontVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontVertices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> backVertices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicRoad::dyn_backVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_backVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backVertices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 frontNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicRoad::dyn_frontNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_frontNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 backNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicRoad::dyn_backNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::dyn_backNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.Meshes.PathMagicRoad.InitializeMesh
void Jacovone::Meshes::PathMagicRoad::InitializeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::InitializeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicRoad.FinalizeMesh
void Jacovone::Meshes::PathMagicRoad::FinalizeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::FinalizeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicRoad.GenerateMeshPart
void Jacovone::Meshes::PathMagicRoad::GenerateMeshPart(int piece, ::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 xd, ::UnityEngine::Vector3 yd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::GenerateMeshPart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, position, direction, xd, yd);
}
// Autogenerated method: Jacovone.Meshes.PathMagicRoad.GetNumberOfMaterials
int Jacovone::Meshes::PathMagicRoad::GetNumberOfMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::GetNumberOfMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Meshes.PathMagicRoad/WidthType
#include "Jacovone/Meshes/PathMagicRoad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Jacovone.Meshes.PathMagicRoad/WidthType Constant
::Jacovone::Meshes::PathMagicRoad::WidthType Jacovone::Meshes::PathMagicRoad::WidthType::_get_Constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::WidthType::_get_Constant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Meshes::PathMagicRoad::WidthType>("Jacovone.Meshes", "PathMagicRoad/WidthType", "Constant"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Meshes.PathMagicRoad/WidthType Constant
void Jacovone::Meshes::PathMagicRoad::WidthType::_set_Constant(::Jacovone::Meshes::PathMagicRoad::WidthType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::WidthType::_set_Constant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone.Meshes", "PathMagicRoad/WidthType", "Constant", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.Meshes.PathMagicRoad/WidthType Curve
::Jacovone::Meshes::PathMagicRoad::WidthType Jacovone::Meshes::PathMagicRoad::WidthType::_get_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::WidthType::_get_Curve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Meshes::PathMagicRoad::WidthType>("Jacovone.Meshes", "PathMagicRoad/WidthType", "Curve"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Meshes.PathMagicRoad/WidthType Curve
void Jacovone::Meshes::PathMagicRoad::WidthType::_set_Curve(::Jacovone::Meshes::PathMagicRoad::WidthType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::WidthType::_set_Curve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone.Meshes", "PathMagicRoad/WidthType", "Curve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Jacovone::Meshes::PathMagicRoad::WidthType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicRoad::WidthType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Meshes.PathMagicTorus
#include "Jacovone/Meshes/PathMagicTorus.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean closeFront
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicTorus::dyn_closeFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_closeFront");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeFront"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean closeBack
[[deprecated("Use field access instead!")]] bool& Jacovone::Meshes::PathMagicTorus::dyn_closeBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_closeBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeBack"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Jacovone.Meshes.PathMagicTorus/RadiusType radiusType
[[deprecated("Use field access instead!")]] ::Jacovone::Meshes::PathMagicTorus::RadiusType& Jacovone::Meshes::PathMagicTorus::dyn_radiusType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_radiusType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radiusType"))->offset;
  return *reinterpret_cast<::Jacovone::Meshes::PathMagicTorus::RadiusType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single radius
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicTorus::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve radiusCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Jacovone::Meshes::PathMagicTorus::dyn_radiusCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_radiusCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radiusCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleOffset
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicTorus::dyn_angleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_angleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single twist
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicTorus::dyn_twist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_twist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> frontVertices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicTorus::dyn_frontVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_frontVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontVertices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> backVertices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Jacovone::Meshes::PathMagicTorus::dyn_backVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_backVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backVertices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fTwist
[[deprecated("Use field access instead!")]] float& Jacovone::Meshes::PathMagicTorus::dyn_fTwist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_fTwist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fTwist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 frontNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicTorus::dyn_frontNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_frontNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 backNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicTorus::dyn_backNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_backNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 frontPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicTorus::dyn_frontPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_frontPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 backPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Jacovone::Meshes::PathMagicTorus::dyn_backPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::dyn_backPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Jacovone.Meshes.PathMagicTorus.InitializeMesh
void Jacovone::Meshes::PathMagicTorus::InitializeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::InitializeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicTorus.FinalizeMesh
void Jacovone::Meshes::PathMagicTorus::FinalizeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::FinalizeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Jacovone.Meshes.PathMagicTorus.GenerateMeshPart
void Jacovone::Meshes::PathMagicTorus::GenerateMeshPart(int piece, ::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 xd, ::UnityEngine::Vector3 yd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::GenerateMeshPart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, position, direction, xd, yd);
}
// Autogenerated method: Jacovone.Meshes.PathMagicTorus.GetNumberOfMaterials
int Jacovone::Meshes::PathMagicTorus::GetNumberOfMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::GetNumberOfMaterials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Jacovone::Meshes::PathMagicMesh*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Jacovone.Meshes.PathMagicTorus/RadiusType
#include "Jacovone/Meshes/PathMagicTorus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Jacovone.Meshes.PathMagicTorus/RadiusType Constant
::Jacovone::Meshes::PathMagicTorus::RadiusType Jacovone::Meshes::PathMagicTorus::RadiusType::_get_Constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::RadiusType::_get_Constant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Meshes::PathMagicTorus::RadiusType>("Jacovone.Meshes", "PathMagicTorus/RadiusType", "Constant"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Meshes.PathMagicTorus/RadiusType Constant
void Jacovone::Meshes::PathMagicTorus::RadiusType::_set_Constant(::Jacovone::Meshes::PathMagicTorus::RadiusType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::RadiusType::_set_Constant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone.Meshes", "PathMagicTorus/RadiusType", "Constant", value));
}
// Autogenerated static field getter
// Get static field: static public Jacovone.Meshes.PathMagicTorus/RadiusType Curve
::Jacovone::Meshes::PathMagicTorus::RadiusType Jacovone::Meshes::PathMagicTorus::RadiusType::_get_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::RadiusType::_get_Curve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Jacovone::Meshes::PathMagicTorus::RadiusType>("Jacovone.Meshes", "PathMagicTorus/RadiusType", "Curve"));
}
// Autogenerated static field setter
// Set static field: static public Jacovone.Meshes.PathMagicTorus/RadiusType Curve
void Jacovone::Meshes::PathMagicTorus::RadiusType::_set_Curve(::Jacovone::Meshes::PathMagicTorus::RadiusType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::RadiusType::_set_Curve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Jacovone.Meshes", "PathMagicTorus/RadiusType", "Curve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Jacovone::Meshes::PathMagicTorus::RadiusType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::Meshes::PathMagicTorus::RadiusType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColorGrabbable
#include "OculusSampleFramework/ColorGrabbable.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_GRAB
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_GRAB
void OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
void OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::ColorGrabbable::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] m_meshRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highlight
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ColorGrabbable::dyn_m_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_highlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.get_Highlight
bool OculusSampleFramework::ColorGrabbable::get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::get_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.set_Highlight
void OculusSampleFramework::ColorGrabbable::set_Highlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::set_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.UpdateColor
void OculusSampleFramework::ColorGrabbable::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.Awake
void OculusSampleFramework::ColorGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.SetColor
void OculusSampleFramework::ColorGrabbable::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable..cctor
void OculusSampleFramework::ColorGrabbable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "ColorGrabbable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabBegin
void OculusSampleFramework::ColorGrabbable::GrabBegin(::GlobalNamespace::OVRGrabber* hand, ::UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabEnd
void OculusSampleFramework::ColorGrabbable::GrabEnd(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String m_materialColorField
[[deprecated("Use field access instead!")]] ::StringW& OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialColorField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair m_crosshair
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshair"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabManager m_crosshairManager
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabManager*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshairManager"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& OculusSampleFramework::DistanceGrabbable::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_mpb
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& OculusSampleFramework::DistanceGrabbable::dyn_m_mpb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_mpb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mpb"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_inRange
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_inRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_inRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_targeted
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_targeted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targeted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_InRange
bool OculusSampleFramework::DistanceGrabbable::get_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_InRange
void OculusSampleFramework::DistanceGrabbable::set_InRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_Targeted
bool OculusSampleFramework::DistanceGrabbable::get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_Targeted
void OculusSampleFramework::DistanceGrabbable::set_Targeted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.RefreshCrosshair
void OculusSampleFramework::DistanceGrabbable::RefreshCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::RefreshCrosshair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCrosshair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.Start
void OculusSampleFramework::DistanceGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_spherecastRadius
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_noSnapThreshhold
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_noSnapThreshhold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_preventGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preventGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullVelocity
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullMaxRotationRate
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullMaxRotationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_movingObjectToHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movingObjectToHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxGrabDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxGrabDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_grabObjectsInLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabObjectsInLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_obstructionLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_obstructionLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber m_otherHand
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabber*& OculusSampleFramework::DistanceGrabber::dyn_m_otherHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_otherHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_otherHand"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.DistanceGrabbable m_target
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabbable*& OculusSampleFramework::DistanceGrabber::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_targetCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabber::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.set_UseSpherecast
void OculusSampleFramework::DistanceGrabber::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.HitInfoToGrabbable
::OculusSampleFramework::DistanceGrabbable* OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable(::UnityEngine::RaycastHit hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "DistanceGrabber", "HitInfoToGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::DistanceGrabbable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitInfo);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTarget
bool OculusSampleFramework::DistanceGrabber::FindTarget(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTargetWithSpherecast
bool OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetWithSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Start
void OculusSampleFramework::DistanceGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Update
void OculusSampleFramework::DistanceGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabBegin
void OculusSampleFramework::DistanceGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.MoveGrabbedObject
void OculusSampleFramework::DistanceGrabber::MoveGrabbedObject(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabVolumeEnable
void OculusSampleFramework::DistanceGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.OffhandGrabbed
void OculusSampleFramework::DistanceGrabber::OffhandGrabbed(::GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair/CrosshairState m_state
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair::CrosshairState& OculusSampleFramework::GrabbableCrosshair::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair::CrosshairState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_centerEyeAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_centerEyeAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_targetedCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetedCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_enabledCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabledCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Start
void OculusSampleFramework::GrabbableCrosshair::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.SetState
void OculusSampleFramework::GrabbableCrosshair::SetState(::OculusSampleFramework::GrabbableCrosshair::CrosshairState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Update
void OculusSampleFramework::GrabbableCrosshair::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair/CrosshairState
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_grabVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::GrabManager::dyn_m_grabVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_m_grabVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorInRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorInRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorHighlighted
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorHighlighted"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorOutOfRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorOutOfRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerEnter
void OculusSampleFramework::GrabManager::OnTriggerEnter(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerExit
void OculusSampleFramework::GrabManager::OnTriggerExit(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PauseOnInputLoss
#include "OculusSampleFramework/PauseOnInputLoss.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.Start
void OculusSampleFramework::PauseOnInputLoss::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusLost
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusAcquired
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolTags ToolTags
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolTags& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToolTags"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<OculusSampleFramework.ColliderZone> CollidersTouchingUs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidersTouchingUs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.ColliderZone> _elementsToCleanUp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsToCleanUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnDisable
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.Update
void OculusSampleFramework::BoneCapsuleTriggerLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerEnter
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerExit
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.CleanUpDeadColliders
void OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpDeadColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ENTRY_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ENTRY_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PERP_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PERP_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _proximityZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__proximityZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__proximityZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _contactZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__contactZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _actionZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__actionZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__actionZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController/ContactTest[] _contactTests
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>& OculusSampleFramework::ButtonController::dyn__contactTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactTests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactTests"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonPlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _makeSureToolIsOnPositiveSide
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeSureToolIsOnPositiveSide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localButtonDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::ButtonController::dyn__localButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__localButtonDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localButtonDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableToolTags[] _allValidToolsTags
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::InteractableToolTags>& OculusSampleFramework::ButtonController::dyn__allValidToolsTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allValidToolsTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allValidToolsTags"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::InteractableToolTags>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _toolTagsMask
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::dyn__toolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolTagsMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolTagsMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableState _currentButtonState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::ButtonController::dyn__currentButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__currentButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentButtonState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.InteractableTool,OculusSampleFramework.InteractableState> _toolToState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>*& OculusSampleFramework::ButtonController::dyn__toolToState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolToState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolToState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_LocalButtonDirection
::UnityEngine::Vector3 OculusSampleFramework::ButtonController::get_LocalButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_LocalButtonDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalButtonDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.FireInteractionEventsOnDepth
void OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth(::OculusSampleFramework::InteractableCollisionDepth oldDepth, ::OculusSampleFramework::InteractableTool* collidingTool, ::OculusSampleFramework::InteractionType interactionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireInteractionEventsOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDepth), ::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(interactionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDepth, collidingTool, interactionType);
}
// Autogenerated method: OculusSampleFramework.ButtonController.GetUpcomingStateNearField
::OculusSampleFramework::InteractableState OculusSampleFramework::ButtonController::GetUpcomingStateNearField(::OculusSampleFramework::InteractableState oldState, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::GetUpcomingStateNearField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpcomingStateNearField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newCollisionDepth), ::il2cpp_utils::ExtractType(toolIsInActionZone), ::il2cpp_utils::ExtractType(toolIsInContactZone), ::il2cpp_utils::ExtractType(toolIsInProximity), ::il2cpp_utils::ExtractType(validContact), ::il2cpp_utils::ExtractType(onPositiveSideOfInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableState, false>(this, ___internal__method, oldState, newCollisionDepth, toolIsInActionZone, toolIsInContactZone, toolIsInProximity, validContact, onPositiveSideOfInteractable);
}
// Autogenerated method: OculusSampleFramework.ButtonController.IsValidContact
bool OculusSampleFramework::ButtonController::IsValidContact(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::IsValidContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassEntryTest
bool OculusSampleFramework::ButtonController::PassEntryTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassEntryTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassEntryTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassPerpTest
bool OculusSampleFramework::ButtonController::PassPerpTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassPerpTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassPerpTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_ValidToolTagsMask
int OculusSampleFramework::ButtonController::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.Awake
void OculusSampleFramework::ButtonController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.UpdateCollisionDepth
void OculusSampleFramework::ButtonController::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController/ContactTest
#include "OculusSampleFramework/ButtonController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
void OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
void OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::ContactTest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonTriggerZone
#include "OculusSampleFramework/ButtonTriggerZone.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _parentInteractableObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentInteractableObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable <ParentInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ButtonTriggerZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_Collider
void OculusSampleFramework::ButtonTriggerZone::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_ParentInteractable
void OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable(::OculusSampleFramework::Interactable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.Awake
void OculusSampleFramework::ButtonTriggerZone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.ColliderZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ColliderZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ColliderZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ColliderZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZone Collider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::ColliderZoneArgs::dyn_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Collider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single FrameTime
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractionType InteractionT
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractionType& OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractionT"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Enter
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Enter"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Enter
void OculusSampleFramework::InteractionType::_set_Enter(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Enter", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Stay
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Stay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Stay
void OculusSampleFramework::InteractionType::_set_Stay(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Stay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Exit
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Exit
void OculusSampleFramework::InteractionType::_set_Exit(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Exit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SKELETON_VISUALIZER_NAME
::StringW OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SKELETON_VISUALIZER_NAME
void OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME", value));
}
// [CompilerGeneratedAttribute] Offset: 0xADFCC0
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager*>("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
void OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager/HandsVisualMode VisualMode
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager::HandsVisualMode& OculusSampleFramework::HandsManager::dyn_VisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_VisualMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisualMode"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager::HandsVisualMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] _hand
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRHand*>& OculusSampleFramework::HandsManager::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] _handSkeleton
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeleton*>& OculusSampleFramework::HandsManager::dyn__handSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeleton"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer[] _handSkeletonRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>& OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh[] _handMesh
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMesh*>& OculusSampleFramework::HandsManager::dyn__handMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMesh"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer[] _handMeshRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMeshRenderer*>& OculusSampleFramework::HandsManager::dyn__handMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMeshRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _leftMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__leftMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _rightMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__rightMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentHandAlpha
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::HandsManager::dyn__currentHandAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__currentHandAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHandAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HandAlphaId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::dyn_HandAlphaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_HandAlphaId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandAlphaId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHand
void OculusSampleFramework::HandsManager::set_RightHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_RightHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeleton
void OculusSampleFramework::HandsManager::set_RightHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_RightHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMesh
void OculusSampleFramework::HandsManager::set_RightHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_RightHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMeshRenderer
void OculusSampleFramework::HandsManager::set_RightHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHand
void OculusSampleFramework::HandsManager::set_LeftHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_LeftHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeleton
void OculusSampleFramework::HandsManager::set_LeftHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_LeftHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMesh
void OculusSampleFramework::HandsManager::set_LeftHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMeshRenderer
void OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_Instance
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::HandsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_Instance
void OculusSampleFramework::HandsManager::set_Instance(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Awake
void OculusSampleFramework::HandsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Update
void OculusSampleFramework::HandsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.FindSkeletonVisualGameObjects
::System::Collections::IEnumerator* OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSkeletonVisualGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SwitchVisualization
void OculusSampleFramework::HandsManager::SwitchVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SetToCurrentVisualMode
void OculusSampleFramework::HandsManager::SetToCurrentVisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SetToCurrentVisualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCurrentVisualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.GetCapsulesPerBone
::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>* OculusSampleFramework::HandsManager::GetCapsulesPerBone(::GlobalNamespace::OVRSkeleton* skeleton, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::GetCapsulesPerBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "GetCapsulesPerBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeleton, boneId);
}
// Autogenerated method: OculusSampleFramework.HandsManager.IsInitialized
bool OculusSampleFramework::HandsManager::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager/HandsVisualMode
#include "OculusSampleFramework/HandsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.IDisposable.Dispose
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.MoveNext
bool OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.Reset
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _proximityZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__proximityZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__proximityZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _contactZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__contactZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__contactZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _actionZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__actionZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__actionZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ProximityZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ProximityZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ProximityZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProximityZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ContactZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ContactZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ContactZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContactZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ActionZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ActionZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ActionZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActionZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.Interactable/InteractableStateArgsEvent InteractableStateChanged
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable::InteractableStateArgsEvent*& OculusSampleFramework::Interactable::dyn_InteractableStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_InteractableStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableStateChanged"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable::InteractableStateArgsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ProximityCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ProximityCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ProximityCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProximityCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ContactCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ContactCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ContactCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContactCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ActionCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ActionCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ActionCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActionCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ValidToolTagsMask
int OculusSampleFramework::Interactable::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ProximityZoneEvent
void OculusSampleFramework::Interactable::add_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ProximityZoneEvent
void OculusSampleFramework::Interactable::remove_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnProximityZoneEvent
void OculusSampleFramework::Interactable::OnProximityZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnProximityZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ContactZoneEvent
void OculusSampleFramework::Interactable::add_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ContactZoneEvent
void OculusSampleFramework::Interactable::remove_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnContactZoneEvent
void OculusSampleFramework::Interactable::OnContactZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnContactZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ActionZoneEvent
void OculusSampleFramework::Interactable::add_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ActionZoneEvent
void OculusSampleFramework::Interactable::remove_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnActionZoneEvent
void OculusSampleFramework::Interactable::OnActionZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnActionZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.UpdateCollisionDepth
void OculusSampleFramework::Interactable::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated method: OculusSampleFramework.Interactable.Awake
void OculusSampleFramework::Interactable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnDestroy
void OculusSampleFramework::Interactable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth None
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth None
void OculusSampleFramework::InteractableCollisionDepth::_set_None(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Proximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Proximity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Proximity"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
void OculusSampleFramework::InteractableCollisionDepth::_set_Proximity(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Proximity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Proximity", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
void OculusSampleFramework::InteractableCollisionDepth::_set_Contact(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Action
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Action
void OculusSampleFramework::InteractableCollisionDepth::_set_Action(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableCollisionDepth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableState
#include "OculusSampleFramework/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState Default
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState Default
void OculusSampleFramework::InteractableState::_set_Default(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ProximityState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ProximityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ProximityState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ProximityState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ProximityState
void OculusSampleFramework::InteractableState::_set_ProximityState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ProximityState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ProximityState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ContactState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ContactState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ContactState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ContactState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ContactState
void OculusSampleFramework::InteractableState::_set_ContactState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ContactState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ContactState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ActionState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ActionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ActionState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ActionState
void OculusSampleFramework::InteractableState::_set_ActionState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ActionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ActionState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.Interactable Interactable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::InteractableStateArgs::dyn_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool Tool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableStateArgs::dyn_Tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState OldInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OldInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState NewInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZoneArgs ColliderArgs
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZoneArgs*& OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderArgs"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZoneArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableRegistry
#include "OculusSampleFramework/InteractableRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::_get__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_get__interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*>("OculusSampleFramework", "InteractableRegistry", "_interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
void OculusSampleFramework::InteractableRegistry::_set__interactables(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_set__interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableRegistry", "_interactables", value));
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.get_Interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::get_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::get_Interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "get_Interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.RegisterInteractable
void OculusSampleFramework::InteractableRegistry::RegisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.UnregisterInteractable
void OculusSampleFramework::InteractableRegistry::UnregisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry..cctor
void OculusSampleFramework::InteractableRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsCreator
#include "OculusSampleFramework/InteractableToolsCreator.hpp"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] LeftHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] RightHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.Awake
void OculusSampleFramework::InteractableToolsCreator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolsToHands
::System::Collections::IEnumerator* OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands(::ArrayW<::UnityEngine::Transform*> toolObjects, bool isRightHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolsToHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toolObjects), ::il2cpp_utils::ExtractType(isRightHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, toolObjects, isRightHand);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolToHandTransform
void OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform(::UnityEngine::Transform* tool, bool isRightHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolToHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tool), ::il2cpp_utils::ExtractType(isRightHanded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tool, isRightHanded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] toolObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toolObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRightHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolsCreator <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolsCreator*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolsCreator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.HandsManager <handsManagerObj>5__2
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsManagerObj>5__2"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1/Enumerator<UnityEngine.Transform> <>7__wrap2
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <toolObject>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<toolObject>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton <handSkeletonToAttachTo>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handSkeletonToAttachTo>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.IDisposable.Dispose
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.MoveNext
bool OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.<>m__Finally1
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.Reset
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsInputRouter
#include "OculusSampleFramework/InteractableToolsInputRouter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolsInputRouter*>("OculusSampleFramework", "InteractableToolsInputRouter", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
void OculusSampleFramework::InteractableToolsInputRouter::_set__instance(::OculusSampleFramework::InteractableToolsInputRouter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolsInputRouter", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.get_Instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableToolsInputRouter", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolsInputRouter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.RegisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UnregisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.Update
void OculusSampleFramework::InteractableToolsInputRouter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateToolsAndEnableState
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool toolsAreEnabledThisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToolsAndEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(toolsAreEnabledThisFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, toolsAreEnabledThisFrame);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateTools
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateTools(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool resetCollisionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateTools");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTools", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(resetCollisionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, resetCollisionData);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.ToggleToolsEnableState
void OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleToolsEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tools, enableState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeTool
#include "OculusSampleFramework/FingerTipPokeTool.hpp"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_VELOCITY_FRAMES
int OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_VELOCITY_FRAMES
void OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.FingerTipPokeToolView _fingerTipPokeToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeToolView*& OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerTipPokeToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandFinger _fingerToFollow
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::HandFinger& OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerToFollow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _velocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currVelocityFrame
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currVelocityFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sampledMaxFramesAlready
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampledMaxFramesAlready"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::FingerTipPokeTool::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>& OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneCapsuleTriggerLogic"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastScale
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeTool::dyn__lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBoneCapsule _capsuleToTrack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBoneCapsule*& OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsuleToTrack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoneCapsule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.AttachTriggerLogic
::System::Collections::IEnumerator* OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachTriggerLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Update
void OculusSampleFramework::FingerTipPokeTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.UpdateAverageVelocity
void OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverageVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.CheckAndUpdateScale
void OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndUpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::FingerTipPokeTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::FingerTipPokeTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_IsFarFieldTool
bool OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_EnableState
bool OculusSampleFramework::FingerTipPokeTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.set_EnableState
void OculusSampleFramework::FingerTipPokeTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Initialize
void OculusSampleFramework::FingerTipPokeTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.FocusOnInteractable
void OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.DeFocus
void OculusSampleFramework::FingerTipPokeTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.FingerTipPokeTool <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeTool*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.IDisposable.Dispose
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.MoveNext
bool OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.Reset
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _sphereMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ToolActivateState>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ToolActivateState>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SphereRadius>k__BackingField
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SphereRadius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_InteractableTool
void OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_EnableState
bool OculusSampleFramework::FingerTipPokeToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_EnableState
void OculusSampleFramework::FingerTipPokeToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_ToolActivateState
bool OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_ToolActivateState
void OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_SphereRadius
float OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_SphereRadius
void OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.Awake
void OculusSampleFramework::FingerTipPokeToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.SetFocusedInteractable
void OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags None
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags None
void OculusSampleFramework::InteractableToolTags::_set_None(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Ray
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Ray
void OculusSampleFramework::InteractableToolTags::_set_Ray(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Ray", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Poke
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Poke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Poke");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Poke"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Poke
void OculusSampleFramework::InteractableToolTags::_set_Poke(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Poke");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Poke", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags All
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "All"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags All
void OculusSampleFramework::InteractableToolTags::_set_All(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolTags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState Inactive
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState Inactive
void OculusSampleFramework::ToolInputState::_set_Inactive(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDown(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
void OculusSampleFramework::ToolInputState::_set_PrimaryInputUp(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ToolInputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.ColliderZone InteractableCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableCollisionDepth CollisionDepth
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableCollisionDepth& OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionDepth"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableCollisionDepth*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRightHandedTool>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRightHandedTool>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Velocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <InteractionPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractionPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<OculusSampleFramework.InteractableCollisionInfo> _currentIntersectingObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentIntersectingObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _addedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__addedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__addedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _removedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__removedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__removedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _remainingInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__remainingInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__remainingInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remainingInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _currInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _prevInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTransform
::UnityEngine::Transform* OculusSampleFramework::InteractableTool::get_ToolTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsRightHandedTool
bool OculusSampleFramework::InteractableTool::get_IsRightHandedTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_IsRightHandedTool
void OculusSampleFramework::InteractableTool::set_IsRightHandedTool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::InteractableTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsFarFieldTool
bool OculusSampleFramework::InteractableTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_Velocity
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_Velocity
void OculusSampleFramework::InteractableTool::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_InteractionPosition
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_InteractionPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_InteractionPosition
void OculusSampleFramework::InteractableTool::set_InteractionPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetCurrentIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.FocusOnInteractable
void OculusSampleFramework::InteractableTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.DeFocus
void OculusSampleFramework::InteractableTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_EnableState
bool OculusSampleFramework::InteractableTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_EnableState
void OculusSampleFramework::InteractableTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.Initialize
void OculusSampleFramework::InteractableTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetFirstCurrentCollisionInfo
::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*> OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstCurrentCollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.ClearAllCurrentCollisionInfos
void OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllCurrentCollisionInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateCurrentCollisionsBasedOnDepth
void OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateLatestCollisionData
void OculusSampleFramework::InteractableTool::UpdateLatestCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateLatestCollisionData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolView
#include "OculusSampleFramework/InteractableToolView.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::InteractableToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.SetFocusedInteractable
void OculusSampleFramework::InteractableToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_EnableState
bool OculusSampleFramework::InteractableToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_EnableState
void OculusSampleFramework::InteractableToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_ToolActivateState
bool OculusSampleFramework::InteractableToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_ToolActivateState
void OculusSampleFramework::InteractableToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single PINCH_STRENGTH_THRESHOLD
float OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PINCH_STRENGTH_THRESHOLD
void OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule/PinchState _currPinchState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule::PinchState& OculusSampleFramework::PinchStateModule::dyn__currPinchState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__currPinchState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currPinchState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule::PinchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _firstFocusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFocusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchUpAndDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchUpAndDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchSteadyOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchSteadyOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.UpdateState
void OculusSampleFramework::PinchStateModule::UpdateState(::GlobalNamespace::OVRHand* hand, ::OculusSampleFramework::Interactable* currFocusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(currFocusedInteractable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, currFocusedInteractable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule/PinchState
#include "OculusSampleFramework/PinchStateModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState None
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState None
void OculusSampleFramework::PinchStateModule::PinchState::_set_None(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::PinchStateModule::PinchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayTool
#include "OculusSampleFramework/RayTool.hpp"
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
float OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
void OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COLLIDER_RADIUS
float OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COLLIDER_RADIUS
void OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
int OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
void OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.RayToolView _rayToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::RayToolView*& OculusSampleFramework::RayTool::dyn__rayToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__rayToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::RayToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farFieldMaxDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__farFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__farFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule _pinchStateModule
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule*& OculusSampleFramework::RayTool::dyn__pinchStateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__pinchStateModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchStateModule"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _focusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__focusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__focusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _collidersOverlapped
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__collidersOverlapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__collidersOverlapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersOverlapped"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _currInteractableCastedAgainst
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableCastedAgainst"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleReleaseDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleReleaseDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] _primaryHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& OculusSampleFramework::RayTool::dyn__primaryHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__primaryHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _secondaryOverlapResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__secondaryOverlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__secondaryOverlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryOverlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayTool::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayTool.OnDestroy
void OculusSampleFramework::RayTool::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.Update
void OculusSampleFramework::RayTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetRayCastOrigin
::UnityEngine::Vector3 OculusSampleFramework::RayTool::GetRayCastOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetRayCastOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRayCastOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.HasRayReleasedInteractable
bool OculusSampleFramework::RayTool::HasRayReleasedInteractable(::OculusSampleFramework::Interactable* focusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::HasRayReleasedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRayReleasedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, focusedInteractable);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindTargetInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindTargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindTargetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindPrimaryRaycastHit
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindPrimaryRaycastHit(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindPrimaryRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrimaryRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindInteractableViaConeTest
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindInteractableViaConeTest(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindInteractableViaConeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractableViaConeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::RayTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::RayTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_IsFarFieldTool
bool OculusSampleFramework::RayTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_EnableState
bool OculusSampleFramework::RayTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.set_EnableState
void OculusSampleFramework::RayTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayTool.Initialize
void OculusSampleFramework::RayTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::RayTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FocusOnInteractable
void OculusSampleFramework::RayTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.RayTool.DeFocus
void OculusSampleFramework::RayTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
int OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
void OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
float OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
void OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& OculusSampleFramework::RayToolView::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _toolActivateState
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayToolView::dyn__toolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__toolActivateState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolActivateState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _focusedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__focusedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__focusedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] linePositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::RayToolView::dyn_linePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_linePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _oldColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__oldColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__oldColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _highLightColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__highLightColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__highLightColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highLightColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_EnableState
bool OculusSampleFramework::RayToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_EnableState
void OculusSampleFramework::RayToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_ToolActivateState
bool OculusSampleFramework::RayToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_ToolActivateState
void OculusSampleFramework::RayToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Awake
void OculusSampleFramework::RayToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::RayToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_InteractableTool
void OculusSampleFramework::RayToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.SetFocusedInteractable
void OculusSampleFramework::RayToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Update
void OculusSampleFramework::RayToolView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.GetPointOnBezierCurve
::UnityEngine::Vector3 OculusSampleFramework::RayToolView::GetPointOnBezierCurve(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::GetPointOnBezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "RayToolView", "GetPointOnBezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabberSample
#include "OculusSampleFramework/DistanceGrabberSample.hpp"
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabberSample::dyn_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabberSample::dyn_allowGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_allowGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber[] m_grabbers
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::DistanceGrabber*>& OculusSampleFramework::DistanceGrabberSample::dyn_m_grabbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::dyn_m_grabbers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabbers"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::DistanceGrabber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabberSample::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.set_UseSpherecast
void OculusSampleFramework::DistanceGrabberSample::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.get_AllowGrabThroughWalls
bool OculusSampleFramework::DistanceGrabberSample::get_AllowGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::get_AllowGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.set_AllowGrabThroughWalls
void OculusSampleFramework::DistanceGrabberSample::set_AllowGrabThroughWalls(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::set_AllowGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.Start
void OculusSampleFramework::DistanceGrabberSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.ToggleSphereCasting
void OculusSampleFramework::DistanceGrabberSample::ToggleSphereCasting(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::ToggleSphereCasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleSphereCasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabberSample.ToggleGrabThroughWalls
void OculusSampleFramework::DistanceGrabberSample::ToggleGrabThroughWalls(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabberSample::ToggleGrabThroughWalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleGrabThroughWalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ControllerBoxController
#include "OculusSampleFramework/ControllerBoxController.hpp"
// Including type: OculusSampleFramework.TrainLocomotive
#include "OculusSampleFramework/TrainLocomotive.hpp"
// Including type: OculusSampleFramework.CowController
#include "OculusSampleFramework/CowController.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrainLocomotive _locomotive
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainLocomotive*& OculusSampleFramework::ControllerBoxController::dyn__locomotive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::dyn__locomotive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locomotive"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainLocomotive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.CowController _cowController
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::CowController*& OculusSampleFramework::ControllerBoxController::dyn__cowController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::dyn__cowController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cowController"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::CowController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.Awake
void OculusSampleFramework::ControllerBoxController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.StartStopStateChanged
void OculusSampleFramework::ControllerBoxController::StartStopStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::StartStopStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStopStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.DecreaseSpeedStateChanged
void OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::DecreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.IncreaseSpeedStateChanged
void OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::IncreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.SmokeButtonStateChanged
void OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::SmokeButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmokeButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.WhistleButtonStateChanged
void OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::WhistleButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhistleButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.ReverseButtonStateChanged
void OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::ReverseButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.SwitchVisualization
void OculusSampleFramework::ControllerBoxController::SwitchVisualization(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.ControllerBoxController.GoMoo
void OculusSampleFramework::ControllerBoxController::GoMoo(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ControllerBoxController::GoMoo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoMoo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.CowController
#include "OculusSampleFramework/CowController.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _cowAnimation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& OculusSampleFramework::CowController::dyn__cowAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::dyn__cowAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cowAnimation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _mooCowAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::CowController::dyn__mooCowAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::dyn__mooCowAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mooCowAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.CowController.Start
void OculusSampleFramework::CowController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.CowController.PlayMooSound
void OculusSampleFramework::CowController::PlayMooSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::PlayMooSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayMooSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.CowController.GoMooCowGo
void OculusSampleFramework::CowController::GoMooCowGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::CowController::GoMooCowGo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoMooCowGo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PanelHMDFollower
#include "OculusSampleFramework/PanelHMDFollower.hpp"
// Including type: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13
#include "OculusSampleFramework/PanelHMDFollower_-LerpToHMD-d__13.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single TOTAL_DURATION
float OculusSampleFramework::PanelHMDFollower::_get_TOTAL_DURATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_get_TOTAL_DURATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PanelHMDFollower", "TOTAL_DURATION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TOTAL_DURATION
void OculusSampleFramework::PanelHMDFollower::_set_TOTAL_DURATION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_set_TOTAL_DURATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PanelHMDFollower", "TOTAL_DURATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HMD_MOVEMENT_THRESHOLD
float OculusSampleFramework::PanelHMDFollower::_get_HMD_MOVEMENT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_get_HMD_MOVEMENT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PanelHMDFollower", "HMD_MOVEMENT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HMD_MOVEMENT_THRESHOLD
void OculusSampleFramework::PanelHMDFollower::_set_HMD_MOVEMENT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::_set_HMD_MOVEMENT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PanelHMDFollower", "HMD_MOVEMENT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__minDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__minDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minZDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::dyn__minZDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__minZDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minZDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& OculusSampleFramework::PanelHMDFollower::dyn__cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _panelInitialPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__panelInitialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__panelInitialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_panelInitialPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _coroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::PanelHMDFollower::dyn__coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastMovedToPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::dyn__lastMovedToPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::dyn__lastMovedToPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastMovedToPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.Awake
void OculusSampleFramework::PanelHMDFollower::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.Update
void OculusSampleFramework::PanelHMDFollower::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.CalculateIdealAnchorPosition
::UnityEngine::Vector3 OculusSampleFramework::PanelHMDFollower::CalculateIdealAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::CalculateIdealAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateIdealAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower.LerpToHMD
::System::Collections::IEnumerator* OculusSampleFramework::PanelHMDFollower::LerpToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::LerpToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13
#include "OculusSampleFramework/PanelHMDFollower_-LerpToHMD-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.PanelHMDFollower <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PanelHMDFollower*& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PanelHMDFollower**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <newPanelPosition>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$newPanelPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$newPanelPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newPanelPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$startTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$startTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endTime>5__4
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$endTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::dyn_$endTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.IDisposable.Dispose
void OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.MoveNext
bool OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.IEnumerator.Reset
void OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PanelHMDFollower/<LerpToHMD>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::PanelHMDFollower::$LerpToHMD$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.SelectionCylinder
#include "OculusSampleFramework/SelectionCylinder.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _colorId
int OculusSampleFramework::SelectionCylinder::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "SelectionCylinder", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _colorId
void OculusSampleFramework::SelectionCylinder::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "SelectionCylinder", "_colorId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _selectionMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::SelectionCylinder::dyn__selectionMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__selectionMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _selectionMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& OculusSampleFramework::SelectionCylinder::dyn__selectionMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__selectionMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _defaultSelectionColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& OculusSampleFramework::SelectionCylinder::dyn__defaultSelectionColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__defaultSelectionColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSelectionColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _highlightColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& OculusSampleFramework::SelectionCylinder::dyn__highlightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__highlightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.SelectionCylinder/SelectionState _currSelectionState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::SelectionCylinder::SelectionState& OculusSampleFramework::SelectionCylinder::dyn__currSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::dyn__currSelectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currSelectionState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::SelectionCylinder::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.get_CurrSelectionState
::OculusSampleFramework::SelectionCylinder::SelectionState OculusSampleFramework::SelectionCylinder::get_CurrSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::get_CurrSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::SelectionCylinder::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.set_CurrSelectionState
void OculusSampleFramework::SelectionCylinder::set_CurrSelectionState(::OculusSampleFramework::SelectionCylinder::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::set_CurrSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.Awake
void OculusSampleFramework::SelectionCylinder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.OnDestroy
void OculusSampleFramework::SelectionCylinder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder.AffectSelectionColor
void OculusSampleFramework::SelectionCylinder::AffectSelectionColor(::ArrayW<::UnityEngine::Color> newColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::AffectSelectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AffectSelectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newColors);
}
// Autogenerated method: OculusSampleFramework.SelectionCylinder..cctor
void OculusSampleFramework::SelectionCylinder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "SelectionCylinder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.SelectionCylinder/SelectionState
#include "OculusSampleFramework/SelectionCylinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Off
::OculusSampleFramework::SelectionCylinder::SelectionState OculusSampleFramework::SelectionCylinder::SelectionState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::SelectionCylinder::SelectionState>("OculusSampleFramework", "SelectionCylinder/SelectionState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Off
void OculusSampleFramework::SelectionCylinder::SelectionState::_set_Off(::OculusSampleFramework::SelectionCylinder::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "SelectionCylinder/SelectionState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Selected
::OculusSampleFramework::SelectionCylinder::SelectionState OculusSampleFramework::SelectionCylinder::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::SelectionCylinder::SelectionState>("OculusSampleFramework", "SelectionCylinder/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Selected
void OculusSampleFramework::SelectionCylinder::SelectionState::_set_Selected(::OculusSampleFramework::SelectionCylinder::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "SelectionCylinder/SelectionState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Highlighted
::OculusSampleFramework::SelectionCylinder::SelectionState OculusSampleFramework::SelectionCylinder::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::SelectionCylinder::SelectionState>("OculusSampleFramework", "SelectionCylinder/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.SelectionCylinder/SelectionState Highlighted
void OculusSampleFramework::SelectionCylinder::SelectionState::_set_Highlighted(::OculusSampleFramework::SelectionCylinder::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "SelectionCylinder/SelectionState", "Highlighted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::SelectionCylinder::SelectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::SelectionCylinder::SelectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrackSegment
#include "OculusSampleFramework/TrackSegment.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OculusSampleFramework.Pose
#include "OculusSampleFramework/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _originalGridSize
float OculusSampleFramework::TrackSegment::_get__originalGridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::_get__originalGridSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrackSegment", "_originalGridSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _originalGridSize
void OculusSampleFramework::TrackSegment::_set__originalGridSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::_set__originalGridSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment", "_originalGridSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single _trackWidth
float OculusSampleFramework::TrackSegment::_get__trackWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::_get__trackWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrackSegment", "_trackWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _trackWidth
void OculusSampleFramework::TrackSegment::_set__trackWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::_set__trackWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment", "_trackWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrackSegment/SegmentType _segmentType
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrackSegment::SegmentType& OculusSampleFramework::TrackSegment::dyn__segmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__segmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentType"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrackSegment::SegmentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _straight
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& OculusSampleFramework::TrackSegment::dyn__straight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__straight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_straight"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _leftTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& OculusSampleFramework::TrackSegment::dyn__leftTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__leftTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _rightTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& OculusSampleFramework::TrackSegment::dyn__rightTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__rightTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _gridSize
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrackSegment::dyn__gridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__gridSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subDivCount
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrackSegment::dyn__subDivCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__subDivCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subDivCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrackSegment::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <StartDistance>k__BackingField
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrackSegment::dyn_$StartDistance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn_$StartDistance$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartDistance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Pose _p1
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Pose*& OculusSampleFramework::TrackSegment::dyn__p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__p1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_p1"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Pose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Pose _p2
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Pose*& OculusSampleFramework::TrackSegment::dyn__p2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__p2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_p2"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Pose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Pose _endPose
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Pose*& OculusSampleFramework::TrackSegment::dyn__endPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::dyn__endPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPose"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Pose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_StartDistance
float OculusSampleFramework::TrackSegment::get_StartDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_StartDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.set_StartDistance
void OculusSampleFramework::TrackSegment::set_StartDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::set_StartDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_GridSize
float OculusSampleFramework::TrackSegment::get_GridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_GridSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GridSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.set_GridSize
void OculusSampleFramework::TrackSegment::set_GridSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::set_GridSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GridSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_SubDivCount
int OculusSampleFramework::TrackSegment::get_SubDivCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_SubDivCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubDivCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.set_SubDivCount
void OculusSampleFramework::TrackSegment::set_SubDivCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::set_SubDivCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubDivCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_Type
::OculusSampleFramework::TrackSegment::SegmentType OculusSampleFramework::TrackSegment::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::TrackSegment::SegmentType, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_EndPose
::OculusSampleFramework::Pose* OculusSampleFramework::TrackSegment::get_EndPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_EndPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Pose*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_Radius
float OculusSampleFramework::TrackSegment::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.setGridSize
float OculusSampleFramework::TrackSegment::setGridSize(float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::setGridSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setGridSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, size);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.get_SegmentLength
float OculusSampleFramework::TrackSegment::get_SegmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::get_SegmentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SegmentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.Awake
void OculusSampleFramework::TrackSegment::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.UpdatePose
void OculusSampleFramework::TrackSegment::UpdatePose(float distanceIntoSegment, ::OculusSampleFramework::Pose* pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distanceIntoSegment), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distanceIntoSegment, pose);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.Update
void OculusSampleFramework::TrackSegment::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.OnDisable
void OculusSampleFramework::TrackSegment::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.DrawDebugLines
void OculusSampleFramework::TrackSegment::DrawDebugLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::DrawDebugLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawDebugLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrackSegment.RegenerateTrackAndMesh
void OculusSampleFramework::TrackSegment::RegenerateTrackAndMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::RegenerateTrackAndMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegenerateTrackAndMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrackSegment/SegmentType
#include "OculusSampleFramework/TrackSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrackSegment/SegmentType Straight
::OculusSampleFramework::TrackSegment::SegmentType OculusSampleFramework::TrackSegment::SegmentType::_get_Straight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_get_Straight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrackSegment::SegmentType>("OculusSampleFramework", "TrackSegment/SegmentType", "Straight"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrackSegment/SegmentType Straight
void OculusSampleFramework::TrackSegment::SegmentType::_set_Straight(::OculusSampleFramework::TrackSegment::SegmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_set_Straight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment/SegmentType", "Straight", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrackSegment/SegmentType LeftTurn
::OculusSampleFramework::TrackSegment::SegmentType OculusSampleFramework::TrackSegment::SegmentType::_get_LeftTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_get_LeftTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrackSegment::SegmentType>("OculusSampleFramework", "TrackSegment/SegmentType", "LeftTurn"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrackSegment/SegmentType LeftTurn
void OculusSampleFramework::TrackSegment::SegmentType::_set_LeftTurn(::OculusSampleFramework::TrackSegment::SegmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_set_LeftTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment/SegmentType", "LeftTurn", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrackSegment/SegmentType RightTurn
::OculusSampleFramework::TrackSegment::SegmentType OculusSampleFramework::TrackSegment::SegmentType::_get_RightTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_get_RightTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrackSegment::SegmentType>("OculusSampleFramework", "TrackSegment/SegmentType", "RightTurn"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrackSegment/SegmentType RightTurn
void OculusSampleFramework::TrackSegment::SegmentType::_set_RightTurn(::OculusSampleFramework::TrackSegment::SegmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_set_RightTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment/SegmentType", "RightTurn", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrackSegment/SegmentType Switch
::OculusSampleFramework::TrackSegment::SegmentType OculusSampleFramework::TrackSegment::SegmentType::_get_Switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_get_Switch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrackSegment::SegmentType>("OculusSampleFramework", "TrackSegment/SegmentType", "Switch"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrackSegment/SegmentType Switch
void OculusSampleFramework::TrackSegment::SegmentType::_set_Switch(::OculusSampleFramework::TrackSegment::SegmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::_set_Switch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrackSegment/SegmentType", "Switch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrackSegment::SegmentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrackSegment::SegmentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainButtonVisualController
#include "OculusSampleFramework/TrainButtonVisualController.hpp"
// Including type: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26
#include "OculusSampleFramework/TrainButtonVisualController_-ResetPosition-d__26.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single LERP_TO_OLD_POS_DURATION
float OculusSampleFramework::TrainButtonVisualController::_get_LERP_TO_OLD_POS_DURATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::_get_LERP_TO_OLD_POS_DURATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainButtonVisualController", "LERP_TO_OLD_POS_DURATION"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LERP_TO_OLD_POS_DURATION
void OculusSampleFramework::TrainButtonVisualController::_set_LERP_TO_OLD_POS_DURATION(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::_set_LERP_TO_OLD_POS_DURATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainButtonVisualController", "LERP_TO_OLD_POS_DURATION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOCAL_SIZE_HALVED
float OculusSampleFramework::TrainButtonVisualController::_get_LOCAL_SIZE_HALVED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::_get_LOCAL_SIZE_HALVED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainButtonVisualController", "LOCAL_SIZE_HALVED"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOCAL_SIZE_HALVED
void OculusSampleFramework::TrainButtonVisualController::_set_LOCAL_SIZE_HALVED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::_set_LOCAL_SIZE_HALVED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainButtonVisualController", "LOCAL_SIZE_HALVED", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::TrainButtonVisualController::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _glowRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::TrainButtonVisualController::dyn__glowRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__glowRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController _buttonController
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ButtonController*& OculusSampleFramework::TrainButtonVisualController::dyn__buttonController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonController"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _buttonContactColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::TrainButtonVisualController::dyn__buttonContactColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonContactColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonContactColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _buttonActionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::TrainButtonVisualController::dyn__buttonActionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonActionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonActionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::TrainButtonVisualController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _actionSoundEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::TrainButtonVisualController::dyn__actionSoundEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__actionSoundEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionSoundEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonContactTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::TrainButtonVisualController::dyn__buttonContactTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonContactTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonContactTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contactMaxDisplacementDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainButtonVisualController::dyn__contactMaxDisplacementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__contactMaxDisplacementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactMaxDisplacementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _buttonMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& OculusSampleFramework::TrainButtonVisualController::dyn__buttonMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _buttonDefaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::TrainButtonVisualController::dyn__buttonDefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonDefaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonDefaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _materialColorId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainButtonVisualController::dyn__materialColorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__materialColorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialColorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _buttonInContactOrActionStates
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::TrainButtonVisualController::dyn__buttonInContactOrActionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__buttonInContactOrActionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonInContactOrActionStates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _lerpToOldPositionCr
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::TrainButtonVisualController::dyn__lerpToOldPositionCr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__lerpToOldPositionCr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpToOldPositionCr"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _oldPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::TrainButtonVisualController::dyn__oldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::dyn__oldPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.Awake
void OculusSampleFramework::TrainButtonVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.OnDestroy
void OculusSampleFramework::TrainButtonVisualController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.OnEnable
void OculusSampleFramework::TrainButtonVisualController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.OnDisable
void OculusSampleFramework::TrainButtonVisualController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.ActionOrInContactZoneStayEvent
void OculusSampleFramework::TrainButtonVisualController::ActionOrInContactZoneStayEvent(::OculusSampleFramework::ColliderZoneArgs* collisionArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::ActionOrInContactZoneStayEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionOrInContactZoneStayEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collisionArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collisionArgs);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.InteractableStateChanged
void OculusSampleFramework::TrainButtonVisualController::InteractableStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::InteractableStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.PlaySound
void OculusSampleFramework::TrainButtonVisualController::PlaySound(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.StopResetLerping
void OculusSampleFramework::TrainButtonVisualController::StopResetLerping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::StopResetLerping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopResetLerping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.LerpToOldPosition
void OculusSampleFramework::TrainButtonVisualController::LerpToOldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::LerpToOldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpToOldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController.ResetPosition
::System::Collections::IEnumerator* OculusSampleFramework::TrainButtonVisualController::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::ResetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26
#include "OculusSampleFramework/TrainButtonVisualController_-ResetPosition-d__26.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.TrainButtonVisualController <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainButtonVisualController*& OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainButtonVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endTime>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$endTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::dyn_$endTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26.System.IDisposable.Dispose
void OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26.MoveNext
bool OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26.System.Collections.IEnumerator.Reset
void OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainButtonVisualController/<ResetPosition>d__26.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainButtonVisualController::$ResetPosition$d__26*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainCar
#include "OculusSampleFramework/TrainCar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrainCarBase _parentLocomotive
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainCarBase*& OculusSampleFramework::TrainCar::dyn__parentLocomotive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCar::dyn__parentLocomotive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentLocomotive"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainCarBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _distanceBehindParent
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCar::dyn__distanceBehindParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCar::dyn__distanceBehindParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceBehindParent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainCar.get_DistanceBehindParentScaled
float OculusSampleFramework::TrainCar::get_DistanceBehindParentScaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCar::get_DistanceBehindParentScaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DistanceBehindParentScaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCar.Awake
void OculusSampleFramework::TrainCar::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCar::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCarBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCar.UpdatePosition
void OculusSampleFramework::TrainCar::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCar::UpdatePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCarBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainCarBase
#include "OculusSampleFramework/TrainCarBase.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.TrainTrack
#include "OculusSampleFramework/TrainTrack.hpp"
// Including type: OculusSampleFramework.Pose
#include "OculusSampleFramework/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OFFSET
::UnityEngine::Vector3 OculusSampleFramework::TrainCarBase::_get_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_get_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("OculusSampleFramework", "TrainCarBase", "OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OFFSET
void OculusSampleFramework::TrainCarBase::_set_OFFSET(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_set_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainCarBase", "OFFSET", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single WHEEL_RADIUS
float OculusSampleFramework::TrainCarBase::_get_WHEEL_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_get_WHEEL_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainCarBase", "WHEEL_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single WHEEL_RADIUS
void OculusSampleFramework::TrainCarBase::_set_WHEEL_RADIUS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_set_WHEEL_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainCarBase", "WHEEL_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single TWO_PI
float OculusSampleFramework::TrainCarBase::_get_TWO_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_get_TWO_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainCarBase", "TWO_PI"));
}
// Autogenerated static field setter
// Set static field: static private System.Single TWO_PI
void OculusSampleFramework::TrainCarBase::_set_TWO_PI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::_set_TWO_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainCarBase", "TWO_PI", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _frontWheels
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::TrainCarBase::dyn__frontWheels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__frontWheels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frontWheels"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _rearWheels
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::TrainCarBase::dyn__rearWheels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__rearWheels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rearWheels"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.TrainTrack _trainTrack
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainTrack*& OculusSampleFramework::TrainCarBase::dyn__trainTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__trainTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trainTrack"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform[] _individualWheels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::TrainCarBase::dyn__individualWheels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__individualWheels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_individualWheels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Distance>k__BackingField
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCarBase::dyn_$Distance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn_$Distance$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Distance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single scale
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCarBase::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Pose _frontPose
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Pose*& OculusSampleFramework::TrainCarBase::dyn__frontPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__frontPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frontPose"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Pose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Pose _rearPose
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Pose*& OculusSampleFramework::TrainCarBase::dyn__rearPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::dyn__rearPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rearPose"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Pose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.get_Distance
float OculusSampleFramework::TrainCarBase::get_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::get_Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.set_Distance
void OculusSampleFramework::TrainCarBase::set_Distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::set_Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.get_Scale
float OculusSampleFramework::TrainCarBase::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.set_Scale
void OculusSampleFramework::TrainCarBase::set_Scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::set_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.Awake
void OculusSampleFramework::TrainCarBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCarBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.UpdatePose
void OculusSampleFramework::TrainCarBase::UpdatePose(float distance, ::OculusSampleFramework::TrainCarBase* train, ::OculusSampleFramework::Pose* pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::UpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(train), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, train, pose);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.UpdateCarPosition
void OculusSampleFramework::TrainCarBase::UpdateCarPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::UpdateCarPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCarPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.RotateCarWheels
void OculusSampleFramework::TrainCarBase::RotateCarWheels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::RotateCarWheels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateCarWheels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase.UpdatePosition
void OculusSampleFramework::TrainCarBase::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::UpdatePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCarBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCarBase..cctor
void OculusSampleFramework::TrainCarBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCarBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "TrainCarBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainCrossingController
#include "OculusSampleFramework/TrainCrossingController.hpp"
// Including type: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15
#include "OculusSampleFramework/TrainCrossingController_-AnimateCrossing-d__15.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.SelectionCylinder
#include "OculusSampleFramework/SelectionCylinder.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::TrainCrossingController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _crossingSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OculusSampleFramework::TrainCrossingController::dyn__crossingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__crossingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossingSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _lightSide1Renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::TrainCrossingController::dyn__lightSide1Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__lightSide1Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightSide1Renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _lightSide2Renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::TrainCrossingController::dyn__lightSide2Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__lightSide2Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightSide2Renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.SelectionCylinder _selectionCylinder
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::SelectionCylinder*& OculusSampleFramework::TrainCrossingController::dyn__selectionCylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__selectionCylinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionCylinder"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::SelectionCylinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _lightsSide1Mat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& OculusSampleFramework::TrainCrossingController::dyn__lightsSide1Mat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__lightsSide1Mat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsSide1Mat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _lightsSide2Mat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& OculusSampleFramework::TrainCrossingController::dyn__lightsSide2Mat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__lightsSide2Mat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsSide2Mat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _colorId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainCrossingController::dyn__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__colorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _xingAnimationCr
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::TrainCrossingController::dyn__xingAnimationCr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__xingAnimationCr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xingAnimationCr"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool _toolInteractingWithMe
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::TrainCrossingController::dyn__toolInteractingWithMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::dyn__toolInteractingWithMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolInteractingWithMe"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.Awake
void OculusSampleFramework::TrainCrossingController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.OnDestroy
void OculusSampleFramework::TrainCrossingController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.CrossingButtonStateChanged
void OculusSampleFramework::TrainCrossingController::CrossingButtonStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::CrossingButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossingButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.Update
void OculusSampleFramework::TrainCrossingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.ActivateTrainCrossing
void OculusSampleFramework::TrainCrossingController::ActivateTrainCrossing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::ActivateTrainCrossing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateTrainCrossing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.AnimateCrossing
::System::Collections::IEnumerator* OculusSampleFramework::TrainCrossingController::AnimateCrossing(float animationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::AnimateCrossing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCrossing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animationLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, animationLength);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.AffectMaterials
void OculusSampleFramework::TrainCrossingController::AffectMaterials(::ArrayW<::UnityEngine::Material*> materials, ::UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::AffectMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AffectMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materials, newColor);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController.ToggleLightObjects
void OculusSampleFramework::TrainCrossingController::ToggleLightObjects(bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::ToggleLightObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleLightObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15
#include "OculusSampleFramework/TrainCrossingController_-AnimateCrossing-d__15.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.TrainCrossingController <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainCrossingController*& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainCrossingController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animationLength
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_animationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_animationLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <animationEndTime>5__2
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$animationEndTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$animationEndTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<animationEndTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lightBlinkDuration>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkDuration$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkDuration$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightBlinkDuration>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lightBlinkStartTime>5__4
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkStartTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkStartTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightBlinkStartTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lightBlinkEndTime>5__5
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkEndTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightBlinkEndTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightBlinkEndTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material <lightToBlinkOn>5__6
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightToBlinkOn$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightToBlinkOn$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightToBlinkOn>5__6"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material <lightToBlinkOff>5__7
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightToBlinkOff$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$lightToBlinkOff$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightToBlinkOff>5__7"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <onColor>5__8
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$onColor$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$onColor$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<onColor>5__8"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <offColor>5__9
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$offColor$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::dyn_$offColor$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offColor>5__9"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15.System.IDisposable.Dispose
void OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15.MoveNext
bool OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15.System.Collections.IEnumerator.Reset
void OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainCrossingController/<AnimateCrossing>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCrossingController::$AnimateCrossing$d__15*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainLocomotive
#include "OculusSampleFramework/TrainLocomotive.hpp"
// Including type: OculusSampleFramework.TrainLocomotive/EngineSoundState
#include "OculusSampleFramework/TrainLocomotive_EngineSoundState.hpp"
// Including type: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34
#include "OculusSampleFramework/TrainLocomotive_-StartStopTrain-d__34.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MIN_SPEED
float OculusSampleFramework::TrainLocomotive::_get_MIN_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_get_MIN_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainLocomotive", "MIN_SPEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MIN_SPEED
void OculusSampleFramework::TrainLocomotive::_set_MIN_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_set_MIN_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive", "MIN_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_SPEED
float OculusSampleFramework::TrainLocomotive::_get_MAX_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_get_MAX_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainLocomotive", "MAX_SPEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_SPEED
void OculusSampleFramework::TrainLocomotive::_set_MAX_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_set_MAX_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive", "MAX_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single SMOKE_SPEED_MULTIPLIER
float OculusSampleFramework::TrainLocomotive::_get_SMOKE_SPEED_MULTIPLIER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_get_SMOKE_SPEED_MULTIPLIER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "TrainLocomotive", "SMOKE_SPEED_MULTIPLIER"));
}
// Autogenerated static field setter
// Set static field: static private System.Single SMOKE_SPEED_MULTIPLIER
void OculusSampleFramework::TrainLocomotive::_set_SMOKE_SPEED_MULTIPLIER(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_set_SMOKE_SPEED_MULTIPLIER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive", "SMOKE_SPEED_MULTIPLIER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_PARTICLES_MULTIPLIER
int OculusSampleFramework::TrainLocomotive::_get_MAX_PARTICLES_MULTIPLIER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_get_MAX_PARTICLES_MULTIPLIER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "TrainLocomotive", "MAX_PARTICLES_MULTIPLIER"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_PARTICLES_MULTIPLIER
void OculusSampleFramework::TrainLocomotive::_set_MAX_PARTICLES_MULTIPLIER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::_set_MAX_PARTICLES_MULTIPLIER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive", "MAX_PARTICLES_MULTIPLIER", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _initialSpeed
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::dyn__initialSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__initialSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _startStopButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__startStopButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__startStopButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startStopButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _decreaseSpeedButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__decreaseSpeedButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__decreaseSpeedButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decreaseSpeedButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _increaseSpeedButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__increaseSpeedButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__increaseSpeedButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_increaseSpeedButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _smokeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__smokeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__smokeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smokeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _whistleButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__whistleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__whistleButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whistleButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _reverseButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::TrainLocomotive::dyn__reverseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__reverseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverseButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _whistleAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::TrainLocomotive::dyn__whistleAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__whistleAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whistleAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _whistleSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::TrainLocomotive::dyn__whistleSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__whistleSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whistleSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _engineAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::TrainLocomotive::dyn__engineAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__engineAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_engineAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _accelerationSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OculusSampleFramework::TrainLocomotive::dyn__accelerationSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__accelerationSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accelerationSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _decelerationSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OculusSampleFramework::TrainLocomotive::dyn__decelerationSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__decelerationSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decelerationSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _startUpSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::TrainLocomotive::dyn__startUpSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__startUpSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startUpSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _smokeStackAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::TrainLocomotive::dyn__smokeStackAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__smokeStackAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smokeStackAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _smokeSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::TrainLocomotive::dyn__smokeSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__smokeSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smokeSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _smoke1
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& OculusSampleFramework::TrainLocomotive::dyn__smoke1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__smoke1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoke1"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _smoke2
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& OculusSampleFramework::TrainLocomotive::dyn__smoke2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__smoke2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoke2"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrainCarBase[] _childCars
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::TrainCarBase*>& OculusSampleFramework::TrainLocomotive::dyn__childCars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__childCars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childCars"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::TrainCarBase*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMoving
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::TrainLocomotive::dyn__isMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__isMoving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMoving"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _reverse
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::TrainLocomotive::dyn__reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__reverse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentSpeed
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::dyn__currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speedDiv
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::dyn__speedDiv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__speedDiv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedDiv"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _standardRateOverTimeMultiplier
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::dyn__standardRateOverTimeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__standardRateOverTimeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardRateOverTimeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _standardMaxParticles
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainLocomotive::dyn__standardMaxParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__standardMaxParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardMaxParticles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _startStopTrainCr
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::TrainLocomotive::dyn__startStopTrainCr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::dyn__startStopTrainCr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startStopTrainCr"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.Start
void OculusSampleFramework::TrainLocomotive::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.Update
void OculusSampleFramework::TrainLocomotive::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.StartStopStateChanged
void OculusSampleFramework::TrainLocomotive::StartStopStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::StartStopStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStopStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.StartStopTrain
::System::Collections::IEnumerator* OculusSampleFramework::TrainLocomotive::StartStopTrain(bool startTrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::StartStopTrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStopTrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTrain)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, startTrain);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.PlayEngineSound
float OculusSampleFramework::TrainLocomotive::PlayEngineSound(::OculusSampleFramework::TrainLocomotive::EngineSoundState engineSoundState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::PlayEngineSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayEngineSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(engineSoundState)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, engineSoundState);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.UpdateDistance
void OculusSampleFramework::TrainLocomotive::UpdateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::UpdateDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.DecreaseSpeedStateChanged
void OculusSampleFramework::TrainLocomotive::DecreaseSpeedStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::DecreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.IncreaseSpeedStateChanged
void OculusSampleFramework::TrainLocomotive::IncreaseSpeedStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::IncreaseSpeedStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseSpeedStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.UpdateSmokeEmissionBasedOnSpeed
void OculusSampleFramework::TrainLocomotive::UpdateSmokeEmissionBasedOnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::UpdateSmokeEmissionBasedOnSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSmokeEmissionBasedOnSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.GetCurrentSmokeEmission
float OculusSampleFramework::TrainLocomotive::GetCurrentSmokeEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::GetCurrentSmokeEmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSmokeEmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.SmokeButtonStateChanged
void OculusSampleFramework::TrainLocomotive::SmokeButtonStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::SmokeButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmokeButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.WhistleButtonStateChanged
void OculusSampleFramework::TrainLocomotive::WhistleButtonStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::WhistleButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhistleButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.ReverseButtonStateChanged
void OculusSampleFramework::TrainLocomotive::ReverseButtonStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::ReverseButtonStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseButtonStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive.UpdatePosition
void OculusSampleFramework::TrainLocomotive::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::UpdatePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainCarBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainLocomotive/EngineSoundState
#include "OculusSampleFramework/TrainLocomotive_EngineSoundState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState Start
::OculusSampleFramework::TrainLocomotive::EngineSoundState OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrainLocomotive::EngineSoundState>("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState Start
void OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_Start(::OculusSampleFramework::TrainLocomotive::EngineSoundState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState AccelerateOrSetProperSpeed
::OculusSampleFramework::TrainLocomotive::EngineSoundState OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_AccelerateOrSetProperSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_AccelerateOrSetProperSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrainLocomotive::EngineSoundState>("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "AccelerateOrSetProperSpeed"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState AccelerateOrSetProperSpeed
void OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_AccelerateOrSetProperSpeed(::OculusSampleFramework::TrainLocomotive::EngineSoundState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_AccelerateOrSetProperSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "AccelerateOrSetProperSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState Stop
::OculusSampleFramework::TrainLocomotive::EngineSoundState OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::TrainLocomotive::EngineSoundState>("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.TrainLocomotive/EngineSoundState Stop
void OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_Stop(::OculusSampleFramework::TrainLocomotive::EngineSoundState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "TrainLocomotive/EngineSoundState", "Stop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainLocomotive::EngineSoundState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::EngineSoundState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34
#include "OculusSampleFramework/TrainLocomotive_-StartStopTrain-d__34.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startTrain
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_startTrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_startTrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTrain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.TrainLocomotive <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::TrainLocomotive*& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::TrainLocomotive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endSpeed>5__2
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$endSpeed$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$endSpeed$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endSpeed>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timePeriodForSpeedChange>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$timePeriodForSpeedChange$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$timePeriodForSpeedChange$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timePeriodForSpeedChange>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <endTime>5__5
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$endTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$endTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startSpeed>5__6
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$startSpeed$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::dyn_$startSpeed$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startSpeed>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34.System.IDisposable.Dispose
void OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34.MoveNext
bool OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34.System.Collections.IEnumerator.Reset
void OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainLocomotive/<StartStopTrain>d__34.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::TrainLocomotive::$StartStopTrain$d__34*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.TrainTrack
#include "OculusSampleFramework/TrainTrack.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.TrackSegment
#include "OculusSampleFramework/TrackSegment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _gridSize
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainTrack::dyn__gridSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__gridSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subDivCount
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::TrainTrack::dyn__subDivCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__subDivCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subDivCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _segmentParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::TrainTrack::dyn__segmentParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__segmentParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _trainParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::TrainTrack::dyn__trainParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__trainParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trainParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _regnerateTrackMeshOnAwake
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::TrainTrack::dyn__regnerateTrackMeshOnAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__regnerateTrackMeshOnAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regnerateTrackMeshOnAwake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trainLength
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::TrainTrack::dyn__trainLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__trainLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trainLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.TrackSegment[] _trackSegments
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::TrackSegment*>& OculusSampleFramework::TrainTrack::dyn__trackSegments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::dyn__trackSegments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackSegments"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::TrackSegment*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.get_TrackLength
float OculusSampleFramework::TrainTrack::get_TrackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::get_TrackLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.set_TrackLength
void OculusSampleFramework::TrainTrack::set_TrackLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::set_TrackLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.Awake
void OculusSampleFramework::TrainTrack::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.GetSegment
::OculusSampleFramework::TrackSegment* OculusSampleFramework::TrainTrack::GetSegment(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::GetSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::TrackSegment*, false>(this, ___internal__method, distance);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.Regenerate
void OculusSampleFramework::TrainTrack::Regenerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::Regenerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Regenerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.TrainTrack.SetScale
void OculusSampleFramework::TrainTrack::SetScale(float ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::TrainTrack::SetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratio)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ratio);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Pose
#include "OculusSampleFramework/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::Pose::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Pose::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& OculusSampleFramework::Pose::dyn_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Pose::dyn_Rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.WindmillBladesController
#include "OculusSampleFramework/WindmillBladesController.hpp"
// Including type: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17
#include "OculusSampleFramework/WindmillBladesController_-LerpToSpeed-d__17.hpp"
// Including type: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18
#include "OculusSampleFramework/WindmillBladesController_-PlaySoundDelayed-d__18.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MAX_TIME
float OculusSampleFramework::WindmillBladesController::_get_MAX_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::_get_MAX_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "WindmillBladesController", "MAX_TIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_TIME
void OculusSampleFramework::WindmillBladesController::_set_MAX_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::_set_MAX_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "WindmillBladesController", "MAX_TIME", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OculusSampleFramework::WindmillBladesController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _windMillRotationSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::WindmillBladesController::dyn__windMillRotationSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__windMillRotationSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windMillRotationSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _windMillStartSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::WindmillBladesController::dyn__windMillStartSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__windMillStartSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windMillStartSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _windMillStopSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::WindmillBladesController::dyn__windMillStopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__windMillStopSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windMillStopSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsMoving>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::WindmillBladesController::dyn_$IsMoving$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn_$IsMoving$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsMoving>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentSpeed
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::dyn__currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _lerpSpeedCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::WindmillBladesController::dyn__lerpSpeedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__lerpSpeedCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lerpSpeedCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _audioChangeCr
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& OculusSampleFramework::WindmillBladesController::dyn__audioChangeCr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__audioChangeCr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioChangeCr"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _originalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& OculusSampleFramework::WindmillBladesController::dyn__originalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__originalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotAngle
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::dyn__rotAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::dyn__rotAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.get_IsMoving
bool OculusSampleFramework::WindmillBladesController::get_IsMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::get_IsMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.set_IsMoving
void OculusSampleFramework::WindmillBladesController::set_IsMoving(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::set_IsMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.Start
void OculusSampleFramework::WindmillBladesController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.Update
void OculusSampleFramework::WindmillBladesController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.SetMoveState
void OculusSampleFramework::WindmillBladesController::SetMoveState(bool newMoveState, float goalSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::SetMoveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMoveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newMoveState), ::il2cpp_utils::ExtractType(goalSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMoveState, goalSpeed);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.LerpToSpeed
::System::Collections::IEnumerator* OculusSampleFramework::WindmillBladesController::LerpToSpeed(float goalSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::LerpToSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpToSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goalSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, goalSpeed);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.PlaySoundDelayed
::System::Collections::IEnumerator* OculusSampleFramework::WindmillBladesController::PlaySoundDelayed(::UnityEngine::AudioClip* initial, ::UnityEngine::AudioClip* clip, float timeDelayAfterInitial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::PlaySoundDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(timeDelayAfterInitial)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, initial, clip, timeDelayAfterInitial);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController.PlaySound
void OculusSampleFramework::WindmillBladesController::PlaySound(::UnityEngine::AudioClip* clip, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(loop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, loop);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17
#include "OculusSampleFramework/WindmillBladesController_-LerpToSpeed-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.WindmillBladesController <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::WindmillBladesController*& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::WindmillBladesController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single goalSpeed
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_goalSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_goalSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goalSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <totalTime>5__2
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$totalTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$totalTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startSpeed>5__3
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$startSpeed$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::dyn_$startSpeed$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startSpeed>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17.System.IDisposable.Dispose
void OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17.MoveNext
bool OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17.System.Collections.IEnumerator.Reset
void OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<LerpToSpeed>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$LerpToSpeed$d__17*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18
#include "OculusSampleFramework/WindmillBladesController_-PlaySoundDelayed-d__18.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.WindmillBladesController <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::WindmillBladesController*& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::WindmillBladesController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip initial
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_initial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeDelayAfterInitial
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_timeDelayAfterInitial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_timeDelayAfterInitial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeDelayAfterInitial"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip clip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::dyn_clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18.System.IDisposable.Dispose
void OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18.MoveNext
bool OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18.System.Collections.IEnumerator.Reset
void OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillBladesController/<PlaySoundDelayed>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::WindmillBladesController::$PlaySoundDelayed$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.WindmillController
#include "OculusSampleFramework/WindmillController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OculusSampleFramework.SelectionCylinder
#include "OculusSampleFramework/SelectionCylinder.hpp"
// Including type: OculusSampleFramework.WindmillBladesController
#include "OculusSampleFramework/WindmillBladesController.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _startStopButton
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::WindmillController::dyn__startStopButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::dyn__startStopButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startStopButton"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpeed
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::WindmillController::dyn__maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::dyn__maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.SelectionCylinder _selectionCylinder
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::SelectionCylinder*& OculusSampleFramework::WindmillController::dyn__selectionCylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::dyn__selectionCylinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionCylinder"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::SelectionCylinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.WindmillBladesController _bladesRotation
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::WindmillBladesController*& OculusSampleFramework::WindmillController::dyn__bladesRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::dyn__bladesRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bladesRotation"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::WindmillBladesController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool _toolInteractingWithMe
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::WindmillController::dyn__toolInteractingWithMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::dyn__toolInteractingWithMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolInteractingWithMe"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.WindmillController.Awake
void OculusSampleFramework::WindmillController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillController.OnEnable
void OculusSampleFramework::WindmillController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillController.OnDisable
void OculusSampleFramework::WindmillController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.WindmillController.StartStopStateChanged
void OculusSampleFramework::WindmillController::StartStopStateChanged(::OculusSampleFramework::InteractableStateArgs* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::StartStopStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStopStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusSampleFramework.WindmillController.Update
void OculusSampleFramework::WindmillController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::WindmillController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.EUiDisplayType
#include "OculusSampleFramework/EUiDisplayType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.EUiDisplayType EUDT_WorldGeoQuad
::OculusSampleFramework::EUiDisplayType OculusSampleFramework::EUiDisplayType::_get_EUDT_WorldGeoQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_get_EUDT_WorldGeoQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::EUiDisplayType>("OculusSampleFramework", "EUiDisplayType", "EUDT_WorldGeoQuad"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.EUiDisplayType EUDT_WorldGeoQuad
void OculusSampleFramework::EUiDisplayType::_set_EUDT_WorldGeoQuad(::OculusSampleFramework::EUiDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_set_EUDT_WorldGeoQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "EUiDisplayType", "EUDT_WorldGeoQuad", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.EUiDisplayType EUDT_OverlayQuad
::OculusSampleFramework::EUiDisplayType OculusSampleFramework::EUiDisplayType::_get_EUDT_OverlayQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_get_EUDT_OverlayQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::EUiDisplayType>("OculusSampleFramework", "EUiDisplayType", "EUDT_OverlayQuad"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.EUiDisplayType EUDT_OverlayQuad
void OculusSampleFramework::EUiDisplayType::_set_EUDT_OverlayQuad(::OculusSampleFramework::EUiDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_set_EUDT_OverlayQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "EUiDisplayType", "EUDT_OverlayQuad", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.EUiDisplayType EUDT_None
::OculusSampleFramework::EUiDisplayType OculusSampleFramework::EUiDisplayType::_get_EUDT_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_get_EUDT_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::EUiDisplayType>("OculusSampleFramework", "EUiDisplayType", "EUDT_None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.EUiDisplayType EUDT_None
void OculusSampleFramework::EUiDisplayType::_set_EUDT_None(::OculusSampleFramework::EUiDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_set_EUDT_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "EUiDisplayType", "EUDT_None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.EUiDisplayType EUDT_MaxDislayTypes
::OculusSampleFramework::EUiDisplayType OculusSampleFramework::EUiDisplayType::_get_EUDT_MaxDislayTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_get_EUDT_MaxDislayTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::EUiDisplayType>("OculusSampleFramework", "EUiDisplayType", "EUDT_MaxDislayTypes"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.EUiDisplayType EUDT_MaxDislayTypes
void OculusSampleFramework::EUiDisplayType::_set_EUDT_MaxDislayTypes(::OculusSampleFramework::EUiDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::_set_EUDT_MaxDislayTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "EUiDisplayType", "EUDT_MaxDislayTypes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::EUiDisplayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::EUiDisplayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.OVROverlaySample
#include "OculusSampleFramework/OVROverlaySample.hpp"
// Including type: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30
#include "OculusSampleFramework/OVROverlaySample_-WaitforOVROverlay-d__30.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String ovrOverlayID
::StringW OculusSampleFramework::OVROverlaySample::_get_ovrOverlayID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_get_ovrOverlayID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "OVROverlaySample", "ovrOverlayID"));
}
// Autogenerated static field setter
// Set static field: static private System.String ovrOverlayID
void OculusSampleFramework::OVROverlaySample::_set_ovrOverlayID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_set_ovrOverlayID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "OVROverlaySample", "ovrOverlayID", value));
}
// Autogenerated static field getter
// Get static field: static private System.String applicationID
::StringW OculusSampleFramework::OVROverlaySample::_get_applicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_get_applicationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "OVROverlaySample", "applicationID"));
}
// Autogenerated static field setter
// Set static field: static private System.String applicationID
void OculusSampleFramework::OVROverlaySample::_set_applicationID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_set_applicationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "OVROverlaySample", "applicationID", value));
}
// Autogenerated static field getter
// Get static field: static private System.String noneID
::StringW OculusSampleFramework::OVROverlaySample::_get_noneID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_get_noneID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "OVROverlaySample", "noneID"));
}
// Autogenerated static field setter
// Set static field: static private System.String noneID
void OculusSampleFramework::OVROverlaySample::_set_noneID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::_set_noneID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "OVROverlaySample", "noneID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::OVROverlaySample::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle applicationRadioButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& OculusSampleFramework::OVROverlaySample::dyn_applicationRadioButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_applicationRadioButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationRadioButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle noneRadioButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& OculusSampleFramework::OVROverlaySample::dyn_noneRadioButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_noneRadioButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noneRadioButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::OVROverlaySample::dyn_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject uiCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::OVROverlaySample::dyn_uiCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_uiCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject uiGeoParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::OVROverlaySample::dyn_uiGeoParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_uiGeoParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiGeoParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject worldspaceGeoParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::OVROverlaySample::dyn_worldspaceGeoParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_worldspaceGeoParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldspaceGeoParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay cameraRenderOverlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& OculusSampleFramework::OVROverlaySample::dyn_cameraRenderOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_cameraRenderOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRenderOverlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay renderingLabelOverlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& OculusSampleFramework::OVROverlaySample::dyn_renderingLabelOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_renderingLabelOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingLabelOverlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture applicationLabelTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& OculusSampleFramework::OVROverlaySample::dyn_applicationLabelTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_applicationLabelTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationLabelTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture compositorLabelTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& OculusSampleFramework::OVROverlaySample::dyn_compositorLabelTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_compositorLabelTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compositorLabelTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefabForLevelLoadSim
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::OVROverlaySample::dyn_prefabForLevelLoadSim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_prefabForLevelLoadSim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabForLevelLoadSim"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay cubemapOverlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& OculusSampleFramework::OVROverlaySample::dyn_cubemapOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_cubemapOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubemapOverlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay loadingTextQuadOverlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& OculusSampleFramework::OVROverlaySample::dyn_loadingTextQuadOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_loadingTextQuadOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingTextQuadOverlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distanceFromCamToLoadText
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::OVROverlaySample::dyn_distanceFromCamToLoadText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_distanceFromCamToLoadText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceFromCamToLoadText"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cubeSpawnRadius
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::OVROverlaySample::dyn_cubeSpawnRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_cubeSpawnRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubeSpawnRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightBetweenItems
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::OVROverlaySample::dyn_heightBetweenItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_heightBetweenItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightBetweenItems"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numObjectsPerLevel
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::OVROverlaySample::dyn_numObjectsPerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_numObjectsPerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numObjectsPerLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numLevels
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::OVROverlaySample::dyn_numLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_numLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numLevels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numLoopsTrigger
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::OVROverlaySample::dyn_numLoopsTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_numLoopsTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numLoopsTrigger"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> spawnedCubes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& OculusSampleFramework::OVROverlaySample::dyn_spawnedCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::dyn_spawnedCubes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnedCubes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.Start
void OculusSampleFramework::OVROverlaySample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.Update
void OculusSampleFramework::OVROverlaySample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.ActivateWorldGeo
void OculusSampleFramework::OVROverlaySample::ActivateWorldGeo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::ActivateWorldGeo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateWorldGeo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.ActivateOVROverlay
void OculusSampleFramework::OVROverlaySample::ActivateOVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::ActivateOVROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateOVROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.ActivateNone
void OculusSampleFramework::OVROverlaySample::ActivateNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::ActivateNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.TriggerLoad
void OculusSampleFramework::OVROverlaySample::TriggerLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::TriggerLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.WaitforOVROverlay
::System::Collections::IEnumerator* OculusSampleFramework::OVROverlaySample::WaitforOVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::WaitforOVROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitforOVROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.TriggerUnload
void OculusSampleFramework::OVROverlaySample::TriggerUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::TriggerUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.CameraAndRenderTargetSetup
void OculusSampleFramework::OVROverlaySample::CameraAndRenderTargetSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::CameraAndRenderTargetSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraAndRenderTargetSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.SimulateLevelLoad
void OculusSampleFramework::OVROverlaySample::SimulateLevelLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::SimulateLevelLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateLevelLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.ClearObjects
void OculusSampleFramework::OVROverlaySample::ClearObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::ClearObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.RadioPressed
void OculusSampleFramework::OVROverlaySample::RadioPressed(::StringW radioLabel, ::StringW group, ::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::RadioPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RadioPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radioLabel), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radioLabel, group, t);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.<Start>b__24_0
void OculusSampleFramework::OVROverlaySample::$Start$b__24_0(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::<Start>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.<Start>b__24_1
void OculusSampleFramework::OVROverlaySample::$Start$b__24_1(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::<Start>b__24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample.<Start>b__24_2
void OculusSampleFramework::OVROverlaySample::$Start$b__24_2(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::<Start>b__24_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__24_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30
#include "OculusSampleFramework/OVROverlaySample_-WaitforOVROverlay-d__30.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.OVROverlaySample <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::OVROverlaySample*& OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::OVROverlaySample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30.System.IDisposable.Dispose
void OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30.MoveNext
bool OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30.System.Collections.IEnumerator.Reset
void OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.OVROverlaySample/<WaitforOVROverlay>d__30.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::OVROverlaySample::$WaitforOVROverlay$d__30*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand
#include "OVRTouchSample/Hand.hpp"
// Including type: OVRTouchSample.Hand/<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_POINT
::StringW OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_POINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_POINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_POINT"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_POINT
void OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_POINT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_POINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_POINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_THUMB
::StringW OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_THUMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_THUMB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_THUMB"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_THUMB
void OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_THUMB(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_THUMB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_THUMB", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_FLEX
::StringW OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_FLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_FLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_FLEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_FLEX
void OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_FLEX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_FLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_FLEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_POSE
::StringW OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_POSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_POSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_POSE"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_POSE
void OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_POSE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_POSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_POSE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single THRESH_COLLISION_FLEX
float OVRTouchSample::Hand::_get_THRESH_COLLISION_FLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_THRESH_COLLISION_FLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "THRESH_COLLISION_FLEX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single THRESH_COLLISION_FLEX
void OVRTouchSample::Hand::_set_THRESH_COLLISION_FLEX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_THRESH_COLLISION_FLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "THRESH_COLLISION_FLEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single INPUT_RATE_CHANGE
float OVRTouchSample::Hand::_get_INPUT_RATE_CHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_INPUT_RATE_CHANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "INPUT_RATE_CHANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.Single INPUT_RATE_CHANGE
void OVRTouchSample::Hand::_set_INPUT_RATE_CHANGE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_INPUT_RATE_CHANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "INPUT_RATE_CHANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_MIN
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_MIN
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_MAX
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_MAX
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_PER_SECOND
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_PER_SECOND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_PER_SECOND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_PER_SECOND"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_PER_SECOND
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_PER_SECOND(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_PER_SECOND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_PER_SECOND", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single TRIGGER_DEBOUNCE_TIME
float OVRTouchSample::Hand::_get_TRIGGER_DEBOUNCE_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_TRIGGER_DEBOUNCE_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "TRIGGER_DEBOUNCE_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Single TRIGGER_DEBOUNCE_TIME
void OVRTouchSample::Hand::_set_TRIGGER_DEBOUNCE_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_TRIGGER_DEBOUNCE_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "TRIGGER_DEBOUNCE_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single THUMB_DEBOUNCE_TIME
float OVRTouchSample::Hand::_get_THUMB_DEBOUNCE_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_THUMB_DEBOUNCE_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "THUMB_DEBOUNCE_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Single THUMB_DEBOUNCE_TIME
void OVRTouchSample::Hand::_set_THUMB_DEBOUNCE_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_THUMB_DEBOUNCE_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "THUMB_DEBOUNCE_TIME", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& OVRTouchSample::Hand::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& OVRTouchSample::Hand::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPose m_defaultGrabPose
[[deprecated("Use field access instead!")]] ::OVRTouchSample::HandPose*& OVRTouchSample::Hand::dyn_m_defaultGrabPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_defaultGrabPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultGrabPose"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] m_colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OVRTouchSample::Hand::dyn_m_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_collisionEnabled
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_collisionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_collisionEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGrabber m_grabber
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGrabber*& OVRTouchSample::Hand::dyn_m_grabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_grabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_showAfterInputFocusAcquired
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& OVRTouchSample::Hand::dyn_m_showAfterInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_showAfterInputFocusAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showAfterInputFocusAcquired"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animLayerIndexThumb
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animLayerIndexThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animLayerIndexThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animLayerIndexThumb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animLayerIndexPoint
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animLayerIndexPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animLayerIndexPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animLayerIndexPoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animParamIndexFlex
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animParamIndexFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animParamIndexFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animParamIndexFlex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animParamIndexPose
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animParamIndexPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animParamIndexPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animParamIndexPose"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isPointing
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_isPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_isPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isGivingThumbsUp
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_isGivingThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_isGivingThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isGivingThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_pointBlend
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_pointBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_pointBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pointBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_thumbsUpBlend
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_thumbsUpBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_thumbsUpBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thumbsUpBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_collisionScaleCurrent
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_collisionScaleCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_collisionScaleCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionScaleCurrent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.Hand.Awake
void OVRTouchSample::Hand::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Start
void OVRTouchSample::Hand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnDestroy
void OVRTouchSample::Hand::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Update
void OVRTouchSample::Hand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateCapTouchStates
void OVRTouchSample::Hand::UpdateCapTouchStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateCapTouchStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCapTouchStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.LateUpdate
void OVRTouchSample::Hand::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusLost
void OVRTouchSample::Hand::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusAcquired
void OVRTouchSample::Hand::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.InputValueRateChange
float OVRTouchSample::Hand::InputValueRateChange(bool isDown, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::InputValueRateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputValueRateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDown), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, isDown, value);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateAnimStates
void OVRTouchSample::Hand::UpdateAnimStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateAnimStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnimStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.CollisionEnable
void OVRTouchSample::Hand::CollisionEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::CollisionEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollisionEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand/<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTouchSample.Hand/<>c <>9
::OVRTouchSample::Hand::$$c* OVRTouchSample::Hand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVRTouchSample::Hand::$$c*>("OVRTouchSample", "Hand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTouchSample.Hand/<>c <>9
void OVRTouchSample::Hand::$$c::_set_$$9(::OVRTouchSample::Hand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__28_0
::System::Func_2<::UnityEngine::Collider*, bool>* OVRTouchSample::Hand::$$c::_get_$$9__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9__28_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("OVRTouchSample", "Hand/<>c", "<>9__28_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__28_0
void OVRTouchSample::Hand::$$c::_set_$$9__28_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9__28_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9__28_0", value)));
}
// Autogenerated method: OVRTouchSample.Hand/<>c..cctor
void OVRTouchSample::Hand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRTouchSample", "Hand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand/<>c.<Start>b__28_0
bool OVRTouchSample::Hand::$$c::$Start$b__28_0(::UnityEngine::Collider* childCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::<Start>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, childCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPoseId
#include "OVRTouchSample/HandPoseId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Default
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Default
void OVRTouchSample::HandPoseId::_set_Default(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Generic
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Generic
void OVRTouchSample::HandPoseId::_set_Generic(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Generic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId PingPongBall
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_PingPongBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_PingPongBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "PingPongBall"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId PingPongBall
void OVRTouchSample::HandPoseId::_set_PingPongBall(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_PingPongBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "PingPongBall", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Controller
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Controller
void OVRTouchSample::HandPoseId::_set_Controller(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Controller", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRTouchSample::HandPoseId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowPointing
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::HandPose::dyn_m_allowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowThumbsUp
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::HandPose::dyn_m_allowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPoseId m_poseId
[[deprecated("Use field access instead!")]] ::OVRTouchSample::HandPoseId& OVRTouchSample::HandPose::dyn_m_poseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_poseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poseId"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPoseId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowPointing
bool OVRTouchSample::HandPose::get_AllowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowPointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowThumbsUp
bool OVRTouchSample::HandPose::get_AllowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowThumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowThumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_PoseId
::OVRTouchSample::HandPoseId OVRTouchSample::HandPose::get_PoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_PoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRTouchSample::HandPoseId, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.TouchController
#include "OVRTouchSample/TouchController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& OVRTouchSample::TouchController::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& OVRTouchSample::TouchController::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.TouchController.Update
void OVRTouchSample::TouchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusLost
void OVRTouchSample::TouchController::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusAcquired
void OVRTouchSample::TouchController::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.FaceType
#include "Oculus/Spatializer/Propagation/FaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
void Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_QUADS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_QUADS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "QUADS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
void Oculus::Spatializer::Propagation::FaceType::_set_QUADS(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_QUADS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "QUADS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::FaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
void Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.AvatarLogger
#include "Oculus/Avatar/AvatarLogger.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String LogAvatar
::StringW Oculus::Avatar::AvatarLogger::_get_LogAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_LogAvatar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "LogAvatar"));
}
// Autogenerated static field setter
// Set static field: static public System.String LogAvatar
void Oculus::Avatar::AvatarLogger::_set_LogAvatar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_LogAvatar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "LogAvatar", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Tab
::StringW Oculus::Avatar::AvatarLogger::_get_Tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_Tab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "Tab"));
}
// Autogenerated static field setter
// Set static field: static public System.String Tab
void Oculus::Avatar::AvatarLogger::_set_Tab(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_Tab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "Tab", value));
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogWarning
void Oculus::Avatar::AvatarLogger::LogWarning(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI
#include "Oculus/Avatar/CAPI.hpp"
// Including type: Oculus.Avatar.CAPI/LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: Oculus.Avatar.CAPI/Result
#include "Oculus/Avatar/CAPI_Result.hpp"
// Including type: Oculus.Avatar.CAPI/OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: ovrAvatarMessageType
#include "GlobalNamespace/ovrAvatarMessageType.hpp"
// Including type: ovrAvatarMessage_AvatarSpecification
#include "GlobalNamespace/ovrAvatarMessage_AvatarSpecification.hpp"
// Including type: ovrAvatarMessage_AssetLoaded
#include "GlobalNamespace/ovrAvatarMessage_AssetLoaded.hpp"
// Including type: ovrAvatarLookAndFeelVersion
#include "GlobalNamespace/ovrAvatarLookAndFeelVersion.hpp"
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
// Including type: ovrAvatarCapabilities
#include "GlobalNamespace/ovrAvatarCapabilities.hpp"
// Including type: ovrAvatarVisemes
#include "GlobalNamespace/ovrAvatarVisemes.hpp"
// Including type: ovrAvatarHandInputState
#include "GlobalNamespace/ovrAvatarHandInputState.hpp"
// Including type: ovrAvatarControllerType
#include "GlobalNamespace/ovrAvatarControllerType.hpp"
// Including type: ovrAvatarComponent
#include "GlobalNamespace/ovrAvatarComponent.hpp"
// Including type: ovrAvatarBaseComponent
#include "GlobalNamespace/ovrAvatarBaseComponent.hpp"
// Including type: ovrAvatarBodyComponent
#include "GlobalNamespace/ovrAvatarBodyComponent.hpp"
// Including type: ovrAvatarControllerComponent
#include "GlobalNamespace/ovrAvatarControllerComponent.hpp"
// Including type: ovrAvatarHandComponent
#include "GlobalNamespace/ovrAvatarHandComponent.hpp"
// Including type: ovrAvatarAssetType
#include "GlobalNamespace/ovrAvatarAssetType.hpp"
// Including type: ovrAvatarMeshAssetData
#include "GlobalNamespace/ovrAvatarMeshAssetData.hpp"
// Including type: ovrAvatarMeshAssetDataV2
#include "GlobalNamespace/ovrAvatarMeshAssetDataV2.hpp"
// Including type: ovrAvatarTextureAssetData
#include "GlobalNamespace/ovrAvatarTextureAssetData.hpp"
// Including type: ovrAvatarMaterialState
#include "GlobalNamespace/ovrAvatarMaterialState.hpp"
// Including type: ovrAvatarRenderPartType
#include "GlobalNamespace/ovrAvatarRenderPartType.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRender
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRender.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: ovrAvatarHandGesture
#include "GlobalNamespace/ovrAvatarHandGesture.hpp"
// Including type: ovrAvatarExpressiveParameters
#include "GlobalNamespace/ovrAvatarExpressiveParameters.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2.hpp"
// Including type: ovrAvatarBlendShapeParams
#include "GlobalNamespace/ovrAvatarBlendShapeParams.hpp"
// Including type: ovrAvatarRenderPart_ProjectorRender
#include "GlobalNamespace/ovrAvatarRenderPart_ProjectorRender.hpp"
// Including type: ovrAvatarGazeTargets
#include "GlobalNamespace/ovrAvatarGazeTargets.hpp"
// Including type: ovrAvatarLights
#include "GlobalNamespace/ovrAvatarLights.hpp"
// Including type: ovrAvatarLogLevel
#include "GlobalNamespace/ovrAvatarLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LibFile
::StringW Oculus::Avatar::CAPI::_get_LibFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_LibFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "LibFile"));
}
// Autogenerated static field setter
// Set static field: static private System.String LibFile
void Oculus::Avatar::CAPI::_set_LibFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_LibFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "LibFile", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeVisemeData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeVisemeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeVisemeData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeVisemeData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeVisemeData
void Oculus::Avatar::CAPI::_set_nativeVisemeData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeVisemeData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeVisemeData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeGazeTargetsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeGazeTargetsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeGazeTargetsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeGazeTargetsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeGazeTargetsData
void Oculus::Avatar::CAPI::_set_nativeGazeTargetsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeGazeTargetsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeGazeTargetsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeAvatarLightsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeAvatarLightsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeAvatarLightsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeAvatarLightsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeAvatarLightsData
void Oculus::Avatar::CAPI::_set_nativeAvatarLightsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeAvatarLightsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeAvatarLightsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr DebugLineCountData
::System::IntPtr Oculus::Avatar::CAPI::_get_DebugLineCountData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_DebugLineCountData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "DebugLineCountData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr DebugLineCountData
void Oculus::Avatar::CAPI::_set_DebugLineCountData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_DebugLineCountData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "DebugLineCountData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] scratchBufferFloat
::ArrayW<float> Oculus::Avatar::CAPI::_get_scratchBufferFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_scratchBufferFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Oculus.Avatar", "CAPI", "scratchBufferFloat"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] scratchBufferFloat
void Oculus::Avatar::CAPI::_set_scratchBufferFloat(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_scratchBufferFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "scratchBufferFloat", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject debugLineGo
::UnityEngine::GameObject* Oculus::Avatar::CAPI::_get_debugLineGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_debugLineGo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("Oculus.Avatar", "CAPI", "debugLineGo"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject debugLineGo
void Oculus::Avatar::CAPI::_set_debugLineGo(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_debugLineGo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "debugLineGo", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SDKRuntimePrefix
::StringW Oculus::Avatar::CAPI::_get_SDKRuntimePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_SDKRuntimePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "SDKRuntimePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String SDKRuntimePrefix
void Oculus::Avatar::CAPI::_set_SDKRuntimePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_SDKRuntimePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "SDKRuntimePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ovrPluginDLL
::StringW Oculus::Avatar::CAPI::_get_ovrPluginDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "ovrPluginDLL"));
}
// Autogenerated static field setter
// Set static field: static private System.String ovrPluginDLL
void Oculus::Avatar::CAPI::_set_ovrPluginDLL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginDLL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version ovrPluginVersion
::System::Version* Oculus::Avatar::CAPI::_get_ovrPluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI", "ovrPluginVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version ovrPluginVersion
void Oculus::Avatar::CAPI::_set_ovrPluginVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginVersion", value));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_InitializeAndroidUnity
void Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity(::StringW appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_InitializeAndroidUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Avatar.CAPI.Initialize
void Oculus::Avatar::CAPI::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.Shutdown
void Oculus::Avatar::CAPI::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Shutdown
void Oculus::Avatar::CAPI::ovrAvatar_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Pop
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetType
::GlobalNamespace::ovrAvatarMessageType Oculus::Avatar::CAPI::ovrAvatarMessage_GetType(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification
::GlobalNamespace::ovrAvatarMessage_AvatarSpecification Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AvatarSpecification, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded
::GlobalNamespace::ovrAvatarMessage_AssetLoaded Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AssetLoaded, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Free
void Oculus::Avatar::CAPI::ovrAvatarMessage_Free(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Destroy
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetCombineMeshes
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes(::System::IntPtr specificationRequest, bool useCombinedMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetCombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(useCombinedMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, useCombinedMesh);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLevelOfDetail
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLevelOfDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(lod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecification
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecificationFromSpecRequest
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecificationFromSpecRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetExpressiveFlag
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag(::System::IntPtr specificationRequest, bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetExpressiveFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, enable);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_Create(::System::IntPtr avatarSpecification, ::GlobalNamespace::ovrAvatarCapabilities capabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecification), ::il2cpp_utils::ExtractType(capabilities)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarSpecification, capabilities);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Destroy
void Oculus::Avatar::CAPI::ovrAvatar_Destroy(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateBody
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform headPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(headPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, headPose);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization(::System::IntPtr avatar, ::ArrayW<float> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmData);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization_Native
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native(::System::IntPtr avatar, uint pcmDataSize, ByRef<::ArrayW<float>> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmDataSize), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmDataSize, byref(pcmData));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHands
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHandsWithType
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight, ::GlobalNamespace::ovrAvatarControllerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHandsWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight, type);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_Finalize
void Oculus::Avatar::CAPI::ovrAvatarPose_Finalize(::System::IntPtr avatar, float elapsedSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_Finalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(elapsedSeconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, elapsedSeconds);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Count
uint Oculus::Avatar::CAPI::ovrAvatarComponent_Count(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr avatar, uint index, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr componentPtr, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentPtr), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentPtr, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBaseComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBodyComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoading
void Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading(uint64_t assetID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoadingLOD
bool Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD(uint64_t assetId, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoadingLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId), ::il2cpp_utils::ExtractType(lod)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetId, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetType
::GlobalNamespace::ovrAvatarAssetType Oculus::Avatar::CAPI::ovrAvatarAsset_GetType(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarAssetType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData
::GlobalNamespace::ovrAvatarMeshAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData
::GlobalNamespace::ovrAvatarMeshAssetDataV2 Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetDataV2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeName
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshLastIndex
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshLastIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeVertices
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetAvatar
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs
::ArrayW<uint64_t> Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native(::System::IntPtr assetHandle, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData
void Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData(::System::IntPtr avatar, ByRef<uint64_t> textureID, ByRef<::UnityEngine::Vector4> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureID), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(textureID), byref(offset));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native(::System::IntPtr avatar, ::System::IntPtr textureIDPtr, ::System::IntPtr offsetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureIDPtr), ::il2cpp_utils::ExtractType(offsetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, textureIDPtr, offsetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData
::GlobalNamespace::ovrAvatarTextureAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTextureAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetType
::GlobalNamespace::ovrAvatarRenderPartType Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPartType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState
::GlobalNamespace::ovrAvatarPBSMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarPBSMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetExpressiveParameters
::GlobalNamespace::ovrAvatarExpressiveParameters Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetExpressiveParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarExpressiveParameters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitOnsetSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed(::System::IntPtr avatar, float onsetSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitOnsetSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(onsetSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, onsetSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitFalloffSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed(::System::IntPtr avatar, float falloffSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitFalloffSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(falloffSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, falloffSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemeMultiplier
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier(::System::IntPtr avatar, float visemeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemeMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemeMultiplier);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams
void Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams(::System::IntPtr renderPart, ByRef<::GlobalNamespace::ovrAvatarBlendShapeParams> blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, byref(blendParams));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender
::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates
::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native(::System::IntPtr avatar, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAssetCount
uint Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAssetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAsset
uint64_t Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdatePoseFromPacket
void Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket(::System::IntPtr avatar, ::System::IntPtr packet, float secondsFromStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdatePoseFromPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(secondsFromStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, packet, secondsFromStart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_BeginRecording
void Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_BeginRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_EndRecording
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_EndRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetSize
uint Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetDurationSeconds
float Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetDurationSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Free
void Oculus::Avatar::CAPI::ovrAvatarPacket_Free(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Write
bool Oculus::Avatar::CAPI::ovrAvatarPacket_Write(::System::IntPtr packet, uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Read
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_Read(uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetInternalForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetInternalForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarBlendShapeParams blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, blendParams);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic_Native
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native(::System::IntPtr avatar, ::System::IntPtr state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, state);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarVisemes visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes_Native
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native(::System::IntPtr avatar, ::System::IntPtr visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateWorldTransform
void Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateWorldTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, transform);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets(::GlobalNamespace::ovrAvatarGazeTargets targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native(::System::IntPtr targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets(uint targetCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights(::GlobalNamespace::ovrAvatarLights lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native(::System::IntPtr lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveLights
void Oculus::Avatar::CAPI::ovrAvatar_RemoveLights(uint lightCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.LoggingCallback
void Oculus::Avatar::CAPI::LoggingCallback(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "LoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RegisterLoggingCallback
void Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback(::Oculus::Avatar::CAPI::LoggingDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RegisterLoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLoggingLevel
void Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel(::GlobalNamespace::ovrAvatarLogLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLoggingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugTransforms_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugTransforms_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugLines_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugLines_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_DrawDebugLines
void Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_DrawDebugLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetDebugDrawContext
void Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetDebugDrawContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: Oculus.Avatar.CAPI.SendEvent
bool Oculus::Avatar::CAPI::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: Oculus.Avatar.CAPI._ovrp_GetVersion
::System::IntPtr Oculus::Avatar::CAPI::_ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrp_GetVersion
::StringW Oculus::Avatar::CAPI::ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI..cctor
void Oculus::Avatar::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Avatar.CAPI/LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Avatar.CAPI/LoggingDelegate.Invoke
void Oculus::Avatar::CAPI::LoggingDelegate::Invoke(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI/LoggingDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke(::System::IntPtr str, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, str, callback, object);
}
// Autogenerated method: Oculus.Avatar.CAPI/LoggingDelegate.EndInvoke
void Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Avatar::CAPI::LoggingDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Success
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Success
void Oculus::Avatar::CAPI::Result::_set_Success(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure
void Oculus::Avatar::CAPI::Result::_set_Failure(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_InvalidParameter
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_InvalidParameter
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_NotInitialized
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_NotInitialized
void Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_InvalidOperation
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_InvalidOperation
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_Unsupported
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_Unsupported
void Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_NotYetImplemented
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_NotYetImplemented
void Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_OperationFailed
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_OperationFailed
void Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Result Failure_InsufficientSize
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Result Failure_InsufficientSize
void Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Avatar::CAPI::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Oculus.Avatar.CAPI/Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version", value));
}
// Autogenerated method: Oculus.Avatar.CAPI/OVRP_1_30_0.ovrp_SendEvent2
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Avatar::CAPI::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: Oculus.Avatar.CAPI/OVRP_1_30_0..cctor
void Oculus::Avatar::CAPI::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
