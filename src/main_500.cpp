// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_TRANSCEIVER
#include "FMOD/DSP_TRANSCEIVER.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER TRANSMIT
::FMOD::DSP_TRANSCEIVER FMOD::DSP_TRANSCEIVER::_get_TRANSMIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_get_TRANSMIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER>("FMOD", "DSP_TRANSCEIVER", "TRANSMIT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER TRANSMIT
void FMOD::DSP_TRANSCEIVER::_set_TRANSMIT(::FMOD::DSP_TRANSCEIVER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_set_TRANSMIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER", "TRANSMIT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER GAIN
::FMOD::DSP_TRANSCEIVER FMOD::DSP_TRANSCEIVER::_get_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_get_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER>("FMOD", "DSP_TRANSCEIVER", "GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER GAIN
void FMOD::DSP_TRANSCEIVER::_set_GAIN(::FMOD::DSP_TRANSCEIVER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_set_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER", "GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER CHANNEL
::FMOD::DSP_TRANSCEIVER FMOD::DSP_TRANSCEIVER::_get_CHANNEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_get_CHANNEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER>("FMOD", "DSP_TRANSCEIVER", "CHANNEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER CHANNEL
void FMOD::DSP_TRANSCEIVER::_set_CHANNEL(::FMOD::DSP_TRANSCEIVER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_set_CHANNEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER", "CHANNEL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER TRANSMITSPEAKERMODE
::FMOD::DSP_TRANSCEIVER FMOD::DSP_TRANSCEIVER::_get_TRANSMITSPEAKERMODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_get_TRANSMITSPEAKERMODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER>("FMOD", "DSP_TRANSCEIVER", "TRANSMITSPEAKERMODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER TRANSMITSPEAKERMODE
void FMOD::DSP_TRANSCEIVER::_set_TRANSMITSPEAKERMODE(::FMOD::DSP_TRANSCEIVER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::_set_TRANSMITSPEAKERMODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER", "TRANSMITSPEAKERMODE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_TRANSCEIVER::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_OBJECTPAN
#include "FMOD/DSP_OBJECTPAN.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_POSITION
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_POSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_POSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_POSITION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_POSITION
void FMOD::DSP_OBJECTPAN::_set__3D_POSITION(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_POSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_POSITION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_ROLLOFF
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_ROLLOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_ROLLOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_ROLLOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_ROLLOFF
void FMOD::DSP_OBJECTPAN::_set__3D_ROLLOFF(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_ROLLOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_ROLLOFF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_MIN_DISTANCE
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_MIN_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_MIN_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_MIN_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_MIN_DISTANCE
void FMOD::DSP_OBJECTPAN::_set__3D_MIN_DISTANCE(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_MIN_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_MIN_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_MAX_DISTANCE
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_MAX_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_MAX_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_MAX_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_MAX_DISTANCE
void FMOD::DSP_OBJECTPAN::_set__3D_MAX_DISTANCE(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_MAX_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_MAX_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_EXTENT_MODE
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_EXTENT_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_EXTENT_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_EXTENT_MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_EXTENT_MODE
void FMOD::DSP_OBJECTPAN::_set__3D_EXTENT_MODE(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_EXTENT_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_EXTENT_MODE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_SOUND_SIZE
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_SOUND_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_SOUND_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_SOUND_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_SOUND_SIZE
void FMOD::DSP_OBJECTPAN::_set__3D_SOUND_SIZE(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_SOUND_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_SOUND_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN _3D_MIN_EXTENT
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get__3D_MIN_EXTENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get__3D_MIN_EXTENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "_3D_MIN_EXTENT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN _3D_MIN_EXTENT
void FMOD::DSP_OBJECTPAN::_set__3D_MIN_EXTENT(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set__3D_MIN_EXTENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "_3D_MIN_EXTENT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN OVERALL_GAIN
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get_OVERALL_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get_OVERALL_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "OVERALL_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN OVERALL_GAIN
void FMOD::DSP_OBJECTPAN::_set_OVERALL_GAIN(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set_OVERALL_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "OVERALL_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OBJECTPAN OUTPUTGAIN
::FMOD::DSP_OBJECTPAN FMOD::DSP_OBJECTPAN::_get_OUTPUTGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_get_OUTPUTGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OBJECTPAN>("FMOD", "DSP_OBJECTPAN", "OUTPUTGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OBJECTPAN OUTPUTGAIN
void FMOD::DSP_OBJECTPAN::_set_OUTPUTGAIN(::FMOD::DSP_OBJECTPAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::_set_OUTPUTGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OBJECTPAN", "OUTPUTGAIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_OBJECTPAN::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OBJECTPAN::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Error
#include "FMOD/Error.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Error.String
::StringW FMOD::Error::String(::FMOD::RESULT errcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Error::String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD", "Error", "String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errcode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errcode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.STUDIO_VERSION
#include "FMOD/Studio/STUDIO_VERSION.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String dll
::StringW FMOD::Studio::STUDIO_VERSION::_get_dll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STUDIO_VERSION::_get_dll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("FMOD.Studio", "STUDIO_VERSION", "dll"));
}
// Autogenerated static field setter
// Set static field: static public System.String dll
void FMOD::Studio::STUDIO_VERSION::_set_dll(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STUDIO_VERSION::_set_dll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "STUDIO_VERSION", "dll", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.STOP_MODE
#include "FMOD/Studio/STOP_MODE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.STOP_MODE ALLOWFADEOUT
::FMOD::Studio::STOP_MODE FMOD::Studio::STOP_MODE::_get_ALLOWFADEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STOP_MODE::_get_ALLOWFADEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::STOP_MODE>("FMOD.Studio", "STOP_MODE", "ALLOWFADEOUT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.STOP_MODE ALLOWFADEOUT
void FMOD::Studio::STOP_MODE::_set_ALLOWFADEOUT(::FMOD::Studio::STOP_MODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STOP_MODE::_set_ALLOWFADEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "STOP_MODE", "ALLOWFADEOUT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.STOP_MODE IMMEDIATE
::FMOD::Studio::STOP_MODE FMOD::Studio::STOP_MODE::_get_IMMEDIATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STOP_MODE::_get_IMMEDIATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::STOP_MODE>("FMOD.Studio", "STOP_MODE", "IMMEDIATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.STOP_MODE IMMEDIATE
void FMOD::Studio::STOP_MODE::_set_IMMEDIATE(::FMOD::Studio::STOP_MODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STOP_MODE::_set_IMMEDIATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "STOP_MODE", "IMMEDIATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::STOP_MODE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::STOP_MODE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.LOADING_STATE
#include "FMOD/Studio/LOADING_STATE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOADING_STATE UNLOADING
::FMOD::Studio::LOADING_STATE FMOD::Studio::LOADING_STATE::_get_UNLOADING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_get_UNLOADING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOADING_STATE>("FMOD.Studio", "LOADING_STATE", "UNLOADING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOADING_STATE UNLOADING
void FMOD::Studio::LOADING_STATE::_set_UNLOADING(::FMOD::Studio::LOADING_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_set_UNLOADING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOADING_STATE", "UNLOADING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOADING_STATE UNLOADED
::FMOD::Studio::LOADING_STATE FMOD::Studio::LOADING_STATE::_get_UNLOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_get_UNLOADED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOADING_STATE>("FMOD.Studio", "LOADING_STATE", "UNLOADED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOADING_STATE UNLOADED
void FMOD::Studio::LOADING_STATE::_set_UNLOADED(::FMOD::Studio::LOADING_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_set_UNLOADED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOADING_STATE", "UNLOADED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOADING_STATE LOADING
::FMOD::Studio::LOADING_STATE FMOD::Studio::LOADING_STATE::_get_LOADING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_get_LOADING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOADING_STATE>("FMOD.Studio", "LOADING_STATE", "LOADING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOADING_STATE LOADING
void FMOD::Studio::LOADING_STATE::_set_LOADING(::FMOD::Studio::LOADING_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_set_LOADING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOADING_STATE", "LOADING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOADING_STATE LOADED
::FMOD::Studio::LOADING_STATE FMOD::Studio::LOADING_STATE::_get_LOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_get_LOADED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOADING_STATE>("FMOD.Studio", "LOADING_STATE", "LOADED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOADING_STATE LOADED
void FMOD::Studio::LOADING_STATE::_set_LOADED(::FMOD::Studio::LOADING_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_set_LOADED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOADING_STATE", "LOADED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOADING_STATE ERROR
::FMOD::Studio::LOADING_STATE FMOD::Studio::LOADING_STATE::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOADING_STATE>("FMOD.Studio", "LOADING_STATE", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOADING_STATE ERROR
void FMOD::Studio::LOADING_STATE::_set_ERROR(::FMOD::Studio::LOADING_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOADING_STATE", "ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::LOADING_STATE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOADING_STATE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.SYSTEM_CALLBACK_TYPE
#include "FMOD/Studio/SYSTEM_CALLBACK_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE PREUPDATE
::FMOD::Studio::SYSTEM_CALLBACK_TYPE FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_PREUPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_PREUPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::SYSTEM_CALLBACK_TYPE>("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "PREUPDATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE PREUPDATE
void FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_PREUPDATE(::FMOD::Studio::SYSTEM_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_PREUPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "PREUPDATE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE POSTUPDATE
::FMOD::Studio::SYSTEM_CALLBACK_TYPE FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_POSTUPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_POSTUPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::SYSTEM_CALLBACK_TYPE>("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "POSTUPDATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE POSTUPDATE
void FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_POSTUPDATE(::FMOD::Studio::SYSTEM_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_POSTUPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "POSTUPDATE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE BANK_UNLOAD
::FMOD::Studio::SYSTEM_CALLBACK_TYPE FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_BANK_UNLOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_BANK_UNLOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::SYSTEM_CALLBACK_TYPE>("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "BANK_UNLOAD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE BANK_UNLOAD
void FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_BANK_UNLOAD(::FMOD::Studio::SYSTEM_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_BANK_UNLOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "BANK_UNLOAD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE ALL
::FMOD::Studio::SYSTEM_CALLBACK_TYPE FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_ALL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_get_ALL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::SYSTEM_CALLBACK_TYPE>("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "ALL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.SYSTEM_CALLBACK_TYPE ALL
void FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_ALL(::FMOD::Studio::SYSTEM_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::_set_ALL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "SYSTEM_CALLBACK_TYPE", "ALL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::SYSTEM_CALLBACK_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.Studio.SYSTEM_CALLBACK
#include "FMOD/Studio/SYSTEM_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.SYSTEM_CALLBACK_TYPE
#include "FMOD/Studio/SYSTEM_CALLBACK_TYPE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.SYSTEM_CALLBACK.Invoke
::FMOD::RESULT FMOD::Studio::SYSTEM_CALLBACK::Invoke(::System::IntPtr systemraw, ::FMOD::Studio::SYSTEM_CALLBACK_TYPE type, ::System::IntPtr parameters, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::SYSTEM_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, systemraw, type, parameters, userdata);
}
// Autogenerated method: FMOD.Studio.SYSTEM_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::Studio::SYSTEM_CALLBACK::BeginInvoke(::System::IntPtr systemraw, ::FMOD::Studio::SYSTEM_CALLBACK_TYPE type, ::System::IntPtr parameters, ::System::IntPtr userdata, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::SYSTEM_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, systemraw, type, parameters, userdata, callback, object);
}
// Autogenerated method: FMOD.Studio.SYSTEM_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::Studio::SYSTEM_CALLBACK::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SYSTEM_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::SYSTEM_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.PARAMETER_TYPE
#include "FMOD/Studio/PARAMETER_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE GAME_CONTROLLED
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_GAME_CONTROLLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_GAME_CONTROLLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "GAME_CONTROLLED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE GAME_CONTROLLED
void FMOD::Studio::PARAMETER_TYPE::_set_GAME_CONTROLLED(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_GAME_CONTROLLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "GAME_CONTROLLED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_DISTANCE
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_DISTANCE
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_DISTANCE(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_EVENT_CONE_ANGLE
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_EVENT_CONE_ANGLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_EVENT_CONE_ANGLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_EVENT_CONE_ANGLE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_EVENT_CONE_ANGLE
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_EVENT_CONE_ANGLE(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_EVENT_CONE_ANGLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_EVENT_CONE_ANGLE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_EVENT_ORIENTATION
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_EVENT_ORIENTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_EVENT_ORIENTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_EVENT_ORIENTATION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_EVENT_ORIENTATION
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_EVENT_ORIENTATION(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_EVENT_ORIENTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_EVENT_ORIENTATION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_DIRECTION
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_DIRECTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_DIRECTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_DIRECTION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_DIRECTION
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_DIRECTION(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_DIRECTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_DIRECTION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_ELEVATION
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_ELEVATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_ELEVATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_ELEVATION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_ELEVATION
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_ELEVATION(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_ELEVATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_ELEVATION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_LISTENER_ORIENTATION
::FMOD::Studio::PARAMETER_TYPE FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_LISTENER_ORIENTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_get_AUTOMATIC_LISTENER_ORIENTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PARAMETER_TYPE>("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_LISTENER_ORIENTATION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PARAMETER_TYPE AUTOMATIC_LISTENER_ORIENTATION
void FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_LISTENER_ORIENTATION(::FMOD::Studio::PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::_set_AUTOMATIC_LISTENER_ORIENTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PARAMETER_TYPE", "AUTOMATIC_LISTENER_ORIENTATION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::PARAMETER_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PARAMETER_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.LOAD_MEMORY_MODE
#include "FMOD/Studio/LOAD_MEMORY_MODE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_MEMORY_MODE LOAD_MEMORY
::FMOD::Studio::LOAD_MEMORY_MODE FMOD::Studio::LOAD_MEMORY_MODE::_get_LOAD_MEMORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_MODE::_get_LOAD_MEMORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_MEMORY_MODE>("FMOD.Studio", "LOAD_MEMORY_MODE", "LOAD_MEMORY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_MEMORY_MODE LOAD_MEMORY
void FMOD::Studio::LOAD_MEMORY_MODE::_set_LOAD_MEMORY(::FMOD::Studio::LOAD_MEMORY_MODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_MODE::_set_LOAD_MEMORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_MEMORY_MODE", "LOAD_MEMORY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_MEMORY_MODE LOAD_MEMORY_POINT
::FMOD::Studio::LOAD_MEMORY_MODE FMOD::Studio::LOAD_MEMORY_MODE::_get_LOAD_MEMORY_POINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_MODE::_get_LOAD_MEMORY_POINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_MEMORY_MODE>("FMOD.Studio", "LOAD_MEMORY_MODE", "LOAD_MEMORY_POINT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_MEMORY_MODE LOAD_MEMORY_POINT
void FMOD::Studio::LOAD_MEMORY_MODE::_set_LOAD_MEMORY_POINT(::FMOD::Studio::LOAD_MEMORY_MODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_MODE::_set_LOAD_MEMORY_POINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_MEMORY_MODE", "LOAD_MEMORY_POINT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::LOAD_MEMORY_MODE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_MODE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.LOAD_MEMORY_ALIGNMENT
#include "FMOD/Studio/LOAD_MEMORY_ALIGNMENT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_MEMORY_ALIGNMENT VALUE
::FMOD::Studio::LOAD_MEMORY_ALIGNMENT FMOD::Studio::LOAD_MEMORY_ALIGNMENT::_get_VALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_ALIGNMENT::_get_VALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_MEMORY_ALIGNMENT>("FMOD.Studio", "LOAD_MEMORY_ALIGNMENT", "VALUE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_MEMORY_ALIGNMENT VALUE
void FMOD::Studio::LOAD_MEMORY_ALIGNMENT::_set_VALUE(::FMOD::Studio::LOAD_MEMORY_ALIGNMENT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_ALIGNMENT::_set_VALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_MEMORY_ALIGNMENT", "VALUE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::LOAD_MEMORY_ALIGNMENT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_MEMORY_ALIGNMENT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.SOUND_INFO
#include "FMOD/Studio/SOUND_INFO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr name_or_data
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::SOUND_INFO::dyn_name_or_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SOUND_INFO::dyn_name_or_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name_or_data"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMOD.MODE mode
[[deprecated("Use field access instead!")]] ::FMOD::MODE& FMOD::Studio::SOUND_INFO::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SOUND_INFO::dyn_mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::FMOD::MODE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMOD.CREATESOUNDEXINFO exinfo
[[deprecated("Use field access instead!")]] ::FMOD::CREATESOUNDEXINFO& FMOD::Studio::SOUND_INFO::dyn_exinfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SOUND_INFO::dyn_exinfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exinfo"))->offset;
  return *reinterpret_cast<::FMOD::CREATESOUNDEXINFO*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subsoundindex
[[deprecated("Use field access instead!")]] int& FMOD::Studio::SOUND_INFO::dyn_subsoundindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SOUND_INFO::dyn_subsoundindex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subsoundindex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.SOUND_INFO.get_name
::StringW FMOD::Studio::SOUND_INFO::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::SOUND_INFO::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.USER_PROPERTY_TYPE
#include "FMOD/Studio/USER_PROPERTY_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.USER_PROPERTY_TYPE INTEGER
::FMOD::Studio::USER_PROPERTY_TYPE FMOD::Studio::USER_PROPERTY_TYPE::_get_INTEGER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_get_INTEGER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::USER_PROPERTY_TYPE>("FMOD.Studio", "USER_PROPERTY_TYPE", "INTEGER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.USER_PROPERTY_TYPE INTEGER
void FMOD::Studio::USER_PROPERTY_TYPE::_set_INTEGER(::FMOD::Studio::USER_PROPERTY_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_set_INTEGER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "USER_PROPERTY_TYPE", "INTEGER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.USER_PROPERTY_TYPE BOOLEAN
::FMOD::Studio::USER_PROPERTY_TYPE FMOD::Studio::USER_PROPERTY_TYPE::_get_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_get_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::USER_PROPERTY_TYPE>("FMOD.Studio", "USER_PROPERTY_TYPE", "BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.USER_PROPERTY_TYPE BOOLEAN
void FMOD::Studio::USER_PROPERTY_TYPE::_set_BOOLEAN(::FMOD::Studio::USER_PROPERTY_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_set_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "USER_PROPERTY_TYPE", "BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.USER_PROPERTY_TYPE FLOAT
::FMOD::Studio::USER_PROPERTY_TYPE FMOD::Studio::USER_PROPERTY_TYPE::_get_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_get_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::USER_PROPERTY_TYPE>("FMOD.Studio", "USER_PROPERTY_TYPE", "FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.USER_PROPERTY_TYPE FLOAT
void FMOD::Studio::USER_PROPERTY_TYPE::_set_FLOAT(::FMOD::Studio::USER_PROPERTY_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_set_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "USER_PROPERTY_TYPE", "FLOAT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.USER_PROPERTY_TYPE STRING
::FMOD::Studio::USER_PROPERTY_TYPE FMOD::Studio::USER_PROPERTY_TYPE::_get_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_get_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::USER_PROPERTY_TYPE>("FMOD.Studio", "USER_PROPERTY_TYPE", "STRING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.USER_PROPERTY_TYPE STRING
void FMOD::Studio::USER_PROPERTY_TYPE::_set_STRING(::FMOD::Studio::USER_PROPERTY_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::_set_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "USER_PROPERTY_TYPE", "STRING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::USER_PROPERTY_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.USER_PROPERTY
#include "FMOD/Studio/USER_PROPERTY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMOD.StringWrapper name
[[deprecated("Use field access instead!")]] ::FMOD::StringWrapper& FMOD::Studio::USER_PROPERTY::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::FMOD::StringWrapper*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMOD.Studio.USER_PROPERTY_TYPE type
[[deprecated("Use field access instead!")]] ::FMOD::Studio::USER_PROPERTY_TYPE& FMOD::Studio::USER_PROPERTY::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::FMOD::Studio::USER_PROPERTY_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.Studio.Union_IntBoolFloatString value
[[deprecated("Use field access instead!")]] ::FMOD::Studio::Union_IntBoolFloatString& FMOD::Studio::USER_PROPERTY::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::FMOD::Studio::Union_IntBoolFloatString*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.USER_PROPERTY.intValue
int FMOD::Studio::USER_PROPERTY::intValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::intValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "intValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.USER_PROPERTY.boolValue
bool FMOD::Studio::USER_PROPERTY::boolValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::boolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "boolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.USER_PROPERTY.floatValue
float FMOD::Studio::USER_PROPERTY::floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::floatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "floatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.USER_PROPERTY.stringValue
::StringW FMOD::Studio::USER_PROPERTY::stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::USER_PROPERTY::stringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "stringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.INITFLAGS
#include "FMOD/Studio/INITFLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS NORMAL
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "NORMAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS NORMAL
void FMOD::Studio::INITFLAGS::_set_NORMAL(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS LIVEUPDATE
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_LIVEUPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_LIVEUPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "LIVEUPDATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS LIVEUPDATE
void FMOD::Studio::INITFLAGS::_set_LIVEUPDATE(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_LIVEUPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "LIVEUPDATE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS ALLOW_MISSING_PLUGINS
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_ALLOW_MISSING_PLUGINS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_ALLOW_MISSING_PLUGINS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "ALLOW_MISSING_PLUGINS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS ALLOW_MISSING_PLUGINS
void FMOD::Studio::INITFLAGS::_set_ALLOW_MISSING_PLUGINS(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_ALLOW_MISSING_PLUGINS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "ALLOW_MISSING_PLUGINS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS SYNCHRONOUS_UPDATE
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_SYNCHRONOUS_UPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_SYNCHRONOUS_UPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "SYNCHRONOUS_UPDATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS SYNCHRONOUS_UPDATE
void FMOD::Studio::INITFLAGS::_set_SYNCHRONOUS_UPDATE(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_SYNCHRONOUS_UPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "SYNCHRONOUS_UPDATE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS DEFERRED_CALLBACKS
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_DEFERRED_CALLBACKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_DEFERRED_CALLBACKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "DEFERRED_CALLBACKS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS DEFERRED_CALLBACKS
void FMOD::Studio::INITFLAGS::_set_DEFERRED_CALLBACKS(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_DEFERRED_CALLBACKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "DEFERRED_CALLBACKS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INITFLAGS LOAD_FROM_UPDATE
::FMOD::Studio::INITFLAGS FMOD::Studio::INITFLAGS::_get_LOAD_FROM_UPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_get_LOAD_FROM_UPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INITFLAGS>("FMOD.Studio", "INITFLAGS", "LOAD_FROM_UPDATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INITFLAGS LOAD_FROM_UPDATE
void FMOD::Studio::INITFLAGS::_set_LOAD_FROM_UPDATE(::FMOD::Studio::INITFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::_set_LOAD_FROM_UPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INITFLAGS", "LOAD_FROM_UPDATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::INITFLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INITFLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.LOAD_BANK_FLAGS
#include "FMOD/Studio/LOAD_BANK_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_BANK_FLAGS NORMAL
::FMOD::Studio::LOAD_BANK_FLAGS FMOD::Studio::LOAD_BANK_FLAGS::_get_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_get_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_BANK_FLAGS>("FMOD.Studio", "LOAD_BANK_FLAGS", "NORMAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_BANK_FLAGS NORMAL
void FMOD::Studio::LOAD_BANK_FLAGS::_set_NORMAL(::FMOD::Studio::LOAD_BANK_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_set_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_BANK_FLAGS", "NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_BANK_FLAGS NONBLOCKING
::FMOD::Studio::LOAD_BANK_FLAGS FMOD::Studio::LOAD_BANK_FLAGS::_get_NONBLOCKING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_get_NONBLOCKING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_BANK_FLAGS>("FMOD.Studio", "LOAD_BANK_FLAGS", "NONBLOCKING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_BANK_FLAGS NONBLOCKING
void FMOD::Studio::LOAD_BANK_FLAGS::_set_NONBLOCKING(::FMOD::Studio::LOAD_BANK_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_set_NONBLOCKING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_BANK_FLAGS", "NONBLOCKING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.LOAD_BANK_FLAGS DECOMPRESS_SAMPLES
::FMOD::Studio::LOAD_BANK_FLAGS FMOD::Studio::LOAD_BANK_FLAGS::_get_DECOMPRESS_SAMPLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_get_DECOMPRESS_SAMPLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::LOAD_BANK_FLAGS>("FMOD.Studio", "LOAD_BANK_FLAGS", "DECOMPRESS_SAMPLES"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.LOAD_BANK_FLAGS DECOMPRESS_SAMPLES
void FMOD::Studio::LOAD_BANK_FLAGS::_set_DECOMPRESS_SAMPLES(::FMOD::Studio::LOAD_BANK_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::_set_DECOMPRESS_SAMPLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "LOAD_BANK_FLAGS", "DECOMPRESS_SAMPLES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::LOAD_BANK_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::LOAD_BANK_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.COMMANDCAPTURE_FLAGS
#include "FMOD/Studio/COMMANDCAPTURE_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS NORMAL
::FMOD::Studio::COMMANDCAPTURE_FLAGS FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDCAPTURE_FLAGS>("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "NORMAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS NORMAL
void FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_NORMAL(::FMOD::Studio::COMMANDCAPTURE_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS FILEFLUSH
::FMOD::Studio::COMMANDCAPTURE_FLAGS FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_FILEFLUSH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_FILEFLUSH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDCAPTURE_FLAGS>("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "FILEFLUSH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS FILEFLUSH
void FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_FILEFLUSH(::FMOD::Studio::COMMANDCAPTURE_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_FILEFLUSH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "FILEFLUSH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS SKIP_INITIAL_STATE
::FMOD::Studio::COMMANDCAPTURE_FLAGS FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_SKIP_INITIAL_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_get_SKIP_INITIAL_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDCAPTURE_FLAGS>("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "SKIP_INITIAL_STATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDCAPTURE_FLAGS SKIP_INITIAL_STATE
void FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_SKIP_INITIAL_STATE(::FMOD::Studio::COMMANDCAPTURE_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::_set_SKIP_INITIAL_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDCAPTURE_FLAGS", "SKIP_INITIAL_STATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::COMMANDCAPTURE_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDCAPTURE_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.COMMANDREPLAY_FLAGS
#include "FMOD/Studio/COMMANDREPLAY_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS NORMAL
::FMOD::Studio::COMMANDREPLAY_FLAGS FMOD::Studio::COMMANDREPLAY_FLAGS::_get_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_get_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDREPLAY_FLAGS>("FMOD.Studio", "COMMANDREPLAY_FLAGS", "NORMAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS NORMAL
void FMOD::Studio::COMMANDREPLAY_FLAGS::_set_NORMAL(::FMOD::Studio::COMMANDREPLAY_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_set_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDREPLAY_FLAGS", "NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS SKIP_CLEANUP
::FMOD::Studio::COMMANDREPLAY_FLAGS FMOD::Studio::COMMANDREPLAY_FLAGS::_get_SKIP_CLEANUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_get_SKIP_CLEANUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDREPLAY_FLAGS>("FMOD.Studio", "COMMANDREPLAY_FLAGS", "SKIP_CLEANUP"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS SKIP_CLEANUP
void FMOD::Studio::COMMANDREPLAY_FLAGS::_set_SKIP_CLEANUP(::FMOD::Studio::COMMANDREPLAY_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_set_SKIP_CLEANUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDREPLAY_FLAGS", "SKIP_CLEANUP", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS FAST_FORWARD
::FMOD::Studio::COMMANDREPLAY_FLAGS FMOD::Studio::COMMANDREPLAY_FLAGS::_get_FAST_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_get_FAST_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDREPLAY_FLAGS>("FMOD.Studio", "COMMANDREPLAY_FLAGS", "FAST_FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS FAST_FORWARD
void FMOD::Studio::COMMANDREPLAY_FLAGS::_set_FAST_FORWARD(::FMOD::Studio::COMMANDREPLAY_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_set_FAST_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDREPLAY_FLAGS", "FAST_FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS SKIP_BANK_LOAD
::FMOD::Studio::COMMANDREPLAY_FLAGS FMOD::Studio::COMMANDREPLAY_FLAGS::_get_SKIP_BANK_LOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_get_SKIP_BANK_LOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::COMMANDREPLAY_FLAGS>("FMOD.Studio", "COMMANDREPLAY_FLAGS", "SKIP_BANK_LOAD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.COMMANDREPLAY_FLAGS SKIP_BANK_LOAD
void FMOD::Studio::COMMANDREPLAY_FLAGS::_set_SKIP_BANK_LOAD(::FMOD::Studio::COMMANDREPLAY_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::_set_SKIP_BANK_LOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "COMMANDREPLAY_FLAGS", "SKIP_BANK_LOAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::COMMANDREPLAY_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.PLAYBACK_STATE
#include "FMOD/Studio/PLAYBACK_STATE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PLAYBACK_STATE PLAYING
::FMOD::Studio::PLAYBACK_STATE FMOD::Studio::PLAYBACK_STATE::_get_PLAYING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_get_PLAYING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PLAYBACK_STATE>("FMOD.Studio", "PLAYBACK_STATE", "PLAYING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PLAYBACK_STATE PLAYING
void FMOD::Studio::PLAYBACK_STATE::_set_PLAYING(::FMOD::Studio::PLAYBACK_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_set_PLAYING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PLAYBACK_STATE", "PLAYING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PLAYBACK_STATE SUSTAINING
::FMOD::Studio::PLAYBACK_STATE FMOD::Studio::PLAYBACK_STATE::_get_SUSTAINING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_get_SUSTAINING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PLAYBACK_STATE>("FMOD.Studio", "PLAYBACK_STATE", "SUSTAINING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PLAYBACK_STATE SUSTAINING
void FMOD::Studio::PLAYBACK_STATE::_set_SUSTAINING(::FMOD::Studio::PLAYBACK_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_set_SUSTAINING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PLAYBACK_STATE", "SUSTAINING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PLAYBACK_STATE STOPPED
::FMOD::Studio::PLAYBACK_STATE FMOD::Studio::PLAYBACK_STATE::_get_STOPPED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_get_STOPPED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PLAYBACK_STATE>("FMOD.Studio", "PLAYBACK_STATE", "STOPPED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PLAYBACK_STATE STOPPED
void FMOD::Studio::PLAYBACK_STATE::_set_STOPPED(::FMOD::Studio::PLAYBACK_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_set_STOPPED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PLAYBACK_STATE", "STOPPED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PLAYBACK_STATE STARTING
::FMOD::Studio::PLAYBACK_STATE FMOD::Studio::PLAYBACK_STATE::_get_STARTING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_get_STARTING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PLAYBACK_STATE>("FMOD.Studio", "PLAYBACK_STATE", "STARTING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PLAYBACK_STATE STARTING
void FMOD::Studio::PLAYBACK_STATE::_set_STARTING(::FMOD::Studio::PLAYBACK_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_set_STARTING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PLAYBACK_STATE", "STARTING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.PLAYBACK_STATE STOPPING
::FMOD::Studio::PLAYBACK_STATE FMOD::Studio::PLAYBACK_STATE::_get_STOPPING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_get_STOPPING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::PLAYBACK_STATE>("FMOD.Studio", "PLAYBACK_STATE", "STOPPING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.PLAYBACK_STATE STOPPING
void FMOD::Studio::PLAYBACK_STATE::_set_STOPPING(::FMOD::Studio::PLAYBACK_STATE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::_set_STOPPING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "PLAYBACK_STATE", "STOPPING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::PLAYBACK_STATE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::PLAYBACK_STATE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.EVENT_PROPERTY
#include "FMOD/Studio/EVENT_PROPERTY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_PROPERTY CHANNELPRIORITY
::FMOD::Studio::EVENT_PROPERTY FMOD::Studio::EVENT_PROPERTY::_get_CHANNELPRIORITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_get_CHANNELPRIORITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_PROPERTY>("FMOD.Studio", "EVENT_PROPERTY", "CHANNELPRIORITY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_PROPERTY CHANNELPRIORITY
void FMOD::Studio::EVENT_PROPERTY::_set_CHANNELPRIORITY(::FMOD::Studio::EVENT_PROPERTY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_set_CHANNELPRIORITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_PROPERTY", "CHANNELPRIORITY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_PROPERTY SCHEDULE_DELAY
::FMOD::Studio::EVENT_PROPERTY FMOD::Studio::EVENT_PROPERTY::_get_SCHEDULE_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_get_SCHEDULE_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_PROPERTY>("FMOD.Studio", "EVENT_PROPERTY", "SCHEDULE_DELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_PROPERTY SCHEDULE_DELAY
void FMOD::Studio::EVENT_PROPERTY::_set_SCHEDULE_DELAY(::FMOD::Studio::EVENT_PROPERTY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_set_SCHEDULE_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_PROPERTY", "SCHEDULE_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_PROPERTY SCHEDULE_LOOKAHEAD
::FMOD::Studio::EVENT_PROPERTY FMOD::Studio::EVENT_PROPERTY::_get_SCHEDULE_LOOKAHEAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_get_SCHEDULE_LOOKAHEAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_PROPERTY>("FMOD.Studio", "EVENT_PROPERTY", "SCHEDULE_LOOKAHEAD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_PROPERTY SCHEDULE_LOOKAHEAD
void FMOD::Studio::EVENT_PROPERTY::_set_SCHEDULE_LOOKAHEAD(::FMOD::Studio::EVENT_PROPERTY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_set_SCHEDULE_LOOKAHEAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_PROPERTY", "SCHEDULE_LOOKAHEAD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_PROPERTY MINIMUM_DISTANCE
::FMOD::Studio::EVENT_PROPERTY FMOD::Studio::EVENT_PROPERTY::_get_MINIMUM_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_get_MINIMUM_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_PROPERTY>("FMOD.Studio", "EVENT_PROPERTY", "MINIMUM_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_PROPERTY MINIMUM_DISTANCE
void FMOD::Studio::EVENT_PROPERTY::_set_MINIMUM_DISTANCE(::FMOD::Studio::EVENT_PROPERTY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_set_MINIMUM_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_PROPERTY", "MINIMUM_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_PROPERTY MAXIMUM_DISTANCE
::FMOD::Studio::EVENT_PROPERTY FMOD::Studio::EVENT_PROPERTY::_get_MAXIMUM_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_get_MAXIMUM_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_PROPERTY>("FMOD.Studio", "EVENT_PROPERTY", "MAXIMUM_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_PROPERTY MAXIMUM_DISTANCE
void FMOD::Studio::EVENT_PROPERTY::_set_MAXIMUM_DISTANCE(::FMOD::Studio::EVENT_PROPERTY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::_set_MAXIMUM_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_PROPERTY", "MAXIMUM_DISTANCE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::EVENT_PROPERTY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_PROPERTY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.EVENT_CALLBACK_TYPE
#include "FMOD/Studio/EVENT_CALLBACK_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE CREATED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_CREATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_CREATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "CREATED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE CREATED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_CREATED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_CREATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "CREATED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE DESTROYED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_DESTROYED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_DESTROYED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "DESTROYED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE DESTROYED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_DESTROYED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_DESTROYED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "DESTROYED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STARTING
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STARTING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STARTING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STARTING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STARTING
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STARTING(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STARTING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STARTING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STARTED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STARTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STARTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STARTED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STARTED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STARTED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STARTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STARTED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE RESTARTED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_RESTARTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_RESTARTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "RESTARTED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE RESTARTED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_RESTARTED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_RESTARTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "RESTARTED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STOPPED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STOPPED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_STOPPED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STOPPED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE STOPPED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STOPPED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_STOPPED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "STOPPED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE START_FAILED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_START_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_START_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "START_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE START_FAILED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_START_FAILED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_START_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "START_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE CREATE_PROGRAMMER_SOUND
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_CREATE_PROGRAMMER_SOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_CREATE_PROGRAMMER_SOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "CREATE_PROGRAMMER_SOUND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE CREATE_PROGRAMMER_SOUND
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_CREATE_PROGRAMMER_SOUND(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_CREATE_PROGRAMMER_SOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "CREATE_PROGRAMMER_SOUND", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE DESTROY_PROGRAMMER_SOUND
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_DESTROY_PROGRAMMER_SOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_DESTROY_PROGRAMMER_SOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "DESTROY_PROGRAMMER_SOUND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE DESTROY_PROGRAMMER_SOUND
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_DESTROY_PROGRAMMER_SOUND(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_DESTROY_PROGRAMMER_SOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "DESTROY_PROGRAMMER_SOUND", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE PLUGIN_CREATED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_PLUGIN_CREATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_PLUGIN_CREATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "PLUGIN_CREATED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE PLUGIN_CREATED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_PLUGIN_CREATED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_PLUGIN_CREATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "PLUGIN_CREATED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE PLUGIN_DESTROYED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_PLUGIN_DESTROYED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_PLUGIN_DESTROYED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "PLUGIN_DESTROYED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE PLUGIN_DESTROYED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_PLUGIN_DESTROYED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_PLUGIN_DESTROYED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "PLUGIN_DESTROYED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE TIMELINE_MARKER
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_TIMELINE_MARKER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_TIMELINE_MARKER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "TIMELINE_MARKER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE TIMELINE_MARKER
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_TIMELINE_MARKER(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_TIMELINE_MARKER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "TIMELINE_MARKER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE TIMELINE_BEAT
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_TIMELINE_BEAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_TIMELINE_BEAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "TIMELINE_BEAT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE TIMELINE_BEAT
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_TIMELINE_BEAT(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_TIMELINE_BEAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "TIMELINE_BEAT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE SOUND_PLAYED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_SOUND_PLAYED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_SOUND_PLAYED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "SOUND_PLAYED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE SOUND_PLAYED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_SOUND_PLAYED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_SOUND_PLAYED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "SOUND_PLAYED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE SOUND_STOPPED
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_SOUND_STOPPED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_SOUND_STOPPED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "SOUND_STOPPED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE SOUND_STOPPED
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_SOUND_STOPPED(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_SOUND_STOPPED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "SOUND_STOPPED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE REAL_TO_VIRTUAL
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_REAL_TO_VIRTUAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_REAL_TO_VIRTUAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "REAL_TO_VIRTUAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE REAL_TO_VIRTUAL
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_REAL_TO_VIRTUAL(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_REAL_TO_VIRTUAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "REAL_TO_VIRTUAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE VIRTUAL_TO_REAL
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_VIRTUAL_TO_REAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_VIRTUAL_TO_REAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "VIRTUAL_TO_REAL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE VIRTUAL_TO_REAL
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_VIRTUAL_TO_REAL(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_VIRTUAL_TO_REAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "VIRTUAL_TO_REAL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE ALL
::FMOD::Studio::EVENT_CALLBACK_TYPE FMOD::Studio::EVENT_CALLBACK_TYPE::_get_ALL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_get_ALL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::EVENT_CALLBACK_TYPE>("FMOD.Studio", "EVENT_CALLBACK_TYPE", "ALL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.EVENT_CALLBACK_TYPE ALL
void FMOD::Studio::EVENT_CALLBACK_TYPE::_set_ALL(::FMOD::Studio::EVENT_CALLBACK_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::_set_ALL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "EVENT_CALLBACK_TYPE", "ALL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& FMOD::Studio::EVENT_CALLBACK_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.Studio.EVENT_CALLBACK
#include "FMOD/Studio/EVENT_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.EVENT_CALLBACK_TYPE
#include "FMOD/Studio/EVENT_CALLBACK_TYPE.hpp"
// Including type: FMOD.Studio.EventInstance
#include "FMOD/Studio/EventInstance.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.EVENT_CALLBACK.Invoke
::FMOD::RESULT FMOD::Studio::EVENT_CALLBACK::Invoke(::FMOD::Studio::EVENT_CALLBACK_TYPE type, ::FMOD::Studio::EventInstance eventInstance, ::System::IntPtr parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::EVENT_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, type, eventInstance, parameters);
}
// Autogenerated method: FMOD.Studio.EVENT_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::Studio::EVENT_CALLBACK::BeginInvoke(::FMOD::Studio::EVENT_CALLBACK_TYPE type, ::FMOD::Studio::EventInstance eventInstance, ::System::IntPtr parameters, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::EVENT_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, type, eventInstance, parameters, callback, object);
}
// Autogenerated method: FMOD.Studio.EVENT_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::Studio::EVENT_CALLBACK::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EVENT_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::EVENT_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.Studio.COMMANDREPLAY_FRAME_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_FRAME_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.CommandReplay
#include "FMOD/Studio/CommandReplay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_FRAME_CALLBACK.Invoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::Invoke(::FMOD::Studio::CommandReplay replay, int commandIndex, float currentTime, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, replay, commandIndex, currentTime, userdata);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_FRAME_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::BeginInvoke(::FMOD::Studio::CommandReplay replay, int commandIndex, float currentTime, ::System::IntPtr userdata, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, replay, commandIndex, currentTime, userdata, callback, object);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_FRAME_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.Studio.COMMANDREPLAY_LOAD_BANK_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_LOAD_BANK_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.CommandReplay
#include "FMOD/Studio/CommandReplay.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: FMOD.Studio.LOAD_BANK_FLAGS
#include "FMOD/Studio/LOAD_BANK_FLAGS.hpp"
// Including type: FMOD.Studio.Bank
#include "FMOD/Studio/Bank.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_LOAD_BANK_CALLBACK.Invoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::Invoke(::FMOD::Studio::CommandReplay replay, ::System::Guid guid, ::FMOD::StringWrapper bankFilename, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::FMOD::Studio::Bank> bank, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, replay, guid, bankFilename, flags, byref(bank), userdata);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_LOAD_BANK_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::BeginInvoke(::FMOD::Studio::CommandReplay replay, ::System::Guid guid, ::FMOD::StringWrapper bankFilename, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::FMOD::Studio::Bank> bank, ::System::IntPtr userdata, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, replay, guid, bankFilename, flags, byref(bank), userdata, callback, object);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_LOAD_BANK_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::EndInvoke(ByRef<::FMOD::Studio::Bank> bank, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(bank), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.Studio.COMMANDREPLAY_CREATE_INSTANCE_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_CREATE_INSTANCE_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.CommandReplay
#include "FMOD/Studio/CommandReplay.hpp"
// Including type: FMOD.Studio.EventDescription
#include "FMOD/Studio/EventDescription.hpp"
// Including type: FMOD.Studio.EventInstance
#include "FMOD/Studio/EventInstance.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_CREATE_INSTANCE_CALLBACK.Invoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::Invoke(::FMOD::Studio::CommandReplay replay, ::FMOD::Studio::EventDescription eventDescription, ::System::IntPtr originalHandle, ByRef<::FMOD::Studio::EventInstance> instance, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, replay, eventDescription, originalHandle, byref(instance), userdata);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_CREATE_INSTANCE_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::BeginInvoke(::FMOD::Studio::CommandReplay replay, ::FMOD::Studio::EventDescription eventDescription, ::System::IntPtr originalHandle, ByRef<::FMOD::Studio::EventInstance> instance, ::System::IntPtr userdata, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, replay, eventDescription, originalHandle, byref(instance), userdata, callback, object);
}
// Autogenerated method: FMOD.Studio.COMMANDREPLAY_CREATE_INSTANCE_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::EndInvoke(ByRef<::FMOD::Studio::EventInstance> instance, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(instance), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.INSTANCETYPE
#include "FMOD/Studio/INSTANCETYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE NONE
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE NONE
void FMOD::Studio::INSTANCETYPE::_set_NONE(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE SYSTEM
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_SYSTEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_SYSTEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "SYSTEM"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE SYSTEM
void FMOD::Studio::INSTANCETYPE::_set_SYSTEM(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_SYSTEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "SYSTEM", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE EVENTDESCRIPTION
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_EVENTDESCRIPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_EVENTDESCRIPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "EVENTDESCRIPTION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE EVENTDESCRIPTION
void FMOD::Studio::INSTANCETYPE::_set_EVENTDESCRIPTION(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_EVENTDESCRIPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "EVENTDESCRIPTION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE EVENTINSTANCE
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_EVENTINSTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_EVENTINSTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "EVENTINSTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE EVENTINSTANCE
void FMOD::Studio::INSTANCETYPE::_set_EVENTINSTANCE(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_EVENTINSTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "EVENTINSTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE PARAMETERINSTANCE
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_PARAMETERINSTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_PARAMETERINSTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "PARAMETERINSTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE PARAMETERINSTANCE
void FMOD::Studio::INSTANCETYPE::_set_PARAMETERINSTANCE(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_PARAMETERINSTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "PARAMETERINSTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE BUS
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_BUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_BUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "BUS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE BUS
void FMOD::Studio::INSTANCETYPE::_set_BUS(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_BUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "BUS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE VCA
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_VCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_VCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "VCA"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE VCA
void FMOD::Studio::INSTANCETYPE::_set_VCA(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_VCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "VCA", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE BANK
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_BANK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_BANK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "BANK"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE BANK
void FMOD::Studio::INSTANCETYPE::_set_BANK(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_BANK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "BANK", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.Studio.INSTANCETYPE COMMANDREPLAY
::FMOD::Studio::INSTANCETYPE FMOD::Studio::INSTANCETYPE::_get_COMMANDREPLAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_get_COMMANDREPLAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::Studio::INSTANCETYPE>("FMOD.Studio", "INSTANCETYPE", "COMMANDREPLAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.Studio.INSTANCETYPE COMMANDREPLAY
void FMOD::Studio::INSTANCETYPE::_set_COMMANDREPLAY(::FMOD::Studio::INSTANCETYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::_set_COMMANDREPLAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD.Studio", "INSTANCETYPE", "COMMANDREPLAY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::Studio::INSTANCETYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::INSTANCETYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.Util
#include "FMOD/Studio/Util.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.Studio.Util.ParseID
::FMOD::RESULT FMOD::Studio::Util::ParseID(::StringW idString, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Util::ParseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Util", "ParseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idString), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idString, byref(id));
}
// Autogenerated method: FMOD.Studio.Util.FMOD_Studio_ParseID
::FMOD::RESULT FMOD::Studio::Util::FMOD_Studio_ParseID(::ArrayW<uint8_t> idString, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Util::FMOD_Studio_ParseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Util", "FMOD_Studio_ParseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idString), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idString, byref(id));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.System
#include "FMOD/Studio/System.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.ADVANCEDSETTINGS
#include "FMOD/Studio/ADVANCEDSETTINGS.hpp"
// Including type: FMOD.Studio.INITFLAGS
#include "FMOD/Studio/INITFLAGS.hpp"
// Including type: FMOD.INITFLAGS
#include "FMOD/INITFLAGS.hpp"
// Including type: FMOD.System
#include "FMOD/System.hpp"
// Including type: FMOD.Studio.EventDescription
#include "FMOD/Studio/EventDescription.hpp"
// Including type: FMOD.Studio.Bus
#include "FMOD/Studio/Bus.hpp"
// Including type: FMOD.Studio.VCA
#include "FMOD/Studio/VCA.hpp"
// Including type: FMOD.Studio.CPU_USAGE
#include "FMOD/Studio/CPU_USAGE.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: FMOD.Studio.SOUND_INFO
#include "FMOD/Studio/SOUND_INFO.hpp"
// Including type: FMOD.ATTRIBUTES_3D
#include "FMOD/ATTRIBUTES_3D.hpp"
// Including type: FMOD.Studio.LOAD_BANK_FLAGS
#include "FMOD/Studio/LOAD_BANK_FLAGS.hpp"
// Including type: FMOD.Studio.BANK_INFO
#include "FMOD/Studio/BANK_INFO.hpp"
// Including type: FMOD.Studio.COMMANDCAPTURE_FLAGS
#include "FMOD/Studio/COMMANDCAPTURE_FLAGS.hpp"
// Including type: FMOD.Studio.COMMANDREPLAY_FLAGS
#include "FMOD/Studio/COMMANDREPLAY_FLAGS.hpp"
// Including type: FMOD.Studio.CommandReplay
#include "FMOD/Studio/CommandReplay.hpp"
// Including type: FMOD.Studio.BUFFER_USAGE
#include "FMOD/Studio/BUFFER_USAGE.hpp"
// Including type: FMOD.Studio.SYSTEM_CALLBACK
#include "FMOD/Studio/SYSTEM_CALLBACK.hpp"
// Including type: FMOD.Studio.SYSTEM_CALLBACK_TYPE
#include "FMOD/Studio/SYSTEM_CALLBACK_TYPE.hpp"
// Including type: FMOD.Studio.LOAD_MEMORY_MODE
#include "FMOD/Studio/LOAD_MEMORY_MODE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::System::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.System.create
::FMOD::RESULT FMOD::Studio::System::create(ByRef<::FMOD::Studio::System> studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::System&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(studiosystem));
}
// Autogenerated method: FMOD.Studio.System.setAdvancedSettings
::FMOD::RESULT FMOD::Studio::System::setAdvancedSettings(::FMOD::Studio::ADVANCEDSETTINGS settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setAdvancedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setAdvancedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, settings);
}
// Autogenerated method: FMOD.Studio.System.getAdvancedSettings
::FMOD::RESULT FMOD::Studio::System::getAdvancedSettings(ByRef<::FMOD::Studio::ADVANCEDSETTINGS> settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getAdvancedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getAdvancedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::ADVANCEDSETTINGS&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(settings));
}
// Autogenerated method: FMOD.Studio.System.initialize
::FMOD::RESULT FMOD::Studio::System::initialize(int maxchannels, ::FMOD::Studio::INITFLAGS studioFlags, ::FMOD::INITFLAGS flags, ::System::IntPtr extradriverdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxchannels), ::il2cpp_utils::ExtractType(studioFlags), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(extradriverdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, maxchannels, studioFlags, flags, extradriverdata);
}
// Autogenerated method: FMOD.Studio.System.release
::FMOD::RESULT FMOD::Studio::System::release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.update
::FMOD::RESULT FMOD::Studio::System::update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.getLowLevelSystem
::FMOD::RESULT FMOD::Studio::System::getLowLevelSystem(ByRef<::FMOD::System> system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getLowLevelSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getLowLevelSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::System&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(system));
}
// Autogenerated method: FMOD.Studio.System.getEvent
::FMOD::RESULT FMOD::Studio::System::getEvent(::StringW path, ByRef<::FMOD::Studio::EventDescription> _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::EventDescription&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, byref(_event));
}
// Autogenerated method: FMOD.Studio.System.getBus
::FMOD::RESULT FMOD::Studio::System::getBus(::StringW path, ByRef<::FMOD::Studio::Bus> bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, byref(bus));
}
// Autogenerated method: FMOD.Studio.System.getVCA
::FMOD::RESULT FMOD::Studio::System::getVCA(::StringW path, ByRef<::FMOD::Studio::VCA> vca) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getVCA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVCA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::VCA&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, byref(vca));
}
// Autogenerated method: FMOD.Studio.System.getBank
::FMOD::RESULT FMOD::Studio::System::getBank(::StringW path, ByRef<::FMOD::Studio::Bank> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bank&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.getEventByID
::FMOD::RESULT FMOD::Studio::System::getEventByID(::System::Guid guid, ByRef<::FMOD::Studio::EventDescription> _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getEventByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getEventByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::EventDescription&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, guid, byref(_event));
}
// Autogenerated method: FMOD.Studio.System.getBusByID
::FMOD::RESULT FMOD::Studio::System::getBusByID(::System::Guid guid, ByRef<::FMOD::Studio::Bus> bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBusByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBusByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bus&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, guid, byref(bus));
}
// Autogenerated method: FMOD.Studio.System.getVCAByID
::FMOD::RESULT FMOD::Studio::System::getVCAByID(::System::Guid guid, ByRef<::FMOD::Studio::VCA> vca) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getVCAByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVCAByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::VCA&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, guid, byref(vca));
}
// Autogenerated method: FMOD.Studio.System.getBankByID
::FMOD::RESULT FMOD::Studio::System::getBankByID(::System::Guid guid, ByRef<::FMOD::Studio::Bank> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBankByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBankByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bank&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, guid, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.getSoundInfo
::FMOD::RESULT FMOD::Studio::System::getSoundInfo(::StringW key, ByRef<::FMOD::Studio::SOUND_INFO> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getSoundInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getSoundInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::SOUND_INFO&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, key, byref(info));
}
// Autogenerated method: FMOD.Studio.System.lookupID
::FMOD::RESULT FMOD::Studio::System::lookupID(::StringW path, ByRef<::System::Guid> guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::lookupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "lookupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, byref(guid));
}
// Autogenerated method: FMOD.Studio.System.lookupPath
::FMOD::RESULT FMOD::Studio::System::lookupPath(::System::Guid guid, ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::lookupPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "lookupPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, guid, byref(path));
}
// Autogenerated method: FMOD.Studio.System.getNumListeners
::FMOD::RESULT FMOD::Studio::System::getNumListeners(ByRef<int> numlisteners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getNumListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getNumListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(numlisteners));
}
// Autogenerated method: FMOD.Studio.System.setNumListeners
::FMOD::RESULT FMOD::Studio::System::setNumListeners(int numlisteners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setNumListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setNumListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numlisteners)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, numlisteners);
}
// Autogenerated method: FMOD.Studio.System.getListenerAttributes
::FMOD::RESULT FMOD::Studio::System::getListenerAttributes(int listener, ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getListenerAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getListenerAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractIndependentType<::FMOD::ATTRIBUTES_3D&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, listener, byref(attributes));
}
// Autogenerated method: FMOD.Studio.System.setListenerAttributes
::FMOD::RESULT FMOD::Studio::System::setListenerAttributes(int listener, ::FMOD::ATTRIBUTES_3D attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setListenerAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setListenerAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, listener, attributes);
}
// Autogenerated method: FMOD.Studio.System.getListenerWeight
::FMOD::RESULT FMOD::Studio::System::getListenerWeight(int listener, ByRef<float> weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getListenerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getListenerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, listener, byref(weight));
}
// Autogenerated method: FMOD.Studio.System.setListenerWeight
::FMOD::RESULT FMOD::Studio::System::setListenerWeight(int listener, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setListenerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setListenerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, listener, weight);
}
// Autogenerated method: FMOD.Studio.System.loadBankFile
::FMOD::RESULT FMOD::Studio::System::loadBankFile(::StringW name, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::FMOD::Studio::Bank> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::loadBankFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadBankFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bank&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.loadBankMemory
::FMOD::RESULT FMOD::Studio::System::loadBankMemory(::ArrayW<uint8_t> buffer, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::FMOD::Studio::Bank> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::loadBankMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadBankMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bank&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, buffer, flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.loadBankCustom
::FMOD::RESULT FMOD::Studio::System::loadBankCustom(::FMOD::Studio::BANK_INFO info, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::FMOD::Studio::Bank> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::loadBankCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadBankCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::Bank&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, info, flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.unloadAll
::FMOD::RESULT FMOD::Studio::System::unloadAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::unloadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "unloadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.flushCommands
::FMOD::RESULT FMOD::Studio::System::flushCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::flushCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flushCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.flushSampleLoading
::FMOD::RESULT FMOD::Studio::System::flushSampleLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::flushSampleLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flushSampleLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.startCommandCapture
::FMOD::RESULT FMOD::Studio::System::startCommandCapture(::StringW path, ::FMOD::Studio::COMMANDCAPTURE_FLAGS flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::startCommandCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "startCommandCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, flags);
}
// Autogenerated method: FMOD.Studio.System.stopCommandCapture
::FMOD::RESULT FMOD::Studio::System::stopCommandCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::stopCommandCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "stopCommandCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.loadCommandReplay
::FMOD::RESULT FMOD::Studio::System::loadCommandReplay(::StringW path, ::FMOD::Studio::COMMANDREPLAY_FLAGS flags, ByRef<::FMOD::Studio::CommandReplay> replay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::loadCommandReplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadCommandReplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::CommandReplay&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, path, flags, byref(replay));
}
// Autogenerated method: FMOD.Studio.System.getBankCount
::FMOD::RESULT FMOD::Studio::System::getBankCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBankCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBankCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.System.getBankList
::FMOD::RESULT FMOD::Studio::System::getBankList(ByRef<::ArrayW<::FMOD::Studio::Bank>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBankList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBankList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::FMOD::Studio::Bank>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: FMOD.Studio.System.getCPUUsage
::FMOD::RESULT FMOD::Studio::System::getCPUUsage(ByRef<::FMOD::Studio::CPU_USAGE> usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getCPUUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCPUUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::CPU_USAGE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(usage));
}
// Autogenerated method: FMOD.Studio.System.getBufferUsage
::FMOD::RESULT FMOD::Studio::System::getBufferUsage(ByRef<::FMOD::Studio::BUFFER_USAGE> usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getBufferUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBufferUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::BUFFER_USAGE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(usage));
}
// Autogenerated method: FMOD.Studio.System.resetBufferUsage
::FMOD::RESULT FMOD::Studio::System::resetBufferUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::resetBufferUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "resetBufferUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.setCallback
::FMOD::RESULT FMOD::Studio::System::setCallback(::FMOD::Studio::SYSTEM_CALLBACK* callback, ::FMOD::Studio::SYSTEM_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.System.getUserData
::FMOD::RESULT FMOD::Studio::System::getUserData(ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::getUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(userdata));
}
// Autogenerated method: FMOD.Studio.System.setUserData
::FMOD::RESULT FMOD::Studio::System::setUserData(::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::setUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, userdata);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_Create
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_Create(ByRef<::System::IntPtr> studiosystem, uint headerversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(headerversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(studiosystem), headerversion);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_IsValid
bool FMOD::Studio::System::FMOD_Studio_System_IsValid(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetAdvancedSettings
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetAdvancedSettings(::System::IntPtr studiosystem, ByRef<::FMOD::Studio::ADVANCEDSETTINGS> settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetAdvancedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetAdvancedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(settings));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetAdvancedSettings
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetAdvancedSettings(::System::IntPtr studiosystem, ByRef<::FMOD::Studio::ADVANCEDSETTINGS> settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetAdvancedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetAdvancedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::ADVANCEDSETTINGS&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(settings));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_Initialize
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_Initialize(::System::IntPtr studiosystem, int maxchannels, ::FMOD::Studio::INITFLAGS studioFlags, ::FMOD::INITFLAGS flags, ::System::IntPtr extradriverdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(maxchannels), ::il2cpp_utils::ExtractType(studioFlags), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(extradriverdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, maxchannels, studioFlags, flags, extradriverdata);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_Release
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_Release(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_Update
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_Update(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetLowLevelSystem
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetLowLevelSystem(::System::IntPtr studiosystem, ByRef<::System::IntPtr> system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetLowLevelSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetLowLevelSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(system));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetEvent
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetEvent(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ByRef<::System::IntPtr> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, byref(description));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBus
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBus(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ByRef<::System::IntPtr> bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, byref(bus));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetVCA
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetVCA(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ByRef<::System::IntPtr> vca) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetVCA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetVCA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, byref(vca));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBank
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBank(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ByRef<::System::IntPtr> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetEventByID
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetEventByID(::System::IntPtr studiosystem, ByRef<::System::Guid> guid, ByRef<::System::IntPtr> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetEventByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetEventByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(guid), byref(description));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBusByID
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBusByID(::System::IntPtr studiosystem, ByRef<::System::Guid> guid, ByRef<::System::IntPtr> bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBusByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBusByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(guid), byref(bus));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetVCAByID
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetVCAByID(::System::IntPtr studiosystem, ByRef<::System::Guid> guid, ByRef<::System::IntPtr> vca) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetVCAByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetVCAByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(guid), byref(vca));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBankByID
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBankByID(::System::IntPtr studiosystem, ByRef<::System::Guid> guid, ByRef<::System::IntPtr> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBankByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBankByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(guid), byref(bank));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetSoundInfo
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetSoundInfo(::System::IntPtr studiosystem, ::ArrayW<uint8_t> key, ByRef<::FMOD::Studio::SOUND_INFO> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetSoundInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetSoundInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::SOUND_INFO&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, key, byref(info));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LookupID
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LookupID(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ByRef<::System::Guid> guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LookupID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LookupID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, byref(guid));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LookupPath
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LookupPath(::System::IntPtr studiosystem, ByRef<::System::Guid> guid, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LookupPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LookupPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(guid), path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetNumListeners
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetNumListeners(::System::IntPtr studiosystem, ByRef<int> numlisteners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetNumListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetNumListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(numlisteners));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetNumListeners
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetNumListeners(::System::IntPtr studiosystem, int numlisteners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetNumListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetNumListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(numlisteners)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, numlisteners);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetListenerAttributes
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetListenerAttributes(::System::IntPtr studiosystem, int listener, ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetListenerAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetListenerAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractIndependentType<::FMOD::ATTRIBUTES_3D&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, listener, byref(attributes));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetListenerAttributes
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetListenerAttributes(::System::IntPtr studiosystem, int listener, ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetListenerAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetListenerAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, listener, byref(attributes));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetListenerWeight
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetListenerWeight(::System::IntPtr studiosystem, int listener, ByRef<float> weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetListenerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetListenerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, listener, byref(weight));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetListenerWeight
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetListenerWeight(::System::IntPtr studiosystem, int listener, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetListenerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetListenerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, listener, weight);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LoadBankFile
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LoadBankFile(::System::IntPtr studiosystem, ::ArrayW<uint8_t> filename, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::System::IntPtr> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LoadBankFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LoadBankFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, filename, flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LoadBankMemory
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LoadBankMemory(::System::IntPtr studiosystem, ::System::IntPtr buffer, int length, ::FMOD::Studio::LOAD_MEMORY_MODE mode, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::System::IntPtr> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LoadBankMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LoadBankMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, buffer, length, mode, flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LoadBankCustom
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LoadBankCustom(::System::IntPtr studiosystem, ByRef<::FMOD::Studio::BANK_INFO> info, ::FMOD::Studio::LOAD_BANK_FLAGS flags, ByRef<::System::IntPtr> bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LoadBankCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LoadBankCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(info), flags, byref(bank));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_UnloadAll
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_UnloadAll(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_UnloadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_UnloadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_FlushCommands
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_FlushCommands(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_FlushCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_FlushCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_FlushSampleLoading
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_FlushSampleLoading(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_FlushSampleLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_FlushSampleLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_StartCommandCapture
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_StartCommandCapture(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ::FMOD::Studio::COMMANDCAPTURE_FLAGS flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_StartCommandCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_StartCommandCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, flags);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_StopCommandCapture
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_StopCommandCapture(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_StopCommandCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_StopCommandCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_LoadCommandReplay
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_LoadCommandReplay(::System::IntPtr studiosystem, ::ArrayW<uint8_t> path, ::FMOD::Studio::COMMANDREPLAY_FLAGS flags, ByRef<::System::IntPtr> commandReplay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_LoadCommandReplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_LoadCommandReplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, path, flags, byref(commandReplay));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBankCount
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBankCount(::System::IntPtr studiosystem, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBankCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBankCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(count));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBankList
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBankList(::System::IntPtr studiosystem, ::ArrayW<::System::IntPtr> array, int capacity, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBankList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBankList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, array, capacity, byref(count));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetCPUUsage
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetCPUUsage(::System::IntPtr studiosystem, ByRef<::FMOD::Studio::CPU_USAGE> usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetCPUUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetCPUUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::CPU_USAGE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(usage));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetBufferUsage
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetBufferUsage(::System::IntPtr studiosystem, ByRef<::FMOD::Studio::BUFFER_USAGE> usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetBufferUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetBufferUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::BUFFER_USAGE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(usage));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_ResetBufferUsage
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_ResetBufferUsage(::System::IntPtr studiosystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_ResetBufferUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_ResetBufferUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetCallback
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetCallback(::System::IntPtr studiosystem, ::FMOD::Studio::SYSTEM_CALLBACK* callback, ::FMOD::Studio::SYSTEM_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_GetUserData
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_GetUserData(::System::IntPtr studiosystem, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, byref(userdata));
}
// Autogenerated method: FMOD.Studio.System.FMOD_Studio_System_SetUserData
::FMOD::RESULT FMOD::Studio::System::FMOD_Studio_System_SetUserData(::System::IntPtr studiosystem, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::FMOD_Studio_System_SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "System", "FMOD_Studio_System_SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(studiosystem), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, studiosystem, userdata);
}
// Autogenerated method: FMOD.Studio.System.hasHandle
bool FMOD::Studio::System::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.clearHandle
void FMOD::Studio::System::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.System.isValid
bool FMOD::Studio::System::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::System::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.EventDescription
#include "FMOD/Studio/EventDescription.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: FMOD.Studio.PARAMETER_DESCRIPTION
#include "FMOD/Studio/PARAMETER_DESCRIPTION.hpp"
// Including type: FMOD.Studio.USER_PROPERTY
#include "FMOD/Studio/USER_PROPERTY.hpp"
// Including type: FMOD.Studio.LOADING_STATE
#include "FMOD/Studio/LOADING_STATE.hpp"
// Including type: FMOD.Studio.EVENT_CALLBACK
#include "FMOD/Studio/EVENT_CALLBACK.hpp"
// Including type: FMOD.Studio.EVENT_CALLBACK_TYPE
#include "FMOD/Studio/EVENT_CALLBACK_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::EventDescription::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.EventDescription.getID
::FMOD::RESULT FMOD::Studio::EventDescription::getID(ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(id));
}
// Autogenerated method: FMOD.Studio.EventDescription.getPath
::FMOD::RESULT FMOD::Studio::EventDescription::getPath(ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(path));
}
// Autogenerated method: FMOD.Studio.EventDescription.getParameterCount
::FMOD::RESULT FMOD::Studio::EventDescription::getParameterCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getParameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.getParameterByIndex
::FMOD::RESULT FMOD::Studio::EventDescription::getParameterByIndex(int index, ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getParameterByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventDescription.getParameter
::FMOD::RESULT FMOD::Studio::EventDescription::getParameter(::StringW name, ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventDescription.getUserPropertyCount
::FMOD::RESULT FMOD::Studio::EventDescription::getUserPropertyCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getUserPropertyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserPropertyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.getUserPropertyByIndex
::FMOD::RESULT FMOD::Studio::EventDescription::getUserPropertyByIndex(int index, ByRef<::FMOD::Studio::USER_PROPERTY> property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getUserPropertyByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserPropertyByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::USER_PROPERTY&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(property));
}
// Autogenerated method: FMOD.Studio.EventDescription.getUserProperty
::FMOD::RESULT FMOD::Studio::EventDescription::getUserProperty(::StringW name, ByRef<::FMOD::Studio::USER_PROPERTY> property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getUserProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::USER_PROPERTY&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, byref(property));
}
// Autogenerated method: FMOD.Studio.EventDescription.getLength
::FMOD::RESULT FMOD::Studio::EventDescription::getLength(ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(length));
}
// Autogenerated method: FMOD.Studio.EventDescription.getMinimumDistance
::FMOD::RESULT FMOD::Studio::EventDescription::getMinimumDistance(ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getMinimumDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getMinimumDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(distance));
}
// Autogenerated method: FMOD.Studio.EventDescription.getMaximumDistance
::FMOD::RESULT FMOD::Studio::EventDescription::getMaximumDistance(ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getMaximumDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getMaximumDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(distance));
}
// Autogenerated method: FMOD.Studio.EventDescription.getSoundSize
::FMOD::RESULT FMOD::Studio::EventDescription::getSoundSize(ByRef<float> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getSoundSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getSoundSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(size));
}
// Autogenerated method: FMOD.Studio.EventDescription.isSnapshot
::FMOD::RESULT FMOD::Studio::EventDescription::isSnapshot(ByRef<bool> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::isSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(snapshot));
}
// Autogenerated method: FMOD.Studio.EventDescription.isOneshot
::FMOD::RESULT FMOD::Studio::EventDescription::isOneshot(ByRef<bool> oneshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::isOneshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isOneshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(oneshot));
}
// Autogenerated method: FMOD.Studio.EventDescription.isStream
::FMOD::RESULT FMOD::Studio::EventDescription::isStream(ByRef<bool> isStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::isStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(isStream));
}
// Autogenerated method: FMOD.Studio.EventDescription.is3D
::FMOD::RESULT FMOD::Studio::EventDescription::is3D(ByRef<bool> is3D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::is3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "is3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(is3D));
}
// Autogenerated method: FMOD.Studio.EventDescription.hasCue
::FMOD::RESULT FMOD::Studio::EventDescription::hasCue(ByRef<bool> cue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::hasCue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasCue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(cue));
}
// Autogenerated method: FMOD.Studio.EventDescription.createInstance
::FMOD::RESULT FMOD::Studio::EventDescription::createInstance(ByRef<::FMOD::Studio::EventInstance> instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::createInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "createInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::EventInstance&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(instance));
}
// Autogenerated method: FMOD.Studio.EventDescription.getInstanceCount
::FMOD::RESULT FMOD::Studio::EventDescription::getInstanceCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getInstanceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getInstanceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.getInstanceList
::FMOD::RESULT FMOD::Studio::EventDescription::getInstanceList(ByRef<::ArrayW<::FMOD::Studio::EventInstance>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getInstanceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getInstanceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::FMOD::Studio::EventInstance>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: FMOD.Studio.EventDescription.loadSampleData
::FMOD::RESULT FMOD::Studio::EventDescription::loadSampleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::loadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventDescription.unloadSampleData
::FMOD::RESULT FMOD::Studio::EventDescription::unloadSampleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::unloadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "unloadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventDescription.getSampleLoadingState
::FMOD::RESULT FMOD::Studio::EventDescription::getSampleLoadingState(ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getSampleLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getSampleLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: FMOD.Studio.EventDescription.releaseAllInstances
::FMOD::RESULT FMOD::Studio::EventDescription::releaseAllInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::releaseAllInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "releaseAllInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventDescription.setCallback
::FMOD::RESULT FMOD::Studio::EventDescription::setCallback(::FMOD::Studio::EVENT_CALLBACK* callback, ::FMOD::Studio::EVENT_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::setCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.EventDescription.getUserData
::FMOD::RESULT FMOD::Studio::EventDescription::getUserData(ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::getUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(userdata));
}
// Autogenerated method: FMOD.Studio.EventDescription.setUserData
::FMOD::RESULT FMOD::Studio::EventDescription::setUserData(::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::setUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, userdata);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_IsValid
bool FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsValid(::System::IntPtr eventdescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetID
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetID(::System::IntPtr eventdescription, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(id));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetPath
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetPath(::System::IntPtr eventdescription, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetParameterCount
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameterCount(::System::IntPtr eventdescription, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetParameterByIndex
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameterByIndex(::System::IntPtr eventdescription, int index, ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameterByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetParameterByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, index, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetParameter
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameter(::System::IntPtr eventdescription, ::ArrayW<uint8_t> name, ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, name, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetUserPropertyCount
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserPropertyCount(::System::IntPtr eventdescription, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserPropertyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetUserPropertyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetUserPropertyByIndex
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserPropertyByIndex(::System::IntPtr eventdescription, int index, ByRef<::FMOD::Studio::USER_PROPERTY> property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserPropertyByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetUserPropertyByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::USER_PROPERTY&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, index, byref(property));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetUserProperty
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserProperty(::System::IntPtr eventdescription, ::ArrayW<uint8_t> name, ByRef<::FMOD::Studio::USER_PROPERTY> property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetUserProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::USER_PROPERTY&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, name, byref(property));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetLength
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetLength(::System::IntPtr eventdescription, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(length));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetMinimumDistance
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetMinimumDistance(::System::IntPtr eventdescription, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetMinimumDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetMinimumDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(distance));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetMaximumDistance
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetMaximumDistance(::System::IntPtr eventdescription, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetMaximumDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetMaximumDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(distance));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetSoundSize
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetSoundSize(::System::IntPtr eventdescription, ByRef<float> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetSoundSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetSoundSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(size));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_IsSnapshot
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsSnapshot(::System::IntPtr eventdescription, ByRef<bool> snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_IsSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(snapshot));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_IsOneshot
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsOneshot(::System::IntPtr eventdescription, ByRef<bool> oneshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsOneshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_IsOneshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(oneshot));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_IsStream
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsStream(::System::IntPtr eventdescription, ByRef<bool> isStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_IsStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_IsStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(isStream));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_Is3D
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_Is3D(::System::IntPtr eventdescription, ByRef<bool> is3D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_Is3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_Is3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(is3D));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_HasCue
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_HasCue(::System::IntPtr eventdescription, ByRef<bool> cue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_HasCue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_HasCue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(cue));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_CreateInstance
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_CreateInstance(::System::IntPtr eventdescription, ByRef<::System::IntPtr> instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(instance));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetInstanceCount
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetInstanceCount(::System::IntPtr eventdescription, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetInstanceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetInstanceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetInstanceList
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetInstanceList(::System::IntPtr eventdescription, ::ArrayW<::System::IntPtr> array, int capacity, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetInstanceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetInstanceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, array, capacity, byref(count));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_LoadSampleData
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_LoadSampleData(::System::IntPtr eventdescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_LoadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_LoadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_UnloadSampleData
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_UnloadSampleData(::System::IntPtr eventdescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_UnloadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_UnloadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetSampleLoadingState
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetSampleLoadingState(::System::IntPtr eventdescription, ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetSampleLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetSampleLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(state));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_ReleaseAllInstances
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_ReleaseAllInstances(::System::IntPtr eventdescription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_ReleaseAllInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_ReleaseAllInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_SetCallback
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_SetCallback(::System::IntPtr eventdescription, ::FMOD::Studio::EVENT_CALLBACK* callback, ::FMOD::Studio::EVENT_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_SetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_SetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_GetUserData
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserData(::System::IntPtr eventdescription, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, byref(userdata));
}
// Autogenerated method: FMOD.Studio.EventDescription.FMOD_Studio_EventDescription_SetUserData
::FMOD::RESULT FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_SetUserData(::System::IntPtr eventdescription, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::FMOD_Studio_EventDescription_SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventDescription", "FMOD_Studio_EventDescription_SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventdescription), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventdescription, userdata);
}
// Autogenerated method: FMOD.Studio.EventDescription.hasHandle
bool FMOD::Studio::EventDescription::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventDescription.clearHandle
void FMOD::Studio::EventDescription::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventDescription.isValid
bool FMOD::Studio::EventDescription::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventDescription::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.EventInstance
#include "FMOD/Studio/EventInstance.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.EventDescription
#include "FMOD/Studio/EventDescription.hpp"
// Including type: FMOD.ATTRIBUTES_3D
#include "FMOD/ATTRIBUTES_3D.hpp"
// Including type: FMOD.Studio.EVENT_PROPERTY
#include "FMOD/Studio/EVENT_PROPERTY.hpp"
// Including type: FMOD.Studio.STOP_MODE
#include "FMOD/Studio/STOP_MODE.hpp"
// Including type: FMOD.Studio.PLAYBACK_STATE
#include "FMOD/Studio/PLAYBACK_STATE.hpp"
// Including type: FMOD.ChannelGroup
#include "FMOD/ChannelGroup.hpp"
// Including type: FMOD.Studio.ParameterInstance
#include "FMOD/Studio/ParameterInstance.hpp"
// Including type: FMOD.Studio.EVENT_CALLBACK
#include "FMOD/Studio/EVENT_CALLBACK.hpp"
// Including type: FMOD.Studio.EVENT_CALLBACK_TYPE
#include "FMOD/Studio/EVENT_CALLBACK_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::EventInstance::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.EventInstance.getDescription
::FMOD::RESULT FMOD::Studio::EventInstance::getDescription(ByRef<::FMOD::Studio::EventDescription> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::EventDescription&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(description));
}
// Autogenerated method: FMOD.Studio.EventInstance.getVolume
::FMOD::RESULT FMOD::Studio::EventInstance::getVolume(ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.EventInstance.setVolume
::FMOD::RESULT FMOD::Studio::EventInstance::setVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, volume);
}
// Autogenerated method: FMOD.Studio.EventInstance.getPitch
::FMOD::RESULT FMOD::Studio::EventInstance::getPitch(ByRef<float> pitch, ByRef<float> finalpitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(pitch), byref(finalpitch));
}
// Autogenerated method: FMOD.Studio.EventInstance.setPitch
::FMOD::RESULT FMOD::Studio::EventInstance::setPitch(float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, pitch);
}
// Autogenerated method: FMOD.Studio.EventInstance.get3DAttributes
::FMOD::RESULT FMOD::Studio::EventInstance::get3DAttributes(ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::get3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::ATTRIBUTES_3D&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(attributes));
}
// Autogenerated method: FMOD.Studio.EventInstance.set3DAttributes
::FMOD::RESULT FMOD::Studio::EventInstance::set3DAttributes(::FMOD::ATTRIBUTES_3D attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::set3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, attributes);
}
// Autogenerated method: FMOD.Studio.EventInstance.getListenerMask
::FMOD::RESULT FMOD::Studio::EventInstance::getListenerMask(ByRef<uint> mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getListenerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getListenerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(mask));
}
// Autogenerated method: FMOD.Studio.EventInstance.setListenerMask
::FMOD::RESULT FMOD::Studio::EventInstance::setListenerMask(uint mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setListenerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setListenerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, mask);
}
// Autogenerated method: FMOD.Studio.EventInstance.getProperty
::FMOD::RESULT FMOD::Studio::EventInstance::getProperty(::FMOD::Studio::EVENT_PROPERTY index, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(value));
}
// Autogenerated method: FMOD.Studio.EventInstance.setProperty
::FMOD::RESULT FMOD::Studio::EventInstance::setProperty(::FMOD::Studio::EVENT_PROPERTY index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.getReverbLevel
::FMOD::RESULT FMOD::Studio::EventInstance::getReverbLevel(int index, ByRef<float> level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getReverbLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getReverbLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(level));
}
// Autogenerated method: FMOD.Studio.EventInstance.setReverbLevel
::FMOD::RESULT FMOD::Studio::EventInstance::setReverbLevel(int index, float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setReverbLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setReverbLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, level);
}
// Autogenerated method: FMOD.Studio.EventInstance.getPaused
::FMOD::RESULT FMOD::Studio::EventInstance::getPaused(ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(paused));
}
// Autogenerated method: FMOD.Studio.EventInstance.setPaused
::FMOD::RESULT FMOD::Studio::EventInstance::setPaused(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, paused);
}
// Autogenerated method: FMOD.Studio.EventInstance.start
::FMOD::RESULT FMOD::Studio::EventInstance::start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventInstance.stop
::FMOD::RESULT FMOD::Studio::EventInstance::stop(::FMOD::Studio::STOP_MODE mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, mode);
}
// Autogenerated method: FMOD.Studio.EventInstance.getTimelinePosition
::FMOD::RESULT FMOD::Studio::EventInstance::getTimelinePosition(ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getTimelinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getTimelinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: FMOD.Studio.EventInstance.setTimelinePosition
::FMOD::RESULT FMOD::Studio::EventInstance::setTimelinePosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setTimelinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setTimelinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, position);
}
// Autogenerated method: FMOD.Studio.EventInstance.getPlaybackState
::FMOD::RESULT FMOD::Studio::EventInstance::getPlaybackState(ByRef<::FMOD::Studio::PLAYBACK_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PLAYBACK_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: FMOD.Studio.EventInstance.getChannelGroup
::FMOD::RESULT FMOD::Studio::EventInstance::getChannelGroup(ByRef<::FMOD::ChannelGroup> group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::ChannelGroup&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(group));
}
// Autogenerated method: FMOD.Studio.EventInstance.release
::FMOD::RESULT FMOD::Studio::EventInstance::release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventInstance.isVirtual
::FMOD::RESULT FMOD::Studio::EventInstance::isVirtual(ByRef<bool> virtualState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::isVirtual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(virtualState));
}
// Autogenerated method: FMOD.Studio.EventInstance.getParameter
::FMOD::RESULT FMOD::Studio::EventInstance::getParameter(::StringW name, ByRef<::FMOD::Studio::ParameterInstance> instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::ParameterInstance&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, byref(instance));
}
// Autogenerated method: FMOD.Studio.EventInstance.getParameterCount
::FMOD::RESULT FMOD::Studio::EventInstance::getParameterCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getParameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.EventInstance.getParameterByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::getParameterByIndex(int index, ByRef<::FMOD::Studio::ParameterInstance> instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getParameterByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::ParameterInstance&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(instance));
}
// Autogenerated method: FMOD.Studio.EventInstance.getParameterValue
::FMOD::RESULT FMOD::Studio::EventInstance::getParameterValue(::StringW name, ByRef<float> value, ByRef<float> finalvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, byref(value), byref(finalvalue));
}
// Autogenerated method: FMOD.Studio.EventInstance.setParameterValue
::FMOD::RESULT FMOD::Studio::EventInstance::setParameterValue(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, name, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.getParameterValueByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::getParameterValueByIndex(int index, ByRef<float> value, ByRef<float> finalvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getParameterValueByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getParameterValueByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(value), byref(finalvalue));
}
// Autogenerated method: FMOD.Studio.EventInstance.setParameterValueByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::setParameterValueByIndex(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setParameterValueByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setParameterValueByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.setParameterValuesByIndices
::FMOD::RESULT FMOD::Studio::EventInstance::setParameterValuesByIndices(::ArrayW<int> indices, ::ArrayW<float> values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setParameterValuesByIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setParameterValuesByIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, indices, values, count);
}
// Autogenerated method: FMOD.Studio.EventInstance.triggerCue
::FMOD::RESULT FMOD::Studio::EventInstance::triggerCue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::triggerCue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "triggerCue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventInstance.setCallback
::FMOD::RESULT FMOD::Studio::EventInstance::setCallback(::FMOD::Studio::EVENT_CALLBACK* callback, ::FMOD::Studio::EVENT_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.EventInstance.getUserData
::FMOD::RESULT FMOD::Studio::EventInstance::getUserData(ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::getUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(userdata));
}
// Autogenerated method: FMOD.Studio.EventInstance.setUserData
::FMOD::RESULT FMOD::Studio::EventInstance::setUserData(::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::setUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, userdata);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_IsValid
bool FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_IsValid(::System::IntPtr _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetDescription
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetDescription(::System::IntPtr _event, ByRef<::System::IntPtr> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(description));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetVolume
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetVolume(::System::IntPtr _event, ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetVolume
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetVolume(::System::IntPtr _event, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(volume)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, volume);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetPitch
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPitch(::System::IntPtr _event, ByRef<float> pitch, ByRef<float> finalpitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(pitch), byref(finalpitch));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetPitch
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetPitch(::System::IntPtr _event, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(pitch)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, pitch);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_Get3DAttributes
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Get3DAttributes(::System::IntPtr _event, ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Get3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_Get3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<::FMOD::ATTRIBUTES_3D&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(attributes));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_Set3DAttributes
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Set3DAttributes(::System::IntPtr _event, ByRef<::FMOD::ATTRIBUTES_3D> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Set3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_Set3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(attributes));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetListenerMask
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetListenerMask(::System::IntPtr _event, ByRef<uint> mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetListenerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetListenerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(mask));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetListenerMask
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetListenerMask(::System::IntPtr _event, uint mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetListenerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetListenerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, mask);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetProperty
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetProperty(::System::IntPtr _event, ::FMOD::Studio::EVENT_PROPERTY index, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, byref(value));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetProperty
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetProperty(::System::IntPtr _event, ::FMOD::Studio::EVENT_PROPERTY index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetReverbLevel
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetReverbLevel(::System::IntPtr _event, int index, ByRef<float> level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetReverbLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetReverbLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, byref(level));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetReverbLevel
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetReverbLevel(::System::IntPtr _event, int index, float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetReverbLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetReverbLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, level);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetPaused
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPaused(::System::IntPtr _event, ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(paused));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetPaused
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetPaused(::System::IntPtr _event, bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, paused);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_Start
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Start(::System::IntPtr _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_Stop
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Stop(::System::IntPtr _event, ::FMOD::Studio::STOP_MODE mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, mode);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetTimelinePosition
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetTimelinePosition(::System::IntPtr _event, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetTimelinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetTimelinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(position));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetTimelinePosition
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetTimelinePosition(::System::IntPtr _event, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetTimelinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetTimelinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, position);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetPlaybackState
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPlaybackState(::System::IntPtr _event, ByRef<::FMOD::Studio::PLAYBACK_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PLAYBACK_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(state));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetChannelGroup
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetChannelGroup(::System::IntPtr _event, ByRef<::System::IntPtr> group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(group));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_Release
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Release(::System::IntPtr _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_IsVirtual
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_IsVirtual(::System::IntPtr _event, ByRef<bool> virtualState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_IsVirtual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_IsVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(virtualState));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetParameter
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameter(::System::IntPtr _event, ::ArrayW<uint8_t> name, ByRef<::System::IntPtr> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, name, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetParameterByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterByIndex(::System::IntPtr _event, int index, ByRef<::System::IntPtr> parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetParameterByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, byref(parameter));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetParameterCount
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterCount(::System::IntPtr _event, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(count));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetParameterValue
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterValue(::System::IntPtr _event, ::ArrayW<uint8_t> name, ByRef<float> value, ByRef<float> finalvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, name, byref(value), byref(finalvalue));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetParameterValue
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValue(::System::IntPtr _event, ::ArrayW<uint8_t> name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, name, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetParameterValueByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterValueByIndex(::System::IntPtr _event, int index, ByRef<float> value, ByRef<float> finalvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetParameterValueByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetParameterValueByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, byref(value), byref(finalvalue));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetParameterValueByIndex
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValueByIndex(::System::IntPtr _event, int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValueByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetParameterValueByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, index, value);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetParameterValuesByIndices
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValuesByIndices(::System::IntPtr _event, ::ArrayW<int> indices, ::ArrayW<float> values, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetParameterValuesByIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetParameterValuesByIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, indices, values, count);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_TriggerCue
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_TriggerCue(::System::IntPtr _event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_TriggerCue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_TriggerCue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetCallback
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetCallback(::System::IntPtr _event, ::FMOD::Studio::EVENT_CALLBACK* callback, ::FMOD::Studio::EVENT_CALLBACK_TYPE callbackmask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackmask)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, callback, callbackmask);
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_GetUserData
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetUserData(::System::IntPtr _event, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, byref(userdata));
}
// Autogenerated method: FMOD.Studio.EventInstance.FMOD_Studio_EventInstance_SetUserData
::FMOD::RESULT FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetUserData(::System::IntPtr _event, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::FMOD_Studio_EventInstance_SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "EventInstance", "FMOD_Studio_EventInstance_SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_event), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _event, userdata);
}
// Autogenerated method: FMOD.Studio.EventInstance.hasHandle
bool FMOD::Studio::EventInstance::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventInstance.clearHandle
void FMOD::Studio::EventInstance::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.EventInstance.isValid
bool FMOD::Studio::EventInstance::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::EventInstance::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.ParameterInstance
#include "FMOD/Studio/ParameterInstance.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.PARAMETER_DESCRIPTION
#include "FMOD/Studio/PARAMETER_DESCRIPTION.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::ParameterInstance::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.getDescription
::FMOD::RESULT FMOD::Studio::ParameterInstance::getDescription(ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::getDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(description));
}
// Autogenerated method: FMOD.Studio.ParameterInstance.getValue
::FMOD::RESULT FMOD::Studio::ParameterInstance::getValue(ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::getValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: FMOD.Studio.ParameterInstance.setValue
::FMOD::RESULT FMOD::Studio::ParameterInstance::setValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::setValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, value);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.FMOD_Studio_ParameterInstance_IsValid
bool FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_IsValid(::System::IntPtr parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "ParameterInstance", "FMOD_Studio_ParameterInstance_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.FMOD_Studio_ParameterInstance_GetDescription
::FMOD::RESULT FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_GetDescription(::System::IntPtr parameter, ByRef<::FMOD::Studio::PARAMETER_DESCRIPTION> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "ParameterInstance", "FMOD_Studio_ParameterInstance_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PARAMETER_DESCRIPTION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter, byref(description));
}
// Autogenerated method: FMOD.Studio.ParameterInstance.FMOD_Studio_ParameterInstance_GetValue
::FMOD::RESULT FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_GetValue(::System::IntPtr parameter, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "ParameterInstance", "FMOD_Studio_ParameterInstance_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter, byref(value));
}
// Autogenerated method: FMOD.Studio.ParameterInstance.FMOD_Studio_ParameterInstance_SetValue
::FMOD::RESULT FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_SetValue(::System::IntPtr parameter, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::FMOD_Studio_ParameterInstance_SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "ParameterInstance", "FMOD_Studio_ParameterInstance_SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter, value);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.hasHandle
bool FMOD::Studio::ParameterInstance::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.clearHandle
void FMOD::Studio::ParameterInstance::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.ParameterInstance.isValid
bool FMOD::Studio::ParameterInstance::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::ParameterInstance::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.Bus
#include "FMOD/Studio/Bus.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: FMOD.Studio.STOP_MODE
#include "FMOD/Studio/STOP_MODE.hpp"
// Including type: FMOD.ChannelGroup
#include "FMOD/ChannelGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::Bus::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.Bus.getID
::FMOD::RESULT FMOD::Studio::Bus::getID(ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(id));
}
// Autogenerated method: FMOD.Studio.Bus.getPath
::FMOD::RESULT FMOD::Studio::Bus::getPath(ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(path));
}
// Autogenerated method: FMOD.Studio.Bus.getVolume
::FMOD::RESULT FMOD::Studio::Bus::getVolume(ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.Bus.setVolume
::FMOD::RESULT FMOD::Studio::Bus::setVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::setVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, volume);
}
// Autogenerated method: FMOD.Studio.Bus.getPaused
::FMOD::RESULT FMOD::Studio::Bus::getPaused(ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(paused));
}
// Autogenerated method: FMOD.Studio.Bus.setPaused
::FMOD::RESULT FMOD::Studio::Bus::setPaused(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::setPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, paused);
}
// Autogenerated method: FMOD.Studio.Bus.getMute
::FMOD::RESULT FMOD::Studio::Bus::getMute(ByRef<bool> mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(mute));
}
// Autogenerated method: FMOD.Studio.Bus.setMute
::FMOD::RESULT FMOD::Studio::Bus::setMute(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::setMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, mute);
}
// Autogenerated method: FMOD.Studio.Bus.stopAllEvents
::FMOD::RESULT FMOD::Studio::Bus::stopAllEvents(::FMOD::Studio::STOP_MODE mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::stopAllEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "stopAllEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, mode);
}
// Autogenerated method: FMOD.Studio.Bus.lockChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::lockChannelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::lockChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "lockChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bus.unlockChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::unlockChannelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::unlockChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "unlockChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bus.getChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::getChannelGroup(ByRef<::FMOD::ChannelGroup> group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::getChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::ChannelGroup&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(group));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_IsValid
bool FMOD::Studio::Bus::FMOD_Studio_Bus_IsValid(::System::IntPtr bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetID
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetID(::System::IntPtr bus, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, byref(id));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetPath
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetPath(::System::IntPtr bus, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetVolume
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetVolume(::System::IntPtr bus, ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_SetVolume
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_SetVolume(::System::IntPtr bus, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, value);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetPaused
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetPaused(::System::IntPtr bus, ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, byref(paused));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_SetPaused
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_SetPaused(::System::IntPtr bus, bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_SetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_SetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, paused);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetMute
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetMute(::System::IntPtr bus, ByRef<bool> mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, byref(mute));
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_SetMute
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_SetMute(::System::IntPtr bus, bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_SetMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_SetMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractType(mute)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, mute);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_StopAllEvents
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_StopAllEvents(::System::IntPtr bus, ::FMOD::Studio::STOP_MODE mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_StopAllEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_StopAllEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, mode);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_LockChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_LockChannelGroup(::System::IntPtr bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_LockChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_LockChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_UnlockChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_UnlockChannelGroup(::System::IntPtr bus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_UnlockChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_UnlockChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus);
}
// Autogenerated method: FMOD.Studio.Bus.FMOD_Studio_Bus_GetChannelGroup
::FMOD::RESULT FMOD::Studio::Bus::FMOD_Studio_Bus_GetChannelGroup(::System::IntPtr bus, ByRef<::System::IntPtr> group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::FMOD_Studio_Bus_GetChannelGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bus", "FMOD_Studio_Bus_GetChannelGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bus), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bus, byref(group));
}
// Autogenerated method: FMOD.Studio.Bus.hasHandle
bool FMOD::Studio::Bus::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bus.clearHandle
void FMOD::Studio::Bus::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bus.isValid
bool FMOD::Studio::Bus::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bus::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.VCA
#include "FMOD/Studio/VCA.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::VCA::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.VCA.getID
::FMOD::RESULT FMOD::Studio::VCA::getID(ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::getID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(id));
}
// Autogenerated method: FMOD.Studio.VCA.getPath
::FMOD::RESULT FMOD::Studio::VCA::getPath(ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::getPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(path));
}
// Autogenerated method: FMOD.Studio.VCA.getVolume
::FMOD::RESULT FMOD::Studio::VCA::getVolume(ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::getVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.VCA.setVolume
::FMOD::RESULT FMOD::Studio::VCA::setVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::setVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, volume);
}
// Autogenerated method: FMOD.Studio.VCA.FMOD_Studio_VCA_IsValid
bool FMOD::Studio::VCA::FMOD_Studio_VCA_IsValid(::System::IntPtr vca) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::FMOD_Studio_VCA_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "VCA", "FMOD_Studio_VCA_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vca)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vca);
}
// Autogenerated method: FMOD.Studio.VCA.FMOD_Studio_VCA_GetID
::FMOD::RESULT FMOD::Studio::VCA::FMOD_Studio_VCA_GetID(::System::IntPtr vca, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::FMOD_Studio_VCA_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "VCA", "FMOD_Studio_VCA_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vca), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vca, byref(id));
}
// Autogenerated method: FMOD.Studio.VCA.FMOD_Studio_VCA_GetPath
::FMOD::RESULT FMOD::Studio::VCA::FMOD_Studio_VCA_GetPath(::System::IntPtr vca, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::FMOD_Studio_VCA_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "VCA", "FMOD_Studio_VCA_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vca), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vca, path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.VCA.FMOD_Studio_VCA_GetVolume
::FMOD::RESULT FMOD::Studio::VCA::FMOD_Studio_VCA_GetVolume(::System::IntPtr vca, ByRef<float> volume, ByRef<float> finalvolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::FMOD_Studio_VCA_GetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "VCA", "FMOD_Studio_VCA_GetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vca), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vca, byref(volume), byref(finalvolume));
}
// Autogenerated method: FMOD.Studio.VCA.FMOD_Studio_VCA_SetVolume
::FMOD::RESULT FMOD::Studio::VCA::FMOD_Studio_VCA_SetVolume(::System::IntPtr vca, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::FMOD_Studio_VCA_SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "VCA", "FMOD_Studio_VCA_SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vca), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vca, value);
}
// Autogenerated method: FMOD.Studio.VCA.hasHandle
bool FMOD::Studio::VCA::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.VCA.clearHandle
void FMOD::Studio::VCA::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.VCA.isValid
bool FMOD::Studio::VCA::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::VCA::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.Bank
#include "FMOD/Studio/Bank.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: FMOD.Studio.LOADING_STATE
#include "FMOD/Studio/LOADING_STATE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::Bank::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.Bank.getID
::FMOD::RESULT FMOD::Studio::Bank::getID(ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(id));
}
// Autogenerated method: FMOD.Studio.Bank.getPath
::FMOD::RESULT FMOD::Studio::Bank::getPath(ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(path));
}
// Autogenerated method: FMOD.Studio.Bank.unload
::FMOD::RESULT FMOD::Studio::Bank::unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bank.loadSampleData
::FMOD::RESULT FMOD::Studio::Bank::loadSampleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::loadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "loadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bank.unloadSampleData
::FMOD::RESULT FMOD::Studio::Bank::unloadSampleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::unloadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "unloadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bank.getLoadingState
::FMOD::RESULT FMOD::Studio::Bank::getLoadingState(ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: FMOD.Studio.Bank.getSampleLoadingState
::FMOD::RESULT FMOD::Studio::Bank::getSampleLoadingState(ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getSampleLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getSampleLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: FMOD.Studio.Bank.getStringCount
::FMOD::RESULT FMOD::Studio::Bank::getStringCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getStringCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getStringCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.getStringInfo
::FMOD::RESULT FMOD::Studio::Bank::getStringInfo(int index, ByRef<::System::Guid> id, ByRef<::StringW> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getStringInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getStringInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, index, byref(id), byref(path));
}
// Autogenerated method: FMOD.Studio.Bank.getEventCount
::FMOD::RESULT FMOD::Studio::Bank::getEventCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getEventCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getEventCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.getEventList
::FMOD::RESULT FMOD::Studio::Bank::getEventList(ByRef<::ArrayW<::FMOD::Studio::EventDescription>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getEventList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getEventList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::FMOD::Studio::EventDescription>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: FMOD.Studio.Bank.getBusCount
::FMOD::RESULT FMOD::Studio::Bank::getBusCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getBusCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBusCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.getBusList
::FMOD::RESULT FMOD::Studio::Bank::getBusList(ByRef<::ArrayW<::FMOD::Studio::Bus>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getBusList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getBusList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::FMOD::Studio::Bus>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: FMOD.Studio.Bank.getVCACount
::FMOD::RESULT FMOD::Studio::Bank::getVCACount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getVCACount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVCACount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.getVCAList
::FMOD::RESULT FMOD::Studio::Bank::getVCAList(ByRef<::ArrayW<::FMOD::Studio::VCA>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getVCAList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getVCAList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::FMOD::Studio::VCA>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: FMOD.Studio.Bank.getUserData
::FMOD::RESULT FMOD::Studio::Bank::getUserData(ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::getUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(userdata));
}
// Autogenerated method: FMOD.Studio.Bank.setUserData
::FMOD::RESULT FMOD::Studio::Bank::setUserData(::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::setUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, userdata);
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_IsValid
bool FMOD::Studio::Bank::FMOD_Studio_Bank_IsValid(::System::IntPtr bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank);
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetID
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetID(::System::IntPtr bank, ByRef<::System::Guid> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(id));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetPath
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetPath(::System::IntPtr bank, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_Unload
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_Unload(::System::IntPtr bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank);
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_LoadSampleData
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_LoadSampleData(::System::IntPtr bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_LoadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_LoadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank);
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_UnloadSampleData
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_UnloadSampleData(::System::IntPtr bank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_UnloadSampleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_UnloadSampleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank);
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetLoadingState
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetLoadingState(::System::IntPtr bank, ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(state));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetSampleLoadingState
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetSampleLoadingState(::System::IntPtr bank, ByRef<::FMOD::Studio::LOADING_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetSampleLoadingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetSampleLoadingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::LOADING_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(state));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetStringCount
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetStringCount(::System::IntPtr bank, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetStringCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetStringCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetStringInfo
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetStringInfo(::System::IntPtr bank, int index, ByRef<::System::Guid> id, ::System::IntPtr path, int size, ByRef<int> retrieved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetStringInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetStringInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>(), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, index, byref(id), path, size, byref(retrieved));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetEventCount
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetEventCount(::System::IntPtr bank, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetEventCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetEventCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetEventList
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetEventList(::System::IntPtr bank, ::ArrayW<::System::IntPtr> array, int capacity, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetEventList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetEventList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, array, capacity, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetBusCount
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetBusCount(::System::IntPtr bank, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetBusCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetBusCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetBusList
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetBusList(::System::IntPtr bank, ::ArrayW<::System::IntPtr> array, int capacity, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetBusList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetBusList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, array, capacity, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetVCACount
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetVCACount(::System::IntPtr bank, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetVCACount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetVCACount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetVCAList
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetVCAList(::System::IntPtr bank, ::ArrayW<::System::IntPtr> array, int capacity, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetVCAList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetVCAList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, array, capacity, byref(count));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_GetUserData
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_GetUserData(::System::IntPtr bank, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, byref(userdata));
}
// Autogenerated method: FMOD.Studio.Bank.FMOD_Studio_Bank_SetUserData
::FMOD::RESULT FMOD::Studio::Bank::FMOD_Studio_Bank_SetUserData(::System::IntPtr bank, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::FMOD_Studio_Bank_SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "Bank", "FMOD_Studio_Bank_SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bank), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bank, userdata);
}
// Autogenerated method: FMOD.Studio.Bank.hasHandle
bool FMOD::Studio::Bank::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bank.clearHandle
void FMOD::Studio::Bank::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.Bank.isValid
bool FMOD::Studio::Bank::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::Bank::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.Studio.CommandReplay
#include "FMOD/Studio/CommandReplay.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.Studio.System
#include "FMOD/Studio/System.hpp"
// Including type: FMOD.Studio.COMMAND_INFO
#include "FMOD/Studio/COMMAND_INFO.hpp"
// Including type: FMOD.Studio.PLAYBACK_STATE
#include "FMOD/Studio/PLAYBACK_STATE.hpp"
// Including type: FMOD.Studio.COMMANDREPLAY_FRAME_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_FRAME_CALLBACK.hpp"
// Including type: FMOD.Studio.COMMANDREPLAY_LOAD_BANK_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_LOAD_BANK_CALLBACK.hpp"
// Including type: FMOD.Studio.COMMANDREPLAY_CREATE_INSTANCE_CALLBACK
#include "FMOD/Studio/COMMANDREPLAY_CREATE_INSTANCE_CALLBACK.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& FMOD::Studio::CommandReplay::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.Studio.CommandReplay.getSystem
::FMOD::RESULT FMOD::Studio::CommandReplay::getSystem(ByRef<::FMOD::Studio::System> system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::System&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(system));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getLength
::FMOD::RESULT FMOD::Studio::CommandReplay::getLength(ByRef<float> totalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(totalTime));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getCommandCount
::FMOD::RESULT FMOD::Studio::CommandReplay::getCommandCount(ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getCommandCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCommandCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(count));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getCommandInfo
::FMOD::RESULT FMOD::Studio::CommandReplay::getCommandInfo(int commandIndex, ByRef<::FMOD::Studio::COMMAND_INFO> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getCommandInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCommandInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandIndex), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::COMMAND_INFO&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, commandIndex, byref(info));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getCommandString
::FMOD::RESULT FMOD::Studio::CommandReplay::getCommandString(int commandIndex, ByRef<::StringW> description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getCommandString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCommandString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandIndex), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, commandIndex, byref(description));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getCommandAtTime
::FMOD::RESULT FMOD::Studio::CommandReplay::getCommandAtTime(float time, ByRef<int> commandIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getCommandAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCommandAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, time, byref(commandIndex));
}
// Autogenerated method: FMOD.Studio.CommandReplay.setBankPath
::FMOD::RESULT FMOD::Studio::CommandReplay::setBankPath(::StringW bankPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setBankPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setBankPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bankPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, bankPath);
}
// Autogenerated method: FMOD.Studio.CommandReplay.start
::FMOD::RESULT FMOD::Studio::CommandReplay::start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.CommandReplay.stop
::FMOD::RESULT FMOD::Studio::CommandReplay::stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.CommandReplay.seekToTime
::FMOD::RESULT FMOD::Studio::CommandReplay::seekToTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::seekToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "seekToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, time);
}
// Autogenerated method: FMOD.Studio.CommandReplay.seekToCommand
::FMOD::RESULT FMOD::Studio::CommandReplay::seekToCommand(int commandIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::seekToCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "seekToCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, commandIndex);
}
// Autogenerated method: FMOD.Studio.CommandReplay.getPaused
::FMOD::RESULT FMOD::Studio::CommandReplay::getPaused(ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(paused));
}
// Autogenerated method: FMOD.Studio.CommandReplay.setPaused
::FMOD::RESULT FMOD::Studio::CommandReplay::setPaused(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, paused);
}
// Autogenerated method: FMOD.Studio.CommandReplay.getPlaybackState
::FMOD::RESULT FMOD::Studio::CommandReplay::getPlaybackState(ByRef<::FMOD::Studio::PLAYBACK_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PLAYBACK_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(state));
}
// Autogenerated method: FMOD.Studio.CommandReplay.getCurrentCommand
::FMOD::RESULT FMOD::Studio::CommandReplay::getCurrentCommand(ByRef<int> commandIndex, ByRef<float> currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getCurrentCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getCurrentCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(commandIndex), byref(currentTime));
}
// Autogenerated method: FMOD.Studio.CommandReplay.release
::FMOD::RESULT FMOD::Studio::CommandReplay::release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.CommandReplay.setFrameCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::setFrameCallback(::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setFrameCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setFrameCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.setLoadBankCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::setLoadBankCallback(::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setLoadBankCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setLoadBankCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.setCreateInstanceCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::setCreateInstanceCallback(::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setCreateInstanceCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setCreateInstanceCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.getUserData
::FMOD::RESULT FMOD::Studio::CommandReplay::getUserData(ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::getUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "getUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(userdata));
}
// Autogenerated method: FMOD.Studio.CommandReplay.setUserData
::FMOD::RESULT FMOD::Studio::CommandReplay::setUserData(::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::setUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "setUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, userdata);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_IsValid
bool FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_IsValid(::System::IntPtr replay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetSystem
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetSystem(::System::IntPtr replay, ByRef<::System::IntPtr> system) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(system));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetLength
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetLength(::System::IntPtr replay, ByRef<float> totalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(totalTime));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetCommandCount
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandCount(::System::IntPtr replay, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetCommandCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(count));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetCommandInfo
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandInfo(::System::IntPtr replay, int commandIndex, ByRef<::FMOD::Studio::COMMAND_INFO> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetCommandInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(commandIndex), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::COMMAND_INFO&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, commandIndex, byref(info));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetCommandString
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandString(::System::IntPtr replay, int commandIndex, ::System::IntPtr description, int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetCommandString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(commandIndex), ::il2cpp_utils::ExtractType(description), ::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, commandIndex, description, capacity);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetCommandAtTime
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandAtTime(::System::IntPtr replay, float time, ByRef<int> commandIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCommandAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetCommandAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, time, byref(commandIndex));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetBankPath
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetBankPath(::System::IntPtr replay, ::ArrayW<uint8_t> bankPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetBankPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetBankPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(bankPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, bankPath);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_Start
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Start(::System::IntPtr replay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_Stop
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Stop(::System::IntPtr replay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SeekToTime
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SeekToTime(::System::IntPtr replay, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SeekToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SeekToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, time);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SeekToCommand
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SeekToCommand(::System::IntPtr replay, int commandIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SeekToCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SeekToCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(commandIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, commandIndex);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetPaused
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetPaused(::System::IntPtr replay, ByRef<bool> paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(paused));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetPaused
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetPaused(::System::IntPtr replay, bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(paused)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, paused);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetPlaybackState
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetPlaybackState(::System::IntPtr replay, ByRef<::FMOD::Studio::PLAYBACK_STATE> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<::FMOD::Studio::PLAYBACK_STATE&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(state));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetCurrentCommand
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCurrentCommand(::System::IntPtr replay, ByRef<int> commandIndex, ByRef<float> currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetCurrentCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetCurrentCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(commandIndex), byref(currentTime));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_Release
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Release(::System::IntPtr replay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetFrameCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetFrameCallback(::System::IntPtr replay, ::FMOD::Studio::COMMANDREPLAY_FRAME_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetFrameCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetFrameCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetLoadBankCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetLoadBankCallback(::System::IntPtr replay, ::FMOD::Studio::COMMANDREPLAY_LOAD_BANK_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetLoadBankCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetLoadBankCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetCreateInstanceCallback
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetCreateInstanceCallback(::System::IntPtr replay, ::FMOD::Studio::COMMANDREPLAY_CREATE_INSTANCE_CALLBACK* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetCreateInstanceCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetCreateInstanceCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, callback);
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_GetUserData
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetUserData(::System::IntPtr replay, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, byref(userdata));
}
// Autogenerated method: FMOD.Studio.CommandReplay.FMOD_Studio_CommandReplay_SetUserData
::FMOD::RESULT FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetUserData(::System::IntPtr replay, ::System::IntPtr userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::FMOD_Studio_CommandReplay_SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMOD.Studio", "CommandReplay", "FMOD_Studio_CommandReplay_SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replay), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, replay, userdata);
}
// Autogenerated method: FMOD.Studio.CommandReplay.hasHandle
bool FMOD::Studio::CommandReplay::hasHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::hasHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "hasHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.CommandReplay.clearHandle
void FMOD::Studio::CommandReplay::clearHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::clearHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "clearHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMOD.Studio.CommandReplay.isValid
bool FMOD::Studio::CommandReplay::isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::Studio::CommandReplay::isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.BankRefAttribute
#include "FMODUnity/BankRefAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.EventRefAttribute
#include "FMODUnity/EventRefAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.OneshotList
#include "FMODUnity/OneshotList.hpp"
// Including type: FMODUnity.OneshotList/<>c__DisplayClass2_0
#include "FMODUnity/OneshotList_--c__DisplayClass2_0.hpp"
// Including type: FMODUnity.OneshotList/<>c
#include "FMODUnity/OneshotList_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: FMOD.ATTRIBUTES_3D
#include "FMOD/ATTRIBUTES_3D.hpp"
// Including type: FMOD.Studio.STOP_MODE
#include "FMOD/Studio/STOP_MODE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<FMOD.Studio.EventInstance> instances
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMOD::Studio::EventInstance>*& FMODUnity::OneshotList::dyn_instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::dyn_instances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instances"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMOD::Studio::EventInstance>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.OneshotList.Add
void FMODUnity::OneshotList::Add(::FMOD::Studio::EventInstance instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: FMODUnity.OneshotList.Update
void FMODUnity::OneshotList::Update(::FMOD::ATTRIBUTES_3D attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: FMODUnity.OneshotList.SetParameterValue
void FMODUnity::OneshotList::SetParameterValue(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::SetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: FMODUnity.OneshotList.StopAll
void FMODUnity::OneshotList::StopAll(::FMOD::Studio::STOP_MODE stopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::StopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.OneshotList/<>c__DisplayClass2_0
#include "FMODUnity/OneshotList_--c__DisplayClass2_0.hpp"
// Including type: FMOD.Studio.EventInstance
#include "FMOD/Studio/EventInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMOD.Studio.PLAYBACK_STATE state
[[deprecated("Use field access instead!")]] ::FMOD::Studio::PLAYBACK_STATE& FMODUnity::OneshotList::$$c__DisplayClass2_0::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c__DisplayClass2_0::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::FMOD::Studio::PLAYBACK_STATE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.OneshotList/<>c__DisplayClass2_0.<Update>b__0
bool FMODUnity::OneshotList::$$c__DisplayClass2_0::$Update$b__0(::FMOD::Studio::EventInstance x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c__DisplayClass2_0::<Update>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.OneshotList/<>c
#include "FMODUnity/OneshotList_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly FMODUnity.OneshotList/<>c <>9
::FMODUnity::OneshotList::$$c* FMODUnity::OneshotList::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::FMODUnity::OneshotList::$$c*>("FMODUnity", "OneshotList/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly FMODUnity.OneshotList/<>c <>9
void FMODUnity::OneshotList::$$c::_set_$$9(::FMODUnity::OneshotList::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("FMODUnity", "OneshotList/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<FMOD.Studio.EventInstance> <>9__2_1
::System::Predicate_1<::FMOD::Studio::EventInstance>* FMODUnity::OneshotList::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::FMOD::Studio::EventInstance>*>("FMODUnity", "OneshotList/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<FMOD.Studio.EventInstance> <>9__2_1
void FMODUnity::OneshotList::$$c::_set_$$9__2_1(::System::Predicate_1<::FMOD::Studio::EventInstance>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("FMODUnity", "OneshotList/<>c", "<>9__2_1", value)));
}
// Autogenerated method: FMODUnity.OneshotList/<>c..cctor
void FMODUnity::OneshotList::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "OneshotList/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.OneshotList/<>c.<Update>b__2_1
bool FMODUnity::OneshotList::$$c::$Update$b__2_1(::FMOD::Studio::EventInstance x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::OneshotList::$$c::<Update>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.ParamRef
#include "FMODUnity/ParamRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::ParamRef::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ParamRef::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Value
[[deprecated("Use field access instead!")]] float& FMODUnity::ParamRef::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ParamRef::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.RuntimeManager
#include "FMODUnity/RuntimeManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: FMODUnity.RuntimeManager/GuidComparer
#include "FMODUnity/RuntimeManager_GuidComparer.hpp"
// Including type: FMODUnity.RuntimeManager/AttachedInstance
#include "FMODUnity/RuntimeManager_AttachedInstance.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: FMODUnity.SystemNotInitializedException
#include "FMODUnity/SystemNotInitializedException.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DEBUG_FLAGS
#include "FMOD/DEBUG_FLAGS.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: FMODUnity.Settings
#include "FMODUnity/Settings.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private FMODUnity.SystemNotInitializedException initException
::FMODUnity::SystemNotInitializedException* FMODUnity::RuntimeManager::_get_initException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_get_initException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::SystemNotInitializedException*>("FMODUnity", "RuntimeManager", "initException"));
}
// Autogenerated static field setter
// Set static field: static private FMODUnity.SystemNotInitializedException initException
void FMODUnity::RuntimeManager::_set_initException(::FMODUnity::SystemNotInitializedException* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_set_initException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "RuntimeManager", "initException", value));
}
// Autogenerated static field getter
// Get static field: static private FMODUnity.RuntimeManager instance
::FMODUnity::RuntimeManager* FMODUnity::RuntimeManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::RuntimeManager*>("FMODUnity", "RuntimeManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static private FMODUnity.RuntimeManager instance
void FMODUnity::RuntimeManager::_set_instance(::FMODUnity::RuntimeManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "RuntimeManager", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isQuitting
bool FMODUnity::RuntimeManager::_get_isQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_get_isQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("FMODUnity", "RuntimeManager", "isQuitting"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isQuitting
void FMODUnity::RuntimeManager::_set_isQuitting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_set_isQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "RuntimeManager", "isQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean[] HasListener
::ArrayW<bool> FMODUnity::RuntimeManager::_get_HasListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_get_HasListener");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("FMODUnity", "RuntimeManager", "HasListener"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean[] HasListener
void FMODUnity::RuntimeManager::_set_HasListener(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::_set_HasListener");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "RuntimeManager", "HasListener", value));
}
// Autogenerated instance field getter
// Get instance field: private FMODUnity.FMODPlatform fmodPlatform
[[deprecated("Use field access instead!")]] ::FMODUnity::FMODPlatform& FMODUnity::RuntimeManager::dyn_fmodPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_fmodPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fmodPlatform"))->offset;
  return *reinterpret_cast<::FMODUnity::FMODPlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.Studio.System studioSystem
[[deprecated("Use field access instead!")]] ::FMOD::Studio::System& FMODUnity::RuntimeManager::dyn_studioSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_studioSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "studioSystem"))->offset;
  return *reinterpret_cast<::FMOD::Studio::System*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.System lowlevelSystem
[[deprecated("Use field access instead!")]] ::FMOD::System& FMODUnity::RuntimeManager::dyn_lowlevelSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_lowlevelSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowlevelSystem"))->offset;
  return *reinterpret_cast<::FMOD::System*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.DSP mixerHead
[[deprecated("Use field access instead!")]] ::FMOD::DSP& FMODUnity::RuntimeManager::dyn_mixerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_mixerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerHead"))->offset;
  return *reinterpret_cast<::FMOD::DSP*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64[] cachedPointers
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& FMODUnity::RuntimeManager::dyn_cachedPointers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_cachedPointers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedPointers"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,FMODUnity.RuntimeManager/LoadedBank> loadedBanks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::FMODUnity::RuntimeManager::LoadedBank>*& FMODUnity::RuntimeManager::dyn_loadedBanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_loadedBanks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedBanks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::FMODUnity::RuntimeManager::LoadedBank>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.UInt32> loadedPlugins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& FMODUnity::RuntimeManager::dyn_loadedPlugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_loadedPlugins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadedPlugins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Guid,FMOD.Studio.EventDescription> cachedDescriptions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Guid, ::FMOD::Studio::EventDescription>*& FMODUnity::RuntimeManager::dyn_cachedDescriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_cachedDescriptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedDescriptions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Guid, ::FMOD::Studio::EventDescription>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<FMODUnity.RuntimeManager/AttachedInstance> attachedInstances
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::RuntimeManager::AttachedInstance*>*& FMODUnity::RuntimeManager::dyn_attachedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_attachedInstances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachedInstances"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::RuntimeManager::AttachedInstance*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean listenerWarningIssued
[[deprecated("Use field access instead!")]] bool& FMODUnity::RuntimeManager::dyn_listenerWarningIssued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_listenerWarningIssued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listenerWarningIssued"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lastDebugText
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::RuntimeManager::dyn_lastDebugText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_lastDebugText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDebugText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastDebugUpdate
[[deprecated("Use field access instead!")]] float& FMODUnity::RuntimeManager::dyn_lastDebugUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::dyn_lastDebugUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDebugUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.RuntimeManager.DEBUG_CALLBACK
::FMOD::RESULT FMODUnity::RuntimeManager::DEBUG_CALLBACK(::FMOD::DEBUG_FLAGS flags, ::FMOD::StringWrapper file, int line, ::FMOD::StringWrapper func, ::FMOD::StringWrapper message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::DEBUG_CALLBACK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "DEBUG_CALLBACK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(file), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(func), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, file, line, func, message);
}
// Autogenerated method: FMODUnity.RuntimeManager.get_Instance
::FMODUnity::RuntimeManager* FMODUnity::RuntimeManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMODUnity::RuntimeManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.get_StudioSystem
::FMOD::Studio::System FMODUnity::RuntimeManager::get_StudioSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::get_StudioSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "get_StudioSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::System, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.get_LowlevelSystem
::FMOD::System FMODUnity::RuntimeManager::get_LowlevelSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::get_LowlevelSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "get_LowlevelSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::System, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.CheckInitResult
void FMODUnity::RuntimeManager::CheckInitResult(::FMOD::RESULT result, ::StringW cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::CheckInitResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInitResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, cause);
}
// Autogenerated method: FMODUnity.RuntimeManager.Initialize
::FMOD::RESULT FMODUnity::RuntimeManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.Update
void FMODUnity::RuntimeManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.AttachInstanceToGameObject
void FMODUnity::RuntimeManager::AttachInstanceToGameObject(::FMOD::Studio::EventInstance instance, ::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody* rigidBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachInstanceToGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "AttachInstanceToGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(rigidBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, transform, rigidBody);
}
// Autogenerated method: FMODUnity.RuntimeManager.AttachInstanceToGameObject
void FMODUnity::RuntimeManager::AttachInstanceToGameObject(::FMOD::Studio::EventInstance instance, ::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody2D* rigidBody2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachInstanceToGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "AttachInstanceToGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(rigidBody2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, transform, rigidBody2D);
}
// Autogenerated method: FMODUnity.RuntimeManager.DetachInstanceFromGameObject
void FMODUnity::RuntimeManager::DetachInstanceFromGameObject(::FMOD::Studio::EventInstance instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::DetachInstanceFromGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "DetachInstanceFromGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: FMODUnity.RuntimeManager.DrawDebugOverlay
void FMODUnity::RuntimeManager::DrawDebugOverlay(int windowID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::DrawDebugOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawDebugOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowID);
}
// Autogenerated method: FMODUnity.RuntimeManager.OnDisable
void FMODUnity::RuntimeManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.OnDestroy
void FMODUnity::RuntimeManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.OnApplicationPause
void FMODUnity::RuntimeManager::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: FMODUnity.RuntimeManager.loadedBankRegister
void FMODUnity::RuntimeManager::loadedBankRegister(::FMODUnity::RuntimeManager::LoadedBank loadedBank, ::StringW bankPath, ::StringW bankName, bool loadSamples, ::FMOD::RESULT loadResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::loadedBankRegister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "loadedBankRegister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedBank), ::il2cpp_utils::ExtractType(bankPath), ::il2cpp_utils::ExtractType(bankName), ::il2cpp_utils::ExtractType(loadSamples), ::il2cpp_utils::ExtractType(loadResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loadedBank, bankPath, bankName, loadSamples, loadResult);
}
// Autogenerated method: FMODUnity.RuntimeManager.LoadBank
void FMODUnity::RuntimeManager::LoadBank(::StringW bankName, bool loadSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::LoadBank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "LoadBank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bankName), ::il2cpp_utils::ExtractType(loadSamples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bankName, loadSamples);
}
// Autogenerated method: FMODUnity.RuntimeManager.LoadBank
void FMODUnity::RuntimeManager::LoadBank(::UnityEngine::TextAsset* asset, bool loadSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::LoadBank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "LoadBank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(loadSamples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset, loadSamples);
}
// Autogenerated method: FMODUnity.RuntimeManager.LoadBanks
void FMODUnity::RuntimeManager::LoadBanks(::FMODUnity::Settings* fmodSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::LoadBanks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBanks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmodSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmodSettings);
}
// Autogenerated method: FMODUnity.RuntimeManager.UnloadBank
void FMODUnity::RuntimeManager::UnloadBank(::StringW bankName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::UnloadBank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "UnloadBank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bankName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bankName);
}
// Autogenerated method: FMODUnity.RuntimeManager.AnyBankLoading
bool FMODUnity::RuntimeManager::AnyBankLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AnyBankLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "AnyBankLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.WaitForAllLoads
void FMODUnity::RuntimeManager::WaitForAllLoads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::WaitForAllLoads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "WaitForAllLoads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.PathToGUID
::System::Guid FMODUnity::RuntimeManager::PathToGUID(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PathToGUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PathToGUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FMODUnity.RuntimeManager.CreateInstance
::FMOD::Studio::EventInstance FMODUnity::RuntimeManager::CreateInstance(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventInstance, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FMODUnity.RuntimeManager.CreateInstance
::FMOD::Studio::EventInstance FMODUnity::RuntimeManager::CreateInstance(::System::Guid guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventInstance, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid);
}
// Autogenerated method: FMODUnity.RuntimeManager.PlayOneShot
void FMODUnity::RuntimeManager::PlayOneShot(::StringW path, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, position);
}
// Autogenerated method: FMODUnity.RuntimeManager.PlayOneShot
void FMODUnity::RuntimeManager::PlayOneShot(::System::Guid guid, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid, position);
}
// Autogenerated method: FMODUnity.RuntimeManager.PlayOneShotAttached
void FMODUnity::RuntimeManager::PlayOneShotAttached(::StringW path, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PlayOneShotAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PlayOneShotAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, gameObject);
}
// Autogenerated method: FMODUnity.RuntimeManager.PlayOneShotAttached
void FMODUnity::RuntimeManager::PlayOneShotAttached(::System::Guid guid, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PlayOneShotAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PlayOneShotAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid, gameObject);
}
// Autogenerated method: FMODUnity.RuntimeManager.GetEventDescription
::FMOD::Studio::EventDescription FMODUnity::RuntimeManager::GetEventDescription(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GetEventDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "GetEventDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventDescription, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FMODUnity.RuntimeManager.GetEventDescription
::FMOD::Studio::EventDescription FMODUnity::RuntimeManager::GetEventDescription(::System::Guid guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GetEventDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "GetEventDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventDescription, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guid);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(::UnityEngine::GameObject* gameObject, ::UnityEngine::Rigidbody* rigidBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(rigidBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, rigidBody);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(::UnityEngine::GameObject* gameObject, ::UnityEngine::Rigidbody2D* rigidBody2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(rigidBody2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject, rigidBody2D);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(int listenerIndex, ::UnityEngine::GameObject* gameObject, ::UnityEngine::Rigidbody* rigidBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerIndex), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(rigidBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listenerIndex, gameObject, rigidBody);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(int listenerIndex, ::UnityEngine::GameObject* gameObject, ::UnityEngine::Rigidbody2D* rigidBody2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerIndex), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(rigidBody2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listenerIndex, gameObject, rigidBody2D);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetListenerLocation
void FMODUnity::RuntimeManager::SetListenerLocation(int listenerIndex, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerIndex), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listenerIndex, transform);
}
// Autogenerated method: FMODUnity.RuntimeManager.GetBus
::FMOD::Studio::Bus FMODUnity::RuntimeManager::GetBus(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GetBus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "GetBus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::Bus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FMODUnity.RuntimeManager.GetVCA
::FMOD::Studio::VCA FMODUnity::RuntimeManager::GetVCA(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GetVCA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "GetVCA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::VCA, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FMODUnity.RuntimeManager.PauseAllEvents
void FMODUnity::RuntimeManager::PauseAllEvents(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::PauseAllEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "PauseAllEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paused);
}
// Autogenerated method: FMODUnity.RuntimeManager.MuteAllEvents
void FMODUnity::RuntimeManager::MuteAllEvents(bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::MuteAllEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "MuteAllEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: FMODUnity.RuntimeManager.get_IsInitialized
bool FMODUnity::RuntimeManager::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.get_HasBanksLoaded
bool FMODUnity::RuntimeManager::get_HasBanksLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::get_HasBanksLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "get_HasBanksLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager.HasBankLoaded
bool FMODUnity::RuntimeManager::HasBankLoaded(::StringW loadedBank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::HasBankLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", "HasBankLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedBank)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadedBank);
}
// Autogenerated method: FMODUnity.RuntimeManager.LoadPlugins
void FMODUnity::RuntimeManager::LoadPlugins(::FMODUnity::Settings* fmodSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::LoadPlugins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPlugins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmodSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmodSettings);
}
// Autogenerated method: FMODUnity.RuntimeManager.SetThreadAffinity
void FMODUnity::RuntimeManager::SetThreadAffinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::SetThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeManager..cctor
void FMODUnity::RuntimeManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.RuntimeManager/GuidComparer
#include "FMODUnity/RuntimeManager_GuidComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMODUnity.RuntimeManager/GuidComparer.System.Collections.Generic.IEqualityComparer<System.Guid>.Equals
bool FMODUnity::RuntimeManager::GuidComparer::System_Collections_Generic_IEqualityComparer$System_Guid$_Equals(::System::Guid x, ::System::Guid y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GuidComparer::System.Collections.Generic.IEqualityComparer<System.Guid>.Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMODUnity::RuntimeManager::GuidComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: FMODUnity.RuntimeManager/GuidComparer.System.Collections.Generic.IEqualityComparer<System.Guid>.GetHashCode
int FMODUnity::RuntimeManager::GuidComparer::System_Collections_Generic_IEqualityComparer$System_Guid$_GetHashCode(::System::Guid obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::GuidComparer::System.Collections.Generic.IEqualityComparer<System.Guid>.GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMODUnity::RuntimeManager::GuidComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.RuntimeManager/AttachedInstance
#include "FMODUnity/RuntimeManager_AttachedInstance.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMOD.Studio.EventInstance instance
[[deprecated("Use field access instead!")]] ::FMOD::Studio::EventInstance& FMODUnity::RuntimeManager::AttachedInstance::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachedInstance::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::FMOD::Studio::EventInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& FMODUnity::RuntimeManager::AttachedInstance::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachedInstance::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& FMODUnity::RuntimeManager::AttachedInstance::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachedInstance::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody2D rigidBody2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& FMODUnity::RuntimeManager::AttachedInstance::dyn_rigidBody2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeManager::AttachedInstance::dyn_rigidBody2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.EventNotFoundException
#include "FMODUnity/EventNotFoundException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid Guid
[[deprecated("Use field access instead!")]] ::System::Guid& FMODUnity::EventNotFoundException::dyn_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EventNotFoundException::dyn_Guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Guid"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::EventNotFoundException::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EventNotFoundException::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.BusNotFoundException
#include "FMODUnity/BusNotFoundException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::BusNotFoundException::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::BusNotFoundException::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.VCANotFoundException
#include "FMODUnity/VCANotFoundException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::VCANotFoundException::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::VCANotFoundException::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.BankLoadException
#include "FMODUnity/BankLoadException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::BankLoadException::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::BankLoadException::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMOD.RESULT Result
[[deprecated("Use field access instead!")]] ::FMOD::RESULT& FMODUnity::BankLoadException::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::BankLoadException::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::FMOD::RESULT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.SystemNotInitializedException
#include "FMODUnity/SystemNotInitializedException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMOD.RESULT Result
[[deprecated("Use field access instead!")]] ::FMOD::RESULT& FMODUnity::SystemNotInitializedException::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::SystemNotInitializedException::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::FMOD::RESULT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Location
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::SystemNotInitializedException::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::SystemNotInitializedException::dyn_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.EmitterGameEvent
#include "FMODUnity/EmitterGameEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent None
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "None"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent None
void FMODUnity::EmitterGameEvent::_set_None(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "None", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent ObjectStart
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_ObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_ObjectStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "ObjectStart"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent ObjectStart
void FMODUnity::EmitterGameEvent::_set_ObjectStart(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_ObjectStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "ObjectStart", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent ObjectDestroy
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_ObjectDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_ObjectDestroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "ObjectDestroy"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent ObjectDestroy
void FMODUnity::EmitterGameEvent::_set_ObjectDestroy(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_ObjectDestroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "ObjectDestroy", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent TriggerEnter
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_TriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_TriggerEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "TriggerEnter"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent TriggerEnter
void FMODUnity::EmitterGameEvent::_set_TriggerEnter(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_TriggerEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "TriggerEnter", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent TriggerExit
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_TriggerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_TriggerExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "TriggerExit"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent TriggerExit
void FMODUnity::EmitterGameEvent::_set_TriggerExit(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_TriggerExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "TriggerExit", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent TriggerEnter2D
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_TriggerEnter2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_TriggerEnter2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "TriggerEnter2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent TriggerEnter2D
void FMODUnity::EmitterGameEvent::_set_TriggerEnter2D(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_TriggerEnter2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "TriggerEnter2D", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent TriggerExit2D
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_TriggerExit2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_TriggerExit2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "TriggerExit2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent TriggerExit2D
void FMODUnity::EmitterGameEvent::_set_TriggerExit2D(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_TriggerExit2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "TriggerExit2D", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent CollisionEnter
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_CollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_CollisionEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "CollisionEnter"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent CollisionEnter
void FMODUnity::EmitterGameEvent::_set_CollisionEnter(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_CollisionEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "CollisionEnter", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent CollisionExit
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_CollisionExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_CollisionExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "CollisionExit"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent CollisionExit
void FMODUnity::EmitterGameEvent::_set_CollisionExit(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_CollisionExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "CollisionExit", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent CollisionEnter2D
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_CollisionEnter2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_CollisionEnter2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "CollisionEnter2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent CollisionEnter2D
void FMODUnity::EmitterGameEvent::_set_CollisionEnter2D(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_CollisionEnter2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "CollisionEnter2D", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent CollisionExit2D
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_CollisionExit2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_CollisionExit2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "CollisionExit2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent CollisionExit2D
void FMODUnity::EmitterGameEvent::_set_CollisionExit2D(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_CollisionExit2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "CollisionExit2D", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent ObjectEnable
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_ObjectEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_ObjectEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "ObjectEnable"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent ObjectEnable
void FMODUnity::EmitterGameEvent::_set_ObjectEnable(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_ObjectEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "ObjectEnable", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.EmitterGameEvent ObjectDisable
::FMODUnity::EmitterGameEvent FMODUnity::EmitterGameEvent::_get_ObjectDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_get_ObjectDisable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::EmitterGameEvent>("FMODUnity", "EmitterGameEvent", "ObjectDisable"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.EmitterGameEvent ObjectDisable
void FMODUnity::EmitterGameEvent::_set_ObjectDisable(::FMODUnity::EmitterGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::_set_ObjectDisable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "EmitterGameEvent", "ObjectDisable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMODUnity::EmitterGameEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterGameEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.LoaderGameEvent
#include "FMODUnity/LoaderGameEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent None
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "None"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent None
void FMODUnity::LoaderGameEvent::_set_None(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "None", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent ObjectStart
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_ObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_ObjectStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "ObjectStart"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent ObjectStart
void FMODUnity::LoaderGameEvent::_set_ObjectStart(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_ObjectStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "ObjectStart", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent ObjectDestroy
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_ObjectDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_ObjectDestroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "ObjectDestroy"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent ObjectDestroy
void FMODUnity::LoaderGameEvent::_set_ObjectDestroy(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_ObjectDestroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "ObjectDestroy", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent TriggerEnter
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_TriggerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_TriggerEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "TriggerEnter"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent TriggerEnter
void FMODUnity::LoaderGameEvent::_set_TriggerEnter(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_TriggerEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "TriggerEnter", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent TriggerExit
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_TriggerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_TriggerExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "TriggerExit"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent TriggerExit
void FMODUnity::LoaderGameEvent::_set_TriggerExit(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_TriggerExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "TriggerExit", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent TriggerEnter2D
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_TriggerEnter2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_TriggerEnter2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "TriggerEnter2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent TriggerEnter2D
void FMODUnity::LoaderGameEvent::_set_TriggerEnter2D(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_TriggerEnter2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "TriggerEnter2D", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.LoaderGameEvent TriggerExit2D
::FMODUnity::LoaderGameEvent FMODUnity::LoaderGameEvent::_get_TriggerExit2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_get_TriggerExit2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::LoaderGameEvent>("FMODUnity", "LoaderGameEvent", "TriggerExit2D"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.LoaderGameEvent TriggerExit2D
void FMODUnity::LoaderGameEvent::_set_TriggerExit2D(::FMODUnity::LoaderGameEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::_set_TriggerExit2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "LoaderGameEvent", "TriggerExit2D", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMODUnity::LoaderGameEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::LoaderGameEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.RuntimeUtils
#include "FMODUnity/RuntimeUtils.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: FMOD.VECTOR
#include "FMOD/VECTOR.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: FMOD.ATTRIBUTES_3D
#include "FMOD/ATTRIBUTES_3D.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: FMODUnity.FMODPlatform
#include "FMODUnity/FMODPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String BankExtension
::StringW FMODUnity::RuntimeUtils::_get_BankExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::_get_BankExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("FMODUnity", "RuntimeUtils", "BankExtension"));
}
// Autogenerated static field setter
// Set static field: static private System.String BankExtension
void FMODUnity::RuntimeUtils::_set_BankExtension(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::_set_BankExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "RuntimeUtils", "BankExtension", value));
}
// Autogenerated method: FMODUnity.RuntimeUtils.ToFMODVector
::FMOD::VECTOR FMODUnity::RuntimeUtils::ToFMODVector(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::ToFMODVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "ToFMODVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::VECTOR, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(rigidbody)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, rigidbody);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::GameObject* go, ::UnityEngine::Rigidbody* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(rigidbody)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, rigidbody);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody2D* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(rigidbody)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, rigidbody);
}
// Autogenerated method: FMODUnity.RuntimeUtils.To3DAttributes
::FMOD::ATTRIBUTES_3D FMODUnity::RuntimeUtils::To3DAttributes(::UnityEngine::GameObject* go, ::UnityEngine::Rigidbody2D* rigidbody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::To3DAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "To3DAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(rigidbody)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::ATTRIBUTES_3D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, rigidbody);
}
// Autogenerated method: FMODUnity.RuntimeUtils.GetCurrentPlatform
::FMODUnity::FMODPlatform FMODUnity::RuntimeUtils::GetCurrentPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::GetCurrentPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "GetCurrentPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMODUnity::FMODPlatform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.RuntimeUtils.GetBankPath
::StringW FMODUnity::RuntimeUtils::GetBankPath(::StringW bankName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::GetBankPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "GetBankPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bankName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bankName);
}
// Autogenerated method: FMODUnity.RuntimeUtils.GetPluginPath
::StringW FMODUnity::RuntimeUtils::GetPluginPath(::StringW pluginName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::GetPluginPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "GetPluginPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pluginName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pluginName);
}
// Autogenerated method: FMODUnity.RuntimeUtils.EnforceLibraryOrder
void FMODUnity::RuntimeUtils::EnforceLibraryOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::RuntimeUtils::EnforceLibraryOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "RuntimeUtils", "EnforceLibraryOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.FMODPlatform
#include "FMODUnity/FMODPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform None
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "None"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform None
void FMODUnity::FMODPlatform::_set_None(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "None", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform PlayInEditor
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_PlayInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_PlayInEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "PlayInEditor"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform PlayInEditor
void FMODUnity::FMODPlatform::_set_PlayInEditor(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_PlayInEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "PlayInEditor", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Default
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Default"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Default
void FMODUnity::FMODPlatform::_set_Default(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Desktop
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Desktop
void FMODUnity::FMODPlatform::_set_Desktop(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Desktop", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Mobile
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Mobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Mobile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Mobile"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Mobile
void FMODUnity::FMODPlatform::_set_Mobile(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Mobile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Mobile", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform MobileHigh
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_MobileHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_MobileHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "MobileHigh"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform MobileHigh
void FMODUnity::FMODPlatform::_set_MobileHigh(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_MobileHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "MobileHigh", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform MobileLow
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_MobileLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_MobileLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "MobileLow"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform MobileLow
void FMODUnity::FMODPlatform::_set_MobileLow(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_MobileLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "MobileLow", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Console
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Console() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Console"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Console
void FMODUnity::FMODPlatform::_set_Console(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Console", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Windows
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Windows
void FMODUnity::FMODPlatform::_set_Windows(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Mac
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Mac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Mac");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Mac"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Mac
void FMODUnity::FMODPlatform::_set_Mac(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Mac");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Mac", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Linux
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Linux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Linux"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Linux
void FMODUnity::FMODPlatform::_set_Linux(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Linux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Linux", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform iOS
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_iOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_iOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "iOS"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform iOS
void FMODUnity::FMODPlatform::_set_iOS(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_iOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "iOS", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Android
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Android() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Android");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Android"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Android
void FMODUnity::FMODPlatform::_set_Android(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Android");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Android", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform WindowsPhone
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_WindowsPhone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_WindowsPhone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "WindowsPhone"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform WindowsPhone
void FMODUnity::FMODPlatform::_set_WindowsPhone(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_WindowsPhone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "WindowsPhone", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform XboxOne
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_XboxOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_XboxOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "XboxOne"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform XboxOne
void FMODUnity::FMODPlatform::_set_XboxOne(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_XboxOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "XboxOne", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform PS4
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_PS4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_PS4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "PS4"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform PS4
void FMODUnity::FMODPlatform::_set_PS4(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_PS4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "PS4", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform WiiU
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_WiiU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_WiiU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "WiiU"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform WiiU
void FMODUnity::FMODPlatform::_set_WiiU(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_WiiU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "WiiU", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform PSVita
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_PSVita() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_PSVita");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "PSVita"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform PSVita
void FMODUnity::FMODPlatform::_set_PSVita(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_PSVita");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "PSVita", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform AppleTV
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_AppleTV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_AppleTV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "AppleTV"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform AppleTV
void FMODUnity::FMODPlatform::_set_AppleTV(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_AppleTV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "AppleTV", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform UWP
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_UWP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_UWP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "UWP"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform UWP
void FMODUnity::FMODPlatform::_set_UWP(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_UWP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "UWP", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Switch
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Switch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Switch"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Switch
void FMODUnity::FMODPlatform::_set_Switch(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Switch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Switch", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform WebGL
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_WebGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_WebGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "WebGL"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform WebGL
void FMODUnity::FMODPlatform::_set_WebGL(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_WebGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "WebGL", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.FMODPlatform Count
::FMODUnity::FMODPlatform FMODUnity::FMODPlatform::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::FMODPlatform>("FMODUnity", "FMODPlatform", "Count"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.FMODPlatform Count
void FMODUnity::FMODPlatform::_set_Count(::FMODUnity::FMODPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "FMODPlatform", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMODUnity::FMODPlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::FMODPlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.ImportType
#include "FMODUnity/ImportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMODUnity.ImportType StreamingAssets
::FMODUnity::ImportType FMODUnity::ImportType::_get_StreamingAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ImportType::_get_StreamingAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::ImportType>("FMODUnity", "ImportType", "StreamingAssets"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.ImportType StreamingAssets
void FMODUnity::ImportType::_set_StreamingAssets(::FMODUnity::ImportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ImportType::_set_StreamingAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "ImportType", "StreamingAssets", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.ImportType AssetBundle
::FMODUnity::ImportType FMODUnity::ImportType::_get_AssetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ImportType::_get_AssetBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::ImportType>("FMODUnity", "ImportType", "AssetBundle"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.ImportType AssetBundle
void FMODUnity::ImportType::_set_AssetBundle(::FMODUnity::ImportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ImportType::_set_AssetBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "ImportType", "AssetBundle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMODUnity::ImportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::ImportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.PlatformSettingBase
#include "FMODUnity/PlatformSettingBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMODUnity.FMODPlatform Platform
[[deprecated("Use field access instead!")]] ::FMODUnity::FMODPlatform& FMODUnity::PlatformSettingBase::dyn_Platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::PlatformSettingBase::dyn_Platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Platform"))->offset;
  return *reinterpret_cast<::FMODUnity::FMODPlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.PlatformIntSetting
#include "FMODUnity/PlatformIntSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.PlatformStringSetting
#include "FMODUnity/PlatformStringSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.TriStateBool
#include "FMODUnity/TriStateBool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMODUnity.TriStateBool Disabled
::FMODUnity::TriStateBool FMODUnity::TriStateBool::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::TriStateBool>("FMODUnity", "TriStateBool", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.TriStateBool Disabled
void FMODUnity::TriStateBool::_set_Disabled(::FMODUnity::TriStateBool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "TriStateBool", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.TriStateBool Enabled
::FMODUnity::TriStateBool FMODUnity::TriStateBool::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::TriStateBool>("FMODUnity", "TriStateBool", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.TriStateBool Enabled
void FMODUnity::TriStateBool::_set_Enabled(::FMODUnity::TriStateBool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "TriStateBool", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public FMODUnity.TriStateBool Development
::FMODUnity::TriStateBool FMODUnity::TriStateBool::_get_Development() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_get_Development");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::TriStateBool>("FMODUnity", "TriStateBool", "Development"));
}
// Autogenerated static field setter
// Set static field: static public FMODUnity.TriStateBool Development
void FMODUnity::TriStateBool::_set_Development(::FMODUnity::TriStateBool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::_set_Development");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "TriStateBool", "Development", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMODUnity::TriStateBool::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::TriStateBool::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.PlatformBoolSetting
#include "FMODUnity/PlatformBoolSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.Settings
#include "FMODUnity/Settings.hpp"
// Including type: FMODUnity.Settings/<>c__DisplayClass33_0`1
#include "FMODUnity/Settings_--c__DisplayClass33_0_1.hpp"
// Including type: FMODUnity.Settings/<>c__DisplayClass34_0`2
#include "FMODUnity/Settings_--c__DisplayClass34_0_2.hpp"
// Including type: FMODUnity.Settings/<>c__DisplayClass35_0`2
#include "FMODUnity/Settings_--c__DisplayClass35_0_2.hpp"
// Including type: FMODUnity.Settings/<>c__DisplayClass36_0`1
#include "FMODUnity/Settings_--c__DisplayClass36_0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: FMODUnity.PlatformIntSetting
#include "FMODUnity/PlatformIntSetting.hpp"
// Including type: FMODUnity.PlatformBoolSetting
#include "FMODUnity/PlatformBoolSetting.hpp"
// Including type: FMODUnity.PlatformStringSetting
#include "FMODUnity/PlatformStringSetting.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: FMODUnity.PlatformSetting`1
#include "FMODUnity/PlatformSetting_1.hpp"
// Including type: FMODUnity.PlatformSettingBase
#include "FMODUnity/PlatformSettingBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SettingsAssetName
::StringW FMODUnity::Settings::_get_SettingsAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::_get_SettingsAssetName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("FMODUnity", "Settings", "SettingsAssetName"));
}
// Autogenerated static field setter
// Set static field: static private System.String SettingsAssetName
void FMODUnity::Settings::_set_SettingsAssetName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::_set_SettingsAssetName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "Settings", "SettingsAssetName", value));
}
// Autogenerated static field getter
// Get static field: static private FMODUnity.Settings instance
::FMODUnity::Settings* FMODUnity::Settings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMODUnity::Settings*>("FMODUnity", "Settings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private FMODUnity.Settings instance
void FMODUnity::Settings::_set_instance(::FMODUnity::Settings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMODUnity", "Settings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasSourceProject
[[deprecated("Use field access instead!")]] bool& FMODUnity::Settings::dyn_HasSourceProject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_HasSourceProject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasSourceProject"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasPlatforms
[[deprecated("Use field access instead!")]] bool& FMODUnity::Settings::dyn_HasPlatforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_HasPlatforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasPlatforms"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceProjectPath
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::Settings::dyn_sourceProjectPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_sourceProjectPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceProjectPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SourceProjectPathUnformatted
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::Settings::dyn_SourceProjectPathUnformatted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_SourceProjectPathUnformatted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceProjectPathUnformatted"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceBankPath
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::Settings::dyn_sourceBankPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_sourceBankPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceBankPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SourceBankPathUnformatted
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::Settings::dyn_SourceBankPathUnformatted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_SourceBankPathUnformatted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceBankPathUnformatted"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutomaticEventLoading
[[deprecated("Use field access instead!")]] bool& FMODUnity::Settings::dyn_AutomaticEventLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_AutomaticEventLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutomaticEventLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutomaticSampleLoading
[[deprecated("Use field access instead!")]] bool& FMODUnity::Settings::dyn_AutomaticSampleLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_AutomaticSampleLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutomaticSampleLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.ImportType ImportType
[[deprecated("Use field access instead!")]] ::FMODUnity::ImportType& FMODUnity::Settings::dyn_ImportType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_ImportType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImportType"))->offset;
  return *reinterpret_cast<::FMODUnity::ImportType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TargetAssetPath
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::Settings::dyn_TargetAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_TargetAssetPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetAssetPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMOD.DEBUG_FLAGS LoggingLevel
[[deprecated("Use field access instead!")]] ::FMOD::DEBUG_FLAGS& FMODUnity::Settings::dyn_LoggingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_LoggingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggingLevel"))->offset;
  return *reinterpret_cast<::FMOD::DEBUG_FLAGS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformIntSetting> SpeakerModeSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>*& FMODUnity::Settings::dyn_SpeakerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_SpeakerModeSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpeakerModeSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformIntSetting> SampleRateSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>*& FMODUnity::Settings::dyn_SampleRateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_SampleRateSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleRateSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformBoolSetting> LiveUpdateSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>*& FMODUnity::Settings::dyn_LiveUpdateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_LiveUpdateSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LiveUpdateSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformBoolSetting> OverlaySettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>*& FMODUnity::Settings::dyn_OverlaySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_OverlaySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverlaySettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformBoolSetting> LoggingSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>*& FMODUnity::Settings::dyn_LoggingSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_LoggingSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggingSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformBoolSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformStringSetting> BankDirectorySettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformStringSetting*>*& FMODUnity::Settings::dyn_BankDirectorySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_BankDirectorySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BankDirectorySettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformStringSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformIntSetting> VirtualChannelSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>*& FMODUnity::Settings::dyn_VirtualChannelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_VirtualChannelSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VirtualChannelSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<FMODUnity.PlatformIntSetting> RealChannelSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>*& FMODUnity::Settings::dyn_RealChannelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_RealChannelSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RealChannelSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::FMODUnity::PlatformIntSetting*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Plugins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& FMODUnity::Settings::dyn_Plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_Plugins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Plugins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> MasterBanks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& FMODUnity::Settings::dyn_MasterBanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_MasterBanks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MasterBanks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Banks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& FMODUnity::Settings::dyn_Banks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::dyn_Banks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Banks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.Settings.get_Instance
::FMODUnity::Settings* FMODUnity::Settings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "Settings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMODUnity::Settings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FMODUnity.Settings.get_SourceProjectPath
::StringW FMODUnity::Settings::get_SourceProjectPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::get_SourceProjectPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceProjectPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.Settings.set_SourceProjectPath
void FMODUnity::Settings::set_SourceProjectPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::set_SourceProjectPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceProjectPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FMODUnity.Settings.get_SourceBankPath
::StringW FMODUnity::Settings::get_SourceBankPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::get_SourceBankPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceBankPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.Settings.set_SourceBankPath
void FMODUnity::Settings::set_SourceBankPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::set_SourceBankPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceBankPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FMODUnity.Settings.GetParent
::FMODUnity::FMODPlatform FMODUnity::Settings::GetParent(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "Settings", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::FMODUnity::FMODPlatform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.IsLiveUpdateEnabled
bool FMODUnity::Settings::IsLiveUpdateEnabled(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::IsLiveUpdateEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLiveUpdateEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.IsOverlayEnabled
bool FMODUnity::Settings::IsOverlayEnabled(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::IsOverlayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOverlayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetRealChannels
int FMODUnity::Settings::GetRealChannels(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetRealChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetVirtualChannels
int FMODUnity::Settings::GetVirtualChannels(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetVirtualChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVirtualChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetSpeakerMode
int FMODUnity::Settings::GetSpeakerMode(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetSpeakerMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpeakerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetSampleRate
int FMODUnity::Settings::GetSampleRate(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetBankPlatform
::StringW FMODUnity::Settings::GetBankPlatform(::FMODUnity::FMODPlatform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetBankPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBankPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, platform);
}
// Autogenerated method: FMODUnity.Settings.GetPlatformSpecificPath
::StringW FMODUnity::Settings::GetPlatformSpecificPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::GetPlatformSpecificPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformSpecificPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, path);
}
// Autogenerated method: FMODUnity.Settings..cctor
void FMODUnity::Settings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::Settings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("FMODUnity", "Settings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.StudioBankLoader
#include "FMODUnity/StudioBankLoader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMODUnity.LoaderGameEvent LoadEvent
[[deprecated("Use field access instead!")]] ::FMODUnity::LoaderGameEvent& FMODUnity::StudioBankLoader::dyn_LoadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_LoadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoadEvent"))->offset;
  return *reinterpret_cast<::FMODUnity::LoaderGameEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.LoaderGameEvent UnloadEvent
[[deprecated("Use field access instead!")]] ::FMODUnity::LoaderGameEvent& FMODUnity::StudioBankLoader::dyn_UnloadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_UnloadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnloadEvent"))->offset;
  return *reinterpret_cast<::FMODUnity::LoaderGameEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Banks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& FMODUnity::StudioBankLoader::dyn_Banks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_Banks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Banks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String CollisionTag
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::StudioBankLoader::dyn_CollisionTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_CollisionTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PreloadSamples
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioBankLoader::dyn_PreloadSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_PreloadSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreloadSamples"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isQuitting
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioBankLoader::dyn_isQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::dyn_isQuitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isQuitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.StudioBankLoader.HandleGameEvent
void FMODUnity::StudioBankLoader::HandleGameEvent(::FMODUnity::LoaderGameEvent gameEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameEvent);
}
// Autogenerated method: FMODUnity.StudioBankLoader.Start
void FMODUnity::StudioBankLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnApplicationQuit
void FMODUnity::StudioBankLoader::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnDestroy
void FMODUnity::StudioBankLoader::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnTriggerEnter
void FMODUnity::StudioBankLoader::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnTriggerExit
void FMODUnity::StudioBankLoader::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnTriggerEnter2D
void FMODUnity::StudioBankLoader::OnTriggerEnter2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnTriggerEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioBankLoader.OnTriggerExit2D
void FMODUnity::StudioBankLoader::OnTriggerExit2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::OnTriggerExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioBankLoader.Load
void FMODUnity::StudioBankLoader::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioBankLoader.Unload
void FMODUnity::StudioBankLoader::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.StudioEventEmitter
#include "FMODUnity/StudioEventEmitter.hpp"
// Including type: FMODUnity.ParamRef
#include "FMODUnity/ParamRef.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Event
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::StudioEventEmitter::dyn_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Event"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.EmitterGameEvent PlayEvent
[[deprecated("Use field access instead!")]] ::FMODUnity::EmitterGameEvent& FMODUnity::StudioEventEmitter::dyn_PlayEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_PlayEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayEvent"))->offset;
  return *reinterpret_cast<::FMODUnity::EmitterGameEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.EmitterGameEvent StopEvent
[[deprecated("Use field access instead!")]] ::FMODUnity::EmitterGameEvent& FMODUnity::StudioEventEmitter::dyn_StopEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_StopEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StopEvent"))->offset;
  return *reinterpret_cast<::FMODUnity::EmitterGameEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String CollisionTag
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::StudioEventEmitter::dyn_CollisionTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_CollisionTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowFadeout
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_AllowFadeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_AllowFadeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowFadeout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TriggerOnce
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_TriggerOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Preload
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_Preload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Preload"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.ParamRef[] Params
[[deprecated("Use field access instead!")]] ::ArrayW<::FMODUnity::ParamRef*>& FMODUnity::StudioEventEmitter::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_Params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::ArrayW<::FMODUnity::ParamRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideAttenuation
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_OverrideAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_OverrideAttenuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideAttenuation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single OverrideMinDistance
[[deprecated("Use field access instead!")]] float& FMODUnity::StudioEventEmitter::dyn_OverrideMinDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_OverrideMinDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideMinDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single OverrideMaxDistance
[[deprecated("Use field access instead!")]] float& FMODUnity::StudioEventEmitter::dyn_OverrideMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_OverrideMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.Studio.EventDescription eventDescription
[[deprecated("Use field access instead!")]] ::FMOD::Studio::EventDescription& FMODUnity::StudioEventEmitter::dyn_eventDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_eventDescription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventDescription"))->offset;
  return *reinterpret_cast<::FMOD::Studio::EventDescription*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FMOD.Studio.EventInstance instance
[[deprecated("Use field access instead!")]] ::FMOD::Studio::EventInstance& FMODUnity::StudioEventEmitter::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::FMOD::Studio::EventInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasTriggered
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_hasTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_hasTriggered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasTriggered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isQuitting
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_isQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_isQuitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isQuitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isInside
[[deprecated("Use field access instead!")]] bool& FMODUnity::StudioEventEmitter::dyn_isInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::dyn_isInside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isInside"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.get_EventDescription
::FMOD::Studio::EventDescription FMODUnity::StudioEventEmitter::get_EventDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::get_EventDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventDescription, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.get_EventInstance
::FMOD::Studio::EventInstance FMODUnity::StudioEventEmitter::get_EventInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::get_EventInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::Studio::EventInstance, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.Start
void FMODUnity::StudioEventEmitter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnApplicationQuit
void FMODUnity::StudioEventEmitter::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnDestroy
void FMODUnity::StudioEventEmitter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnEnable
void FMODUnity::StudioEventEmitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnDisable
void FMODUnity::StudioEventEmitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnTriggerEnter
void FMODUnity::StudioEventEmitter::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnTriggerExit
void FMODUnity::StudioEventEmitter::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnTriggerEnter2D
void FMODUnity::StudioEventEmitter::OnTriggerEnter2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnTriggerEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnTriggerExit2D
void FMODUnity::StudioEventEmitter::OnTriggerExit2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnTriggerExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnCollisionEnter
void FMODUnity::StudioEventEmitter::OnCollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnCollisionExit
void FMODUnity::StudioEventEmitter::OnCollisionExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnCollisionEnter2D
void FMODUnity::StudioEventEmitter::OnCollisionEnter2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnCollisionEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.OnCollisionExit2D
void FMODUnity::StudioEventEmitter::OnCollisionExit2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::OnCollisionExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.HandleGameEvent
void FMODUnity::StudioEventEmitter::HandleGameEvent(::FMODUnity::EmitterGameEvent gameEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameEvent);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.Lookup
void FMODUnity::StudioEventEmitter::Lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.Play
void FMODUnity::StudioEventEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.Stop
void FMODUnity::StudioEventEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.SetParameter
void FMODUnity::StudioEventEmitter::SetParameter(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::SetParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: FMODUnity.StudioEventEmitter.IsPlaying
bool FMODUnity::StudioEventEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioEventEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.StudioListener
#include "FMODUnity/StudioListener.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& FMODUnity::StudioListener::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D rigidBody2D
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& FMODUnity::StudioListener::dyn_rigidBody2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::dyn_rigidBody2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody2D"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ListenerNumber
[[deprecated("Use field access instead!")]] int& FMODUnity::StudioListener::dyn_ListenerNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::dyn_ListenerNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ListenerNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.StudioListener.OnEnable
void FMODUnity::StudioListener::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioListener.OnDisable
void FMODUnity::StudioListener::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioListener.Update
void FMODUnity::StudioListener::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioListener.SetListenerLocation
void FMODUnity::StudioListener::SetListenerLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioListener::SetListenerLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListenerLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.EmitterRef
#include "FMODUnity/EmitterRef.hpp"
// Including type: FMODUnity.StudioEventEmitter
#include "FMODUnity/StudioEventEmitter.hpp"
// Including type: FMODUnity.ParamRef
#include "FMODUnity/ParamRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMODUnity.StudioEventEmitter Target
[[deprecated("Use field access instead!")]] ::FMODUnity::StudioEventEmitter*& FMODUnity::EmitterRef::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterRef::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::FMODUnity::StudioEventEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.ParamRef[] Params
[[deprecated("Use field access instead!")]] ::ArrayW<::FMODUnity::ParamRef*>& FMODUnity::EmitterRef::dyn_Params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::EmitterRef::dyn_Params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Params"))->offset;
  return *reinterpret_cast<::ArrayW<::FMODUnity::ParamRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMODUnity.StudioParameterTrigger
#include "FMODUnity/StudioParameterTrigger.hpp"
// Including type: FMODUnity.EmitterRef
#include "FMODUnity/EmitterRef.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FMODUnity.EmitterRef[] Emitters
[[deprecated("Use field access instead!")]] ::ArrayW<::FMODUnity::EmitterRef*>& FMODUnity::StudioParameterTrigger::dyn_Emitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::dyn_Emitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Emitters"))->offset;
  return *reinterpret_cast<::ArrayW<::FMODUnity::EmitterRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FMODUnity.EmitterGameEvent TriggerEvent
[[deprecated("Use field access instead!")]] ::FMODUnity::EmitterGameEvent& FMODUnity::StudioParameterTrigger::dyn_TriggerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::dyn_TriggerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerEvent"))->offset;
  return *reinterpret_cast<::FMODUnity::EmitterGameEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String CollisionTag
[[deprecated("Use field access instead!")]] ::StringW& FMODUnity::StudioParameterTrigger::dyn_CollisionTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::dyn_CollisionTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.Start
void FMODUnity::StudioParameterTrigger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnDestroy
void FMODUnity::StudioParameterTrigger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnEnable
void FMODUnity::StudioParameterTrigger::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnDisable
void FMODUnity::StudioParameterTrigger::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnTriggerEnter
void FMODUnity::StudioParameterTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnTriggerExit
void FMODUnity::StudioParameterTrigger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnTriggerEnter2D
void FMODUnity::StudioParameterTrigger::OnTriggerEnter2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnTriggerEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnTriggerExit2D
void FMODUnity::StudioParameterTrigger::OnTriggerExit2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnTriggerExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnCollisionEnter
void FMODUnity::StudioParameterTrigger::OnCollisionEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnCollisionExit
void FMODUnity::StudioParameterTrigger::OnCollisionExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnCollisionEnter2D
void FMODUnity::StudioParameterTrigger::OnCollisionEnter2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnCollisionEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.OnCollisionExit2D
void FMODUnity::StudioParameterTrigger::OnCollisionExit2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::OnCollisionExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.HandleGameEvent
void FMODUnity::StudioParameterTrigger::HandleGameEvent(::FMODUnity::EmitterGameEvent gameEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameEvent);
}
// Autogenerated method: FMODUnity.StudioParameterTrigger.TriggerParameters
void FMODUnity::StudioParameterTrigger::TriggerParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::TriggerParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Utils.xxHash
#include "CodeStage/AntiCheat/Utils/xxHash.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 PRIME32_1
uint CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_1"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 PRIME32_1
void CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_1", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 PRIME32_2
uint CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_2"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 PRIME32_2
void CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_2", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 PRIME32_3
uint CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_3"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 PRIME32_3
void CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_3(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_3", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 PRIME32_4
uint CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_4"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 PRIME32_4
void CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_4", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 PRIME32_5
uint CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_get_PRIME32_5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_5"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 PRIME32_5
void CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_5(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::_set_PRIME32_5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Utils", "xxHash", "PRIME32_5", value));
}
// Autogenerated method: CodeStage.AntiCheat.Utils.xxHash.CalculateHash
uint CodeStage::AntiCheat::Utils::xxHash::CalculateHash(::ArrayW<uint8_t> buf, int len, uint seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Utils::xxHash::CalculateHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Utils", "xxHash", "CalculateHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(seed)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf, len, seed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredBool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte cryptoKey
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::_set_cryptoKey(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte currentCryptoKey
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hiddenValue
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValue
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::ObscuredBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::SetNewCryptoKey(uint8_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Encrypt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Encrypt(bool value, uint8_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Decrypt
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Decrypt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Decrypt
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Decrypt(int value, uint8_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.GetEncrypted
int CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::SetEncrypted(int encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.GetDecrypted
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.InternalDecrypt
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredBool", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredByte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte cryptoKey
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::_set_cryptoKey(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte currentCryptoKey
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte hiddenValue
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte fakeValue
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ObscuredByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::SetNewCryptoKey(uint8_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.EncryptDecrypt
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::EncryptDecrypt(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.EncryptDecrypt
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::EncryptDecrypt(uint8_t value, uint8_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.GetEncrypted
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::SetEncrypted(uint8_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.GetDecrypted
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.InternalDecrypt
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredByte.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredByte", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredChar.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char cryptoKey
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Char cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_set_cryptoKey(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Char currentCryptoKey
[[deprecated("Use field access instead!")]] ::Il2CppChar& CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char hiddenValue
[[deprecated("Use field access instead!")]] ::Il2CppChar& CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char fakeValue
[[deprecated("Use field access instead!")]] ::Il2CppChar& CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ObscuredChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetNewCryptoKey(::Il2CppChar newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.EncryptDecrypt
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.EncryptDecrypt
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt(::Il2CppChar value, ::Il2CppChar key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.GetEncrypted
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetEncrypted(::Il2CppChar encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.GetDecrypted
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.InternalDecrypt
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredDecimal.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal/DecimalLongBytesUnion
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredDecimal_DecimalLongBytesUnion.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 cryptoKey
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::_set_cryptoKey(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 currentCryptoKey
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.Common.ACTkByte16 hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Common::ACTkByte16& CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::Common::ACTkByte16*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal fakeValue
[[deprecated("Use field access instead!")]] ::System::Decimal& CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ObscuredDecimal(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::SetNewCryptoKey(int64_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Encrypt
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Encrypt(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Encrypt
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Encrypt(::System::Decimal value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte16 CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalEncrypt(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte16 CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalEncrypt(::System::Decimal value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Decrypt
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Decrypt(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Decrypt
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Decrypt(::System::Decimal value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.GetEncrypted
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::SetEncrypted(::System::Decimal encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.GetDecrypted
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.InternalDecrypt
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.op_Explicit
CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ObscuredDecimal(::CodeStage::AntiCheat::ObscuredTypes::ObFlt& f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDecimal.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDecimal", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredDouble.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble/DoubleLongBytesUnion
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredDouble_DoubleLongBytesUnion.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 cryptoKey
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::_set_cryptoKey(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 currentCryptoKey
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.Common.ACTkByte8 hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Common::ACTkByte8& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::Common::ACTkByte8*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] hiddenValueOld
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_hiddenValueOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_hiddenValueOld");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValueOld"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double fakeValue
[[deprecated("Use field access instead!")]] double& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ObscuredDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::SetNewCryptoKey(int64_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Encrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Encrypt(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Encrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Encrypt(double value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte8 CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalEncrypt(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte8, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte8 CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalEncrypt(double value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte8, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Decrypt
double CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Decrypt(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Decrypt
double CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Decrypt(int64_t value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.GetEncrypted
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::SetEncrypted(int64_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.GetDecrypted
double CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.InternalDecrypt
double CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredDouble", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt/FloatIntBytesUnion
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt_FloatIntBytesUnion.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cryptoKey
int CodeStage::AntiCheat::ObscuredTypes::ObFlt::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::_set_cryptoKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCryptoKey
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.Common.ACTkByte4 hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Common::ACTkByte4& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::Common::ACTkByte4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] hiddenValueOld
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_hiddenValueOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_hiddenValueOld");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValueOld"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fakeValue
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt..ctor
CodeStage::AntiCheat::ObscuredTypes::ObFlt::ObFlt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetNewCryptoKey(int newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt(float value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte4 CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.InternalEncrypt
::CodeStage::AntiCheat::Common::ACTkByte4 CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt(float value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Common::ACTkByte4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Decrypt
float CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Decrypt
float CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt(int value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.GetEncrypted
int CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetEncrypted(int encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.GetDecrypted
float CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.InternalDecrypt
float CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObFlt obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObFlt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObFlt CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObFlt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObFlt.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObFlt CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObFlt::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObFlt", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObFlt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObInt
#include "CodeStage/AntiCheat/ObscuredTypes/ObInt.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredDouble
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredDouble.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredUInt.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cryptoKey
int CodeStage::AntiCheat::ObscuredTypes::ObInt::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObInt::_set_cryptoKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCryptoKey
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hiddenValue
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fakeValue
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt..ctor
CodeStage::AntiCheat::ObscuredTypes::ObInt::ObInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObInt::SetNewCryptoKey(int newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObInt::Encrypt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Encrypt
int CodeStage::AntiCheat::ObscuredTypes::ObInt::Encrypt(int value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Decrypt
int CodeStage::AntiCheat::ObscuredTypes::ObInt::Decrypt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Decrypt
int CodeStage::AntiCheat::ObscuredTypes::ObInt::Decrypt(int value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObInt::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObInt::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.GetEncrypted
int CodeStage::AntiCheat::ObscuredTypes::ObInt::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObInt::SetEncrypted(int encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.GetDecrypted
int CodeStage::AntiCheat::ObscuredTypes::ObInt::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.InternalDecrypt
int CodeStage::AntiCheat::ObscuredTypes::ObInt::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.op_Explicit
CodeStage::AntiCheat::ObscuredTypes::ObInt::operator ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObInt::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObInt obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObInt), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObInt), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObInt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObInt::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObInt::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObInt CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObInt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObInt.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObInt CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObInt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObInt::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObInt", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredLong.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 cryptoKey
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::_set_cryptoKey(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 currentCryptoKey
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 hiddenValue
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 fakeValue
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ObscuredLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::SetNewCryptoKey(int64_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Encrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Encrypt(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Decrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Decrypt(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Encrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Encrypt(int64_t value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Decrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Decrypt(int64_t value, int64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.GetEncrypted
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::SetEncrypted(int64_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.GetDecrypted
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.InternalDecrypt
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredLong.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredLong", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredLong, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredPrefs.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredPrefs_DataType.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte VERSION
uint8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "VERSION"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte VERSION
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_VERSION(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "VERSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String RAW_NOT_FOUND
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_RAW_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_RAW_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "RAW_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static private System.String RAW_NOT_FOUND
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_RAW_NOT_FOUND(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_RAW_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "RAW_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATA_SEPARATOR
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_DATA_SEPARATOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_DATA_SEPARATOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DATA_SEPARATOR"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATA_SEPARATOR
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_DATA_SEPARATOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_DATA_SEPARATOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DATA_SEPARATOR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean foreignSavesReported
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_foreignSavesReported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_foreignSavesReported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "foreignSavesReported"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean foreignSavesReported
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_foreignSavesReported(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_foreignSavesReported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "foreignSavesReported", value));
}
// Autogenerated static field getter
// Get static field: static private System.String cryptoKey
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_cryptoKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "cryptoKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String deviceId
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deviceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deviceId"));
}
// Autogenerated static field setter
// Set static field: static private System.String deviceId
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deviceId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deviceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deviceId", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 deviceIdHash
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deviceIdHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deviceIdHash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deviceIdHash"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 deviceIdHash
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deviceIdHash(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deviceIdHash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deviceIdHash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action onAlterationDetected
::System::Action* CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_onAlterationDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_onAlterationDetected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "onAlterationDetected"));
}
// Autogenerated static field setter
// Set static field: static public System.Action onAlterationDetected
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_onAlterationDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_onAlterationDetected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "onAlterationDetected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean preservePlayerPrefs
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_preservePlayerPrefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_preservePlayerPrefs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "preservePlayerPrefs"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean preservePlayerPrefs
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_preservePlayerPrefs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_preservePlayerPrefs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "preservePlayerPrefs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action onPossibleForeignSavesDetected
::System::Action* CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_onPossibleForeignSavesDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_onPossibleForeignSavesDetected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "onPossibleForeignSavesDetected"));
}
// Autogenerated static field setter
// Set static field: static public System.Action onPossibleForeignSavesDetected
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_onPossibleForeignSavesDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_onPossibleForeignSavesDetected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "onPossibleForeignSavesDetected", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel lockToDevice
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_lockToDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_lockToDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "lockToDevice"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel lockToDevice
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_lockToDevice(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_lockToDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "lockToDevice", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean readForeignSaves
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_readForeignSaves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_readForeignSaves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "readForeignSaves"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean readForeignSaves
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_readForeignSaves(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_readForeignSaves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "readForeignSaves", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean emergencyMode
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_emergencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_emergencyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "emergencyMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean emergencyMode
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_emergencyMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_emergencyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "emergencyMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char DEPRECATED_RAW_SEPARATOR
::Il2CppChar CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_DEPRECATED_RAW_SEPARATOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_DEPRECATED_RAW_SEPARATOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DEPRECATED_RAW_SEPARATOR"));
}
// Autogenerated static field setter
// Set static field: static private System.Char DEPRECATED_RAW_SEPARATOR
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_DEPRECATED_RAW_SEPARATOR(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_DEPRECATED_RAW_SEPARATOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DEPRECATED_RAW_SEPARATOR", value));
}
// Autogenerated static field getter
// Get static field: static private System.String deprecatedDeviceId
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deprecatedDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_get_deprecatedDeviceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deprecatedDeviceId"));
}
// Autogenerated static field setter
// Set static field: static private System.String deprecatedDeviceId
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deprecatedDeviceId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_set_deprecatedDeviceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "deprecatedDeviceId", value));
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.set_CryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_CryptoKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_CryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "set_CryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.get_CryptoKey
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_CryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_CryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "get_CryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.get_DeviceId
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "get_DeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.set_DeviceId
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_DeviceId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_DeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "set_DeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.get_DeviceID
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "get_DeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.set_DeviceID
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_DeviceID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::set_DeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "set_DeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.get_DeviceIdHash
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceIdHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeviceIdHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "get_DeviceIdHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.ForceLockToDeviceInit
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::ForceLockToDeviceInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::ForceLockToDeviceInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "ForceLockToDeviceInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetNewCryptoKey(::StringW newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetInt
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetInt(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetInt
int CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetInt(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetInt
int CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetInt(::StringW key, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptIntValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptIntValue(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptIntValue
int CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptIntValue(::StringW key, ::StringW encryptedInput, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetUInt
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetUInt(::StringW key, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetUInt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetUInt(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetUInt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetUInt(::StringW key, uint defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptUIntValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptUIntValue(::StringW key, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptUIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptUIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptUIntValue
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptUIntValue(::StringW key, ::StringW encryptedInput, uint defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptUIntValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptUIntValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetString
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetString(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetString(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetString(::StringW key, ::StringW defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptStringValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptStringValue(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptStringValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptStringValue(::StringW key, ::StringW encryptedInput, ::StringW defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetFloat
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetFloat(::StringW key, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetFloat
float CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetFloat(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetFloat
float CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetFloat(::StringW key, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptFloatValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptFloatValue(::StringW key, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptFloatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptFloatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptFloatValue
float CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptFloatValue(::StringW key, ::StringW encryptedInput, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptFloatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptFloatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetDouble
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetDouble(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetDouble
double CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDouble(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetDouble
double CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDouble(::StringW key, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptDoubleValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDoubleValue(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptDoubleValue
double CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptDoubleValue(::StringW key, ::StringW encryptedInput, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetDecimal
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetDecimal(::StringW key, ::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetDecimal
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDecimal(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetDecimal
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDecimal(::StringW key, ::System::Decimal defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptDecimalValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDecimalValue(::StringW key, ::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDecimalValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptDecimalValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptDecimalValue
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptDecimalValue(::StringW key, ::StringW encryptedInput, ::System::Decimal defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptDecimalValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptDecimalValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetLong
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetLong(::StringW key, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetLong
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetLong(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetLong
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetLong(::StringW key, int64_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptLongValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptLongValue(::StringW key, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptLongValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptLongValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptLongValue
int64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptLongValue(::StringW key, ::StringW encryptedInput, int64_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptLongValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptLongValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetULong
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetULong(::StringW key, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetULong
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetULong(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetULong
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetULong(::StringW key, uint64_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptULongValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptULongValue(::StringW key, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptULongValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptULongValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptULongValue
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptULongValue(::StringW key, ::StringW encryptedInput, uint64_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptULongValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptULongValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetBool
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetBool(::StringW key, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetBool
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetBool(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetBool
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetBool(::StringW key, bool defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptBoolValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptBoolValue(::StringW key, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptBoolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptBoolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptBoolValue
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptBoolValue(::StringW key, ::StringW encryptedInput, bool defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptBoolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptBoolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetByteArray
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetByteArray(::StringW key, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetByteArray
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetByteArray(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetByteArray
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetByteArray(::StringW key, uint8_t defaultValue, int defaultLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(defaultLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue, defaultLength);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptByteArrayValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptByteArrayValue(::StringW key, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptByteArrayValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptByteArrayValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptByteArrayValue
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptByteArrayValue(::StringW key, ::StringW encryptedInput, uint8_t defaultValue, int defaultLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptByteArrayValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptByteArrayValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(defaultLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue, defaultLength);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.ConstructByteArray
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::ConstructByteArray(uint8_t value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::ConstructByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "ConstructByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, length);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetVector2
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetVector2(::StringW key, ::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetVector2
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector2(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetVector2
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector2(::StringW key, ::UnityEngine::Vector2 defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptVector2Value
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptVector2Value(::StringW key, ::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptVector2Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptVector2Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptVector2Value
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptVector2Value(::StringW key, ::StringW encryptedInput, ::UnityEngine::Vector2 defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptVector2Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptVector2Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetVector3
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetVector3(::StringW key, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetVector3
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector3(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetVector3
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector3(::StringW key, ::UnityEngine::Vector3 defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptVector3Value
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptVector3Value(::StringW key, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptVector3Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptVector3Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptVector3Value
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptVector3Value(::StringW key, ::StringW encryptedInput, ::UnityEngine::Vector3 defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptVector3Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptVector3Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetQuaternion
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetQuaternion(::StringW key, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetQuaternion
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetQuaternion(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetQuaternion
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetQuaternion(::StringW key, ::UnityEngine::Quaternion defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptQuaternionValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptQuaternionValue(::StringW key, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptQuaternionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptQuaternionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptQuaternionValue
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptQuaternionValue(::StringW key, ::StringW encryptedInput, ::UnityEngine::Quaternion defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptQuaternionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptQuaternionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetColor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetColor(::StringW key, ::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetColor
::UnityEngine::Color32 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetColor(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetColor
::UnityEngine::Color32 CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetColor(::StringW key, ::UnityEngine::Color32 defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptColorValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptColorValue(::StringW key, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptColorValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptColorValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetRect
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetRect(::StringW key, ::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetRect
::UnityEngine::Rect CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRect(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetRect
::UnityEngine::Rect CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRect(::StringW key, ::UnityEngine::Rect defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptRectValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptRectValue(::StringW key, ::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptRectValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptRectValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptRectValue
::UnityEngine::Rect CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptRectValue(::StringW key, ::StringW encryptedInput, ::UnityEngine::Rect defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptRectValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptRectValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput, defaultValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SetRawValue
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetRawValue(::StringW key, ::StringW encryptedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SetRawValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SetRawValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedValue);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetRawValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRawValue(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRawValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetRawValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetRawValueType
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRawValueType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetRawValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetRawValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptKey
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.HasKey
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::HasKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::HasKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "HasKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DeleteKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeleteKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeleteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DeleteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DeleteAll
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeleteAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeleteAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DeleteAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.Save
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetEncryptedPrefsString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetEncryptedPrefsString(::StringW key, ::StringW encryptedKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetEncryptedPrefsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetEncryptedPrefsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptData
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptData(::StringW key, ::ArrayW<uint8_t> cleanBytes, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(cleanBytes), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, cleanBytes, type);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DecryptData
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptData(::StringW key, ::StringW encryptedInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DecryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DecryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(encryptedInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, encryptedInput);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.CalculateChecksum
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::CalculateChecksum(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::CalculateChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "CalculateChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.SavesTampered
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SavesTampered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::SavesTampered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "SavesTampered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.PossibleForeignSavesDetected
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::PossibleForeignSavesDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::PossibleForeignSavesDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "PossibleForeignSavesDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.GetDeviceId
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::GetDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "GetDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.EncryptDecryptBytes
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDecryptBytes(::ArrayW<uint8_t> bytes, int dataLength, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::EncryptDecryptBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "EncryptDecryptBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, dataLength, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DeprecatedDecryptValue
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeprecatedDecryptValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeprecatedDecryptValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DeprecatedDecryptValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.DeprecatedCalculateChecksum
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeprecatedCalculateChecksum(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeprecatedCalculateChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "DeprecatedCalculateChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs.get_DeprecatedDeviceId
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeprecatedDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::get_DeprecatedDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", "get_DeprecatedDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredPrefs_DataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Unknown
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Unknown
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Unknown(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Int
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Int
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Int(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType UInt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_UInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_UInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "UInt"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType UInt
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_UInt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_UInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "UInt", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType String
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "String"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType String
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_String(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Float
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Float
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Float(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Double
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Double
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Double(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Decimal
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Decimal
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Decimal(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Long
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Long
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Long(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType ULong
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_ULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_ULong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "ULong"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType ULong
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_ULong(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_ULong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "ULong", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Bool
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Bool
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Bool(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType ByteArray
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType ByteArray
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_ByteArray(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Vector2
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Vector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Vector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Vector2"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Vector2
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Vector2(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Vector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Vector2", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Vector3
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Vector3"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Vector3
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Vector3(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Quaternion
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Quaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Quaternion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Quaternion"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Quaternion
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Quaternion(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Quaternion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Quaternion", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Color
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Color"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Color
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Color(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Rect
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_get_Rect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Rect"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DataType Rect
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Rect(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::_set_Rect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DataType", "Rect", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredPrefs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel None
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel None
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_None(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel Soft
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_Soft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_Soft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "Soft"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel Soft
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_Soft(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_Soft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "Soft", value));
}
// Autogenerated static field getter
// Get static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel Strict
::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public CodeStage.AntiCheat.ObscuredTypes.ObscuredPrefs/DeviceLockLevel Strict
void CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_Strict(::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredPrefs/DeviceLockLevel", "Strict", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredPrefs::DeviceLockLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.BitconverterExt
#include "CodeStage/AntiCheat/ObscuredTypes/BitconverterExt.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.BitconverterExt.GetBytes
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::BitconverterExt::GetBytes(::System::Decimal dec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::BitconverterExt::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "BitconverterExt", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dec)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dec);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.BitconverterExt.ToDecimal
::System::Decimal CodeStage::AntiCheat::ObscuredTypes::BitconverterExt::ToDecimal(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::BitconverterExt::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "BitconverterExt", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredQuaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cryptoKey
int CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_set_cryptoKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "cryptoKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion identity
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_get_identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "identity"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion identity
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_set_identity(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_set_identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "identity", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCryptoKey
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion& CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion fakeValue
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ObscuredQuaternion(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ObscuredQuaternion(float x, float y, float z, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, w);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetNewCryptoKey(int newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt(::UnityEngine::Quaternion value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt(float x, float y, float z, float w, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, w, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.Decrypt
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.Decrypt
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.GetEncrypted
::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetEncrypted(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.GetDecrypted
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.InternalDecrypt
::UnityEngine::Quaternion CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.CompareQuaternionsWithTolerance
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::CompareQuaternionsWithTolerance(::UnityEngine::Quaternion q1, ::UnityEngine::Quaternion q2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::CompareQuaternionsWithTolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareQuaternionsWithTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q1), ::il2cpp_utils::ExtractType(q2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, q1, q2);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredSByte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.SByte cryptoKey
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.SByte cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::_set_cryptoKey(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.SByte currentCryptoKey
[[deprecated("Use field access instead!")]] int8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.SByte hiddenValue
[[deprecated("Use field access instead!")]] int8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.SByte fakeValue
[[deprecated("Use field access instead!")]] int8_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ObscuredSByte(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::SetNewCryptoKey(int8_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.EncryptDecrypt
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::EncryptDecrypt(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.EncryptDecrypt
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::EncryptDecrypt(int8_t value, int8_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.GetEncrypted
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::SetEncrypted(int8_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.GetDecrypted
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.InternalDecrypt
int8_t CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredSByte.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredSByte", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredSByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredShort.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int16 cryptoKey
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int16 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::_set_cryptoKey(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 currentCryptoKey
[[deprecated("Use field access instead!")]] int16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 hiddenValue
[[deprecated("Use field access instead!")]] int16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 fakeValue
[[deprecated("Use field access instead!")]] int16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ObscuredShort(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::SetNewCryptoKey(int16_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.EncryptDecrypt
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::EncryptDecrypt(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.EncryptDecrypt
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::EncryptDecrypt(int16_t value, int16_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.GetEncrypted
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::SetEncrypted(int16_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.GetDecrypted
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.InternalDecrypt
int16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredShort.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredShort", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredShort, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredString
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredString.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String cryptoKey
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_set_cryptoKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String currentCryptoKey
[[deprecated("Use field access instead!")]] ::StringW& CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_currentCryptoKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] hiddenValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_hiddenValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_inited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fakeValue
[[deprecated("Use field access instead!")]] ::StringW& CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_fakeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::dyn_fakeValueActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetNewCryptoKey(::StringW newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.EncryptDecrypt
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.EncryptDecrypt
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt(::StringW value, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.GetEncrypted
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetEncrypted(::StringW encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.GetDecrypted
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.InternalEncrypt
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.InternalEncrypt
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt(::StringW value, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "InternalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.InternalDecrypt
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.get_Length
int CodeStage::AntiCheat::ObscuredTypes::ObscuredString::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.GetBytes
::ArrayW<uint8_t> CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetBytes(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.GetString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetString(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.ArraysEquals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ArraysEquals(::ArrayW<uint8_t> a1, ::ArrayW<uint8_t> a2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ArraysEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "ArraysEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(a2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a1, a2);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.op_Equality
bool CodeStage::AntiCheat::ObscuredTypes::operator ==(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* a, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredString.op_Inequality
bool CodeStage::AntiCheat::ObscuredTypes::operator !=(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* a, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredUInt.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObInt
#include "CodeStage/AntiCheat/ObscuredTypes/ObInt.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 cryptoKey
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_set_cryptoKey(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 currentCryptoKey
[[deprecated("Use field access instead!")]] uint& CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 hiddenValue
[[deprecated("Use field access instead!")]] uint& CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 fakeValue
[[deprecated("Use field access instead!")]] uint& CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ObscuredUInt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetNewCryptoKey(uint newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Encrypt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Decrypt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Encrypt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt(uint value, uint key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Decrypt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt(uint value, uint key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.GetEncrypted
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetEncrypted(uint encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.GetDecrypted
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.InternalDecrypt
uint CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.op_Explicit
CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::operator ::CodeStage::AntiCheat::ObscuredTypes::ObInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredULong.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt64 cryptoKey
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::_set_cryptoKey(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 currentCryptoKey
[[deprecated("Use field access instead!")]] uint64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 hiddenValue
[[deprecated("Use field access instead!")]] uint64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 fakeValue
[[deprecated("Use field access instead!")]] uint64_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ObscuredULong(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::SetNewCryptoKey(uint64_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Encrypt
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Encrypt(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Decrypt
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Decrypt(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Encrypt
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Encrypt(uint64_t value, uint64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Decrypt
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Decrypt(uint64_t value, uint64_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.GetEncrypted
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::SetEncrypted(uint64_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.GetDecrypted
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.InternalDecrypt
uint64_t CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredULong.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredULong", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredULong, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredUShort.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt16 cryptoKey
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::_set_cryptoKey(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "cryptoKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 currentCryptoKey
[[deprecated("Use field access instead!")]] uint16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 hiddenValue
[[deprecated("Use field access instead!")]] uint16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 fakeValue
[[deprecated("Use field access instead!")]] uint16_t& CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ObscuredUShort(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::SetNewCryptoKey(uint16_t newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.EncryptDecrypt
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::EncryptDecrypt(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.EncryptDecrypt
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::EncryptDecrypt(uint16_t value, uint16_t key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::EncryptDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "EncryptDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.GetEncrypted
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::SetEncrypted(uint16_t encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.GetDecrypted
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.InternalDecrypt
uint16_t CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.op_Increment
::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort CodeStage::AntiCheat::ObscuredTypes::operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::op_Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "op_Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredUShort.op_Decrement
::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort CodeStage::AntiCheat::ObscuredTypes::operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort& input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort::op_Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUShort", "op_Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUShort, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredVector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cryptoKey
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_set_cryptoKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "cryptoKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 zero
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 zero
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_set_zero(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCryptoKey
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2/RawEncryptedVector2 hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 fakeValue
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ObscuredVector2(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ObscuredVector2(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.get_x
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.set_x
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_x(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.get_y
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.set_y
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.get_Item
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.set_Item
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::SetNewCryptoKey(int newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt(::UnityEngine::Vector2 value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt(float x, float y, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.Decrypt
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.Decrypt
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.GetEncrypted
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::SetEncrypted(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::RawEncryptedVector2 encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.GetDecrypted
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.InternalDecrypt
::UnityEngine::Vector2 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.CompareVectorsWithTolerance
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::CompareVectorsWithTolerance(::UnityEngine::Vector2 vector1, ::UnityEngine::Vector2 vector2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::CompareVectorsWithTolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareVectorsWithTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector1), ::il2cpp_utils::ExtractType(vector2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, vector1, vector2);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.InternalDecryptField
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalDecryptField(int encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalDecryptField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecryptField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.InternalEncryptField
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalEncryptField(float encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::InternalEncryptField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalEncryptField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector2.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector2::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredVector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cryptoKey
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_get_cryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_get_cryptoKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "cryptoKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_set_cryptoKey(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_set_cryptoKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "cryptoKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 zero
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 zero
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_set_zero(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCryptoKey
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_currentCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_currentCryptoKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCryptoKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3/RawEncryptedVector3 hiddenValue
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_hiddenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_hiddenValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hiddenValue"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_inited");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 fakeValue
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_fakeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_fakeValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValue"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fakeValueActive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_fakeValueActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::dyn_fakeValueActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeValueActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ObscuredVector3(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3..ctor
CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ObscuredVector3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.get_x
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.set_x
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_x(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.get_y
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.set_y
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.get_z
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.set_z
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_z(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.get_Item
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.set_Item
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.SetNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::SetNewCryptoKey(int newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::SetNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "SetNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newKey);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt(::UnityEngine::Vector3 value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Encrypt
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt(float x, float y, float z, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Decrypt
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Decrypt
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 value, int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, key);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.ApplyNewCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ApplyNewCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ApplyNewCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyNewCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.RandomizeCryptoKey
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RandomizeCryptoKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RandomizeCryptoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RandomizeCryptoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.GetEncrypted
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.SetEncrypted
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::SetEncrypted(::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::RawEncryptedVector3 encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::SetEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.GetDecrypted
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetDecrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetDecrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDecrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.InternalDecrypt
::UnityEngine::Vector3 CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalDecrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalDecrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.CompareVectorsWithTolerance
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::CompareVectorsWithTolerance(::UnityEngine::Vector3 vector1, ::UnityEngine::Vector3 vector2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::CompareVectorsWithTolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareVectorsWithTolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector1), ::il2cpp_utils::ExtractType(vector2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, vector1, vector2);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.InternalDecryptField
float CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalDecryptField(int encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalDecryptField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalDecryptField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.InternalEncryptField
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalEncryptField(float encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::InternalEncryptField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalEncryptField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encrypted)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, encrypted);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3..cctor
void CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.Equals
bool CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.GetHashCode
int CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.ToString
::StringW CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Addition
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator+(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Addition
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator+(const ::UnityEngine::Vector3& a, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Addition
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator+(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Subtraction
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator-(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Subtraction
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator-(const ::UnityEngine::Vector3& a, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Subtraction
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator-(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_UnaryNegation
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator-(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Multiply
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator*(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Multiply
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator*(const float& d, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, a);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Division
::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3 CodeStage::AntiCheat::ObscuredTypes::operator/(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Equality
bool CodeStage::AntiCheat::ObscuredTypes::operator ==(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& lhs, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Equality
bool CodeStage::AntiCheat::ObscuredTypes::operator ==(const ::UnityEngine::Vector3& lhs, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Equality
bool CodeStage::AntiCheat::ObscuredTypes::operator ==(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Inequality
bool CodeStage::AntiCheat::ObscuredTypes::operator !=(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& lhs, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Inequality
bool CodeStage::AntiCheat::ObscuredTypes::operator !=(const ::UnityEngine::Vector3& lhs, const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: CodeStage.AntiCheat.ObscuredTypes.ObscuredVector3.op_Inequality
bool CodeStage::AntiCheat::ObscuredTypes::operator !=(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredVector3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.ObscuredTypes", "ObscuredVector3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Detectors.ActDetectorBase
#include "CodeStage/AntiCheat/Detectors/ActDetectorBase.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.String CONTAINER_NAME
::StringW CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_CONTAINER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_CONTAINER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "CONTAINER_NAME"));
}
// Autogenerated static field setter
// Set static field: static protected System.String CONTAINER_NAME
void CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_CONTAINER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_CONTAINER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "CONTAINER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String MENU_PATH
::StringW CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_MENU_PATH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_MENU_PATH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "MENU_PATH"));
}
// Autogenerated static field setter
// Set static field: static protected System.String MENU_PATH
void CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_MENU_PATH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_MENU_PATH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "MENU_PATH", value));
}
// Autogenerated static field getter
// Get static field: static protected System.String GAME_OBJECT_MENU_PATH
::StringW CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_GAME_OBJECT_MENU_PATH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_GAME_OBJECT_MENU_PATH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "GAME_OBJECT_MENU_PATH"));
}
// Autogenerated static field setter
// Set static field: static protected System.String GAME_OBJECT_MENU_PATH
void CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_GAME_OBJECT_MENU_PATH(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_GAME_OBJECT_MENU_PATH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "GAME_OBJECT_MENU_PATH", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.GameObject detectorsContainer
::UnityEngine::GameObject* CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_detectorsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_get_detectorsContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "detectorsContainer"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.GameObject detectorsContainer
void CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_detectorsContainer(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::_set_detectorsContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ActDetectorBase", "detectorsContainer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoStart
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_autoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_autoStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean keepAlive
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_keepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_keepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoDispose
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_autoDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_autoDispose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoDispose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Events.UnityEvent detectionEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Events.UnityAction detectionAction
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionAction"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean detectionEventHasListener
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionEventHasListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_detectionEventHasListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionEventHasListener"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isRunning
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_isRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_isRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean started
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.Start
void CodeStage::AntiCheat::Detectors::ActDetectorBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.OnEnable
void CodeStage::AntiCheat::Detectors::ActDetectorBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.OnDisable
void CodeStage::AntiCheat::Detectors::ActDetectorBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.OnApplicationQuit
void CodeStage::AntiCheat::Detectors::ActDetectorBase::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.OnDestroy
void CodeStage::AntiCheat::Detectors::ActDetectorBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.Init
bool CodeStage::AntiCheat::Detectors::ActDetectorBase::Init(::CodeStage::AntiCheat::Detectors::ActDetectorBase* instance, ::StringW detectorName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance, detectorName);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.DisposeInternal
void CodeStage::AntiCheat::Detectors::ActDetectorBase::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.DetectorHasAdditionalCallbacks
bool CodeStage::AntiCheat::Detectors::ActDetectorBase::DetectorHasAdditionalCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::DetectorHasAdditionalCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.OnCheatingDetected
void CodeStage::AntiCheat::Detectors::ActDetectorBase::OnCheatingDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::OnCheatingDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::ActDetectorBase::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::ActDetectorBase::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.PauseDetector
void CodeStage::AntiCheat::Detectors::ActDetectorBase::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ActDetectorBase.ResumeDetector
void CodeStage::AntiCheat::Detectors::ActDetectorBase::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ActDetectorBase::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.Detectors.InjectionDetector
#include "CodeStage/AntiCheat/Detectors/InjectionDetector.hpp"
// Including type: CodeStage.AntiCheat.Detectors.InjectionDetector/AllowedAssembly
#include "CodeStage/AntiCheat/Detectors/InjectionDetector_AllowedAssembly.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String COMPONENT_NAME
::StringW CodeStage::AntiCheat::Detectors::InjectionDetector::_get_COMPONENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_get_COMPONENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "InjectionDetector", "COMPONENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static System.String COMPONENT_NAME
void CodeStage::AntiCheat::Detectors::InjectionDetector::_set_COMPONENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_set_COMPONENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "InjectionDetector", "COMPONENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static System.String FINAL_LOG_PREFIX
::StringW CodeStage::AntiCheat::Detectors::InjectionDetector::_get_FINAL_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_get_FINAL_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "InjectionDetector", "FINAL_LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static System.String FINAL_LOG_PREFIX
void CodeStage::AntiCheat::Detectors::InjectionDetector::_set_FINAL_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_set_FINAL_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "InjectionDetector", "FINAL_LOG_PREFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 instancesInScene
int CodeStage::AntiCheat::Detectors::InjectionDetector::_get_instancesInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_get_instancesInScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "InjectionDetector", "instancesInScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 instancesInScene
void CodeStage::AntiCheat::Detectors::InjectionDetector::_set_instancesInScene(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_set_instancesInScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "InjectionDetector", "instancesInScene", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC69D0
// Autogenerated static field getter
// Get static field: static private CodeStage.AntiCheat.Detectors.InjectionDetector <Instance>k__BackingField
::CodeStage::AntiCheat::Detectors::InjectionDetector* CodeStage::AntiCheat::Detectors::InjectionDetector::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::Detectors::InjectionDetector*>("CodeStage.AntiCheat.Detectors", "InjectionDetector", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private CodeStage.AntiCheat.Detectors.InjectionDetector <Instance>k__BackingField
void CodeStage::AntiCheat::Detectors::InjectionDetector::_set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::InjectionDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "InjectionDetector", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Events.UnityAction`1<System.String> detectionActionWithArgument
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction_1<::StringW>*& CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_detectionActionWithArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_detectionActionWithArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionActionWithArgument"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean signaturesAreNotGenuine
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_signaturesAreNotGenuine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_signaturesAreNotGenuine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signaturesAreNotGenuine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CodeStage.AntiCheat.Detectors.InjectionDetector/AllowedAssembly[] allowedAssemblies
[[deprecated("Use field access instead!")]] ::ArrayW<::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly*>& CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_allowedAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_allowedAssemblies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowedAssemblies"))->offset;
  return *reinterpret_cast<::ArrayW<::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] hexTable
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_hexTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::dyn_hexTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hexTable"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StartDetection
void CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StartDetection
void CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StartDetection
void CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection(::UnityEngine::Events::UnityAction_1<::StringW>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StopDetection
void CodeStage::AntiCheat::Detectors::InjectionDetector::StopDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StopDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "StopDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.Dispose
void CodeStage::AntiCheat::Detectors::InjectionDetector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.get_Instance
::CodeStage::AntiCheat::Detectors::InjectionDetector* CodeStage::AntiCheat::Detectors::InjectionDetector::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::InjectionDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.set_Instance
void CodeStage::AntiCheat::Detectors::InjectionDetector::set_Instance(::CodeStage::AntiCheat::Detectors::InjectionDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.get_GetOrCreateInstance
::CodeStage::AntiCheat::Detectors::InjectionDetector* CodeStage::AntiCheat::Detectors::InjectionDetector::get_GetOrCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::get_GetOrCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "InjectionDetector", "get_GetOrCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::InjectionDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.Awake
void CodeStage::AntiCheat::Detectors::InjectionDetector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.OnLevelWasLoadedNew
void CodeStage::AntiCheat::Detectors::InjectionDetector::OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::OnLevelWasLoadedNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelWasLoadedNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.OnLevelLoadedCallback
void CodeStage::AntiCheat::Detectors::InjectionDetector::OnLevelLoadedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::OnLevelLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StartDetectionInternal
void CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Events::UnityAction_1<::StringW>* callbackWithArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDetectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(callbackWithArgument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, callbackWithArgument);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.OnCheatingDetected
void CodeStage::AntiCheat::Detectors::InjectionDetector::OnCheatingDetected(::StringW cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::OnCheatingDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCheatingDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.OnNewAssemblyLoaded
void CodeStage::AntiCheat::Detectors::InjectionDetector::OnNewAssemblyLoaded(::Il2CppObject* sender, ::System::AssemblyLoadEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::OnNewAssemblyLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewAssemblyLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.FindInjectionInCurrentAssemblies
bool CodeStage::AntiCheat::Detectors::InjectionDetector::FindInjectionInCurrentAssemblies(ByRef<::StringW> cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::FindInjectionInCurrentAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInjectionInCurrentAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(cause));
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.AssemblyAllowed
bool CodeStage::AntiCheat::Detectors::InjectionDetector::AssemblyAllowed(::System::Reflection::Assembly* ass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::AssemblyAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssemblyAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ass);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.LoadAndParseAllowedAssemblies
void CodeStage::AntiCheat::Detectors::InjectionDetector::LoadAndParseAllowedAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::LoadAndParseAllowedAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAndParseAllowedAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.GetAssemblyHash
int CodeStage::AntiCheat::Detectors::InjectionDetector::GetAssemblyHash(::System::Reflection::Assembly* ass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::GetAssemblyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssemblyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ass);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.PublicKeyTokenToString
::StringW CodeStage::AntiCheat::Detectors::InjectionDetector::PublicKeyTokenToString(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::PublicKeyTokenToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PublicKeyTokenToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, bytes);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.OnDestroy
void CodeStage::AntiCheat::Detectors::InjectionDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.PauseDetector
void CodeStage::AntiCheat::Detectors::InjectionDetector::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.ResumeDetector
void CodeStage::AntiCheat::Detectors::InjectionDetector::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::InjectionDetector::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.InjectionDetector.DisposeInternal
void CodeStage::AntiCheat::Detectors::InjectionDetector::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Detectors.InjectionDetector/AllowedAssembly
#include "CodeStage/AntiCheat/Detectors/InjectionDetector_AllowedAssembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] hashes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::dyn_hashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::dyn_hashes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector
#include "CodeStage/AntiCheat/Detectors/ObscuredCheatingDetector.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String COMPONENT_NAME
::StringW CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_COMPONENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_COMPONENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "COMPONENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static System.String COMPONENT_NAME
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_COMPONENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_COMPONENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "COMPONENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static System.String FINAL_LOG_PREFIX
::StringW CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_FINAL_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_FINAL_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "FINAL_LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static System.String FINAL_LOG_PREFIX
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_FINAL_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_FINAL_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "FINAL_LOG_PREFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 instancesInScene
int CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_instancesInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_instancesInScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "instancesInScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 instancesInScene
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_instancesInScene(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_instancesInScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "instancesInScene", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC6AC0
// Autogenerated static field getter
// Get static field: static private CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector <Instance>k__BackingField
::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector* CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector*>("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector <Instance>k__BackingField
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single floatEpsilon
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_floatEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_floatEpsilon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floatEpsilon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vector2Epsilon
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_vector2Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_vector2Epsilon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vector2Epsilon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vector3Epsilon
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_vector3Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_vector3Epsilon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vector3Epsilon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single quaternionEpsilon
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_quaternionEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::dyn_quaternionEpsilon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quaternionEpsilon"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StartDetection
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StartDetection
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetection(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StopDetection
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StopDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StopDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "StopDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.Dispose
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.get_Instance
::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector* CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.set_Instance
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::set_Instance(::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.get_GetOrCreateInstance
::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector* CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_GetOrCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_GetOrCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "get_GetOrCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.get_IsRunning
bool CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "ObscuredCheatingDetector", "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.Awake
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.OnLevelWasLoadedNew
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnLevelWasLoadedNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelWasLoadedNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.OnLevelLoadedCallback
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnLevelLoadedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnLevelLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StartDetectionInternal
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetectionInternal(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDetectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.OnDestroy
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.PauseDetector
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.ResumeDetector
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.ObscuredCheatingDetector.DisposeInternal
void CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::ObscuredCheatingDetector::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Detectors.SpeedHackDetector
#include "CodeStage/AntiCheat/Detectors/SpeedHackDetector.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String COMPONENT_NAME
::StringW CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_COMPONENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_COMPONENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "COMPONENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static System.String COMPONENT_NAME
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_COMPONENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_COMPONENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "COMPONENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static System.String FINAL_LOG_PREFIX
::StringW CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_FINAL_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_FINAL_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "FINAL_LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static System.String FINAL_LOG_PREFIX
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_FINAL_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_FINAL_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "FINAL_LOG_PREFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TICKS_PER_SECOND
int64_t CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_TICKS_PER_SECOND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_TICKS_PER_SECOND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "TICKS_PER_SECOND"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TICKS_PER_SECOND
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_TICKS_PER_SECOND(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_TICKS_PER_SECOND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "TICKS_PER_SECOND", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 THRESHOLD
int CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 THRESHOLD
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_THRESHOLD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single THRESHOLD_FLOAT
float CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_THRESHOLD_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_THRESHOLD_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "THRESHOLD_FLOAT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single THRESHOLD_FLOAT
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_THRESHOLD_FLOAT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_THRESHOLD_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "THRESHOLD_FLOAT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 instancesInScene
int CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_instancesInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_instancesInScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "instancesInScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 instancesInScene
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_instancesInScene(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_instancesInScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "instancesInScene", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC6B78
// Autogenerated static field getter
// Get static field: static private CodeStage.AntiCheat.Detectors.SpeedHackDetector <Instance>k__BackingField
::CodeStage::AntiCheat::Detectors::SpeedHackDetector* CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::Detectors::SpeedHackDetector*>("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private CodeStage.AntiCheat.Detectors.SpeedHackDetector <Instance>k__BackingField
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::SpeedHackDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single interval
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_interval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte maxFalsePositives
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_maxFalsePositives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_maxFalsePositives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFalsePositives"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 coolDown
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_coolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_coolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coolDown"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte currentFalsePositives
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_currentFalsePositives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_currentFalsePositives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentFalsePositives"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentCooldownShots
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_currentCooldownShots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_currentCooldownShots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCooldownShots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 ticksOnStart
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_ticksOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_ticksOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ticksOnStart"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 vulnerableTicksOnStart
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_vulnerableTicksOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_vulnerableTicksOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vulnerableTicksOnStart"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 prevTicks
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_prevTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_prevTicks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevTicks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 prevIntervalTicks
[[deprecated("Use field access instead!")]] int64_t& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_prevIntervalTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_prevIntervalTicks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevIntervalTicks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single vulnerableTimeOnStart
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_vulnerableTimeOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::dyn_vulnerableTimeOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vulnerableTimeOnStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, float interval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(interval)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, interval);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, float interval, uint8_t maxFalsePositives) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(interval), ::il2cpp_utils::ExtractType(maxFalsePositives)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, interval, maxFalsePositives);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, float interval, uint8_t maxFalsePositives, int coolDown) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(interval), ::il2cpp_utils::ExtractType(maxFalsePositives), ::il2cpp_utils::ExtractType(coolDown)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, interval, maxFalsePositives, coolDown);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StopDetection
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StopDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StopDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "StopDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.Dispose
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.get_Instance
::CodeStage::AntiCheat::Detectors::SpeedHackDetector* CodeStage::AntiCheat::Detectors::SpeedHackDetector::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::SpeedHackDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.set_Instance
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::set_Instance(::CodeStage::AntiCheat::Detectors::SpeedHackDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.get_GetOrCreateInstance
::CodeStage::AntiCheat::Detectors::SpeedHackDetector* CodeStage::AntiCheat::Detectors::SpeedHackDetector::get_GetOrCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::get_GetOrCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "SpeedHackDetector", "get_GetOrCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::SpeedHackDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.Awake
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.OnLevelWasLoadedNew
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnLevelWasLoadedNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelWasLoadedNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.OnLevelLoadedCallback
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnLevelLoadedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnLevelLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.OnApplicationPause
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.Update
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetectionInternal
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, float checkInterval, uint8_t falsePositives, int shotsTillCooldown) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDetectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(checkInterval), ::il2cpp_utils::ExtractType(falsePositives), ::il2cpp_utils::ExtractType(shotsTillCooldown)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, checkInterval, falsePositives, shotsTillCooldown);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.ResetStartTicks
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::ResetStartTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::ResetStartTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetStartTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.OnDestroy
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.PauseDetector
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.ResumeDetector
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.SpeedHackDetector.DisposeInternal
void CodeStage::AntiCheat::Detectors::SpeedHackDetector::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::SpeedHackDetector::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.Detectors.TimeCheatingDetector
#include "CodeStage/AntiCheat/Detectors/TimeCheatingDetector.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String COMPONENT_NAME
::StringW CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_COMPONENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_COMPONENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "COMPONENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static System.String COMPONENT_NAME
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_COMPONENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_COMPONENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "COMPONENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FINAL_LOG_PREFIX
::StringW CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_FINAL_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_FINAL_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "FINAL_LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static private System.String FINAL_LOG_PREFIX
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_FINAL_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_FINAL_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "FINAL_LOG_PREFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TIME_SERVER
::StringW CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_TIME_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_TIME_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "TIME_SERVER"));
}
// Autogenerated static field setter
// Set static field: static private System.String TIME_SERVER
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_TIME_SERVER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_TIME_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "TIME_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NTP_DATA_BUFFER_LENGTH
int CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_NTP_DATA_BUFFER_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_NTP_DATA_BUFFER_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "NTP_DATA_BUFFER_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NTP_DATA_BUFFER_LENGTH
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_NTP_DATA_BUFFER_LENGTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_NTP_DATA_BUFFER_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "NTP_DATA_BUFFER_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 instancesInScene
int CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_instancesInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_instancesInScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "instancesInScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 instancesInScene
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_instancesInScene(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_instancesInScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "instancesInScene", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC6C18
// Autogenerated static field getter
// Get static field: static private CodeStage.AntiCheat.Detectors.TimeCheatingDetector <Instance>k__BackingField
::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::Detectors::TimeCheatingDetector*>("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private CodeStage.AntiCheat.Detectors.TimeCheatingDetector <Instance>k__BackingField
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.DateTime date1900
[[deprecated("Use field access instead!")]] ::System::DateTime& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_date1900() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_date1900");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "date1900"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 interval
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_interval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_interval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 threshold
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket asyncSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_asyncSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_asyncSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Double> getOnlineTimeCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<double>*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_getOnlineTimeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_getOnlineTimeCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getOnlineTimeCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<double>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] targetIP
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetIP");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetIP"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint targetEndpoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_targetEndpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetEndpoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] ntpData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_ntpData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_ntpData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ntpData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.SocketAsyncEventArgs connectArgs
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_connectArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_connectArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectArgs"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketAsyncEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.SocketAsyncEventArgs sendArgs
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_sendArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_sendArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendArgs"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketAsyncEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.SocketAsyncEventArgs receiveArgs
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_receiveArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::dyn_receiveArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveArgs"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketAsyncEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StartDetection
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StartDetection
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StartDetection
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, int interval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(interval)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, interval);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StopDetection
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "StopDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.Dispose
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.get_Instance
::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::TimeCheatingDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.set_Instance
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::set_Instance(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.get_GetOrCreateInstance
::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_GetOrCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_GetOrCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "get_GetOrCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::TimeCheatingDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.Awake
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnLevelWasLoadedNew
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelWasLoadedNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelWasLoadedNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnLevelLoadedCallback
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelLoadedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StartDetectionInternal
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, int checkInterval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDetectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(checkInterval)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, checkInterval);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.CheckForCheat
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::CheckForCheat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::CheckForCheat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForCheat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnTimeGot
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnTimeGot(double onlineTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnTimeGot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimeGot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlineTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onlineTime);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.GetOnlineTime
double CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTime(::StringW server) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector", "GetOnlineTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, server);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.GetOnlineTimeAsync
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTimeAsync(::StringW server, ::System::Action_1<double>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTimeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOnlineTimeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, server, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnSockedConnected
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSockedConnected(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSockedConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSockedConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnSocketSend
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketSend(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSocketSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnSocketReceive
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketReceive(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSocketReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.GetLocalTime
double CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetLocalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.OnDestroy
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.PauseDetector
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.ResumeDetector
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.TimeCheatingDetector.DisposeInternal
void CodeStage::AntiCheat::Detectors::TimeCheatingDetector::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Detectors.WallHackDetector
#include "CodeStage/AntiCheat/Detectors/WallHackDetector.hpp"
// Including type: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78
#include "CodeStage/AntiCheat/Detectors/WallHackDetector_-InitDetector-d__78.hpp"
// Including type: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83
#include "CodeStage/AntiCheat/Detectors/WallHackDetector_-CaptureFrame-d__83.hpp"
// Including type: UnityEngine.WaitForEndOfFrame
#include "UnityEngine/WaitForEndOfFrame.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String COMPONENT_NAME
::StringW CodeStage::AntiCheat::Detectors::WallHackDetector::_get_COMPONENT_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_COMPONENT_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "COMPONENT_NAME"));
}
// Autogenerated static field setter
// Set static field: static System.String COMPONENT_NAME
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_COMPONENT_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_COMPONENT_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "COMPONENT_NAME", value));
}
// Autogenerated static field getter
// Get static field: static System.String FINAL_LOG_PREFIX
::StringW CodeStage::AntiCheat::Detectors::WallHackDetector::_get_FINAL_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_FINAL_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "FINAL_LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static System.String FINAL_LOG_PREFIX
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_FINAL_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_FINAL_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "FINAL_LOG_PREFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SERVICE_CONTAINER_NAME
::StringW CodeStage::AntiCheat::Detectors::WallHackDetector::_get_SERVICE_CONTAINER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_SERVICE_CONTAINER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "SERVICE_CONTAINER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SERVICE_CONTAINER_NAME
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_SERVICE_CONTAINER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_SERVICE_CONTAINER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "SERVICE_CONTAINER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String WIREFRAME_SHADER_NAME
::StringW CodeStage::AntiCheat::Detectors::WallHackDetector::_get_WIREFRAME_SHADER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_WIREFRAME_SHADER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "WIREFRAME_SHADER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String WIREFRAME_SHADER_NAME
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_WIREFRAME_SHADER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_WIREFRAME_SHADER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "WIREFRAME_SHADER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SHADER_TEXTURE_SIZE
int CodeStage::AntiCheat::Detectors::WallHackDetector::_get_SHADER_TEXTURE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_SHADER_TEXTURE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "SHADER_TEXTURE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SHADER_TEXTURE_SIZE
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_SHADER_TEXTURE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_SHADER_TEXTURE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "SHADER_TEXTURE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RENDER_TEXTURE_SIZE
int CodeStage::AntiCheat::Detectors::WallHackDetector::_get_RENDER_TEXTURE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_RENDER_TEXTURE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "RENDER_TEXTURE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RENDER_TEXTURE_SIZE
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_RENDER_TEXTURE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_RENDER_TEXTURE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "RENDER_TEXTURE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 instancesInScene
int CodeStage::AntiCheat::Detectors::WallHackDetector::_get_instancesInScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_instancesInScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "instancesInScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 instancesInScene
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_instancesInScene(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_instancesInScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "instancesInScene", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC6E78
// Autogenerated static field getter
// Get static field: static private CodeStage.AntiCheat.Detectors.WallHackDetector <Instance>k__BackingField
::CodeStage::AntiCheat::Detectors::WallHackDetector* CodeStage::AntiCheat::Detectors::WallHackDetector::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::CodeStage::AntiCheat::Detectors::WallHackDetector*>("CodeStage.AntiCheat.Detectors", "WallHackDetector", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private CodeStage.AntiCheat.Detectors.WallHackDetector <Instance>k__BackingField
void CodeStage::AntiCheat::Detectors::WallHackDetector::_set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::WallHackDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Detectors", "WallHackDetector", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 rigidPlayerVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidPlayerVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidPlayerVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidPlayerVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.WaitForEndOfFrame waitForEndOfFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::WaitForEndOfFrame*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_waitForEndOfFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_waitForEndOfFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitForEndOfFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForEndOfFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkRigidbody
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkRigidbody"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkController
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkWireframe
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkWireframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkWireframe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkWireframe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkRaycast
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_checkRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wireframeDelay
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wireframeDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raycastDelay
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 spawnPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_spawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_spawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte maxFalsePositives
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_maxFalsePositives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_maxFalsePositives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFalsePositives"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject serviceContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_serviceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_serviceContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject solidWall
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_solidWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_solidWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solidWall"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject thinWall
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_thinWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_thinWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thinWall"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera wfCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer foregroundRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_foregroundRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_foregroundRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer backgroundRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_backgroundRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_backgroundRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color wfColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color wfColor2
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfColor2"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader wfShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material wfMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wfMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D shaderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_shaderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_shaderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D targetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_targetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture renderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_renderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_renderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 whLayer
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_whLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_whLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 raycastMask
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rigidPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController charControllerPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_charControllerPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_charControllerPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charControllerPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single charControllerVelocity
[[deprecated("Use field access instead!")]] float& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_charControllerVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_charControllerVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charControllerVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte rigidbodyDetections
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidbodyDetections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_rigidbodyDetections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidbodyDetections"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte controllerDetections
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_controllerDetections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_controllerDetections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerDetections"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte wireframeDetections
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDetections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDetections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wireframeDetections"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte raycastDetections
[[deprecated("Use field access instead!")]] uint8_t& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastDetections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_raycastDetections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastDetections"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wireframeDetected
[[deprecated("Use field access instead!")]] bool& CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::dyn_wireframeDetected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wireframeDetected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_CheckRigidbody
bool CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.set_CheckRigidbody
void CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRigidbody(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_CheckController
bool CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.set_CheckController
void CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_CheckWireframe
bool CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckWireframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckWireframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckWireframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.set_CheckWireframe
void CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckWireframe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckWireframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckWireframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_CheckRaycast
bool CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.set_CheckRaycast
void CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRaycast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 spawnPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(spawnPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, spawnPosition);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetection
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 spawnPosition, uint8_t maxFalsePositives) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "StartDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(spawnPosition), ::il2cpp_utils::ExtractType(maxFalsePositives)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, spawnPosition, maxFalsePositives);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopDetection
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "StopDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.Dispose
void CodeStage::AntiCheat::Detectors::WallHackDetector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_Instance
::CodeStage::AntiCheat::Detectors::WallHackDetector* CodeStage::AntiCheat::Detectors::WallHackDetector::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::WallHackDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.set_Instance
void CodeStage::AntiCheat::Detectors::WallHackDetector::set_Instance(::CodeStage::AntiCheat::Detectors::WallHackDetector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.get_GetOrCreateInstance
::CodeStage::AntiCheat::Detectors::WallHackDetector* CodeStage::AntiCheat::Detectors::WallHackDetector::get_GetOrCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::get_GetOrCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "get_GetOrCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CodeStage::AntiCheat::Detectors::WallHackDetector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.Awake
void CodeStage::AntiCheat::Detectors::WallHackDetector::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.OnLevelWasLoadedNew
void CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelWasLoadedNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelWasLoadedNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.OnLevelLoadedCallback
void CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelLoadedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLevelLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.FixedUpdate
void CodeStage::AntiCheat::Detectors::WallHackDetector::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.Update
void CodeStage::AntiCheat::Detectors::WallHackDetector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetectionInternal
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 servicePosition, uint8_t falsePositivesInRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDetectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(servicePosition), ::il2cpp_utils::ExtractType(falsePositivesInRow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, servicePosition, falsePositivesInRow);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.UpdateServiceContainer
void CodeStage::AntiCheat::Detectors::WallHackDetector::UpdateServiceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::UpdateServiceContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateServiceContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.InitDetector
::System::Collections::IEnumerator* CodeStage::AntiCheat::Detectors::WallHackDetector::InitDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::InitDetector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDetector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartRigidModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartRigidModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartRigidModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRigidModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartControllerModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartControllerModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartControllerModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartControllerModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartWireframeModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartWireframeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartWireframeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWireframeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.ShootWireframeModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::ShootWireframeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::ShootWireframeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShootWireframeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.CaptureFrame
::System::Collections::IEnumerator* CodeStage::AntiCheat::Detectors::WallHackDetector::CaptureFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::CaptureFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartRaycastModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartRaycastModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartRaycastModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRaycastModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.ShootRaycastModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::ShootRaycastModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::ShootRaycastModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShootRaycastModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopRigidModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopRigidModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopRigidModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRigidModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopControllerModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopControllerModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopControllerModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopControllerModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopWireframeModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopWireframeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopWireframeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopWireframeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopRaycastModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopRaycastModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopRaycastModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRaycastModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.InitRigidModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::InitRigidModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::InitRigidModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRigidModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.InitControllerModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::InitControllerModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::InitControllerModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitControllerModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.UninitRigidModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::UninitRigidModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::UninitRigidModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UninitRigidModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.UninitControllerModule
void CodeStage::AntiCheat::Detectors::WallHackDetector::UninitControllerModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::UninitControllerModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UninitControllerModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.Detect
bool CodeStage::AntiCheat::Detectors::WallHackDetector::Detect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::Detect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Detect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.GenerateColor
::UnityEngine::Color32 CodeStage::AntiCheat::Detectors::WallHackDetector::GenerateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::GenerateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "GenerateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.ColorsSimilar
bool CodeStage::AntiCheat::Detectors::WallHackDetector::ColorsSimilar(::UnityEngine::Color32 c1, ::UnityEngine::Color32 c2, int tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::ColorsSimilar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CodeStage.AntiCheat.Detectors", "WallHackDetector", "ColorsSimilar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2, tolerance);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.OnDestroy
void CodeStage::AntiCheat::Detectors::WallHackDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StartDetectionAutomatically
void CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionAutomatically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionAutomatically");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.PauseDetector
void CodeStage::AntiCheat::Detectors::WallHackDetector::PauseDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::PauseDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.ResumeDetector
void CodeStage::AntiCheat::Detectors::WallHackDetector::ResumeDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::ResumeDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.StopDetectionInternal
void CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetectionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetectionInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector.DisposeInternal
void CodeStage::AntiCheat::Detectors::WallHackDetector::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::DisposeInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::ActDetectorBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78
#include "CodeStage/AntiCheat/Detectors/WallHackDetector_-InitDetector-d__78.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CodeStage.AntiCheat.Detectors.WallHackDetector <>4__this
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Detectors::WallHackDetector*& CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::Detectors::WallHackDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78.System.IDisposable.Dispose
void CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78.MoveNext
bool CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78.System.Collections.IEnumerator.Reset
void CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<InitDetector>d__78.System.Collections.IEnumerator.get_Current
::Il2CppObject* CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83
#include "CodeStage/AntiCheat/Detectors/WallHackDetector_-CaptureFrame-d__83.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CodeStage.AntiCheat.Detectors.WallHackDetector <>4__this
[[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Detectors::WallHackDetector*& CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::CodeStage::AntiCheat::Detectors::WallHackDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture <previousActive>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$previousActive$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::dyn_$previousActive$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previousActive>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83.System.IDisposable.Dispose
void CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83.MoveNext
bool CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83.System.Collections.IEnumerator.Reset
void CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CodeStage.AntiCheat.Detectors.WallHackDetector/<CaptureFrame>d__83.System.Collections.IEnumerator.get_Current
::Il2CppObject* CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CodeStage.AntiCheat.Common.ACTkConstants
#include "CodeStage/AntiCheat/Common/ACTkConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String VERSION
::StringW CodeStage::AntiCheat::Common::ACTkConstants::_get_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Common::ACTkConstants::_get_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Common", "ACTkConstants", "VERSION"));
}
// Autogenerated static field setter
// Set static field: static System.String VERSION
void CodeStage::AntiCheat::Common::ACTkConstants::_set_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Common::ACTkConstants::_set_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Common", "ACTkConstants", "VERSION", value));
}
// Autogenerated static field getter
// Get static field: static System.String LOG_PREFIX
::StringW CodeStage::AntiCheat::Common::ACTkConstants::_get_LOG_PREFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Common::ACTkConstants::_get_LOG_PREFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("CodeStage.AntiCheat.Common", "ACTkConstants", "LOG_PREFIX"));
}
// Autogenerated static field setter
// Set static field: static System.String LOG_PREFIX
void CodeStage::AntiCheat::Common::ACTkConstants::_set_LOG_PREFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Common::ACTkConstants::_set_LOG_PREFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CodeStage.AntiCheat.Common", "ACTkConstants", "LOG_PREFIX", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.DoNotFakeAttribute
#include "Beebyte/Obfuscator/DoNotFakeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.ObfuscateLiteralsAttribute
#include "Beebyte/Obfuscator/ObfuscateLiteralsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.RenameAttribute
#include "Beebyte/Obfuscator/RenameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String target
[[deprecated("Use field access instead!")]] ::StringW& Beebyte::Obfuscator::RenameAttribute::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Beebyte::Obfuscator::RenameAttribute::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Beebyte.Obfuscator.RenameAttribute.GetTarget
::StringW Beebyte::Obfuscator::RenameAttribute::GetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Beebyte::Obfuscator::RenameAttribute::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.ReplaceLiteralsWithNameAttribute
#include "Beebyte/Obfuscator/ReplaceLiteralsWithNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.SkipAttribute
#include "Beebyte/Obfuscator/SkipAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Beebyte.Obfuscator.SkipRenameAttribute
#include "Beebyte/Obfuscator/SkipRenameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: AmplifyColorVolumeBase
#include "GlobalNamespace/AmplifyColorVolumeBase.hpp"
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColorTriggerProxyBase
#include "GlobalNamespace/AmplifyColorTriggerProxyBase.hpp"
// Including type: AmplifyColor.VolumeEffectFlags
#include "AmplifyColor/VolumeEffectFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 LutSize
int GlobalNamespace::AmplifyColorBase::_get_LutSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_get_LutSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AmplifyColorBase", "LutSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LutSize
void GlobalNamespace::AmplifyColorBase::_set_LutSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_set_LutSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AmplifyColorBase", "LutSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LutWidth
int GlobalNamespace::AmplifyColorBase::_get_LutWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_get_LutWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AmplifyColorBase", "LutWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LutWidth
void GlobalNamespace::AmplifyColorBase::_set_LutWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_set_LutWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AmplifyColorBase", "LutWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LutHeight
int GlobalNamespace::AmplifyColorBase::_get_LutHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_get_LutHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AmplifyColorBase", "LutHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LutHeight
void GlobalNamespace::AmplifyColorBase::_set_LutHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_set_LutHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AmplifyColorBase", "LutHeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DepthCurveLutRange
int GlobalNamespace::AmplifyColorBase::_get_DepthCurveLutRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_get_DepthCurveLutRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AmplifyColorBase", "DepthCurveLutRange"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DepthCurveLutRange
void GlobalNamespace::AmplifyColorBase::_set_DepthCurveLutRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::_set_DepthCurveLutRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AmplifyColorBase", "DepthCurveLutRange", value));
}
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.Tonemapping Tonemapper
[[deprecated("Use field access instead!")]] ::AmplifyColor::Tonemapping& GlobalNamespace::AmplifyColorBase::dyn_Tonemapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_Tonemapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tonemapper"))->offset;
  return *reinterpret_cast<::AmplifyColor::Tonemapping*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Exposure
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_Exposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_Exposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Exposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LinearWhitePoint
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_LinearWhitePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_LinearWhitePoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearWhitePoint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ApplyDithering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_ApplyDithering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_ApplyDithering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplyDithering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.Quality QualityLevel
[[deprecated("Use field access instead!")]] ::AmplifyColor::Quality& GlobalNamespace::AmplifyColorBase::dyn_QualityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_QualityLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QualityLevel"))->offset;
  return *reinterpret_cast<::AmplifyColor::Quality*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single BlendAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_BlendAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_BlendAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlendAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture LutTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::AmplifyColorBase::dyn_LutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_LutTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture LutBlendTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::AmplifyColorBase::dyn_LutBlendTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_LutBlendTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutBlendTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture MaskTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::AmplifyColorBase::dyn_MaskTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_MaskTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaskTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseDepthMask
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_UseDepthMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_UseDepthMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseDepthMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve DepthMaskCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::AmplifyColorBase::dyn_DepthMaskCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_DepthMaskCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DepthMaskCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseVolumes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_UseVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_UseVolumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseVolumes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExitVolumeBlendTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_ExitVolumeBlendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_ExitVolumeBlendTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExitVolumeBlendTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform TriggerVolumeProxy
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AmplifyColorBase::dyn_TriggerVolumeProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_TriggerVolumeProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerVolumeProxy"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask VolumeCollisionMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::AmplifyColorBase::dyn_VolumeCollisionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_VolumeCollisionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VolumeCollisionMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera ownerCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::AmplifyColorBase::dyn_ownerCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_ownerCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderBlendCache
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderBlendCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderBlendCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderBlendCache"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderMaskBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderMaskBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderMaskBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderMaskBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderDepthMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderDepthMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderDepthMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderDepthMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderDepthMaskBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderDepthMaskBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderDepthMaskBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderDepthMaskBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader shaderProcessOnly
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::AmplifyColorBase::dyn_shaderProcessOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_shaderProcessOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shaderProcessOnly"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture blendCacheLut
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::AmplifyColorBase::dyn_blendCacheLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendCacheLut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendCacheLut"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D defaultLut
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::AmplifyColorBase::dyn_defaultLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_defaultLut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLut"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D depthCurveLut
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::AmplifyColorBase::dyn_depthCurveLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_depthCurveLut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthCurveLut"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32[] depthCurveColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& GlobalNamespace::AmplifyColorBase::dyn_depthCurveColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_depthCurveColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthCurveColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ColorSpace colorSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::ColorSpace& GlobalNamespace::AmplifyColorBase::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_colorSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::ColorSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColor.Quality qualityLevel
[[deprecated("Use field access instead!")]] ::AmplifyColor::Quality& GlobalNamespace::AmplifyColorBase::dyn_qualityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_qualityLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qualityLevel"))->offset;
  return *reinterpret_cast<::AmplifyColor::Quality*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialBlendCache
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialBlendCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialBlendCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialBlendCache"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialMaskBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialMaskBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialMaskBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialMaskBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialDepthMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialDepthMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialDepthMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialDepthMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialDepthMaskBlend
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialDepthMaskBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialDepthMaskBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialDepthMaskBlend"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material materialProcessOnly
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::AmplifyColorBase::dyn_materialProcessOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_materialProcessOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialProcessOnly"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean blending
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single blendingTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_blendingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single blendingTimeCountdown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_blendingTimeCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendingTimeCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendingTimeCountdown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onFinishBlend
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AmplifyColorBase::dyn_onFinishBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_onFinishBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishBlend"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve prevDepthMaskCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::AmplifyColorBase::dyn_prevDepthMaskCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_prevDepthMaskCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevDepthMaskCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean volumesBlending
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_volumesBlending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_volumesBlending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumesBlending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumesBlendingTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_volumesBlendingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_volumesBlendingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumesBlendingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumesBlendingTimeCountdown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_volumesBlendingTimeCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_volumesBlendingTimeCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumesBlendingTimeCountdown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture volumesLutBlendTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::AmplifyColorBase::dyn_volumesLutBlendTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_volumesLutBlendTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumesLutBlendTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumesBlendAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_volumesBlendAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_volumesBlendAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumesBlendAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture worldLUT
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::AmplifyColorBase::dyn_worldLUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_worldLUT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldLUT"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColorVolumeBase currentVolumeLut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AmplifyColorVolumeBase*& GlobalNamespace::AmplifyColorBase::dyn_currentVolumeLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_currentVolumeLut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVolumeLut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AmplifyColorVolumeBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture midBlendLUT
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::AmplifyColorBase::dyn_midBlendLUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_midBlendLUT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "midBlendLUT"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean blendingFromMidBlend
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_blendingFromMidBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendingFromMidBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendingFromMidBlend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColor.VolumeEffect worldVolumeEffects
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffect*& GlobalNamespace::AmplifyColorBase::dyn_worldVolumeEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_worldVolumeEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldVolumeEffects"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColor.VolumeEffect currentVolumeEffects
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffect*& GlobalNamespace::AmplifyColorBase::dyn_currentVolumeEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_currentVolumeEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVolumeEffects"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColor.VolumeEffect blendVolumeEffects
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffect*& GlobalNamespace::AmplifyColorBase::dyn_blendVolumeEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendVolumeEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendVolumeEffects"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single worldExposure
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_worldExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_worldExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentExposure
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_currentExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_currentExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single blendExposure
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_blendExposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_blendExposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendExposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single effectVolumesBlendAdjust
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorBase::dyn_effectVolumesBlendAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_effectVolumesBlendAdjust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectVolumesBlendAdjust"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AmplifyColorVolumeBase> enteredVolumes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::AmplifyColorVolumeBase*>*& GlobalNamespace::AmplifyColorBase::dyn_enteredVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_enteredVolumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enteredVolumes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::AmplifyColorVolumeBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyColorTriggerProxyBase actualTriggerProxy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AmplifyColorTriggerProxyBase*& GlobalNamespace::AmplifyColorBase::dyn_actualTriggerProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_actualTriggerProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualTriggerProxy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AmplifyColorTriggerProxyBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.VolumeEffectFlags EffectFlags
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectFlags*& GlobalNamespace::AmplifyColorBase::dyn_EffectFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_EffectFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EffectFlags"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffectFlags**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sharedInstanceID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AmplifyColorBase::dyn_sharedInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_sharedInstanceID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedInstanceID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean silentError
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorBase::dyn_silentError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::dyn_silentError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "silentError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColorBase.get_DefaultLut
::UnityEngine::Texture2D* GlobalNamespace::AmplifyColorBase::get_DefaultLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::get_DefaultLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.get_IsBlending
bool GlobalNamespace::AmplifyColorBase::get_IsBlending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::get_IsBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.get_effectVolumesBlendAdjusted
float GlobalNamespace::AmplifyColorBase::get_effectVolumesBlendAdjusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::get_effectVolumesBlendAdjusted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectVolumesBlendAdjusted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.get_SharedInstanceID
::StringW GlobalNamespace::AmplifyColorBase::get_SharedInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::get_SharedInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.get_WillItBlend
bool GlobalNamespace::AmplifyColorBase::get_WillItBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::get_WillItBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WillItBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.NewSharedInstanceID
void GlobalNamespace::AmplifyColorBase::NewSharedInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::NewSharedInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewSharedInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.ReportMissingShaders
void GlobalNamespace::AmplifyColorBase::ReportMissingShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ReportMissingShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportMissingShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.ReportNotSupported
void GlobalNamespace::AmplifyColorBase::ReportNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ReportNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CheckShader
bool GlobalNamespace::AmplifyColorBase::CheckShader(::UnityEngine::Shader* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: AmplifyColorBase.CheckShaders
bool GlobalNamespace::AmplifyColorBase::CheckShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CheckSupport
bool GlobalNamespace::AmplifyColorBase::CheckSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.OnEnable
void GlobalNamespace::AmplifyColorBase::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.OnDisable
void GlobalNamespace::AmplifyColorBase::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.VolumesBlendTo
void GlobalNamespace::AmplifyColorBase::VolumesBlendTo(::UnityEngine::Texture* blendTargetLUT, float blendTimeInSec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::VolumesBlendTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VolumesBlendTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendTargetLUT), ::il2cpp_utils::ExtractType(blendTimeInSec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blendTargetLUT, blendTimeInSec);
}
// Autogenerated method: AmplifyColorBase.BlendTo
void GlobalNamespace::AmplifyColorBase::BlendTo(::UnityEngine::Texture* blendTargetLUT, float blendTimeInSec, ::System::Action* onFinishBlend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::BlendTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlendTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendTargetLUT), ::il2cpp_utils::ExtractType(blendTimeInSec), ::il2cpp_utils::ExtractType(onFinishBlend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blendTargetLUT, blendTimeInSec, onFinishBlend);
}
// Autogenerated method: AmplifyColorBase.CheckCamera
void GlobalNamespace::AmplifyColorBase::CheckCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.Start
void GlobalNamespace::AmplifyColorBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.Update
void GlobalNamespace::AmplifyColorBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.EnterVolume
void GlobalNamespace::AmplifyColorBase::EnterVolume(::GlobalNamespace::AmplifyColorVolumeBase* volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::EnterVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: AmplifyColorBase.ExitVolume
void GlobalNamespace::AmplifyColorBase::ExitVolume(::GlobalNamespace::AmplifyColorVolumeBase* volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ExitVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: AmplifyColorBase.UpdateVolumes
void GlobalNamespace::AmplifyColorBase::UpdateVolumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::UpdateVolumes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVolumes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.SetupShader
void GlobalNamespace::AmplifyColorBase::SetupShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::SetupShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.ReleaseMaterials
void GlobalNamespace::AmplifyColorBase::ReleaseMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ReleaseMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CreateDefaultLut
::UnityEngine::Texture2D* GlobalNamespace::AmplifyColorBase::CreateDefaultLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CreateDefaultLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CreateDepthCurveLut
::UnityEngine::Texture2D* GlobalNamespace::AmplifyColorBase::CreateDepthCurveLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CreateDepthCurveLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDepthCurveLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.UpdateDepthCurveLut
void GlobalNamespace::AmplifyColorBase::UpdateDepthCurveLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::UpdateDepthCurveLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDepthCurveLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CheckUpdateDepthCurveLut
void GlobalNamespace::AmplifyColorBase::CheckUpdateDepthCurveLut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckUpdateDepthCurveLut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUpdateDepthCurveLut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CreateHelperTextures
void GlobalNamespace::AmplifyColorBase::CreateHelperTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CreateHelperTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHelperTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.CheckMaterialAndShader
bool GlobalNamespace::AmplifyColorBase::CheckMaterialAndShader(::UnityEngine::Material* material, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CheckMaterialAndShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMaterialAndShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, material, name);
}
// Autogenerated method: AmplifyColorBase.CreateMaterials
bool GlobalNamespace::AmplifyColorBase::CreateMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::CreateMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.SetMaterialKeyword
void GlobalNamespace::AmplifyColorBase::SetMaterialKeyword(::StringW keyword, bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::SetMaterialKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, state);
}
// Autogenerated method: AmplifyColorBase.ReleaseTextures
void GlobalNamespace::AmplifyColorBase::ReleaseTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ReleaseTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.ValidateLutDimensions
bool GlobalNamespace::AmplifyColorBase::ValidateLutDimensions(::UnityEngine::Texture* lut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ValidateLutDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AmplifyColorBase", "ValidateLutDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lut)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lut);
}
// Autogenerated method: AmplifyColorBase.UpdatePostEffectParams
void GlobalNamespace::AmplifyColorBase::UpdatePostEffectParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::UpdatePostEffectParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePostEffectParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.ComputeShaderPass
int GlobalNamespace::AmplifyColorBase::ComputeShaderPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::ComputeShaderPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeShaderPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorBase.OnRenderImage
void GlobalNamespace::AmplifyColorBase::OnRenderImage(::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorBase::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, destination);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorEffect
#include "GlobalNamespace/AmplifyColorEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorTriggerProxy
#include "GlobalNamespace/AmplifyColorTriggerProxy.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider sphereCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& GlobalNamespace::AmplifyColorTriggerProxy::dyn_sphereCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy::dyn_sphereCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::AmplifyColorTriggerProxy::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColorTriggerProxy.Start
void GlobalNamespace::AmplifyColorTriggerProxy::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorTriggerProxy.LateUpdate
void GlobalNamespace::AmplifyColorTriggerProxy::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorTriggerProxy2D
#include "GlobalNamespace/AmplifyColorTriggerProxy2D.hpp"
// Including type: UnityEngine.CircleCollider2D
#include "UnityEngine/CircleCollider2D.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CircleCollider2D circleCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::CircleCollider2D*& GlobalNamespace::AmplifyColorTriggerProxy2D::dyn_circleCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy2D::dyn_circleCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "circleCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::CircleCollider2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& GlobalNamespace::AmplifyColorTriggerProxy2D::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy2D::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColorTriggerProxy2D.Start
void GlobalNamespace::AmplifyColorTriggerProxy2D::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy2D::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorTriggerProxy2D.LateUpdate
void GlobalNamespace::AmplifyColorTriggerProxy2D::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy2D::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorTriggerProxyBase
#include "GlobalNamespace/AmplifyColorTriggerProxyBase.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Reference
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AmplifyColorTriggerProxyBase::dyn_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxyBase::dyn_Reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reference"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AmplifyColorBase OwnerEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AmplifyColorBase*& GlobalNamespace::AmplifyColorTriggerProxyBase::dyn_OwnerEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxyBase::dyn_OwnerEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AmplifyColorBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorVolume
#include "GlobalNamespace/AmplifyColorVolume.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AmplifyColorVolume.OnTriggerEnter
void GlobalNamespace::AmplifyColorVolume::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolume::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: AmplifyColorVolume.OnTriggerExit
void GlobalNamespace::AmplifyColorVolume::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolume::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorVolume2D
#include "GlobalNamespace/AmplifyColorVolume2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AmplifyColorVolume2D.OnTriggerEnter2D
void GlobalNamespace::AmplifyColorVolume2D::OnTriggerEnter2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolume2D::OnTriggerEnter2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: AmplifyColorVolume2D.OnTriggerExit2D
void GlobalNamespace::AmplifyColorVolume2D::OnTriggerExit2D(::UnityEngine::Collider2D* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolume2D::OnTriggerExit2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColorVolumeBase
#include "GlobalNamespace/AmplifyColorVolumeBase.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: AmplifyColor.VolumeEffectContainer
#include "AmplifyColor/VolumeEffectContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D LutTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::AmplifyColorVolumeBase::dyn_LutTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_LutTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LutTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Exposure
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorVolumeBase::dyn_Exposure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_Exposure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Exposure"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single EnterBlendTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AmplifyColorVolumeBase::dyn_EnterBlendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_EnterBlendTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterBlendTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Priority
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AmplifyColorVolumeBase::dyn_Priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_Priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ShowInSceneView
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AmplifyColorVolumeBase::dyn_ShowInSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_ShowInSceneView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowInSceneView"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.VolumeEffectContainer EffectContainer
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectContainer*& GlobalNamespace::AmplifyColorVolumeBase::dyn_EffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::dyn_EffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EffectContainer"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffectContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColorVolumeBase.OnDrawGizmos
void GlobalNamespace::AmplifyColorVolumeBase::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColorVolumeBase.OnDrawGizmosSelected
void GlobalNamespace::AmplifyColorVolumeBase::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorVolumeBase::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PortalScript
#include "GlobalNamespace/PortalScript.hpp"
// Including type: PortalScript/<PortalLoop>d__5
#include "GlobalNamespace/PortalScript_-PortalLoop-d__5.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject portalOpen
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::dyn_portalOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::dyn_portalOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalOpen"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject portalIdle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::dyn_portalIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::dyn_portalIdle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalIdle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject portalClose
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::dyn_portalClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::dyn_portalClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "portalClose"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PortalScript.Start
void GlobalNamespace::PortalScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript.OpenPortal
void GlobalNamespace::PortalScript::OpenPortal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::OpenPortal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenPortal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript.PortalLoop
::System::Collections::IEnumerator* GlobalNamespace::PortalScript::PortalLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::PortalLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PortalLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PortalScript/<PortalLoop>d__5
#include "GlobalNamespace/PortalScript_-PortalLoop-d__5.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PortalScript <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PortalScript*& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PortalScript**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <portalOpener>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalOpener$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalOpener$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<portalOpener>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <portalIdler>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalIdler$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalIdler$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<portalIdler>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject <portalCloser>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalCloser$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::dyn_$portalCloser$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<portalCloser>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PortalScript/<PortalLoop>d__5.System.IDisposable.Dispose
void GlobalNamespace::PortalScript::$PortalLoop$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PortalScript::$PortalLoop$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript/<PortalLoop>d__5.MoveNext
bool GlobalNamespace::PortalScript::$PortalLoop$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PortalScript::$PortalLoop$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript/<PortalLoop>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PortalScript::$PortalLoop$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PortalScript::$PortalLoop$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript/<PortalLoop>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::PortalScript::$PortalLoop$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PortalScript::$PortalLoop$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PortalScript/<PortalLoop>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PortalScript::$PortalLoop$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PortalScript::$PortalLoop$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PortalScript::$PortalLoop$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AILerp
#include "GlobalNamespace/AILerp.hpp"
// Including type: AILerp/<RepeatTrySearchPath>d__29
#include "GlobalNamespace/AILerp_-RepeatTrySearchPath-d__29.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single repathRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_repathRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AILerp::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_canSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canMove
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_canMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_enableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_enableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rotationIn2D
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_rotationIn2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_rotationIn2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationIn2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean interpolatePathSwitches
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_interpolatePathSwitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_interpolatePathSwitches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interpolatePathSwitches"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single switchPathInterpolationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_switchPathInterpolationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_switchPathInterpolationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchPathInterpolationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Seeker seeker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Seeker*& GlobalNamespace::AILerp::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AILerp::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastRepath
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_lastRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_lastRepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRepath"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.ABPath path
[[deprecated("Use field access instead!")]] ::Pathfinding::ABPath*& GlobalNamespace::AILerp::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::ABPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 currentWaypointIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AILerp::dyn_currentWaypointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_currentWaypointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single distanceAlongSegment
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_distanceAlongSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_distanceAlongSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceAlongSegment"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <targetReached>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_$targetReached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_$targetReached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetReached>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean canSearchAgain
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_canSearchAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_canSearchAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 previousMovementOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AILerp::dyn_previousMovementOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_previousMovementOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMovementOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 previousMovementDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AILerp::dyn_previousMovementDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_previousMovementDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMovementDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single previousMovementStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AILerp::dyn_previousMovementStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_previousMovementStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMovementStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startHasRun
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AILerp::dyn_startHasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::dyn_startHasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startHasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AILerp.get_targetReached
bool GlobalNamespace::AILerp::get_targetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::get_targetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.set_targetReached
void GlobalNamespace::AILerp::set_targetReached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::set_targetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AILerp.Awake
void GlobalNamespace::AILerp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.Start
void GlobalNamespace::AILerp::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.OnEnable
void GlobalNamespace::AILerp::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.OnDisable
void GlobalNamespace::AILerp::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.RepeatTrySearchPath
::System::Collections::IEnumerator* GlobalNamespace::AILerp::RepeatTrySearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::RepeatTrySearchPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatTrySearchPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.TrySearchPath
float GlobalNamespace::AILerp::TrySearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::TrySearchPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySearchPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.SearchPath
void GlobalNamespace::AILerp::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.ForceSearchPath
void GlobalNamespace::AILerp::ForceSearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::ForceSearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.OnTargetReached
void GlobalNamespace::AILerp::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.OnPathComplete
void GlobalNamespace::AILerp::OnPathComplete(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated method: AILerp.ConfigurePathSwitchInterpolation
void GlobalNamespace::AILerp::ConfigurePathSwitchInterpolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::ConfigurePathSwitchInterpolation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.GetFeetPosition
::UnityEngine::Vector3 GlobalNamespace::AILerp::GetFeetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::GetFeetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.ConfigureNewPath
void GlobalNamespace::AILerp::ConfigureNewPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::ConfigureNewPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.Update
void GlobalNamespace::AILerp::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp.CalculateNextPosition
::UnityEngine::Vector3 GlobalNamespace::AILerp::CalculateNextPosition(ByRef<::UnityEngine::Vector3> direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::CalculateNextPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(direction));
}
// Autogenerated method: AILerp.<Awake>b__25_0
::UnityEngine::Vector3 GlobalNamespace::AILerp::$Awake$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::<Awake>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AILerp/<RepeatTrySearchPath>d__29
#include "GlobalNamespace/AILerp_-RepeatTrySearchPath-d__29.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AILerp <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AILerp*& GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AILerp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AILerp/<RepeatTrySearchPath>d__29.System.IDisposable.Dispose
void GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp/<RepeatTrySearchPath>d__29.MoveNext
bool GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AILerp/<RepeatTrySearchPath>d__29.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AILerp/<RepeatTrySearchPath>d__29.System.Collections.IEnumerator.Reset
void GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AILerp/<RepeatTrySearchPath>d__29.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AILerp::$RepeatTrySearchPath$d__29*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AIPath
#include "GlobalNamespace/AIPath.hpp"
// Including type: AIPath/<RepeatTrySearchPath>d__30
#include "GlobalNamespace/AIPath_-RepeatTrySearchPath-d__30.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single repathRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_repathRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AIPath::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_canSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canMove
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_canMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single turningSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_turningSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_turningSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turningSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowdownDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_slowdownDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_slowdownDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowdownDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pickNextWaypointDist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_pickNextWaypointDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_pickNextWaypointDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickNextWaypointDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forwardLook
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_forwardLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_forwardLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forwardLook"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endReachedDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_endReachedDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_endReachedDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endReachedDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean closestOnPathCheck
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_closestOnPathCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_closestOnPathCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closestOnPathCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single minMoveScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_minMoveScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_minMoveScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMoveScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Seeker seeker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Seeker*& GlobalNamespace::AIPath::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AIPath::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastRepath
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_lastRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_lastRepath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRepath"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::AIPath::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.CharacterController controller
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& GlobalNamespace::AIPath::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Rigidbody rigid
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::AIPath::dyn_rigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_rigid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigid"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 currentWaypointIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AIPath::dyn_currentWaypointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_currentWaypointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWaypointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean targetReached
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_targetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_targetReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetReached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean canSearchAgain
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_canSearchAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_canSearchAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearchAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 lastFoundWaypointPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AIPath::dyn_lastFoundWaypointPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_lastFoundWaypointPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFoundWaypointPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastFoundWaypointTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIPath::dyn_lastFoundWaypointTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_lastFoundWaypointTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFoundWaypointTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startHasRun
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIPath::dyn_startHasRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_startHasRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startHasRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 targetPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AIPath::dyn_targetPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_targetPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 targetDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AIPath::dyn_targetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::dyn_targetDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AIPath.get_TargetReached
bool GlobalNamespace::AIPath::get_TargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::get_TargetReached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetReached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.Awake
void GlobalNamespace::AIPath::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.Start
void GlobalNamespace::AIPath::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.OnEnable
void GlobalNamespace::AIPath::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.OnDisable
void GlobalNamespace::AIPath::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.RepeatTrySearchPath
::System::Collections::IEnumerator* GlobalNamespace::AIPath::RepeatTrySearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::RepeatTrySearchPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatTrySearchPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.TrySearchPath
float GlobalNamespace::AIPath::TrySearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::TrySearchPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySearchPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.SearchPath
void GlobalNamespace::AIPath::SearchPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::SearchPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.OnTargetReached
void GlobalNamespace::AIPath::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.OnPathComplete
void GlobalNamespace::AIPath::OnPathComplete(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::OnPathComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated method: AIPath.GetFeetPosition
::UnityEngine::Vector3 GlobalNamespace::AIPath::GetFeetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::GetFeetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.Update
void GlobalNamespace::AIPath::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath.XZSqrMagnitude
float GlobalNamespace::AIPath::XZSqrMagnitude(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::XZSqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XZSqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, a, b);
}
// Autogenerated method: AIPath.CalculateVelocity
::UnityEngine::Vector3 GlobalNamespace::AIPath::CalculateVelocity(::UnityEngine::Vector3 currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::CalculateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentPosition);
}
// Autogenerated method: AIPath.RotateTowards
void GlobalNamespace::AIPath::RotateTowards(::UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::RotateTowards");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir);
}
// Autogenerated method: AIPath.CalculateTargetPoint
::UnityEngine::Vector3 GlobalNamespace::AIPath::CalculateTargetPoint(::UnityEngine::Vector3 p, ::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::CalculateTargetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTargetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AIPath/<RepeatTrySearchPath>d__30
#include "GlobalNamespace/AIPath_-RepeatTrySearchPath-d__30.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AIPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AIPath*& GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AIPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AIPath/<RepeatTrySearchPath>d__30.System.IDisposable.Dispose
void GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath/<RepeatTrySearchPath>d__30.MoveNext
bool GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AIPath/<RepeatTrySearchPath>d__30.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AIPath/<RepeatTrySearchPath>d__30.System.Collections.IEnumerator.Reset
void GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIPath/<RepeatTrySearchPath>d__30.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath::$RepeatTrySearchPath$d__30*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: Seeker/ModifierPass
#include "GlobalNamespace/Seeker_ModifierPass.hpp"
// Including type: Seeker/<>c
#include "GlobalNamespace/Seeker_--c.hpp"
// Including type: Pathfinding.StartEndModifier
#include "Pathfinding/StartEndModifier.hpp"
// Including type: Pathfinding.TagMask
#include "Pathfinding/TagMask.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawGizmos
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Seeker::dyn_drawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_drawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean detailedGizmos
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Seeker::dyn_detailedGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_detailedGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detailedGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier startEndModifier
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier*& GlobalNamespace::Seeker::dyn_startEndModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_startEndModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startEndModifier"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 traversableTags
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Seeker::dyn_traversableTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_traversableTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traversableTags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.TagMask traversableTagsCompatibility
[[deprecated("Use field access instead!")]] ::Pathfinding::TagMask*& GlobalNamespace::Seeker::dyn_traversableTagsCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_traversableTagsCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traversableTagsCompatibility"))->offset;
  return *reinterpret_cast<::Pathfinding::TagMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] tagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::Seeker::dyn_tagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_tagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate pathCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& GlobalNamespace::Seeker::dyn_pathCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_pathCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate preProcessPath
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& GlobalNamespace::Seeker::dyn_preProcessPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_preProcessPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preProcessPath"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate postProcessPath
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& GlobalNamespace::Seeker::dyn_postProcessPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_postProcessPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postProcessPath"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> lastCompletedVectorPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::Seeker::dyn_lastCompletedVectorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_lastCompletedVectorPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCompletedVectorPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> lastCompletedNodePath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& GlobalNamespace::Seeker::dyn_lastCompletedNodePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_lastCompletedNodePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCompletedNodePath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::Seeker::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path prevPath
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::Seeker::dyn_prevPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_prevPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPath"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.OnPathDelegate onPathDelegate
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& GlobalNamespace::Seeker::dyn_onPathDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_onPathDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPathDelegate"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.OnPathDelegate tmpPathCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& GlobalNamespace::Seeker::dyn_tmpPathCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_tmpPathCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmpPathCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt32 lastPathID
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::Seeker::dyn_lastPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_lastPathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPathID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Pathfinding.IPathModifier> modifiers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::IPathModifier*>*& GlobalNamespace::Seeker::dyn_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::dyn_modifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::IPathModifier*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Seeker.Awake
void GlobalNamespace::Seeker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.GetCurrentPath
::Pathfinding::Path* GlobalNamespace::Seeker::GetCurrentPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::GetCurrentPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.OnDestroy
void GlobalNamespace::Seeker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.ReleaseClaimedPath
void GlobalNamespace::Seeker::ReleaseClaimedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ReleaseClaimedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseClaimedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.RegisterModifier
void GlobalNamespace::Seeker::RegisterModifier(::Pathfinding::IPathModifier* mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::RegisterModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mod);
}
// Autogenerated method: Seeker.DeregisterModifier
void GlobalNamespace::Seeker::DeregisterModifier(::Pathfinding::IPathModifier* mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::DeregisterModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mod);
}
// Autogenerated method: Seeker.PostProcess
void GlobalNamespace::Seeker::PostProcess(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::PostProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Seeker.RunModifiers
void GlobalNamespace::Seeker::RunModifiers(::GlobalNamespace::Seeker::ModifierPass pass, ::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::RunModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pass, p);
}
// Autogenerated method: Seeker.IsDone
bool GlobalNamespace::Seeker::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.OnPathComplete
void GlobalNamespace::Seeker::OnPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Seeker.OnPathComplete
void GlobalNamespace::Seeker::OnPathComplete(::Pathfinding::Path* p, bool runModifiers, bool sendCallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(runModifiers), ::il2cpp_utils::ExtractType(sendCallbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, runModifiers, sendCallbacks);
}
// Autogenerated method: Seeker.GetNewPath
::Pathfinding::ABPath* GlobalNamespace::Seeker::GetNewPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::GetNewPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ABPath*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Seeker.StartPath
::Pathfinding::Path* GlobalNamespace::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Seeker.StartPath
::Pathfinding::Path* GlobalNamespace::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end, callback);
}
// Autogenerated method: Seeker.StartPath
::Pathfinding::Path* GlobalNamespace::Seeker::StartPath(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback, int graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, start, end, callback, graphMask);
}
// Autogenerated method: Seeker.StartPath
::Pathfinding::Path* GlobalNamespace::Seeker::StartPath(::Pathfinding::Path* p, ::Pathfinding::OnPathDelegate* callback, int graphMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(graphMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method, p, callback, graphMask);
}
// Autogenerated method: Seeker.StartPathInternal
void GlobalNamespace::Seeker::StartPathInternal(::Pathfinding::Path* p, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::StartPathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, callback);
}
// Autogenerated method: Seeker.OnDrawGizmos
void GlobalNamespace::Seeker::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void GlobalNamespace::Seeker::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Seeker*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Seeker.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void GlobalNamespace::Seeker::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::Seeker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Seeker/ModifierPass
#include "GlobalNamespace/Seeker_ModifierPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Seeker/ModifierPass PreProcess
::GlobalNamespace::Seeker::ModifierPass GlobalNamespace::Seeker::ModifierPass::_get_PreProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ModifierPass::_get_PreProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Seeker::ModifierPass>("", "Seeker/ModifierPass", "PreProcess"));
}
// Autogenerated static field setter
// Set static field: static public Seeker/ModifierPass PreProcess
void GlobalNamespace::Seeker::ModifierPass::_set_PreProcess(::GlobalNamespace::Seeker::ModifierPass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ModifierPass::_set_PreProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Seeker/ModifierPass", "PreProcess", value));
}
// Autogenerated static field getter
// Get static field: static public Seeker/ModifierPass PostProcess
::GlobalNamespace::Seeker::ModifierPass GlobalNamespace::Seeker::ModifierPass::_get_PostProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ModifierPass::_get_PostProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::Seeker::ModifierPass>("", "Seeker/ModifierPass", "PostProcess"));
}
// Autogenerated static field setter
// Set static field: static public Seeker/ModifierPass PostProcess
void GlobalNamespace::Seeker::ModifierPass::_set_PostProcess(::GlobalNamespace::Seeker::ModifierPass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ModifierPass::_set_PostProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Seeker/ModifierPass", "PostProcess", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Seeker::ModifierPass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::ModifierPass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Seeker/<>c
#include "GlobalNamespace/Seeker_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Seeker/<>c <>9
::GlobalNamespace::Seeker::$$c* GlobalNamespace::Seeker::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::Seeker::$$c*>("", "Seeker/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Seeker/<>c <>9
void GlobalNamespace::Seeker::$$c::_set_$$9(::GlobalNamespace::Seeker::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Seeker/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Pathfinding.IPathModifier> <>9__23_0
::System::Comparison_1<::Pathfinding::IPathModifier*>* GlobalNamespace::Seeker::$$c::_get_$$9__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::_get_$$9__23_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Pathfinding::IPathModifier*>*>("", "Seeker/<>c", "<>9__23_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Pathfinding.IPathModifier> <>9__23_0
void GlobalNamespace::Seeker::$$c::_set_$$9__23_0(::System::Comparison_1<::Pathfinding::IPathModifier*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::_set_$$9__23_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "Seeker/<>c", "<>9__23_0", value)));
}
// Autogenerated method: Seeker/<>c..cctor
void GlobalNamespace::Seeker::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Seeker/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Seeker/<>c.<RegisterModifier>b__23_0
int GlobalNamespace::Seeker::$$c::$RegisterModifier$b__23_0(::Pathfinding::IPathModifier* a, ::Pathfinding::IPathModifier* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Seeker::$$c::<RegisterModifier>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterModifier>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Pathfinding.OnGraphDelegate
#include "Pathfinding/OnGraphDelegate.hpp"
// Including type: AstarPath/<DelayedGraphUpdate>d__120
#include "GlobalNamespace/AstarPath_-DelayedGraphUpdate-d__120.hpp"
// Including type: AstarPath/<UpdateGraphsInteral>d__123
#include "GlobalNamespace/AstarPath_-UpdateGraphsInteral-d__123.hpp"
// Including type: AstarPath/<>c__DisplayClass143_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass143_0.hpp"
// Including type: AstarPath/<>c
#include "GlobalNamespace/AstarPath_--c.hpp"
// Including type: AstarPath/<>c__DisplayClass149_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_0.hpp"
// Including type: AstarPath/<>c__DisplayClass149_1
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_1.hpp"
// Including type: AstarPath/<>c__DisplayClass149_2
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_2.hpp"
// Including type: AstarPath/<CalculatePaths>d__159
#include "GlobalNamespace/AstarPath_-CalculatePaths-d__159.hpp"
// Including type: AstarPath/<>c__DisplayClass163_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass163_0.hpp"
// Including type: Pathfinding.AstarData
#include "Pathfinding/AstarData.hpp"
// Including type: Pathfinding.AstarColor
#include "Pathfinding/AstarColor.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.ThreadControlQueue
#include "Pathfinding/ThreadControlQueue.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: Pathfinding.EuclideanEmbedding
#include "Pathfinding/EuclideanEmbedding.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.OnScanDelegate
#include "Pathfinding/OnScanDelegate.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.Util.LockFreeStack
#include "Pathfinding/Util/LockFreeStack.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AstarPath/AstarDistribution Distribution
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::_get_Distribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_Distribution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath", "Distribution"));
}
// Autogenerated static field setter
// Set static field: static public readonly AstarPath/AstarDistribution Distribution
void GlobalNamespace::AstarPath::_set_Distribution(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_Distribution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "Distribution", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Branch
::StringW GlobalNamespace::AstarPath::_get_Branch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_Branch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AstarPath", "Branch"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Branch
void GlobalNamespace::AstarPath::_set_Branch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_Branch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "Branch", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath active
::GlobalNamespace::AstarPath* GlobalNamespace::AstarPath::_get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath*>("", "AstarPath", "active"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath active
void GlobalNamespace::AstarPath::_set_active(::GlobalNamespace::AstarPath* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "active", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnAwakeSettings
::System::Action* GlobalNamespace::AstarPath::_get_OnAwakeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnAwakeSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "AstarPath", "OnAwakeSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnAwakeSettings
void GlobalNamespace::AstarPath::_set_OnAwakeSettings(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnAwakeSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnAwakeSettings", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnGraphDelegate OnGraphPreScan
::Pathfinding::OnGraphDelegate* GlobalNamespace::AstarPath::_get_OnGraphPreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphPreScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnGraphDelegate*>("", "AstarPath", "OnGraphPreScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnGraphDelegate OnGraphPreScan
void GlobalNamespace::AstarPath::_set_OnGraphPreScan(::Pathfinding::OnGraphDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphPreScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphPreScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnGraphDelegate OnGraphPostScan
::Pathfinding::OnGraphDelegate* GlobalNamespace::AstarPath::_get_OnGraphPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphPostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnGraphDelegate*>("", "AstarPath", "OnGraphPostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnGraphDelegate OnGraphPostScan
void GlobalNamespace::AstarPath::_set_OnGraphPostScan(::Pathfinding::OnGraphDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphPostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphPostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnPathDelegate OnPathPreSearch
::Pathfinding::OnPathDelegate* GlobalNamespace::AstarPath::_get_OnPathPreSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPathPreSearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnPathDelegate*>("", "AstarPath", "OnPathPreSearch"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnPathDelegate OnPathPreSearch
void GlobalNamespace::AstarPath::_set_OnPathPreSearch(::Pathfinding::OnPathDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPathPreSearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPathPreSearch", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnPathDelegate OnPathPostSearch
::Pathfinding::OnPathDelegate* GlobalNamespace::AstarPath::_get_OnPathPostSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPathPostSearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnPathDelegate*>("", "AstarPath", "OnPathPostSearch"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnPathDelegate OnPathPostSearch
void GlobalNamespace::AstarPath::_set_OnPathPostSearch(::Pathfinding::OnPathDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPathPostSearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPathPostSearch", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnPreScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnPreScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPreScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnPreScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnPreScan
void GlobalNamespace::AstarPath::_set_OnPreScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPreScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPreScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnPostScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnPostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnPostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnPostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnPostScan
void GlobalNamespace::AstarPath::_set_OnPostScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnPostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnPostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnLatePostScan
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnLatePostScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnLatePostScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnLatePostScan"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnLatePostScan
void GlobalNamespace::AstarPath::_set_OnLatePostScan(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnLatePostScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnLatePostScan", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.OnScanDelegate OnGraphsUpdated
::Pathfinding::OnScanDelegate* GlobalNamespace::AstarPath::_get_OnGraphsUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnGraphsUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::OnScanDelegate*>("", "AstarPath", "OnGraphsUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.OnScanDelegate OnGraphsUpdated
void GlobalNamespace::AstarPath::_set_OnGraphsUpdated(::Pathfinding::OnScanDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnGraphsUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnGraphsUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action On65KOverflow
::System::Action* GlobalNamespace::AstarPath::_get_On65KOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_On65KOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "AstarPath", "On65KOverflow"));
}
// Autogenerated static field setter
// Set static field: static public System.Action On65KOverflow
void GlobalNamespace::AstarPath::_set_On65KOverflow(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_On65KOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "On65KOverflow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action OnThreadSafeCallback
::System::Action* GlobalNamespace::AstarPath::_get_OnThreadSafeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_OnThreadSafeCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("", "AstarPath", "OnThreadSafeCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action OnThreadSafeCallback
void GlobalNamespace::AstarPath::_set_OnThreadSafeCallback(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_OnThreadSafeCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "OnThreadSafeCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.Thread[] threads
::ArrayW<::System::Threading::Thread*> GlobalNamespace::AstarPath::_get_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_threads");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Threading::Thread*>>("", "AstarPath", "threads"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Thread[] threads
void GlobalNamespace::AstarPath::_set_threads(::ArrayW<::System::Threading::Thread*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_threads");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "threads", value));
}
// Autogenerated static field getter
// Get static field: static private Pathfinding.PathThreadInfo[] threadInfos
::ArrayW<::Pathfinding::PathThreadInfo> GlobalNamespace::AstarPath::_get_threadInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_threadInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::PathThreadInfo>>("", "AstarPath", "threadInfos"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.PathThreadInfo[] threadInfos
void GlobalNamespace::AstarPath::_set_threadInfos(::ArrayW<::Pathfinding::PathThreadInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_threadInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "threadInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.IEnumerator threadEnumerator
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::_get_threadEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_threadEnumerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::IEnumerator*>("", "AstarPath", "threadEnumerator"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IEnumerator threadEnumerator
void GlobalNamespace::AstarPath::_set_threadEnumerator(::System::Collections::IEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_threadEnumerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "threadEnumerator", value));
}
// Autogenerated static field getter
// Get static field: static private Pathfinding.Util.LockFreeStack pathReturnStack
::Pathfinding::Util::LockFreeStack* GlobalNamespace::AstarPath::_get_pathReturnStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_pathReturnStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::LockFreeStack*>("", "AstarPath", "pathReturnStack"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.Util.LockFreeStack pathReturnStack
void GlobalNamespace::AstarPath::_set_pathReturnStack(::Pathfinding::Util::LockFreeStack* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_pathReturnStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "pathReturnStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean isEditor
bool GlobalNamespace::AstarPath::_get_isEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_isEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "AstarPath", "isEditor"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean isEditor
void GlobalNamespace::AstarPath::_set_isEditor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_isEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "isEditor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object safeUpdateLock
::Il2CppObject* GlobalNamespace::AstarPath::_get_safeUpdateLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_safeUpdateLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("", "AstarPath", "safeUpdateLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object safeUpdateLock
void GlobalNamespace::AstarPath::_set_safeUpdateLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_safeUpdateLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "safeUpdateLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 waitForPathDepth
int GlobalNamespace::AstarPath::_get_waitForPathDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_get_waitForPathDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AstarPath", "waitForPathDepth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 waitForPathDepth
void GlobalNamespace::AstarPath::_set_waitForPathDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::_set_waitForPathDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath", "waitForPathDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarData astarData
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& GlobalNamespace::AstarPath::dyn_astarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_astarData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "astarData"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showNavGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showNavGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showNavGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showNavGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showUnwalkableNodes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showUnwalkableNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showUnwalkableNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showUnwalkableNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphDebugMode debugMode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphDebugMode& GlobalNamespace::AstarPath::dyn_debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphDebugMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugFloor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_debugFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugFloor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugFloor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugRoof
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_debugRoof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugRoof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugRoof"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean manualDebugFloorRoof
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_manualDebugFloorRoof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_manualDebugFloorRoof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manualDebugFloorRoof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showSearchTree
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showSearchTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showSearchTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showSearchTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unwalkableNodeDebugSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_unwalkableNodeDebugSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_unwalkableNodeDebugSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unwalkableNodeDebugSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathLog logPathResults
[[deprecated("Use field access instead!")]] ::Pathfinding::PathLog& GlobalNamespace::AstarPath::dyn_logPathResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_logPathResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logPathResults"))->offset;
  return *reinterpret_cast<::Pathfinding::PathLog*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNearestNodeDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_maxNearestNodeDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_maxNearestNodeDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNearestNodeDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean scanOnStartup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_scanOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_scanOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanOnStartup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullGetNearestSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_fullGetNearestSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_fullGetNearestSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullGetNearestSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prioritizeGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_prioritizeGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_prioritizeGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prioritizeGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single prioritizeGraphsLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_prioritizeGraphsLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_prioritizeGraphsLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prioritizeGraphsLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.AstarColor colorSettings
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarColor*& GlobalNamespace::AstarPath::dyn_colorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_colorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSettings"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarColor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] tagNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::AstarPath::dyn_tagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_tagNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Heuristic heuristic
[[deprecated("Use field access instead!")]] ::Pathfinding::Heuristic& GlobalNamespace::AstarPath::dyn_heuristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_heuristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristic"))->offset;
  return *reinterpret_cast<::Pathfinding::Heuristic*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heuristicScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_heuristicScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_heuristicScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristicScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ThreadCount threadCount
[[deprecated("Use field access instead!")]] ::Pathfinding::ThreadCount& GlobalNamespace::AstarPath::dyn_threadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_threadCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadCount"))->offset;
  return *reinterpret_cast<::Pathfinding::ThreadCount*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxFrameTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_maxFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_maxFrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minAreaSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::dyn_minAreaSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_minAreaSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAreaSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean batchGraphUpdates
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_batchGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_batchGraphUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchGraphUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single graphUpdateBatchingInterval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_graphUpdateBatchingInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateBatchingInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateBatchingInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastScanTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_lastScanTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_lastScanTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastScanTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path debugPath
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::AstarPath::dyn_debugPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_debugPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPath"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String inGameDebugPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AstarPath::dyn_inGameDebugPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_inGameDebugPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inGameDebugPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isScanning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_$isScanning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_$isScanning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isScanning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean graphUpdateRoutineRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_graphUpdateRoutineRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateRoutineRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateRoutineRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRegisteredForUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_isRegisteredForUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_isRegisteredForUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRegisteredForUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean workItemsQueued
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_workItemsQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_workItemsQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItemsQueued"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean queuedWorkItemFloodFill
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_queuedWorkItemFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_queuedWorkItemFloodFill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queuedWorkItemFloodFill"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnDrawGizmosCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnDrawGizmosCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnDrawGizmosCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnDrawGizmosCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnUnloadGizmoMeshes
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnUnloadGizmoMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnUnloadGizmoMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnUnloadGizmoMeshes"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnGraphsWillBeUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGraphsWillBeUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnGraphsWillBeUpdated2
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_OnGraphsWillBeUpdated2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGraphsWillBeUpdated2"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Pathfinding.GraphUpdateObject> graphUpdateQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>*& GlobalNamespace::AstarPath::dyn_graphUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphUpdateObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<Pathfinding.GraphNode> floodStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>*& GlobalNamespace::AstarPath::dyn_floodStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_floodStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floodStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.ThreadControlQueue pathQueue
[[deprecated("Use field access instead!")]] ::Pathfinding::ThreadControlQueue*& GlobalNamespace::AstarPath::dyn_pathQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_pathQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathQueue"))->offset;
  return *reinterpret_cast<::Pathfinding::ThreadControlQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread graphUpdateThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::AstarPath::dyn_graphUpdateThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.EuclideanEmbedding euclideanEmbedding
[[deprecated("Use field access instead!")]] ::Pathfinding::EuclideanEmbedding*& GlobalNamespace::AstarPath::dyn_euclideanEmbedding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_euclideanEmbedding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "euclideanEmbedding"))->offset;
  return *reinterpret_cast<::Pathfinding::EuclideanEmbedding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextNodeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::dyn_nextNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_nextNodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextNodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Int32> nodeIndexPool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<int>*& GlobalNamespace::AstarPath::dyn_nodeIndexPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_nodeIndexPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndexPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path pathReturnPop
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::AstarPath::dyn_pathReturnPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_pathReturnPop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathReturnPop"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AstarPath/GUOSingle> graphUpdateQueueAsync
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::GUOSingle>*& GlobalNamespace::AstarPath::dyn_graphUpdateQueueAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateQueueAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueueAsync"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::GUOSingle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AstarPath/GUOSingle> graphUpdateQueueRegular
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::GUOSingle>*& GlobalNamespace::AstarPath::dyn_graphUpdateQueueRegular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateQueueRegular");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateQueueRegular"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::GUOSingle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showGraphs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_showGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_showGraphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showGraphs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 lastUniqueAreaIndex
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::AstarPath::dyn_lastUniqueAreaIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_lastUniqueAreaIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUniqueAreaIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent graphUpdateAsyncEvent
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& GlobalNamespace::AstarPath::dyn_graphUpdateAsyncEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_graphUpdateAsyncEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphUpdateAsyncEvent"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent processingGraphUpdatesAsync
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& GlobalNamespace::AstarPath::dyn_processingGraphUpdatesAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_processingGraphUpdatesAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processingGraphUpdatesAsync"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastGraphUpdate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::dyn_lastGraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_lastGraphUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastGraphUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 nextFreePathID
[[deprecated("Use field access instead!")]] uint16_t& GlobalNamespace::AstarPath::dyn_nextFreePathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_nextFreePathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreePathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AstarPath/AstarWorkItem> workItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::AstarWorkItem>*& GlobalNamespace::AstarPath::dyn_workItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_workItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::AstarPath::AstarWorkItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processingWorkItems
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::dyn_processingWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::dyn_processingWorkItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processingWorkItems"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath.get_Version
::System::Version* GlobalNamespace::AstarPath::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.get_graphTypes
::ArrayW<::System::Type*> GlobalNamespace::AstarPath::get_graphTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_graphTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_graphs
::ArrayW<::Pathfinding::NavGraph*> GlobalNamespace::AstarPath::get_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_graphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::NavGraph*>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_graphs
void GlobalNamespace::AstarPath::set_graphs(::ArrayW<::Pathfinding::NavGraph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_graphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_graphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_maxNearestNodeDistanceSqr
float GlobalNamespace::AstarPath::get_maxNearestNodeDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_maxNearestNodeDistanceSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxNearestNodeDistanceSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_limitGraphUpdates
bool GlobalNamespace::AstarPath::get_limitGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_limitGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limitGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_limitGraphUpdates
void GlobalNamespace::AstarPath::set_limitGraphUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_limitGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_limitGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_maxGraphUpdateFreq
float GlobalNamespace::AstarPath::get_maxGraphUpdateFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_maxGraphUpdateFreq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxGraphUpdateFreq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_maxGraphUpdateFreq
void GlobalNamespace::AstarPath::set_maxGraphUpdateFreq(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_maxGraphUpdateFreq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxGraphUpdateFreq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_debugPathData
::Pathfinding::PathHandler* GlobalNamespace::AstarPath::get_debugPathData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_debugPathData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debugPathData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathHandler*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.get_isScanning
bool GlobalNamespace::AstarPath::get_isScanning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_isScanning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isScanning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.set_isScanning
void GlobalNamespace::AstarPath::set_isScanning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::set_isScanning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isScanning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AstarPath.get_NumParallelThreads
int GlobalNamespace::AstarPath::get_NumParallelThreads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_NumParallelThreads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "get_NumParallelThreads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.get_IsUsingMultithreading
bool GlobalNamespace::AstarPath::get_IsUsingMultithreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsUsingMultithreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "get_IsUsingMultithreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.get_IsAnyGraphUpdatesQueued
bool GlobalNamespace::AstarPath::get_IsAnyGraphUpdatesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::get_IsAnyGraphUpdatesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAnyGraphUpdatesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.GetTagNames
::ArrayW<::StringW> GlobalNamespace::AstarPath::GetTagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetTagNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FindTagNames
::ArrayW<::StringW> GlobalNamespace::AstarPath::FindTagNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FindTagNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "FindTagNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.GetNextPathID
uint16_t GlobalNamespace::AstarPath::GetNextPathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNextPathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextPathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDrawGizmos
void GlobalNamespace::AstarPath::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.DrawUnwalkableNode
bool GlobalNamespace::AstarPath::DrawUnwalkableNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::DrawUnwalkableNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawUnwalkableNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath.OnGUI
void GlobalNamespace::AstarPath::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.AstarLog
void GlobalNamespace::AstarPath::AstarLog(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "AstarLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: AstarPath.AstarLogError
void GlobalNamespace::AstarPath::AstarLogError(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarLogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "AstarLogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: AstarPath.LogPathResults
void GlobalNamespace::AstarPath::LogPathResults(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::LogPathResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogPathResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: AstarPath.Update
void GlobalNamespace::AstarPath::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.PerformBlockingActions
void GlobalNamespace::AstarPath::PerformBlockingActions(bool force, bool unblockOnComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::PerformBlockingActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformBlockingActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(unblockOnComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, unblockOnComplete);
}
// Autogenerated method: AstarPath.QueueWorkItemFloodFill
void GlobalNamespace::AstarPath::QueueWorkItemFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::QueueWorkItemFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueWorkItemFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.EnsureValidFloodFill
void GlobalNamespace::AstarPath::EnsureValidFloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::EnsureValidFloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureValidFloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.AddWorkItem
void GlobalNamespace::AstarPath::AddWorkItem(::GlobalNamespace::AstarPath::AstarWorkItem itm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AddWorkItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itm);
}
// Autogenerated method: AstarPath.ProcessWorkItems
int GlobalNamespace::AstarPath::ProcessWorkItems(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ProcessWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, force);
}
// Autogenerated method: AstarPath.QueueGraphUpdates
void GlobalNamespace::AstarPath::QueueGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::QueueGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.DelayedGraphUpdate
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::DelayedGraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::DelayedGraphUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedGraphUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::UnityEngine::Bounds bounds, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds, t);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::Pathfinding::GraphUpdateObject* ob, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob, t);
}
// Autogenerated method: AstarPath.UpdateGraphsInteral
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::UpdateGraphsInteral(::Pathfinding::GraphUpdateObject* ob, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphsInteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphsInteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, ob, t);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bounds);
}
// Autogenerated method: AstarPath.UpdateGraphs
void GlobalNamespace::AstarPath::UpdateGraphs(::Pathfinding::GraphUpdateObject* ob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::UpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ob)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ob);
}
// Autogenerated method: AstarPath.FlushGraphUpdates
void GlobalNamespace::AstarPath::FlushGraphUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FlushWorkItems
void GlobalNamespace::AstarPath::FlushWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FlushWorkItems
void GlobalNamespace::AstarPath::FlushWorkItems(bool unblockOnComplete, bool block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unblockOnComplete), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unblockOnComplete, block);
}
// Autogenerated method: AstarPath.FlushWorkItemsInternal
void GlobalNamespace::AstarPath::FlushWorkItemsInternal(bool unblockOnComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushWorkItemsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWorkItemsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unblockOnComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unblockOnComplete);
}
// Autogenerated method: AstarPath.QueueGraphUpdatesInternal
void GlobalNamespace::AstarPath::QueueGraphUpdatesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::QueueGraphUpdatesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueGraphUpdatesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.ProcessGraphUpdates
bool GlobalNamespace::AstarPath::ProcessGraphUpdates(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ProcessGraphUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessGraphUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: AstarPath.ProcessGraphUpdatesAsync
void GlobalNamespace::AstarPath::ProcessGraphUpdatesAsync(::Il2CppObject* _astar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ProcessGraphUpdatesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessGraphUpdatesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_astar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _astar);
}
// Autogenerated method: AstarPath.FlushThreadSafeCallbacks
void GlobalNamespace::AstarPath::FlushThreadSafeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FlushThreadSafeCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushThreadSafeCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.CalculateThreadCount
int GlobalNamespace::AstarPath::CalculateThreadCount(::Pathfinding::ThreadCount count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::CalculateThreadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "CalculateThreadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: AstarPath.Awake
void GlobalNamespace::AstarPath::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.VerifyIntegrity
void GlobalNamespace::AstarPath::VerifyIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::VerifyIntegrity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.SetUpReferences
void GlobalNamespace::AstarPath::SetUpReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::SetUpReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.Initialize
void GlobalNamespace::AstarPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDisable
void GlobalNamespace::AstarPath::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.OnDestroy
void GlobalNamespace::AstarPath::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill(::Pathfinding::GraphNode* seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seed);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill(::Pathfinding::GraphNode* seed, uint area) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(area)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, seed, area);
}
// Autogenerated method: AstarPath.FloodFill
void GlobalNamespace::AstarPath::FloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::FloodFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FloodFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.GetNewNodeIndex
int GlobalNamespace::AstarPath::GetNewNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNewNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.InitializeNode
void GlobalNamespace::AstarPath::InitializeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InitializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath.DestroyNode
void GlobalNamespace::AstarPath::DestroyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::DestroyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath.BlockUntilPathQueueBlocked
void GlobalNamespace::AstarPath::BlockUntilPathQueueBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::BlockUntilPathQueueBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilPathQueueBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.Scan
void GlobalNamespace::AstarPath::Scan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.ScanLoop
void GlobalNamespace::AstarPath::ScanLoop(::Pathfinding::OnScanStatus* statusCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ScanLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCallback);
}
// Autogenerated method: AstarPath.WaitForPath
void GlobalNamespace::AstarPath::WaitForPath(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::WaitForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "WaitForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: AstarPath.RegisterSafeUpdate
void GlobalNamespace::AstarPath::RegisterSafeUpdate(::System::Action* callback, bool threadSafe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::RegisterSafeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "RegisterSafeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(threadSafe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, threadSafe);
}
// Autogenerated method: AstarPath.RegisterSafeUpdate
void GlobalNamespace::AstarPath::RegisterSafeUpdate(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::RegisterSafeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "RegisterSafeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: AstarPath.InterruptPathfinding
void GlobalNamespace::AstarPath::InterruptPathfinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::InterruptPathfinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterruptPathfinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.StartPath
void GlobalNamespace::AstarPath::StartPath(::Pathfinding::Path* p, bool pushToFront) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::StartPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "StartPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(pushToFront)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, pushToFront);
}
// Autogenerated method: AstarPath.OnApplicationQuit
void GlobalNamespace::AstarPath::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath.ReturnPaths
void GlobalNamespace::AstarPath::ReturnPaths(bool timeSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::ReturnPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSlice);
}
// Autogenerated method: AstarPath.CalculatePathsThreaded
void GlobalNamespace::AstarPath::CalculatePathsThreaded(::Il2CppObject* _threadInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::CalculatePathsThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "CalculatePathsThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_threadInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _threadInfo);
}
// Autogenerated method: AstarPath.CalculatePaths
::System::Collections::IEnumerator* GlobalNamespace::AstarPath::CalculatePaths(::Il2CppObject* _threadInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::CalculatePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", "CalculatePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_threadInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _threadInfo);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::NNInfo GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: AstarPath.GetNearest
::Pathfinding::GraphNode* GlobalNamespace::AstarPath::GetNearest(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method, ray);
}
// Autogenerated method: AstarPath..cctor
void GlobalNamespace::AstarPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath.<OnDrawGizmos>b__104_0
bool GlobalNamespace::AstarPath::$OnDrawGizmos$b__104_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::<OnDrawGizmos>b__104_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDrawGizmos>b__104_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/AstarDistribution
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AstarPath/AstarDistribution WebsiteDownload
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::AstarDistribution::_get_WebsiteDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_get_WebsiteDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath/AstarDistribution", "WebsiteDownload"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/AstarDistribution WebsiteDownload
void GlobalNamespace::AstarPath::AstarDistribution::_set_WebsiteDownload(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_set_WebsiteDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/AstarDistribution", "WebsiteDownload", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath/AstarDistribution AssetStore
::GlobalNamespace::AstarPath::AstarDistribution GlobalNamespace::AstarPath::AstarDistribution::_get_AssetStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_get_AssetStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::AstarDistribution>("", "AstarPath/AstarDistribution", "AssetStore"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/AstarDistribution AssetStore
void GlobalNamespace::AstarPath::AstarDistribution::_set_AssetStore(::GlobalNamespace::AstarPath::AstarDistribution value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::_set_AssetStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/AstarDistribution", "AssetStore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::AstarDistribution::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarDistribution::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/GraphUpdateOrder
#include "GlobalNamespace/AstarPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AstarPath/GraphUpdateOrder GraphUpdate
::GlobalNamespace::AstarPath::GraphUpdateOrder GlobalNamespace::AstarPath::GraphUpdateOrder::_get_GraphUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GraphUpdateOrder::_get_GraphUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::GraphUpdateOrder>("", "AstarPath/GraphUpdateOrder", "GraphUpdate"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/GraphUpdateOrder GraphUpdate
void GlobalNamespace::AstarPath::GraphUpdateOrder::_set_GraphUpdate(::GlobalNamespace::AstarPath::GraphUpdateOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GraphUpdateOrder::_set_GraphUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/GraphUpdateOrder", "GraphUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public AstarPath/GraphUpdateOrder FloodFill
::GlobalNamespace::AstarPath::GraphUpdateOrder GlobalNamespace::AstarPath::GraphUpdateOrder::_get_FloodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GraphUpdateOrder::_get_FloodFill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::GraphUpdateOrder>("", "AstarPath/GraphUpdateOrder", "FloodFill"));
}
// Autogenerated static field setter
// Set static field: static public AstarPath/GraphUpdateOrder FloodFill
void GlobalNamespace::AstarPath::GraphUpdateOrder::_set_FloodFill(::GlobalNamespace::AstarPath::GraphUpdateOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GraphUpdateOrder::_set_FloodFill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AstarPath/GraphUpdateOrder", "FloodFill", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::GraphUpdateOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::GraphUpdateOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/AstarWorkItem
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action init
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AstarPath::AstarWorkItem::dyn_init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarWorkItem::dyn_init");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "init"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Boolean,System.Boolean> update
[[deprecated("Use field access instead!")]] ::System::Func_2<bool, bool>*& GlobalNamespace::AstarPath::AstarWorkItem::dyn_update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarWorkItem::dyn_update");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "update"))->offset;
  return *reinterpret_cast<::System::Func_2<bool, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/AstarWorkItem..ctor
GlobalNamespace::AstarPath::AstarWorkItem::AstarWorkItem(::System::Func_2<bool, bool>* update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::AstarWorkItem::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: AstarPath/AstarWorkItem..ctor
// ABORTED elsewhere.  GlobalNamespace::AstarPath::AstarWorkItem::AstarWorkItem(::System::Action* init, ::System::Func_2<bool, bool>* update)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<DelayedGraphUpdate>d__120
#include "GlobalNamespace/AstarPath_-DelayedGraphUpdate-d__120.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__120.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__120.MoveNext
bool GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__120.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__120.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<DelayedGraphUpdate>d__120.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$DelayedGraphUpdate$d__120*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<UpdateGraphsInteral>d__123
#include "GlobalNamespace/AstarPath_-UpdateGraphsInteral-d__123.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single t
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateObject ob
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_ob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::dyn_ob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ob"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<UpdateGraphsInteral>d__123.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInteral>d__123.MoveNext
bool GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInteral>d__123.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInteral>d__123.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<UpdateGraphsInteral>d__123.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$UpdateGraphsInteral$d__123*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass143_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass143_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 area
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> smallAreaList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_smallAreaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_smallAreaList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smallAreaList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<Pathfinding.GraphNode> stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>*& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smallAreasDetected
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_smallAreasDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_smallAreasDetected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smallAreasDetected"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean warnAboutAreas
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_warnAboutAreas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_warnAboutAreas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "warnAboutAreas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__1
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass143_0.<FloodFill>b__1
bool GlobalNamespace::AstarPath::$$c__DisplayClass143_0::$FloodFill$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass143_0::<FloodFill>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FloodFill>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c
#include "GlobalNamespace/AstarPath_--c.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AstarPath/<>c <>9
::GlobalNamespace::AstarPath::$$c* GlobalNamespace::AstarPath::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarPath::$$c*>("", "AstarPath/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AstarPath/<>c <>9
void GlobalNamespace::AstarPath::$$c::_set_$$9(::GlobalNamespace::AstarPath::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarPath/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__143_0
::Pathfinding::GraphNodeDelegateCancelable* GlobalNamespace::AstarPath::$$c::_get_$$9__143_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_get_$$9__143_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::GraphNodeDelegateCancelable*>("", "AstarPath/<>c", "<>9__143_0")));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__143_0
void GlobalNamespace::AstarPath::$$c::_set_$$9__143_0(::Pathfinding::GraphNodeDelegateCancelable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_set_$$9__143_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarPath/<>c", "<>9__143_0", value)));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__149_0
::Pathfinding::GraphNodeDelegateCancelable* GlobalNamespace::AstarPath::$$c::_get_$$9__149_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_get_$$9__149_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::GraphNodeDelegateCancelable*>("", "AstarPath/<>c", "<>9__149_0")));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__149_0
void GlobalNamespace::AstarPath::$$c::_set_$$9__149_0(::Pathfinding::GraphNodeDelegateCancelable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::_set_$$9__149_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarPath/<>c", "<>9__149_0", value)));
}
// Autogenerated method: AstarPath/<>c..cctor
void GlobalNamespace::AstarPath::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarPath/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarPath/<>c.<FloodFill>b__143_0
bool GlobalNamespace::AstarPath::$$c::$FloodFill$b__143_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::<FloodFill>b__143_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FloodFill>b__143_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: AstarPath/<>c.<ScanLoop>b__149_0
bool GlobalNamespace::AstarPath::$$c::$ScanLoop$b__149_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c::<ScanLoop>b__149_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanLoop>b__149_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass149_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_0.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnScanStatus statusCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnScanStatus*& GlobalNamespace::AstarPath::$$c__DisplayClass149_0::dyn_statusCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_0::dyn_statusCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnScanStatus**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass149_1
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: AstarPath/<>c__DisplayClass149_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$$c__DisplayClass149_1::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_1::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath/<>c__DisplayClass149_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath::$$c__DisplayClass149_0*& GlobalNamespace::AstarPath::$$c__DisplayClass149_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath::$$c__DisplayClass149_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass149_1.<ScanLoop>b__2
bool GlobalNamespace::AstarPath::$$c__DisplayClass149_1::$ScanLoop$b__2(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_1::<ScanLoop>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanLoop>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass149_2
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_2.hpp"
// Including type: Pathfinding.Progress
#include "Pathfinding/Progress.hpp"
// Including type: AstarPath/<>c__DisplayClass149_1
#include "GlobalNamespace/AstarPath_--c__DisplayClass149_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_minp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_minp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_maxp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_maxp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AstarPath/<>c__DisplayClass149_1 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath::$$c__DisplayClass149_1*& GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath::$$c__DisplayClass149_1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass149_2.<ScanLoop>b__1
void GlobalNamespace::AstarPath::$$c__DisplayClass149_2::$ScanLoop$b__1(::Pathfinding::Progress p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass149_2::<ScanLoop>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ScanLoop>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AstarPath/<CalculatePaths>d__159
#include "GlobalNamespace/AstarPath_-CalculatePaths-d__159.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object _threadInfo
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn__threadInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn__threadInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_threadInfo"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numPaths>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$numPaths$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$numPaths$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numPaths>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathHandler <runData>5__3
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$runData$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$runData$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<runData>5__3"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AstarPath <astar>5__4
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$astar$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$astar$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<astar>5__4"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <maxTicks>5__5
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$maxTicks$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$maxTicks$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxTicks>5__5"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <targetTick>5__6
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$targetTick$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$targetTick$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetTick>5__6"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Path <p>5__7
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$p$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$p$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<p>5__7"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <blockedBefore>5__8
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$blockedBefore$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$blockedBefore$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<blockedBefore>5__8"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <totalTicks>5__9
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$totalTicks$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::dyn_$totalTicks$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalTicks>5__9"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<CalculatePaths>d__159.System.IDisposable.Dispose
void GlobalNamespace::AstarPath::$CalculatePaths$d__159::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$CalculatePaths$d__159*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<CalculatePaths>d__159.MoveNext
bool GlobalNamespace::AstarPath::$CalculatePaths$d__159::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$CalculatePaths$d__159*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<CalculatePaths>d__159.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$CalculatePaths$d__159::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$CalculatePaths$d__159*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<CalculatePaths>d__159.System.Collections.IEnumerator.Reset
void GlobalNamespace::AstarPath::$CalculatePaths$d__159::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$CalculatePaths$d__159*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarPath/<CalculatePaths>d__159.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AstarPath::$CalculatePaths$d__159::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$CalculatePaths$d__159::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AstarPath::$CalculatePaths$d__159*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarPath/<>c__DisplayClass163_0
#include "GlobalNamespace/AstarPath_--c__DisplayClass163_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lineOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_lineOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_lineOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lineDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_lineDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_lineDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_minDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode nearestNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_nearestNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_nearestNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearestNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__0
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarPath/<>c__DisplayClass163_0.<GetNearest>b__0
bool GlobalNamespace::AstarPath::$$c__DisplayClass163_0::$GetNearest$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarPath::$$c__DisplayClass163_0::<GetNearest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNearest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarDebugger
#include "GlobalNamespace/AstarDebugger.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: AstarDebugger/<>c
#include "GlobalNamespace/AstarDebugger_--c.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 yOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean show
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_show");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "show"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showInEditor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_showInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_showInEditor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showInEditor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showFPS
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_showFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_showFPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showFPS"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showPathProfile
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_showPathProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_showPathProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showPathProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showMemProfile
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_showMemProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_showMemProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showMemProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showGraph
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarDebugger::dyn_showGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_showGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showGraph"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 graphBufferSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_graphBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_graphBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphBufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Font font
[[deprecated("Use field access instead!")]] ::UnityEngine::Font*& GlobalNamespace::AstarDebugger::dyn_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_font");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "font"))->offset;
  return *reinterpret_cast<::UnityEngine::Font**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fontSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_fontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder text
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::AstarDebugger::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String cachedText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AstarDebugger::dyn_cachedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_cachedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastUpdate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_lastUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AstarDebugger/GraphPoint[] graph
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AstarDebugger::GraphPoint>& GlobalNamespace::AstarDebugger::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AstarDebugger::GraphPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single delayedDeltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_delayedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_delayedDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayedDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollect
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_lastCollect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastCollect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollectNum
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_lastCollectNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastCollectNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollectNum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single delta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastDeltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_lastDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 allocRate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_allocRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_allocRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allocRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAllocMemory
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_lastAllocMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastAllocMemory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAllocMemory"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAllocSet
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_lastAllocSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_lastAllocSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAllocSet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 allocMem
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_allocMem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_allocMem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allocMem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 collectAlloc
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_collectAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_collectAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collectAlloc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 peakAlloc
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_peakAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_peakAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peakAlloc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fpsDropCounterSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_fpsDropCounterSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_fpsDropCounterSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsDropCounterSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] fpsDrops
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::AstarDebugger::dyn_fpsDrops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_fpsDrops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsDrops"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect boxRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::AstarDebugger::dyn_boxRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_boxRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boxRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GUIStyle style
[[deprecated("Use field access instead!")]] ::UnityEngine::GUIStyle*& GlobalNamespace::AstarDebugger::dyn_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
  return *reinterpret_cast<::UnityEngine::GUIStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera cam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::AstarDebugger::dyn_cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_graphWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_graphWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_graphHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_graphHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single graphOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarDebugger::dyn_graphOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_graphOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxVecPool
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_maxVecPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_maxVecPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVecPool"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxNodePool
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AstarDebugger::dyn_maxNodePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_maxNodePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNodePool"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AstarDebugger/PathTypeDebug[] debugTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AstarDebugger::PathTypeDebug>& GlobalNamespace::AstarDebugger::dyn_debugTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::dyn_debugTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AstarDebugger::PathTypeDebug>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarDebugger.Start
void GlobalNamespace::AstarDebugger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarDebugger.Update
void GlobalNamespace::AstarDebugger::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AstarDebugger.DrawGraphLine
void GlobalNamespace::AstarDebugger::DrawGraphLine(int index, ::UnityEngine::Matrix4x4 m, float x1, float x2, float y1, float y2, ::UnityEngine::Color col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::DrawGraphLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGraphLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(x1), ::il2cpp_utils::ExtractType(x2), ::il2cpp_utils::ExtractType(y1), ::il2cpp_utils::ExtractType(y2), ::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, m, x1, x2, y1, y2, col);
}
// Autogenerated method: AstarDebugger.Cross
void GlobalNamespace::AstarDebugger::Cross(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::Cross");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cross", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: AstarDebugger.OnGUI
void GlobalNamespace::AstarDebugger::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarDebugger/PathTypeDebug
#include "GlobalNamespace/AstarDebugger.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Int32> getSize
[[deprecated("Use field access instead!")]] ::System::Func_1<int>*& GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_getSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_getSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSize"))->offset;
  return *reinterpret_cast<::System::Func_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Int32> getTotalCreated
[[deprecated("Use field access instead!")]] ::System::Func_1<int>*& GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_getTotalCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::PathTypeDebug::dyn_getTotalCreated");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getTotalCreated"))->offset;
  return *reinterpret_cast<::System::Func_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarDebugger/PathTypeDebug..ctor
// ABORTED elsewhere.  GlobalNamespace::AstarDebugger::PathTypeDebug::PathTypeDebug(::StringW name, ::System::Func_1<int>* getSize, ::System::Func_1<int>* getTotalCreated)
// Autogenerated method: AstarDebugger/PathTypeDebug.Print
void GlobalNamespace::AstarDebugger::PathTypeDebug::Print(::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::PathTypeDebug::Print");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Print", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarDebugger/<>c
#include "GlobalNamespace/AstarDebugger_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AstarDebugger/<>c <>9
::GlobalNamespace::AstarDebugger::$$c* GlobalNamespace::AstarDebugger::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AstarDebugger::$$c*>("", "AstarDebugger/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AstarDebugger/<>c <>9
void GlobalNamespace::AstarDebugger::$$c::_set_$$9(::GlobalNamespace::AstarDebugger::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarDebugger/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__43_0
::System::Func_1<int>* GlobalNamespace::AstarDebugger::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("", "AstarDebugger/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__43_0
void GlobalNamespace::AstarDebugger::$$c::_set_$$9__43_0(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarDebugger/<>c", "<>9__43_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Int32> <>9__43_1
::System::Func_1<int>* GlobalNamespace::AstarDebugger::$$c::_get_$$9__43_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_get_$$9__43_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<int>*>("", "AstarDebugger/<>c", "<>9__43_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Int32> <>9__43_1
void GlobalNamespace::AstarDebugger::$$c::_set_$$9__43_1(::System::Func_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::_set_$$9__43_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AstarDebugger/<>c", "<>9__43_1", value)));
}
// Autogenerated method: AstarDebugger/<>c..cctor
void GlobalNamespace::AstarDebugger::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AstarDebugger/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AstarDebugger/<>c.<.ctor>b__43_0
int GlobalNamespace::AstarDebugger::$$c::$_ctor$b__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::<.ctor>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AstarDebugger/<>c.<.ctor>b__43_1
int GlobalNamespace::AstarDebugger::$$c::$_ctor$b__43_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarDebugger::$$c::<.ctor>b__43_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__43_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProceduralGridMover
#include "GlobalNamespace/ProceduralGridMover.hpp"
// Including type: ProceduralGridMover/<>c__DisplayClass12_0
#include "GlobalNamespace/ProceduralGridMover_--c__DisplayClass12_0.hpp"
// Including type: ProceduralGridMover/<UpdateGraphCoroutine>d__13
#include "GlobalNamespace/ProceduralGridMover_-UpdateGraphCoroutine-d__13.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single updateDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralGridMover::dyn_updateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_updateDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ProceduralGridMover::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean floodFill
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralGridMover::dyn_floodFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_floodFill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floodFill"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridGraph graph
[[deprecated("Use field access instead!")]] ::Pathfinding::GridGraph*& GlobalNamespace::ProceduralGridMover::dyn_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_graph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graph"))->offset;
  return *reinterpret_cast<::Pathfinding::GridGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridNode[] tmp
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNode*>& GlobalNamespace::ProceduralGridMover::dyn_tmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_tmp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmp"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <updatingGraph>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralGridMover::dyn_$updatingGraph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::dyn_$updatingGraph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<updatingGraph>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralGridMover.get_updatingGraph
bool GlobalNamespace::ProceduralGridMover::get_updatingGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::get_updatingGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updatingGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover.set_updatingGraph
void GlobalNamespace::ProceduralGridMover::set_updatingGraph(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::set_updatingGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updatingGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProceduralGridMover.Start
void GlobalNamespace::ProceduralGridMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover.Update
void GlobalNamespace::ProceduralGridMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover.PointToGraphSpace
::UnityEngine::Vector3 GlobalNamespace::ProceduralGridMover::PointToGraphSpace(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::PointToGraphSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointToGraphSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: ProceduralGridMover.UpdateGraph
void GlobalNamespace::ProceduralGridMover::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::UpdateGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover.UpdateGraphCoroutine
::System::Collections::IEnumerator* GlobalNamespace::ProceduralGridMover::UpdateGraphCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::UpdateGraphCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGraphCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProceduralGridMover/<>c__DisplayClass12_0
#include "GlobalNamespace/ProceduralGridMover_--c__DisplayClass12_0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerator ie
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::dyn_ie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::dyn_ie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ie"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralGridMover <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralGridMover*& GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralGridMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralGridMover/<>c__DisplayClass12_0.<UpdateGraph>b__0
bool GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::$UpdateGraph$b__0(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::<UpdateGraph>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateGraph>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProceduralGridMover/<UpdateGraphCoroutine>d__13
#include "GlobalNamespace/ProceduralGridMover_-UpdateGraphCoroutine-d__13.hpp"
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralGridMover <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralGridMover*& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralGridMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int2 <offset>5__2
[[deprecated("Use field access instead!")]] ::Pathfinding::Int2& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$offset$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$offset$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>5__2"))->offset;
  return *reinterpret_cast<::Pathfinding::Int2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <width>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$width$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$width$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<width>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <depth>5__4
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$depth$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$depth$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<depth>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GridNode[] <nodes>5__5
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNode*>& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$nodes$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$nodes$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nodes>5__5"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.IntRect <r>5__6
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$r$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$r$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<r>5__6"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <minz>5__7
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$minz$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$minz$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<minz>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <maxz>5__8
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$maxz$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::dyn_$maxz$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxz>5__8"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover/<UpdateGraphCoroutine>d__13.MoveNext
bool GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralGridMover/<UpdateGraphCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralGridMover::$UpdateGraphCoroutine$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProceduralWorld
#include "GlobalNamespace/ProceduralWorld.hpp"
// Including type: ProceduralWorld/ProceduralPrefab
#include "GlobalNamespace/ProceduralWorld_ProceduralPrefab.hpp"
// Including type: ProceduralWorld/ProceduralTile
#include "GlobalNamespace/ProceduralWorld_ProceduralTile.hpp"
// Including type: ProceduralWorld/<GenerateTiles>d__11
#include "GlobalNamespace/ProceduralWorld_-GenerateTiles-d__11.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ProceduralWorld::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralWorld/ProceduralPrefab[] prefabs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ProceduralWorld::ProceduralPrefab*>& GlobalNamespace::ProceduralWorld::dyn_prefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_prefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ProceduralWorld::ProceduralPrefab*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 range
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::dyn_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "range"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tileSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::dyn_tileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_tileSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subTiles
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::dyn_subTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_subTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTiles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticBatching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralWorld::dyn_staticBatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_staticBatching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticBatching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Collections.IEnumerator> tileGenerationQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::Collections::IEnumerator*>*& GlobalNamespace::ProceduralWorld::dyn_tileGenerationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_tileGenerationQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileGenerationQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Collections::IEnumerator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.Int2,ProceduralWorld/ProceduralTile> tiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, ::GlobalNamespace::ProceduralWorld::ProceduralTile*>*& GlobalNamespace::ProceduralWorld::dyn_tiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::dyn_tiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int2, ::GlobalNamespace::ProceduralWorld::ProceduralTile*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralWorld.Start
void GlobalNamespace::ProceduralWorld::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld.Update
void GlobalNamespace::ProceduralWorld::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld.GenerateTiles
::System::Collections::IEnumerator* GlobalNamespace::ProceduralWorld::GenerateTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::GenerateTiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProceduralWorld/ProceduralPrefab
#include "GlobalNamespace/ProceduralWorld_ProceduralPrefab.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single density
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_density() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_density");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "density"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinPower
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinPower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 perlinOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_perlinScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single random
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean singleFixed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_singleFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralPrefab::dyn_singleFixed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "singleFixed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProceduralWorld/ProceduralTile
#include "GlobalNamespace/ProceduralWorld_ProceduralTile.hpp"
// Including type: ProceduralWorld/ProceduralTile/<Generate>d__12
#include "GlobalNamespace/ProceduralWorld_ProceduralTile_-Generate-d__12.hpp"
// Including type: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17
#include "GlobalNamespace/ProceduralWorld_ProceduralTile_-InternalGenerate-d__17.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 z
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean staticBatching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_staticBatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_staticBatching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticBatching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ProceduralWorld world
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralWorld*& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_world() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_world");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "world"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralWorld**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <destroyed>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_$destroyed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_$destroyed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<destroyed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator ie
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_ie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::dyn_ie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ie"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.get_destroyed
bool GlobalNamespace::ProceduralWorld::ProceduralTile::get_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::get_destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.set_destroyed
void GlobalNamespace::ProceduralWorld::ProceduralTile::set_destroyed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::set_destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.Generate
::System::Collections::IEnumerator* GlobalNamespace::ProceduralWorld::ProceduralTile::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.ForceFinish
void GlobalNamespace::ProceduralWorld::ProceduralTile::ForceFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::ForceFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.RandomInside
::UnityEngine::Vector3 GlobalNamespace::ProceduralWorld::ProceduralTile::RandomInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::RandomInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.RandomInside
::UnityEngine::Vector3 GlobalNamespace::ProceduralWorld::ProceduralTile::RandomInside(float px, float pz) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::RandomInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px), ::il2cpp_utils::ExtractType(pz)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, px, pz);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.RandomYRot
::UnityEngine::Quaternion GlobalNamespace::ProceduralWorld::ProceduralTile::RandomYRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::RandomYRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomYRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.InternalGenerate
::System::Collections::IEnumerator* GlobalNamespace::ProceduralWorld::ProceduralTile::InternalGenerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::InternalGenerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGenerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile.Destroy
void GlobalNamespace::ProceduralWorld::ProceduralTile::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProceduralWorld/ProceduralTile/<Generate>d__12
#include "GlobalNamespace/ProceduralWorld_ProceduralTile_-Generate-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralWorld/ProceduralTile <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralWorld::ProceduralTile*& GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralWorld::ProceduralTile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<Generate>d__12.System.IDisposable.Dispose
void GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<Generate>d__12.MoveNext
bool GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<Generate>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<Generate>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<Generate>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$Generate$d__12*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17
#include "GlobalNamespace/ProceduralWorld_ProceduralTile_-InternalGenerate-d__17.hpp"
// Including type: ProceduralWorld/ProceduralPrefab
#include "GlobalNamespace/ProceduralWorld_ProceduralPrefab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralWorld/ProceduralTile <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralWorld::ProceduralTile*& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralWorld::ProceduralTile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <counter>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$counter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$counter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<counter>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[,] <ditherMap>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$ditherMap$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$ditherMap$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ditherMap>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ProceduralWorld/ProceduralPrefab <pref>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralWorld::ProceduralPrefab*& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$pref$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$pref$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pref>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralWorld::ProceduralPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <subSize>5__6
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$subSize$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$subSize$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subSize>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sx>5__7
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$sx$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$sx$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sx>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sz>5__8
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$sz$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$sz$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sz>5__8"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <px>5__9
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$px$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$px$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<px>5__9"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <pz>5__10
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$pz$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$pz$5__10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pz>5__10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <count>5__11
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$count$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$count$5__11");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<count>5__11"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <j>5__12
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$j$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::dyn_$j$5__12");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<j>5__12"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17.System.IDisposable.Dispose
void GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17.MoveNext
bool GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/ProceduralTile/<InternalGenerate>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::ProceduralTile::$InternalGenerate$d__17*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProceduralWorld/<GenerateTiles>d__11
#include "GlobalNamespace/ProceduralWorld_-GenerateTiles-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProceduralWorld <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralWorld*& GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProceduralWorld**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProceduralWorld/<GenerateTiles>d__11.System.IDisposable.Dispose
void GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/<GenerateTiles>d__11.MoveNext
bool GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/<GenerateTiles>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/<GenerateTiles>d__11.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProceduralWorld/<GenerateTiles>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProceduralWorld::$GenerateTiles$d__11*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AIFollow
#include "GlobalNamespace/AIFollow.hpp"
// Including type: AIFollow/<WaitToRepath>d__18
#include "GlobalNamespace/AIFollow_-WaitToRepath-d__18.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AIFollow::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single repathRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_repathRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_repathRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repathRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pickNextWaypointDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_pickNextWaypointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_pickNextWaypointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickNextWaypointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single targetReached
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_targetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_targetReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetReached"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawGizmos
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIFollow::dyn_drawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_drawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canSearch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIFollow::dyn_canSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_canSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canSearch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canMove
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AIFollow::dyn_canMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_canMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Seeker seeker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Seeker*& GlobalNamespace::AIFollow::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.CharacterController controller
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& GlobalNamespace::AIFollow::dyn_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controller"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AIFollow::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single lastPathSearch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AIFollow::dyn_lastPathSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_lastPathSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPathSearch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 pathIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AIFollow::dyn_pathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_pathIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] path
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::AIFollow::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AIFollow.Start
void GlobalNamespace::AIFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.Reset
void GlobalNamespace::AIFollow::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.OnPathComplete
void GlobalNamespace::AIFollow::OnPathComplete(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::OnPathComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPathComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: AIFollow.WaitToRepath
::System::Collections::IEnumerator* GlobalNamespace::AIFollow::WaitToRepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::WaitToRepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitToRepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.Stop
void GlobalNamespace::AIFollow::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.Resume
void GlobalNamespace::AIFollow::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.Repath
void GlobalNamespace::AIFollow::Repath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Repath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.PathToTarget
void GlobalNamespace::AIFollow::PathToTarget(::UnityEngine::Vector3 targetPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::PathToTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PathToTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPoint);
}
// Autogenerated method: AIFollow.ReachedEndOfPath
void GlobalNamespace::AIFollow::ReachedEndOfPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::ReachedEndOfPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.Update
void GlobalNamespace::AIFollow::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow.OnDrawGizmos
void GlobalNamespace::AIFollow::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AIFollow/<WaitToRepath>d__18
#include "GlobalNamespace/AIFollow_-WaitToRepath-d__18.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AIFollow <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AIFollow*& GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AIFollow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AIFollow/<WaitToRepath>d__18.System.IDisposable.Dispose
void GlobalNamespace::AIFollow::$WaitToRepath$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow::$WaitToRepath$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow/<WaitToRepath>d__18.MoveNext
bool GlobalNamespace::AIFollow::$WaitToRepath$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow::$WaitToRepath$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow/<WaitToRepath>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AIFollow::$WaitToRepath$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow::$WaitToRepath$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow/<WaitToRepath>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::AIFollow::$WaitToRepath$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow::$WaitToRepath$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AIFollow/<WaitToRepath>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AIFollow::$WaitToRepath$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AIFollow::$WaitToRepath$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIFollow::$WaitToRepath$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AstarSmoothFollow2
#include "GlobalNamespace/AstarSmoothFollow2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AstarSmoothFollow2::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarSmoothFollow2::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarSmoothFollow2::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single damping
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarSmoothFollow2::dyn_damping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_damping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean smoothRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarSmoothFollow2::dyn_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_smoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean followBehind
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarSmoothFollow2::dyn_followBehind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_followBehind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followBehind"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationDamping
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AstarSmoothFollow2::dyn_rotationDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_rotationDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticOffset
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AstarSmoothFollow2::dyn_staticOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::dyn_staticOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AstarSmoothFollow2.LateUpdate
void GlobalNamespace::AstarSmoothFollow2::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AstarSmoothFollow2::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DoorController
#include "GlobalNamespace/DoorController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean open
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DoorController::dyn_open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 opentag
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DoorController::dyn_opentag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_opentag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opentag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 closedtag
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DoorController::dyn_closedtag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_closedtag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedtag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateGraphsWithGUO
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DoorController::dyn_updateGraphsWithGUO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_updateGraphsWithGUO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateGraphsWithGUO"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DoorController::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds bounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& GlobalNamespace::DoorController::dyn_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::dyn_bounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DoorController.Start
void GlobalNamespace::DoorController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DoorController.OnGUI
void GlobalNamespace::DoorController::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DoorController.SetState
void GlobalNamespace::DoorController::SetState(bool open) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DoorController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(open)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, open);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DynamicGridObstacle
#include "GlobalNamespace/DynamicGridObstacle.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider col
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::DynamicGridObstacle::dyn_col() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_col");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "col"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::DynamicGridObstacle::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateError
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DynamicGridObstacle::dyn_updateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_updateError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateError"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DynamicGridObstacle::dyn_checkTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_checkTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds prevBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& GlobalNamespace::DynamicGridObstacle::dyn_prevBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_prevBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion prevRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::DynamicGridObstacle::dyn_prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean prevEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DynamicGridObstacle::dyn_prevEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_prevEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCheckTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DynamicGridObstacle::dyn_lastCheckTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::dyn_lastCheckTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheckTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DynamicGridObstacle.Start
void GlobalNamespace::DynamicGridObstacle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicGridObstacle.Update
void GlobalNamespace::DynamicGridObstacle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicGridObstacle.OnDestroy
void GlobalNamespace::DynamicGridObstacle::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicGridObstacle.DoUpdateGraphs
void GlobalNamespace::DynamicGridObstacle::DoUpdateGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::DoUpdateGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoUpdateGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DynamicGridObstacle.BoundsVolume
float GlobalNamespace::DynamicGridObstacle::BoundsVolume(::UnityEngine::Bounds b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DynamicGridObstacle::BoundsVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DynamicGridObstacle", "BoundsVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectPlacer
#include "GlobalNamespace/ObjectPlacer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject go
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ObjectPlacer::dyn_go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::dyn_go");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "go"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean direct
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectPlacer::dyn_direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::dyn_direct");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direct"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean issueGUOs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectPlacer::dyn_issueGUOs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::dyn_issueGUOs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issueGUOs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectPlacer.Start
void GlobalNamespace::ObjectPlacer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPlacer.Update
void GlobalNamespace::ObjectPlacer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPlacer.PlaceObject
void GlobalNamespace::ObjectPlacer::PlaceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::PlaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectPlacer.RemoveObject
void GlobalNamespace::ObjectPlacer::RemoveObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectPlacer::RemoveObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Bezier
#include "GlobalNamespace/Bezier.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Bezier.GetPoint
::UnityEngine::Vector3 GlobalNamespace::Bezier::GetPoint(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Bezier::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Bezier", "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated method: Bezier.GetFirstDerivative
::UnityEngine::Vector3 GlobalNamespace::Bezier::GetFirstDerivative(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Bezier::GetFirstDerivative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Bezier", "GetFirstDerivative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierControlPointMode
#include "GlobalNamespace/BezierControlPointMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BezierControlPointMode Free
::GlobalNamespace::BezierControlPointMode GlobalNamespace::BezierControlPointMode::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierControlPointMode>("", "BezierControlPointMode", "Free"));
}
// Autogenerated static field setter
// Set static field: static public BezierControlPointMode Free
void GlobalNamespace::BezierControlPointMode::_set_Free(::GlobalNamespace::BezierControlPointMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierControlPointMode", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public BezierControlPointMode Aligned
::GlobalNamespace::BezierControlPointMode GlobalNamespace::BezierControlPointMode::_get_Aligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_get_Aligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierControlPointMode>("", "BezierControlPointMode", "Aligned"));
}
// Autogenerated static field setter
// Set static field: static public BezierControlPointMode Aligned
void GlobalNamespace::BezierControlPointMode::_set_Aligned(::GlobalNamespace::BezierControlPointMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_set_Aligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierControlPointMode", "Aligned", value));
}
// Autogenerated static field getter
// Get static field: static public BezierControlPointMode Mirrored
::GlobalNamespace::BezierControlPointMode GlobalNamespace::BezierControlPointMode::_get_Mirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_get_Mirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierControlPointMode>("", "BezierControlPointMode", "Mirrored"));
}
// Autogenerated static field setter
// Set static field: static public BezierControlPointMode Mirrored
void GlobalNamespace::BezierControlPointMode::_set_Mirrored(::GlobalNamespace::BezierControlPointMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::_set_Mirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierControlPointMode", "Mirrored", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BezierControlPointMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierControlPointMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMAppendExample
#include "GlobalNamespace/STMAppendExample.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh text
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMAppendExample::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMAppendExample::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String appendThis
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMAppendExample::dyn_appendThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMAppendExample::dyn_appendThis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendThis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMAppendExample.Update
void GlobalNamespace::STMAppendExample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMAppendExample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMContinue
#include "GlobalNamespace/STMContinue.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMContinue::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMContinue::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMContinue.Update
void GlobalNamespace::STMContinue::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMContinue::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMDialogueSample
#include "GlobalNamespace/STMDialogueSample.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh textMesh
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMDialogueSample::dyn_textMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_textMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMesh"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode advanceKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::STMDialogueSample::dyn_advanceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_advanceKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advanceKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer advanceKeySprite
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::STMDialogueSample::dyn_advanceKeySprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_advanceKeySprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advanceKeySprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 advanceKeyStartScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::STMDialogueSample::dyn_advanceKeyStartScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_advanceKeyStartScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advanceKeyStartScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 advanceKeyScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::STMDialogueSample::dyn_advanceKeyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_advanceKeyScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advanceKeyScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single advanceKeyTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMDialogueSample::dyn_advanceKeyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_advanceKeyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advanceKeyTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] lines
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::STMDialogueSample::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentLine
[[deprecated("Use field access instead!")]] int& GlobalNamespace::STMDialogueSample::dyn_currentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::dyn_currentLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMDialogueSample.Start
void GlobalNamespace::STMDialogueSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMDialogueSample.CompletedDrawing
void GlobalNamespace::STMDialogueSample::CompletedDrawing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::CompletedDrawing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletedDrawing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMDialogueSample.CompletedUnreading
void GlobalNamespace::STMDialogueSample::CompletedUnreading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::CompletedUnreading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletedUnreading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMDialogueSample.Apply
void GlobalNamespace::STMDialogueSample::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMDialogueSample.Update
void GlobalNamespace::STMDialogueSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMDialogueSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMEventInterpreter
#include "GlobalNamespace/STMEventInterpreter.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: STMSampleLink
#include "GlobalNamespace/STMSampleLink.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: STMTextInfo
#include "GlobalNamespace/STMTextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SuperTextMesh _stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMEventInterpreter::dyn__stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn__stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject confetti
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::STMEventInterpreter::dyn_confetti() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_confetti");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confetti"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource au
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::STMEventInterpreter::dyn_au() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_au");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "au"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip myClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::STMEventInterpreter::dyn_myClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_myClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public STMSampleLink link
[[deprecated("Use field access instead!")]] ::GlobalNamespace::STMSampleLink*& GlobalNamespace::STMEventInterpreter::dyn_link() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_link");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "link"))->offset;
  return *reinterpret_cast<::GlobalNamespace::STMSampleLink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<STMSampleLink> allLinks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::STMSampleLink*>*& GlobalNamespace::STMEventInterpreter::dyn_allLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_allLinks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLinks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::STMSampleLink*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> allBGs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>*& GlobalNamespace::STMEventInterpreter::dyn_allBGs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_allBGs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allBGs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> allStrikethrus
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>*& GlobalNamespace::STMEventInterpreter::dyn_allStrikethrus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_allStrikethrus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allStrikethrus"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.SpriteRenderer> allUnderlines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>*& GlobalNamespace::STMEventInterpreter::dyn_allUnderlines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_allUnderlines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allUnderlines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::SpriteRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer bgPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::STMEventInterpreter::dyn_bgPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_bgPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bgPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer linePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::STMEventInterpreter::dyn_linePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_linePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 underlineDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::STMEventInterpreter::dyn_underlineDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_underlineDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underlineDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single underlineWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMEventInterpreter::dyn_underlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_underlineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underlineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single underlineThickness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMEventInterpreter::dyn_underlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_underlineThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underlineThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color underlineColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::STMEventInterpreter::dyn_underlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_underlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underlineColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethruHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMEventInterpreter::dyn_strikethruHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_strikethruHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethruHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethruWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMEventInterpreter::dyn_strikethruWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_strikethruWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethruWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethruThickness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::STMEventInterpreter::dyn_strikethruThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_strikethruThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethruThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color strikethruColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::STMEventInterpreter::dyn_strikethruColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::dyn_strikethruColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethruColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMEventInterpreter.get_stm
::GlobalNamespace::SuperTextMesh* GlobalNamespace::STMEventInterpreter::get_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::get_stm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SuperTextMesh*, false>(this, ___internal__method);
}
// Autogenerated method: STMEventInterpreter.DebugReset
void GlobalNamespace::STMEventInterpreter::DebugReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::DebugReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMEventInterpreter.DoEvent
void GlobalNamespace::STMEventInterpreter::DoEvent(::StringW s, ::GlobalNamespace::STMTextInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::DoEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, info);
}
// Autogenerated method: STMEventInterpreter.ClearLinks
void GlobalNamespace::STMEventInterpreter::ClearLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::ClearLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMEventInterpreter.ClearBGs
void GlobalNamespace::STMEventInterpreter::ClearBGs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::ClearBGs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBGs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMEventInterpreter.ClearUnderlines
void GlobalNamespace::STMEventInterpreter::ClearUnderlines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::ClearUnderlines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUnderlines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMEventInterpreter.ClearStrikethrus
void GlobalNamespace::STMEventInterpreter::ClearStrikethrus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMEventInterpreter::ClearStrikethrus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearStrikethrus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMExtensionSample
#include "GlobalNamespace/STMExtensionSample.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: STMExtensionSample.SetTextWithStringAtStart
void GlobalNamespace::STMExtensionSample::SetTextWithStringAtStart(::GlobalNamespace::SuperTextMesh* stm, ::StringW extra) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMExtensionSample::SetTextWithStringAtStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "STMExtensionSample", "SetTextWithStringAtStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stm), ::il2cpp_utils::ExtractType(extra)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stm, extra);
}
// Autogenerated method: STMExtensionSample.SetUppercaseText
void GlobalNamespace::STMExtensionSample::SetUppercaseText(::GlobalNamespace::SuperTextMesh* superTextMesh, ::StringW newText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMExtensionSample::SetUppercaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "STMExtensionSample", "SetUppercaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(superTextMesh), ::il2cpp_utils::ExtractType(newText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, superTextMesh, newText);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMFakeCaret
#include "GlobalNamespace/STMFakeCaret.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMFakeCaret::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMFakeCaret::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::STMFakeCaret::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMFakeCaret::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMFakeCaret.Update
void GlobalNamespace::STMFakeCaret::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMFakeCaret::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMInputStringDemo
#include "GlobalNamespace/STMInputStringDemo.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh rawstm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMInputStringDemo::dyn_rawstm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMInputStringDemo::dyn_rawstm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawstm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMInputStringDemo::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMInputStringDemo::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMInputStringDemo.Update
void GlobalNamespace::STMInputStringDemo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMInputStringDemo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMInputStringDemo.UpdateBox
void GlobalNamespace::STMInputStringDemo::UpdateBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMInputStringDemo::UpdateBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMMatchRect
#include "GlobalNamespace/STMMatchRect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform tr
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::STMMatchRect::dyn_tr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::dyn_tr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tr"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMMatchRect::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::STMMatchRect::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::STMMatchRect::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMMatchRect.OnEnable
void GlobalNamespace::STMMatchRect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMMatchRect.OnDisable
void GlobalNamespace::STMMatchRect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMMatchRect.Match
void GlobalNamespace::STMMatchRect::Match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMMatchRect::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMPagination
#include "GlobalNamespace/STMPagination.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh originalText
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMPagination::dyn_originalText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPagination::dyn_originalText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalText"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh overflowText
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMPagination::dyn_overflowText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPagination::dyn_overflowText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overflowText"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMPagination.Awake
void GlobalNamespace::STMPagination::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPagination::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMPagination.OverflowLeftovers
void GlobalNamespace::STMPagination::OverflowLeftovers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPagination::OverflowLeftovers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverflowLeftovers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMPagination.OverflowLeftovers
void GlobalNamespace::STMPagination::OverflowLeftovers(::GlobalNamespace::SuperTextMesh* stm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPagination::OverflowLeftovers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverflowLeftovers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stm);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMPreParse
#include "GlobalNamespace/STMPreParse.hpp"
// Including type: STMTextContainer
#include "GlobalNamespace/STMTextContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String addToStart
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMPreParse::dyn_addToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreParse::dyn_addToStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addToStart"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMPreParse.Parse
void GlobalNamespace::STMPreParse::Parse(::GlobalNamespace::STMTextContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreParse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMPreParse2
#include "GlobalNamespace/STMPreParse2.hpp"
// Including type: STMTextContainer
#include "GlobalNamespace/STMTextContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String addToEnd
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMPreParse2::dyn_addToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreParse2::dyn_addToEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addToEnd"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMPreParse2.Parse
void GlobalNamespace::STMPreParse2::Parse(::GlobalNamespace::STMTextContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreParse2::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMPreparse3
#include "GlobalNamespace/STMPreparse3.hpp"
// Including type: STMTextContainer
#include "GlobalNamespace/STMTextContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String textTag
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMPreparse3::dyn_textTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreparse3::dyn_textTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMPreparse3.Parse
void GlobalNamespace::STMPreparse3::Parse(::GlobalNamespace::STMTextContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreparse3::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: STMPreparse3.Replace
void GlobalNamespace::STMPreparse3::Replace(::GlobalNamespace::STMTextContainer* x, int startingPoint, int endingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMPreparse3::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(startingPoint), ::il2cpp_utils::ExtractType(endingPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, startingPoint, endingPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMReadoutControls
#include "GlobalNamespace/STMReadoutControls.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMReadoutControls::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMReadoutControls::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMReadoutControls.Update
void GlobalNamespace::STMReadoutControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMReadoutControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMSampleLink
#include "GlobalNamespace/STMSampleLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String linkName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMSampleLink::dyn_linkName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSampleLink::dyn_linkName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMSampleLink.OnMouseDown
void GlobalNamespace::STMSampleLink::OnMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSampleLink::OnMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: STMSetTextExample
#include "GlobalNamespace/STMSetTextExample.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SuperTextMesh stm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& GlobalNamespace::STMSetTextExample::dyn_stm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSetTextExample::dyn_stm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SuperTextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String myString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::STMSetTextExample::dyn_myString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSetTextExample::dyn_myString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: STMSetTextExample.Awake
void GlobalNamespace::STMSetTextExample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSetTextExample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: STMSetTextExample.SetText
void GlobalNamespace::STMSetTextExample::SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMSetTextExample::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
