// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.Lexer
#include "LitJson/Lexer.hpp"
// Including type: LitJson.Lexer/StateHandler
#include "LitJson/Lexer_StateHandler.hpp"
// Including type: LitJson.FsmContext
#include "LitJson/FsmContext.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] returnTable
::ArrayW<int> LitJson::Lexer::_get_returnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_get_returnTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("LitJson", "Lexer", "returnTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] returnTable
void LitJson::Lexer::_set_returnTable(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_set_returnTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Lexer", "returnTable", value));
}
// Autogenerated static field getter
// Get static field: static private LitJson.Lexer/StateHandler[] handlerTable
::ArrayW<::LitJson::Lexer::StateHandler*> LitJson::Lexer::_get_handlerTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_get_handlerTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::LitJson::Lexer::StateHandler*>>("LitJson", "Lexer", "handlerTable"));
}
// Autogenerated static field setter
// Set static field: static private LitJson.Lexer/StateHandler[] handlerTable
void LitJson::Lexer::_set_handlerTable(::ArrayW<::LitJson::Lexer::StateHandler*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_set_handlerTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Lexer", "handlerTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inputBuffer
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_inputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_inputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inputChar
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_inputChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_inputChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputChar"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 state
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 unichar
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_unichar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_unichar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unichar"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LitJson.FsmContext context
[[deprecated("Use field access instead!")]] ::LitJson::FsmContext*& LitJson::Lexer::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::LitJson::FsmContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& LitJson::Lexer::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuffer
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& LitJson::Lexer::dyn_stringBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_stringBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuffer"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AllowComments>k__BackingField
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_$AllowComments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_$AllowComments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowComments>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AllowSingleQuotedStrings>k__BackingField
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_$AllowSingleQuotedStrings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_$AllowSingleQuotedStrings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowSingleQuotedStrings>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EndOfInput>k__BackingField
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_$EndOfInput$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_$EndOfInput$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndOfInput>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Token>k__BackingField
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_$Token$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_$Token$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Token>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <StringValue>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& LitJson::Lexer::dyn_$StringValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_$StringValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StringValue>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.Lexer.get_AllowComments
bool LitJson::Lexer::get_AllowComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_AllowComments
void LitJson::Lexer::set_AllowComments(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_AllowSingleQuotedStrings
bool LitJson::Lexer::get_AllowSingleQuotedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_AllowSingleQuotedStrings
void LitJson::Lexer::set_AllowSingleQuotedStrings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_EndOfInput
bool LitJson::Lexer::get_EndOfInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_EndOfInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_EndOfInput
void LitJson::Lexer::set_EndOfInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_EndOfInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndOfInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_Token
int LitJson::Lexer::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_Token
void LitJson::Lexer::set_Token(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_StringValue
::StringW LitJson::Lexer::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_StringValue
void LitJson::Lexer::set_StringValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer..cctor
void LitJson::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.Lexer.HexValue
int LitJson::Lexer::HexValue(int digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::HexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "HexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: LitJson.Lexer.PopulateFsmTables
void LitJson::Lexer::PopulateFsmTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::PopulateFsmTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "PopulateFsmTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.Lexer.ProcessEscChar
::Il2CppChar LitJson::Lexer::ProcessEscChar(int escChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::ProcessEscChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "ProcessEscChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(escChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, escChar);
}
// Autogenerated method: LitJson.Lexer.State1
bool LitJson::Lexer::State1(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State2
bool LitJson::Lexer::State2(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State3
bool LitJson::Lexer::State3(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State4
bool LitJson::Lexer::State4(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State5
bool LitJson::Lexer::State5(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State6
bool LitJson::Lexer::State6(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State7
bool LitJson::Lexer::State7(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State8
bool LitJson::Lexer::State8(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State9
bool LitJson::Lexer::State9(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State10
bool LitJson::Lexer::State10(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State11
bool LitJson::Lexer::State11(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State12
bool LitJson::Lexer::State12(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State13
bool LitJson::Lexer::State13(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State14
bool LitJson::Lexer::State14(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State15
bool LitJson::Lexer::State15(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State16
bool LitJson::Lexer::State16(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State17
bool LitJson::Lexer::State17(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State18
bool LitJson::Lexer::State18(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State19
bool LitJson::Lexer::State19(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State20
bool LitJson::Lexer::State20(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State21
bool LitJson::Lexer::State21(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State21", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State22
bool LitJson::Lexer::State22(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State22", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State23
bool LitJson::Lexer::State23(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State23", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State24
bool LitJson::Lexer::State24(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State25
bool LitJson::Lexer::State25(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State25", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State26
bool LitJson::Lexer::State26(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State26", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State27
bool LitJson::Lexer::State27(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State27", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State28
bool LitJson::Lexer::State28(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State28", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.GetChar
bool LitJson::Lexer::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.NextChar
int LitJson::Lexer::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.NextToken
bool LitJson::Lexer::NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.UngetChar
void LitJson::Lexer::UngetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::UngetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UngetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.Lexer/StateHandler
#include "LitJson/Lexer_StateHandler.hpp"
// Including type: LitJson.FsmContext
#include "LitJson/FsmContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.Lexer/StateHandler.Invoke
bool LitJson::Lexer::StateHandler::Invoke(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer/StateHandler.BeginInvoke
::System::IAsyncResult* LitJson::Lexer::StateHandler::BeginInvoke(::LitJson::FsmContext* ctx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: LitJson.Lexer/StateHandler.EndInvoke
bool LitJson::Lexer::StateHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.ParserToken
#include "LitJson/ParserToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken None
::LitJson::ParserToken LitJson::ParserToken::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "None"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken None
void LitJson::ParserToken::_set_None(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Number
::LitJson::ParserToken LitJson::ParserToken::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Number"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Number
void LitJson::ParserToken::_set_Number(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken True
::LitJson::ParserToken LitJson::ParserToken::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "True"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken True
void LitJson::ParserToken::_set_True(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "True", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken False
::LitJson::ParserToken LitJson::ParserToken::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "False"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken False
void LitJson::ParserToken::_set_False(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "False", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Null
::LitJson::ParserToken LitJson::ParserToken::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Null"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Null
void LitJson::ParserToken::_set_Null(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken CharSeq
::LitJson::ParserToken LitJson::ParserToken::_get_CharSeq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_CharSeq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "CharSeq"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken CharSeq
void LitJson::ParserToken::_set_CharSeq(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_CharSeq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "CharSeq", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Char
::LitJson::ParserToken LitJson::ParserToken::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Char"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Char
void LitJson::ParserToken::_set_Char(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Text
::LitJson::ParserToken LitJson::ParserToken::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Text"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Text
void LitJson::ParserToken::_set_Text(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Object
::LitJson::ParserToken LitJson::ParserToken::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Object"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Object
void LitJson::ParserToken::_set_Object(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ObjectPrime
::LitJson::ParserToken LitJson::ParserToken::_get_ObjectPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ObjectPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ObjectPrime"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ObjectPrime
void LitJson::ParserToken::_set_ObjectPrime(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ObjectPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ObjectPrime", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Pair
::LitJson::ParserToken LitJson::ParserToken::_get_Pair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Pair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Pair"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Pair
void LitJson::ParserToken::_set_Pair(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Pair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Pair", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken PairRest
::LitJson::ParserToken LitJson::ParserToken::_get_PairRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_PairRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "PairRest"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken PairRest
void LitJson::ParserToken::_set_PairRest(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_PairRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "PairRest", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Array
::LitJson::ParserToken LitJson::ParserToken::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Array"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Array
void LitJson::ParserToken::_set_Array(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ArrayPrime
::LitJson::ParserToken LitJson::ParserToken::_get_ArrayPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ArrayPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ArrayPrime"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ArrayPrime
void LitJson::ParserToken::_set_ArrayPrime(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ArrayPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ArrayPrime", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Value
::LitJson::ParserToken LitJson::ParserToken::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Value"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Value
void LitJson::ParserToken::_set_Value(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Value", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ValueRest
::LitJson::ParserToken LitJson::ParserToken::_get_ValueRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ValueRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ValueRest"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ValueRest
void LitJson::ParserToken::_set_ValueRest(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ValueRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ValueRest", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken String
::LitJson::ParserToken LitJson::ParserToken::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "String"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken String
void LitJson::ParserToken::_set_String(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "String", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken End
::LitJson::ParserToken LitJson::ParserToken::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "End"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken End
void LitJson::ParserToken::_set_End(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "End", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Epsilon
::LitJson::ParserToken LitJson::ParserToken::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Epsilon
void LitJson::ParserToken::_set_Epsilon(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& LitJson::ParserToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.UnityTypeBindings
#include "LitJson/UnityTypeBindings.hpp"
// Including type: LitJson.UnityTypeBindings/<>c__DisplayClass2_0
#include "LitJson/UnityTypeBindings_--c__DisplayClass2_0.hpp"
// Including type: LitJson.UnityTypeBindings/<>c
#include "LitJson/UnityTypeBindings_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean registerd
bool LitJson::UnityTypeBindings::_get_registerd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::_get_registerd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LitJson", "UnityTypeBindings", "registerd"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean registerd
void LitJson::UnityTypeBindings::_set_registerd(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::_set_registerd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings", "registerd", value));
}
// Autogenerated method: LitJson.UnityTypeBindings..cctor
void LitJson::UnityTypeBindings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "UnityTypeBindings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.UnityTypeBindings.Register
void LitJson::UnityTypeBindings::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "UnityTypeBindings", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.UnityTypeBindings/<>c__DisplayClass2_0
#include "LitJson/UnityTypeBindings_--c__DisplayClass2_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<UnityEngine.Vector2,LitJson.JsonWriter> writeVector2
[[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>*& LitJson::UnityTypeBindings::$$c__DisplayClass2_0::dyn_writeVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::dyn_writeVector2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeVector2"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<UnityEngine.Vector3,LitJson.JsonWriter> writeVector3
[[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>*& LitJson::UnityTypeBindings::$$c__DisplayClass2_0::dyn_writeVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::dyn_writeVector3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeVector3"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c__DisplayClass2_0.<Register>b__3
void LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__3(::UnityEngine::Vector2 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::<Register>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c__DisplayClass2_0.<Register>b__5
void LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__5(::UnityEngine::Vector3 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::<Register>b__5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c__DisplayClass2_0.<Register>b__10
void LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__10(::UnityEngine::Bounds v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::<Register>b__10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.UnityTypeBindings/<>c
#include "LitJson/UnityTypeBindings_--c.hpp"
// Including type: LitJson.ExporterFunc`1
#include "LitJson/ExporterFunc_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: LitJson.ImporterFunc`2
#include "LitJson/ImporterFunc_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LitJson.UnityTypeBindings/<>c <>9
::LitJson::UnityTypeBindings::$$c* LitJson::UnityTypeBindings::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::UnityTypeBindings::$$c*>("LitJson", "UnityTypeBindings/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LitJson.UnityTypeBindings/<>c <>9
void LitJson::UnityTypeBindings::$$c::_set_$$9(::LitJson::UnityTypeBindings::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<System.Type> <>9__2_0
::LitJson::ExporterFunc_1<::System::Type*>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::System::Type*>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<System.Type> <>9__2_0
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_0(::LitJson::ExporterFunc_1<::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc`2<System.String,System.Type> <>9__2_1
::LitJson::ImporterFunc_2<::StringW, ::System::Type*>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc_2<::StringW, ::System::Type*>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc`2<System.String,System.Type> <>9__2_1
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_1(::LitJson::ImporterFunc_2<::StringW, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<UnityEngine.Vector2,LitJson.JsonWriter> <>9__2_2
::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<UnityEngine.Vector2,LitJson.JsonWriter> <>9__2_2
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_2(::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<UnityEngine.Vector3,LitJson.JsonWriter> <>9__2_4
::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<UnityEngine.Vector3,LitJson.JsonWriter> <>9__2_4
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_4(::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_4", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.Vector4> <>9__2_6
::LitJson::ExporterFunc_1<::UnityEngine::Vector4>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::Vector4>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_6")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.Vector4> <>9__2_6
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_6(::LitJson::ExporterFunc_1<::UnityEngine::Vector4>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_6", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.Quaternion> <>9__2_7
::LitJson::ExporterFunc_1<::UnityEngine::Quaternion>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::Quaternion>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_7")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.Quaternion> <>9__2_7
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_7(::LitJson::ExporterFunc_1<::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_7", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.Color> <>9__2_8
::LitJson::ExporterFunc_1<::UnityEngine::Color>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::Color>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_8")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.Color> <>9__2_8
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_8(::LitJson::ExporterFunc_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_8", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.Color32> <>9__2_9
::LitJson::ExporterFunc_1<::UnityEngine::Color32>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::Color32>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_9")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.Color32> <>9__2_9
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_9(::LitJson::ExporterFunc_1<::UnityEngine::Color32>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_9", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.Rect> <>9__2_11
::LitJson::ExporterFunc_1<::UnityEngine::Rect>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::Rect>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_11")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.Rect> <>9__2_11
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_11(::LitJson::ExporterFunc_1<::UnityEngine::Rect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_11", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc`1<UnityEngine.RectOffset> <>9__2_12
::LitJson::ExporterFunc_1<::UnityEngine::RectOffset*>* LitJson::UnityTypeBindings::$$c::_get_$$9__2_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_get_$$9__2_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc_1<::UnityEngine::RectOffset*>*>("LitJson", "UnityTypeBindings/<>c", "<>9__2_12")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc`1<UnityEngine.RectOffset> <>9__2_12
void LitJson::UnityTypeBindings::$$c::_set_$$9__2_12(::LitJson::ExporterFunc_1<::UnityEngine::RectOffset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::_set_$$9__2_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "UnityTypeBindings/<>c", "<>9__2_12", value)));
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c..cctor
void LitJson::UnityTypeBindings::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "UnityTypeBindings/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_0
void LitJson::UnityTypeBindings::$$c::$Register$b__2_0(::System::Type* v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_1
::System::Type* LitJson::UnityTypeBindings::$$c::$Register$b__2_1(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, s);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_2
void LitJson::UnityTypeBindings::$$c::$Register$b__2_2(::UnityEngine::Vector2 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_4
void LitJson::UnityTypeBindings::$$c::$Register$b__2_4(::UnityEngine::Vector3 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_6
void LitJson::UnityTypeBindings::$$c::$Register$b__2_6(::UnityEngine::Vector4 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_7
void LitJson::UnityTypeBindings::$$c::$Register$b__2_7(::UnityEngine::Quaternion v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_8
void LitJson::UnityTypeBindings::$$c::$Register$b__2_8(::UnityEngine::Color v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_9
void LitJson::UnityTypeBindings::$$c::$Register$b__2_9(::UnityEngine::Color32 v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_11
void LitJson::UnityTypeBindings::$$c::$Register$b__2_11(::UnityEngine::Rect v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated method: LitJson.UnityTypeBindings/<>c.<Register>b__2_12
void LitJson::UnityTypeBindings::$$c::$Register$b__2_12(::UnityEngine::RectOffset* v, ::LitJson::JsonWriter* w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c::<Register>b__2_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__2_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v, w);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.Extensions.Extensions
#include "LitJson/Extensions/Extensions.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.Extensions.Extensions.WriteProperty
void LitJson::Extensions::Extensions::WriteProperty(::LitJson::JsonWriter* w, ::StringW name, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Extensions::Extensions::WriteProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson.Extensions", "Extensions", "WriteProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, w, name, value);
}
// Autogenerated method: LitJson.Extensions.Extensions.WriteProperty
void LitJson::Extensions::Extensions::WriteProperty(::LitJson::JsonWriter* w, ::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Extensions::Extensions::WriteProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson.Extensions", "Extensions", "WriteProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, w, name, value);
}
// Autogenerated method: LitJson.Extensions.Extensions.WriteProperty
void LitJson::Extensions::Extensions::WriteProperty(::LitJson::JsonWriter* w, ::StringW name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Extensions::Extensions::WriteProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson.Extensions", "Extensions", "WriteProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, w, name, value);
}
// Autogenerated method: LitJson.Extensions.Extensions.WriteProperty
void LitJson::Extensions::Extensions::WriteProperty(::LitJson::JsonWriter* w, ::StringW name, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Extensions::Extensions::WriteProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson.Extensions", "Extensions", "WriteProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, w, name, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject
#include "TornadoBanditsStudio/LowPolyDungeonPack/TBS_RotateableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS rotationAxis
[[deprecated("Use field access instead!")]] ::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS& TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_rotationAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_rotationAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAxis"))->offset;
  return *reinterpret_cast<::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationSpeed
[[deprecated("Use field access instead!")]] float& TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean randomSpeed
[[deprecated("Use field access instead!")]] bool& TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_randomSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_randomSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean randomDirection
[[deprecated("Use field access instead!")]] bool& TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_randomDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::dyn_randomDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomDirection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject.Start
void TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject.Update
void TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS
#include "TornadoBanditsStudio/LowPolyDungeonPack/TBS_RotateableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS X
::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS>("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "X"));
}
// Autogenerated static field setter
// Set static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS X
void TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_X(::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "X", value));
}
// Autogenerated static field getter
// Get static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS Y
::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS>("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "Y"));
}
// Autogenerated static field setter
// Set static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS Y
void TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_Y(::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS Z
::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS>("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "Z"));
}
// Autogenerated static field setter
// Set static field: static public TornadoBanditsStudio.LowPolyDungeonPack.TBS_RotateableObject/ROTATION_AXIS Z
void TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_Z(::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TornadoBanditsStudio.LowPolyDungeonPack", "TBS_RotateableObject/ROTATION_AXIS", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TornadoBanditsStudio::LowPolyDungeonPack::TBS_RotateableObject::ROTATION_AXIS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger
#include "Tayx/Graphy/GraphyDebugger.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/ConditionEvaluation
#include "Tayx/Graphy/GraphyDebugger_ConditionEvaluation.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/MessageType
#include "Tayx/Graphy/GraphyDebugger_MessageType.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/DebugPacket
#include "Tayx/Graphy/GraphyDebugger_DebugPacket.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass18_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass18_0.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass19_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass19_0.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass21_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass21_0.hpp"
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: Tayx.Graphy.Ram.RamMonitor
#include "Tayx/Graphy/Ram/RamMonitor.hpp"
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsMonitor m_fpsMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsMonitor*& Tayx::Graphy::GraphyDebugger::dyn_m_fpsMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::dyn_m_fpsMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamMonitor m_ramMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamMonitor*& Tayx::Graphy::GraphyDebugger::dyn_m_ramMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::dyn_m_ramMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& Tayx::Graphy::GraphyDebugger::dyn_m_audioMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::dyn_m_audioMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Tayx.Graphy.GraphyDebugger/DebugPacket> m_debugPackets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugPacket*>*& Tayx::Graphy::GraphyDebugger::dyn_m_debugPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::dyn_m_debugPackets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debugPackets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugPacket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.Start
void Tayx::Graphy::GraphyDebugger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.Update
void Tayx::Graphy::GraphyDebugger::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddNewDebugPacket
void Tayx::Graphy::GraphyDebugger::AddNewDebugPacket(::Tayx::Graphy::GraphyDebugger::DebugPacket* newDebugPacket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddNewDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDebugPacket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDebugPacket);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddNewDebugPacket
void Tayx::Graphy::GraphyDebugger::AddNewDebugPacket(int newId, ::Tayx::Graphy::GraphyDebugger::DebugCondition newDebugCondition, ::Tayx::Graphy::GraphyDebugger::MessageType newMessageType, ::StringW newMessage, bool newDebugBreak, ::System::Action* newCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddNewDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newId), ::il2cpp_utils::ExtractType(newDebugCondition), ::il2cpp_utils::ExtractType(newMessageType), ::il2cpp_utils::ExtractType(newMessage), ::il2cpp_utils::ExtractType(newDebugBreak), ::il2cpp_utils::ExtractType(newCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newId, newDebugCondition, newMessageType, newMessage, newDebugBreak, newCallback);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddNewDebugPacket
void Tayx::Graphy::GraphyDebugger::AddNewDebugPacket(int newId, ::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugCondition>* newDebugConditions, ::Tayx::Graphy::GraphyDebugger::MessageType newMessageType, ::StringW newMessage, bool newDebugBreak, ::System::Action* newCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddNewDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newId), ::il2cpp_utils::ExtractType(newDebugConditions), ::il2cpp_utils::ExtractType(newMessageType), ::il2cpp_utils::ExtractType(newMessage), ::il2cpp_utils::ExtractType(newDebugBreak), ::il2cpp_utils::ExtractType(newCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newId, newDebugConditions, newMessageType, newMessage, newDebugBreak, newCallback);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddNewDebugPacket
void Tayx::Graphy::GraphyDebugger::AddNewDebugPacket(int newId, ::Tayx::Graphy::GraphyDebugger::DebugCondition newDebugCondition, ::Tayx::Graphy::GraphyDebugger::MessageType newMessageType, ::StringW newMessage, bool newDebugBreak, ::System::Collections::Generic::List_1<::System::Action*>* newCallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddNewDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newId), ::il2cpp_utils::ExtractType(newDebugCondition), ::il2cpp_utils::ExtractType(newMessageType), ::il2cpp_utils::ExtractType(newMessage), ::il2cpp_utils::ExtractType(newDebugBreak), ::il2cpp_utils::ExtractType(newCallbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newId, newDebugCondition, newMessageType, newMessage, newDebugBreak, newCallbacks);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddNewDebugPacket
void Tayx::Graphy::GraphyDebugger::AddNewDebugPacket(int newId, ::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugCondition>* newDebugConditions, ::Tayx::Graphy::GraphyDebugger::MessageType newMessageType, ::StringW newMessage, bool newDebugBreak, ::System::Collections::Generic::List_1<::System::Action*>* newCallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddNewDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newId), ::il2cpp_utils::ExtractType(newDebugConditions), ::il2cpp_utils::ExtractType(newMessageType), ::il2cpp_utils::ExtractType(newMessage), ::il2cpp_utils::ExtractType(newDebugBreak), ::il2cpp_utils::ExtractType(newCallbacks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newId, newDebugConditions, newMessageType, newMessage, newDebugBreak, newCallbacks);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.GetFirstDebugPacketWithId
::Tayx::Graphy::GraphyDebugger::DebugPacket* Tayx::Graphy::GraphyDebugger::GetFirstDebugPacketWithId(int packetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::GetFirstDebugPacketWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstDebugPacketWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyDebugger::DebugPacket*, false>(this, ___internal__method, packetId);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.GetAllDebugPacketsWithId
::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugPacket*>* Tayx::Graphy::GraphyDebugger::GetAllDebugPacketsWithId(int packetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::GetAllDebugPacketsWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllDebugPacketsWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugPacket*>*, false>(this, ___internal__method, packetId);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.RemoveFirstDebugPacketWithId
void Tayx::Graphy::GraphyDebugger::RemoveFirstDebugPacketWithId(int packetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::RemoveFirstDebugPacketWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFirstDebugPacketWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packetId);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.RemoveAllDebugPacketsWithId
void Tayx::Graphy::GraphyDebugger::RemoveAllDebugPacketsWithId(int packetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::RemoveAllDebugPacketsWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllDebugPacketsWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packetId);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddCallbackToFirstDebugPacketWithId
void Tayx::Graphy::GraphyDebugger::AddCallbackToFirstDebugPacketWithId(::System::Action* callback, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddCallbackToFirstDebugPacketWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackToFirstDebugPacketWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, id);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.AddCallbackToAllDebugPacketWithId
void Tayx::Graphy::GraphyDebugger::AddCallbackToAllDebugPacketWithId(::System::Action* callback, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::AddCallbackToAllDebugPacketWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackToAllDebugPacketWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, id);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.CheckDebugPackets
void Tayx::Graphy::GraphyDebugger::CheckDebugPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::CheckDebugPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDebugPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.CheckIfConditionIsMet
bool Tayx::Graphy::GraphyDebugger::CheckIfConditionIsMet(::Tayx::Graphy::GraphyDebugger::DebugCondition debugCondition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::CheckIfConditionIsMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfConditionIsMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugCondition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, debugCondition);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.GetRequestedValueFromDebugVariable
float Tayx::Graphy::GraphyDebugger::GetRequestedValueFromDebugVariable(::Tayx::Graphy::GraphyDebugger::DebugVariable debugVariable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::GetRequestedValueFromDebugVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestedValueFromDebugVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugVariable)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, debugVariable);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger.ExecuteOperationsInDebugPacket
void Tayx::Graphy::GraphyDebugger::ExecuteOperationsInDebugPacket(::Tayx::Graphy::GraphyDebugger::DebugPacket* debugPacket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ExecuteOperationsInDebugPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteOperationsInDebugPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugPacket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugPacket);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/DebugVariable
#include "Tayx/Graphy/GraphyDebugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Min
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Min"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Min
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Min(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Min", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Max
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Max"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Max
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Max(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Max", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Avg
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Avg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Fps_Avg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Avg"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Fps_Avg
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Avg(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Fps_Avg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Fps_Avg", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Allocated
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Allocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Allocated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Allocated"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Allocated
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Allocated(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Allocated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Allocated", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Reserved
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Reserved"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Reserved
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Reserved(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Mono
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Ram_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Mono"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Ram_Mono
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Mono(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Ram_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Ram_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Audio_DB
::Tayx::Graphy::GraphyDebugger::DebugVariable Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Audio_DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_get_Audio_DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugVariable>("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Audio_DB"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugVariable Audio_DB
void Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Audio_DB(::Tayx::Graphy::GraphyDebugger::DebugVariable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::_set_Audio_DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugVariable", "Audio_DB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::DebugVariable::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugVariable::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/DebugComparer
#include "Tayx/Graphy/GraphyDebugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Less_than
::Tayx::Graphy::GraphyDebugger::DebugComparer Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Less_than() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Less_than");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugComparer>("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Less_than"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Less_than
void Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Less_than(::Tayx::Graphy::GraphyDebugger::DebugComparer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Less_than");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Less_than", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals_or_less_than
::Tayx::Graphy::GraphyDebugger::DebugComparer Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals_or_less_than() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals_or_less_than");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugComparer>("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals_or_less_than"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals_or_less_than
void Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals_or_less_than(::Tayx::Graphy::GraphyDebugger::DebugComparer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals_or_less_than");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals_or_less_than", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals
::Tayx::Graphy::GraphyDebugger::DebugComparer Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugComparer>("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals
void Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals(::Tayx::Graphy::GraphyDebugger::DebugComparer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals_or_greater_than
::Tayx::Graphy::GraphyDebugger::DebugComparer Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals_or_greater_than() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Equals_or_greater_than");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugComparer>("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals_or_greater_than"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Equals_or_greater_than
void Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals_or_greater_than(::Tayx::Graphy::GraphyDebugger::DebugComparer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Equals_or_greater_than");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Equals_or_greater_than", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Greater_than
::Tayx::Graphy::GraphyDebugger::DebugComparer Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Greater_than() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_get_Greater_than");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::DebugComparer>("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Greater_than"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/DebugComparer Greater_than
void Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Greater_than(::Tayx::Graphy::GraphyDebugger::DebugComparer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::_set_Greater_than");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/DebugComparer", "Greater_than", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::DebugComparer::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugComparer::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/ConditionEvaluation
#include "Tayx/Graphy/GraphyDebugger_ConditionEvaluation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/ConditionEvaluation All_conditions_must_be_met
::Tayx::Graphy::GraphyDebugger::ConditionEvaluation Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_get_All_conditions_must_be_met() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_get_All_conditions_must_be_met");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::ConditionEvaluation>("Tayx.Graphy", "GraphyDebugger/ConditionEvaluation", "All_conditions_must_be_met"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/ConditionEvaluation All_conditions_must_be_met
void Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_set_All_conditions_must_be_met(::Tayx::Graphy::GraphyDebugger::ConditionEvaluation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_set_All_conditions_must_be_met");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/ConditionEvaluation", "All_conditions_must_be_met", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/ConditionEvaluation Only_one_condition_has_to_be_met
::Tayx::Graphy::GraphyDebugger::ConditionEvaluation Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_get_Only_one_condition_has_to_be_met() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_get_Only_one_condition_has_to_be_met");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::ConditionEvaluation>("Tayx.Graphy", "GraphyDebugger/ConditionEvaluation", "Only_one_condition_has_to_be_met"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/ConditionEvaluation Only_one_condition_has_to_be_met
void Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_set_Only_one_condition_has_to_be_met(::Tayx::Graphy::GraphyDebugger::ConditionEvaluation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ConditionEvaluation::_set_Only_one_condition_has_to_be_met");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/ConditionEvaluation", "Only_one_condition_has_to_be_met", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::ConditionEvaluation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::ConditionEvaluation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/MessageType
#include "Tayx/Graphy/GraphyDebugger_MessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/MessageType Log
::Tayx::Graphy::GraphyDebugger::MessageType Tayx::Graphy::GraphyDebugger::MessageType::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::MessageType>("Tayx.Graphy", "GraphyDebugger/MessageType", "Log"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/MessageType Log
void Tayx::Graphy::GraphyDebugger::MessageType::_set_Log(::Tayx::Graphy::GraphyDebugger::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/MessageType", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/MessageType Warning
::Tayx::Graphy::GraphyDebugger::MessageType Tayx::Graphy::GraphyDebugger::MessageType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::MessageType>("Tayx.Graphy", "GraphyDebugger/MessageType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/MessageType Warning
void Tayx::Graphy::GraphyDebugger::MessageType::_set_Warning(::Tayx::Graphy::GraphyDebugger::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/MessageType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyDebugger/MessageType Error
::Tayx::Graphy::GraphyDebugger::MessageType Tayx::Graphy::GraphyDebugger::MessageType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyDebugger::MessageType>("Tayx.Graphy", "GraphyDebugger/MessageType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyDebugger/MessageType Error
void Tayx::Graphy::GraphyDebugger::MessageType::_set_Error(::Tayx::Graphy::GraphyDebugger::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyDebugger/MessageType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/DebugPacket
#include "Tayx/Graphy/GraphyDebugger_DebugPacket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Active
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Id
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExecuteOnce
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ExecuteOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ExecuteOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExecuteOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InitSleepTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_InitSleepTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_InitSleepTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitSleepTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExecuteSleepTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ExecuteSleepTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ExecuteSleepTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExecuteSleepTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Tayx.Graphy.GraphyDebugger/ConditionEvaluation ConditionEvaluation
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyDebugger::ConditionEvaluation& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ConditionEvaluation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ConditionEvaluation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConditionEvaluation"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyDebugger::ConditionEvaluation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Tayx.Graphy.GraphyDebugger/DebugCondition> DebugConditions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugCondition>*& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_DebugConditions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_DebugConditions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugConditions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Tayx::Graphy::GraphyDebugger::DebugCondition>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Tayx.Graphy.GraphyDebugger/MessageType MessageType
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyDebugger::MessageType& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_MessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_MessageType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MessageType"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyDebugger::MessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TakeScreenshot
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_TakeScreenshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_TakeScreenshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TakeScreenshot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ScreenshotFileName
[[deprecated("Use field access instead!")]] ::StringW& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ScreenshotFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_ScreenshotFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScreenshotFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DebugBreak
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_DebugBreak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_DebugBreak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugBreak"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent UnityEvents
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_UnityEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_UnityEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnityEvents"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Action> Callbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Action*>*& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_Callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canBeChecked
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_canBeChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_canBeChecked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canBeChecked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean executed
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_executed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_executed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "executed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timePassed
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_timePassed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::dyn_timePassed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timePassed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/DebugPacket.get_Check
bool Tayx::Graphy::GraphyDebugger::DebugPacket::get_Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::get_Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/DebugPacket.Update
void Tayx::Graphy::GraphyDebugger::DebugPacket::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/DebugPacket.Executed
void Tayx::Graphy::GraphyDebugger::DebugPacket::Executed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::DebugPacket::Executed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Executed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass18_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass18_0.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/DebugPacket
#include "Tayx/Graphy/GraphyDebugger_DebugPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 packetId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::$$c__DisplayClass18_0::dyn_packetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass18_0::dyn_packetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass18_0.<GetFirstDebugPacketWithId>b__0
bool Tayx::Graphy::GraphyDebugger::$$c__DisplayClass18_0::$GetFirstDebugPacketWithId$b__0(::Tayx::Graphy::GraphyDebugger::DebugPacket* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass18_0::<GetFirstDebugPacketWithId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirstDebugPacketWithId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass19_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass19_0.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/DebugPacket
#include "Tayx/Graphy/GraphyDebugger_DebugPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 packetId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::$$c__DisplayClass19_0::dyn_packetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass19_0::dyn_packetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass19_0.<GetAllDebugPacketsWithId>b__0
bool Tayx::Graphy::GraphyDebugger::$$c__DisplayClass19_0::$GetAllDebugPacketsWithId$b__0(::Tayx::Graphy::GraphyDebugger::DebugPacket* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass19_0::<GetAllDebugPacketsWithId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllDebugPacketsWithId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass21_0
#include "Tayx/Graphy/GraphyDebugger_--c__DisplayClass21_0.hpp"
// Including type: Tayx.Graphy.GraphyDebugger/DebugPacket
#include "Tayx/Graphy/GraphyDebugger_DebugPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 packetId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyDebugger::$$c__DisplayClass21_0::dyn_packetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass21_0::dyn_packetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyDebugger/<>c__DisplayClass21_0.<RemoveAllDebugPacketsWithId>b__0
bool Tayx::Graphy::GraphyDebugger::$$c__DisplayClass21_0::$RemoveAllDebugPacketsWithId$b__0(::Tayx::Graphy::GraphyDebugger::DebugPacket* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyDebugger::$$c__DisplayClass21_0::<RemoveAllDebugPacketsWithId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveAllDebugPacketsWithId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.GraphyManager/ModuleType
#include "Tayx/Graphy/GraphyManager_ModuleType.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: Tayx.Graphy.Fps.FpsManager
#include "Tayx/Graphy/Fps/FpsManager.hpp"
// Including type: Tayx.Graphy.Ram.RamManager
#include "Tayx/Graphy/Ram/RamManager.hpp"
// Including type: Tayx.Graphy.Audio.AudioManager
#include "Tayx/Graphy/Audio/AudioManager.hpp"
// Including type: Tayx.Graphy.Advanced.AdvancedData
#include "Tayx/Graphy/Advanced/AdvancedData.hpp"
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: Tayx.Graphy.Ram.RamMonitor
#include "Tayx/Graphy/Ram/RamMonitor.hpp"
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsManager m_fpsManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsManager*& Tayx::Graphy::GraphyManager::dyn_m_fpsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_fpsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamManager m_ramManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamManager*& Tayx::Graphy::GraphyManager::dyn_m_ramManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_ramManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioManager m_audioManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioManager*& Tayx::Graphy::GraphyManager::dyn_m_audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Advanced.AdvancedData m_advancedData
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Advanced::AdvancedData*& Tayx::Graphy::GraphyManager::dyn_m_advancedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_advancedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_advancedData"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Advanced::AdvancedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsMonitor m_fpsMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsMonitor*& Tayx::Graphy::GraphyManager::dyn_m_fpsMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_fpsMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamMonitor m_ramMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamMonitor*& Tayx::Graphy::GraphyManager::dyn_m_ramMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_ramMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& Tayx::Graphy::GraphyManager::dyn_m_audioMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/Mode m_graphyMode
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::Mode& Tayx::Graphy::GraphyManager::dyn_m_graphyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_graphyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyMode"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleToggleState m_moduleToggleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleToggleState& Tayx::Graphy::GraphyManager::dyn_m_moduleToggleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_moduleToggleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_moduleToggleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleToggleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_active
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_keepAlive
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_keepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_keepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_background
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_background");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_background"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_backgroundColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backgroundColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.KeyCode m_toggleModeKeyCode
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Tayx::Graphy::GraphyManager::dyn_m_toggleModeKeyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleModeKeyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleModeKeyCode"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_toggleModeCtrl
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_toggleModeCtrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleModeCtrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleModeCtrl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_toggleModeAlt
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_toggleModeAlt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleModeAlt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleModeAlt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.KeyCode m_toggleActiveKeyCode
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Tayx::Graphy::GraphyManager::dyn_m_toggleActiveKeyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleActiveKeyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleActiveKeyCode"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_toggleActiveCtrl
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_toggleActiveCtrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleActiveCtrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleActiveCtrl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_toggleActiveAlt
[[deprecated("Use field access instead!")]] bool& Tayx::Graphy::GraphyManager::dyn_m_toggleActiveAlt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_toggleActiveAlt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_toggleActiveAlt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModulePosition m_graphModulePosition
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModulePosition& Tayx::Graphy::GraphyManager::dyn_m_graphModulePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_graphModulePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphModulePosition"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModulePosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_fpsModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::GraphyManager::dyn_m_fpsModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_fpsModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_timeToResetMinMaxFps
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_timeToResetMinMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_timeToResetMinMaxFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeToResetMinMaxFps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_goodFpsColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_goodFpsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_goodFpsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goodFpsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_goodFpsThreshold
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_goodFpsThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_goodFpsThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goodFpsThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_cautionFpsColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_cautionFpsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_cautionFpsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cautionFpsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_cautionFpsThreshold
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_cautionFpsThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_cautionFpsThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cautionFpsThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_criticalFpsColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_criticalFpsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_criticalFpsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_criticalFpsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_fpsGraphResolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_fpsGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_fpsGraphResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsGraphResolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_fpsTextUpdateRate
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_fpsTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_fpsTextUpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsTextUpdateRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_ramModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::GraphyManager::dyn_m_ramModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_ramModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_allocatedRamColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_allocatedRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_allocatedRamColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allocatedRamColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_reservedRamColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_reservedRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_reservedRamColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reservedRamColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_monoRamColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_monoRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_monoRamColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoRamColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ramGraphResolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_ramGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_ramGraphResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramGraphResolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ramTextUpdateRate
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_ramTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_ramTextUpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramTextUpdateRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_audioModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::GraphyManager::dyn_m_audioModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/LookForAudioListener m_findAudioListenerInCameraIfNull
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::LookForAudioListener& Tayx::Graphy::GraphyManager::dyn_m_findAudioListenerInCameraIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_findAudioListenerInCameraIfNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_findAudioListenerInCameraIfNull"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::LookForAudioListener*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioListener m_audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& Tayx::Graphy::GraphyManager::dyn_m_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_audioGraphColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::GraphyManager::dyn_m_audioGraphColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioGraphColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioGraphColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_audioGraphResolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_audioGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioGraphResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioGraphResolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_audioTextUpdateRate
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_audioTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_audioTextUpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioTextUpdateRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FFTWindow m_FFTWindow
[[deprecated("Use field access instead!")]] ::UnityEngine::FFTWindow& Tayx::Graphy::GraphyManager::dyn_m_FFTWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_FFTWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FFTWindow"))->offset;
  return *reinterpret_cast<::UnityEngine::FFTWindow*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_spectrumSize
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::dyn_m_spectrumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_spectrumSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spectrumSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModulePosition m_advancedModulePosition
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModulePosition& Tayx::Graphy::GraphyManager::dyn_m_advancedModulePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_advancedModulePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_advancedModulePosition"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModulePosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_advancedModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::GraphyManager::dyn_m_advancedModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::dyn_m_advancedModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_advancedModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_GraphyMode
::Tayx::Graphy::GraphyManager::Mode Tayx::Graphy::GraphyManager::get_GraphyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_GraphyMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphyMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::Mode, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_GraphyMode
void Tayx::Graphy::GraphyManager::set_GraphyMode(::Tayx::Graphy::GraphyManager::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_GraphyMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GraphyMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_KeepAlive
bool Tayx::Graphy::GraphyManager::get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_Background
bool Tayx::Graphy::GraphyManager::get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_Background");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Background", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_Background
void Tayx::Graphy::GraphyManager::set_Background(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_Background");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Background", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_BackgroundColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_BackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_BackgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BackgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_BackgroundColor
void Tayx::Graphy::GraphyManager::set_BackgroundColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_BackgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BackgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_GraphModulePosition
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::get_GraphModulePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_GraphModulePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GraphModulePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModulePosition, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_GraphModulePosition
void Tayx::Graphy::GraphyManager::set_GraphModulePosition(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_GraphModulePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GraphModulePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_FpsModuleState
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::get_FpsModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_FpsModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FpsModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModuleState, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_FpsModuleState
void Tayx::Graphy::GraphyManager::set_FpsModuleState(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_FpsModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FpsModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_TimeToResetMinMaxFps
int Tayx::Graphy::GraphyManager::get_TimeToResetMinMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_TimeToResetMinMaxFps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeToResetMinMaxFps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_TimeToResetMinMaxFps
void Tayx::Graphy::GraphyManager::set_TimeToResetMinMaxFps(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_TimeToResetMinMaxFps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TimeToResetMinMaxFps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_GoodFPSColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_GoodFPSColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_GoodFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GoodFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_GoodFPSColor
void Tayx::Graphy::GraphyManager::set_GoodFPSColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_GoodFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GoodFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_CautionFPSColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_CautionFPSColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_CautionFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CautionFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_CautionFPSColor
void Tayx::Graphy::GraphyManager::set_CautionFPSColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_CautionFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CautionFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_CriticalFPSColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_CriticalFPSColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_CriticalFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CriticalFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_CriticalFPSColor
void Tayx::Graphy::GraphyManager::set_CriticalFPSColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_CriticalFPSColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CriticalFPSColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_GoodFPSThreshold
int Tayx::Graphy::GraphyManager::get_GoodFPSThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_GoodFPSThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GoodFPSThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_GoodFPSThreshold
void Tayx::Graphy::GraphyManager::set_GoodFPSThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_GoodFPSThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GoodFPSThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_CautionFPSThreshold
int Tayx::Graphy::GraphyManager::get_CautionFPSThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_CautionFPSThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CautionFPSThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_CautionFPSThreshold
void Tayx::Graphy::GraphyManager::set_CautionFPSThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_CautionFPSThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CautionFPSThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_FpsGraphResolution
int Tayx::Graphy::GraphyManager::get_FpsGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_FpsGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FpsGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_FpsGraphResolution
void Tayx::Graphy::GraphyManager::set_FpsGraphResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_FpsGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FpsGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_FpsTextUpdateRate
int Tayx::Graphy::GraphyManager::get_FpsTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_FpsTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FpsTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_FpsTextUpdateRate
void Tayx::Graphy::GraphyManager::set_FpsTextUpdateRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_FpsTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FpsTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_CurrentFPS
float Tayx::Graphy::GraphyManager::get_CurrentFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_CurrentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AverageFPS
float Tayx::Graphy::GraphyManager::get_AverageFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AverageFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AverageFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_MinFPS
float Tayx::Graphy::GraphyManager::get_MinFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_MinFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_MaxFPS
float Tayx::Graphy::GraphyManager::get_MaxFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_MaxFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_RamModuleState
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::get_RamModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_RamModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RamModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModuleState, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_RamModuleState
void Tayx::Graphy::GraphyManager::set_RamModuleState(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_RamModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RamModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AllocatedRamColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_AllocatedRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AllocatedRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllocatedRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AllocatedRamColor
void Tayx::Graphy::GraphyManager::set_AllocatedRamColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AllocatedRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllocatedRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_ReservedRamColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_ReservedRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_ReservedRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReservedRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_ReservedRamColor
void Tayx::Graphy::GraphyManager::set_ReservedRamColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_ReservedRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReservedRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_MonoRamColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_MonoRamColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_MonoRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_MonoRamColor
void Tayx::Graphy::GraphyManager::set_MonoRamColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_MonoRamColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MonoRamColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_RamGraphResolution
int Tayx::Graphy::GraphyManager::get_RamGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_RamGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RamGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_RamGraphResolution
void Tayx::Graphy::GraphyManager::set_RamGraphResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_RamGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RamGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_RamTextUpdateRate
int Tayx::Graphy::GraphyManager::get_RamTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_RamTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RamTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_RamTextUpdateRate
void Tayx::Graphy::GraphyManager::set_RamTextUpdateRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_RamTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RamTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AllocatedRam
float Tayx::Graphy::GraphyManager::get_AllocatedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AllocatedRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllocatedRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_ReservedRam
float Tayx::Graphy::GraphyManager::get_ReservedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_ReservedRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReservedRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_MonoRam
float Tayx::Graphy::GraphyManager::get_MonoRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_MonoRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AudioModuleState
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::get_AudioModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AudioModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModuleState, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AudioModuleState
void Tayx::Graphy::GraphyManager::set_AudioModuleState(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AudioModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AudioListener
::UnityEngine::AudioListener* Tayx::Graphy::GraphyManager::get_AudioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioListener*, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AudioListener
void Tayx::Graphy::GraphyManager::set_AudioListener(::UnityEngine::AudioListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_FindAudioListenerInCameraIfNull
::Tayx::Graphy::GraphyManager::LookForAudioListener Tayx::Graphy::GraphyManager::get_FindAudioListenerInCameraIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_FindAudioListenerInCameraIfNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FindAudioListenerInCameraIfNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::LookForAudioListener, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_FindAudioListenerInCameraIfNull
void Tayx::Graphy::GraphyManager::set_FindAudioListenerInCameraIfNull(::Tayx::Graphy::GraphyManager::LookForAudioListener value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_FindAudioListenerInCameraIfNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FindAudioListenerInCameraIfNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AudioGraphColor
::UnityEngine::Color Tayx::Graphy::GraphyManager::get_AudioGraphColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AudioGraphColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioGraphColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AudioGraphColor
void Tayx::Graphy::GraphyManager::set_AudioGraphColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AudioGraphColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioGraphColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AudioGraphResolution
int Tayx::Graphy::GraphyManager::get_AudioGraphResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AudioGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AudioGraphResolution
void Tayx::Graphy::GraphyManager::set_AudioGraphResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AudioGraphResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioGraphResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AudioTextUpdateRate
int Tayx::Graphy::GraphyManager::get_AudioTextUpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AudioTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AudioTextUpdateRate
void Tayx::Graphy::GraphyManager::set_AudioTextUpdateRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AudioTextUpdateRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioTextUpdateRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_FftWindow
::UnityEngine::FFTWindow Tayx::Graphy::GraphyManager::get_FftWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_FftWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FftWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FFTWindow, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_FftWindow
void Tayx::Graphy::GraphyManager::set_FftWindow(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_FftWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FftWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_SpectrumSize
int Tayx::Graphy::GraphyManager::get_SpectrumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_SpectrumSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpectrumSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_SpectrumSize
void Tayx::Graphy::GraphyManager::set_SpectrumSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_SpectrumSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpectrumSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_Spectrum
::ArrayW<float> Tayx::Graphy::GraphyManager::get_Spectrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_Spectrum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Spectrum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_MaxDB
float Tayx::Graphy::GraphyManager::get_MaxDB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_MaxDB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxDB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AdvancedModuleState
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::get_AdvancedModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AdvancedModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdvancedModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModuleState, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AdvancedModuleState
void Tayx::Graphy::GraphyManager::set_AdvancedModuleState(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AdvancedModuleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdvancedModuleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.get_AdvancedModulePosition
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::get_AdvancedModulePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::get_AdvancedModulePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdvancedModulePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tayx::Graphy::GraphyManager::ModulePosition, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.set_AdvancedModulePosition
void Tayx::Graphy::GraphyManager::set_AdvancedModulePosition(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::set_AdvancedModulePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdvancedModulePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.Start
void Tayx::Graphy::GraphyManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.Update
void Tayx::Graphy::GraphyManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.SetModulePosition
void Tayx::Graphy::GraphyManager::SetModulePosition(::Tayx::Graphy::GraphyManager::ModuleType moduleType, ::Tayx::Graphy::GraphyManager::ModulePosition modulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::SetModulePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModulePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moduleType), ::il2cpp_utils::ExtractType(modulePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moduleType, modulePosition);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.SetModuleMode
void Tayx::Graphy::GraphyManager::SetModuleMode(::Tayx::Graphy::GraphyManager::ModuleType moduleType, ::Tayx::Graphy::GraphyManager::ModuleState moduleState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::SetModuleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModuleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moduleType), ::il2cpp_utils::ExtractType(moduleState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moduleType, moduleState);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.Init
void Tayx::Graphy::GraphyManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.CheckForHotkeyPresses
void Tayx::Graphy::GraphyManager::CheckForHotkeyPresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::CheckForHotkeyPresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForHotkeyPresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.ToggleModes
void Tayx::Graphy::GraphyManager::ToggleModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ToggleModes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleModes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.ToggleActive
void Tayx::Graphy::GraphyManager::ToggleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ToggleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.CheckFor1KeyPress
bool Tayx::Graphy::GraphyManager::CheckFor1KeyPress(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::CheckFor1KeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFor1KeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.CheckFor2KeyPress
bool Tayx::Graphy::GraphyManager::CheckFor2KeyPress(::UnityEngine::KeyCode key1, ::UnityEngine::KeyCode key2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::CheckFor2KeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFor2KeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key1), ::il2cpp_utils::ExtractType(key2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key1, key2);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.CheckFor3KeyPress
bool Tayx::Graphy::GraphyManager::CheckFor3KeyPress(::UnityEngine::KeyCode key1, ::UnityEngine::KeyCode key2, ::UnityEngine::KeyCode key3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::CheckFor3KeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFor3KeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key1), ::il2cpp_utils::ExtractType(key2), ::il2cpp_utils::ExtractType(key3)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key1, key2, key3);
}
// Autogenerated method: Tayx.Graphy.GraphyManager.UpdateAllParameters
void Tayx::Graphy::GraphyManager::UpdateAllParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::UpdateAllParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/Mode
#include "Tayx/Graphy/GraphyManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/Mode FULL
::Tayx::Graphy::GraphyManager::Mode Tayx::Graphy::GraphyManager::Mode::_get_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Mode::_get_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::Mode>("Tayx.Graphy", "GraphyManager/Mode", "FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/Mode FULL
void Tayx::Graphy::GraphyManager::Mode::_set_FULL(::Tayx::Graphy::GraphyManager::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Mode::_set_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/Mode", "FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/Mode LIGHT
::Tayx::Graphy::GraphyManager::Mode Tayx::Graphy::GraphyManager::Mode::_get_LIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Mode::_get_LIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::Mode>("Tayx.Graphy", "GraphyManager/Mode", "LIGHT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/Mode LIGHT
void Tayx::Graphy::GraphyManager::Mode::_set_LIGHT(::Tayx::Graphy::GraphyManager::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Mode::_set_LIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/Mode", "LIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/ModuleType
#include "Tayx/Graphy/GraphyManager_ModuleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleType FPS
::Tayx::Graphy::GraphyManager::ModuleType Tayx::Graphy::GraphyManager::ModuleType::_get_FPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_get_FPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleType>("Tayx.Graphy", "GraphyManager/ModuleType", "FPS"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleType FPS
void Tayx::Graphy::GraphyManager::ModuleType::_set_FPS(::Tayx::Graphy::GraphyManager::ModuleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_set_FPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleType", "FPS", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleType RAM
::Tayx::Graphy::GraphyManager::ModuleType Tayx::Graphy::GraphyManager::ModuleType::_get_RAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_get_RAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleType>("Tayx.Graphy", "GraphyManager/ModuleType", "RAM"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleType RAM
void Tayx::Graphy::GraphyManager::ModuleType::_set_RAM(::Tayx::Graphy::GraphyManager::ModuleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_set_RAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleType", "RAM", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleType AUDIO
::Tayx::Graphy::GraphyManager::ModuleType Tayx::Graphy::GraphyManager::ModuleType::_get_AUDIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_get_AUDIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleType>("Tayx.Graphy", "GraphyManager/ModuleType", "AUDIO"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleType AUDIO
void Tayx::Graphy::GraphyManager::ModuleType::_set_AUDIO(::Tayx::Graphy::GraphyManager::ModuleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_set_AUDIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleType", "AUDIO", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleType ADVANCED
::Tayx::Graphy::GraphyManager::ModuleType Tayx::Graphy::GraphyManager::ModuleType::_get_ADVANCED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_get_ADVANCED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleType>("Tayx.Graphy", "GraphyManager/ModuleType", "ADVANCED"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleType ADVANCED
void Tayx::Graphy::GraphyManager::ModuleType::_set_ADVANCED(::Tayx::Graphy::GraphyManager::ModuleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::_set_ADVANCED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleType", "ADVANCED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::ModuleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/ModuleState
#include "Tayx/Graphy/GraphyManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleState FULL
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::ModuleState::_get_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_get_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleState>("Tayx.Graphy", "GraphyManager/ModuleState", "FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleState FULL
void Tayx::Graphy::GraphyManager::ModuleState::_set_FULL(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_set_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleState", "FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleState TEXT
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::ModuleState::_get_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_get_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleState>("Tayx.Graphy", "GraphyManager/ModuleState", "TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleState TEXT
void Tayx::Graphy::GraphyManager::ModuleState::_set_TEXT(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_set_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleState", "TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleState BASIC
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::ModuleState::_get_BASIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_get_BASIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleState>("Tayx.Graphy", "GraphyManager/ModuleState", "BASIC"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleState BASIC
void Tayx::Graphy::GraphyManager::ModuleState::_set_BASIC(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_set_BASIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleState", "BASIC", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleState BACKGROUND
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::ModuleState::_get_BACKGROUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_get_BACKGROUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleState>("Tayx.Graphy", "GraphyManager/ModuleState", "BACKGROUND"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleState BACKGROUND
void Tayx::Graphy::GraphyManager::ModuleState::_set_BACKGROUND(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_set_BACKGROUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleState", "BACKGROUND", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleState OFF
::Tayx::Graphy::GraphyManager::ModuleState Tayx::Graphy::GraphyManager::ModuleState::_get_OFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_get_OFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleState>("Tayx.Graphy", "GraphyManager/ModuleState", "OFF"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleState OFF
void Tayx::Graphy::GraphyManager::ModuleState::_set_OFF(::Tayx::Graphy::GraphyManager::ModuleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::_set_OFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleState", "OFF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::ModuleState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/ModulePosition
#include "Tayx/Graphy/GraphyManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModulePosition TOP_RIGHT
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::ModulePosition::_get_TOP_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_get_TOP_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModulePosition>("Tayx.Graphy", "GraphyManager/ModulePosition", "TOP_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModulePosition TOP_RIGHT
void Tayx::Graphy::GraphyManager::ModulePosition::_set_TOP_RIGHT(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_set_TOP_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModulePosition", "TOP_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModulePosition TOP_LEFT
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::ModulePosition::_get_TOP_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_get_TOP_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModulePosition>("Tayx.Graphy", "GraphyManager/ModulePosition", "TOP_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModulePosition TOP_LEFT
void Tayx::Graphy::GraphyManager::ModulePosition::_set_TOP_LEFT(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_set_TOP_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModulePosition", "TOP_LEFT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModulePosition BOTTOM_RIGHT
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::ModulePosition::_get_BOTTOM_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_get_BOTTOM_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModulePosition>("Tayx.Graphy", "GraphyManager/ModulePosition", "BOTTOM_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModulePosition BOTTOM_RIGHT
void Tayx::Graphy::GraphyManager::ModulePosition::_set_BOTTOM_RIGHT(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_set_BOTTOM_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModulePosition", "BOTTOM_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModulePosition BOTTOM_LEFT
::Tayx::Graphy::GraphyManager::ModulePosition Tayx::Graphy::GraphyManager::ModulePosition::_get_BOTTOM_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_get_BOTTOM_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModulePosition>("Tayx.Graphy", "GraphyManager/ModulePosition", "BOTTOM_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModulePosition BOTTOM_LEFT
void Tayx::Graphy::GraphyManager::ModulePosition::_set_BOTTOM_LEFT(::Tayx::Graphy::GraphyManager::ModulePosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::_set_BOTTOM_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModulePosition", "BOTTOM_LEFT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::ModulePosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModulePosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/LookForAudioListener
#include "Tayx/Graphy/GraphyManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener ALWAYS
::Tayx::Graphy::GraphyManager::LookForAudioListener Tayx::Graphy::GraphyManager::LookForAudioListener::_get_ALWAYS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_get_ALWAYS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::LookForAudioListener>("Tayx.Graphy", "GraphyManager/LookForAudioListener", "ALWAYS"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener ALWAYS
void Tayx::Graphy::GraphyManager::LookForAudioListener::_set_ALWAYS(::Tayx::Graphy::GraphyManager::LookForAudioListener value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_set_ALWAYS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/LookForAudioListener", "ALWAYS", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener ON_SCENE_LOAD
::Tayx::Graphy::GraphyManager::LookForAudioListener Tayx::Graphy::GraphyManager::LookForAudioListener::_get_ON_SCENE_LOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_get_ON_SCENE_LOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::LookForAudioListener>("Tayx.Graphy", "GraphyManager/LookForAudioListener", "ON_SCENE_LOAD"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener ON_SCENE_LOAD
void Tayx::Graphy::GraphyManager::LookForAudioListener::_set_ON_SCENE_LOAD(::Tayx::Graphy::GraphyManager::LookForAudioListener value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_set_ON_SCENE_LOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/LookForAudioListener", "ON_SCENE_LOAD", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener NEVER
::Tayx::Graphy::GraphyManager::LookForAudioListener Tayx::Graphy::GraphyManager::LookForAudioListener::_get_NEVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_get_NEVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::LookForAudioListener>("Tayx.Graphy", "GraphyManager/LookForAudioListener", "NEVER"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/LookForAudioListener NEVER
void Tayx::Graphy::GraphyManager::LookForAudioListener::_set_NEVER(::Tayx::Graphy::GraphyManager::LookForAudioListener value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::_set_NEVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/LookForAudioListener", "NEVER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::LookForAudioListener::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::LookForAudioListener::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.GraphyManager/ModuleToggleState
#include "Tayx/Graphy/GraphyManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_BASIC
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_BASIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_BASIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_BASIC"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_BASIC
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_BASIC(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_BASIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_BASIC", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT_RAM_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT_RAM_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT_RAM_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT_RAM_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT_RAM_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT_RAM_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT_RAM_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT_RAM_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT_RAM_TEXT_AUDIO_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT_RAM_TEXT_AUDIO_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_TEXT_RAM_TEXT_AUDIO_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT_RAM_TEXT_AUDIO_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_TEXT_RAM_TEXT_AUDIO_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT_RAM_TEXT_AUDIO_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_TEXT_RAM_TEXT_AUDIO_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_TEXT_RAM_TEXT_AUDIO_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_TEXT_AUDIO_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_TEXT_AUDIO_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_TEXT_AUDIO_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_TEXT_AUDIO_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_TEXT_AUDIO_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_TEXT_AUDIO_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_TEXT_AUDIO_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_TEXT_AUDIO_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_TEXT
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_TEXT
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_TEXT(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_FULL
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_FULL
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_FULL(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_BASIC_ADVANCED_FULL
::Tayx::Graphy::GraphyManager::ModuleToggleState Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_BASIC_ADVANCED_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_get_FPS_BASIC_ADVANCED_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Tayx::Graphy::GraphyManager::ModuleToggleState>("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_BASIC_ADVANCED_FULL"));
}
// Autogenerated static field setter
// Set static field: static public Tayx.Graphy.GraphyManager/ModuleToggleState FPS_BASIC_ADVANCED_FULL
void Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_BASIC_ADVANCED_FULL(::Tayx::Graphy::GraphyManager::ModuleToggleState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::_set_FPS_BASIC_ADVANCED_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "GraphyManager/ModuleToggleState", "FPS_BASIC_ADVANCED_FULL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::GraphyManager::ModuleToggleState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::GraphyManager::ModuleToggleState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.ShaderGraph
#include "Tayx/Graphy/ShaderGraph.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ArrayMaxSizeFull
int Tayx::Graphy::ShaderGraph::_get_ArrayMaxSizeFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::_get_ArrayMaxSizeFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Tayx.Graphy", "ShaderGraph", "ArrayMaxSizeFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ArrayMaxSizeFull
void Tayx::Graphy::ShaderGraph::_set_ArrayMaxSizeFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::_set_ArrayMaxSizeFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "ShaderGraph", "ArrayMaxSizeFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ArrayMaxSizeLight
int Tayx::Graphy::ShaderGraph::_get_ArrayMaxSizeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::_get_ArrayMaxSizeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Tayx.Graphy", "ShaderGraph", "ArrayMaxSizeLight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ArrayMaxSizeLight
void Tayx::Graphy::ShaderGraph::_set_ArrayMaxSizeLight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::_set_ArrayMaxSizeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy", "ShaderGraph", "ArrayMaxSizeLight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ArrayMaxSize
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_ArrayMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_ArrayMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ArrayMaxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image Image
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::ShaderGraph::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Tayx::Graphy::ShaderGraph::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Name_Length
[[deprecated("Use field access instead!")]] ::StringW& Tayx::Graphy::ShaderGraph::dyn_Name_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_Name_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name_Length"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Array
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::ShaderGraph::dyn_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_Array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Array"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Average
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::ShaderGraph::dyn_Average() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_Average");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Average"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 averagePropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_averagePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_averagePropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averagePropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GoodThreshold
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::ShaderGraph::dyn_GoodThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_GoodThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoodThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CautionThreshold
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::ShaderGraph::dyn_CautionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_CautionThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CautionThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 goodThresholdPropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_goodThresholdPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_goodThresholdPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodThresholdPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cautionThresholdPropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_cautionThresholdPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_cautionThresholdPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cautionThresholdPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color GoodColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::ShaderGraph::dyn_GoodColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_GoodColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoodColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color CautionColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::ShaderGraph::dyn_CautionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_CautionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CautionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color CriticalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Tayx::Graphy::ShaderGraph::dyn_CriticalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_CriticalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CriticalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 goodColorPropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_goodColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_goodColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cautionColorPropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_cautionColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_cautionColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cautionColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 criticalColorPropertyId
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::ShaderGraph::dyn_criticalColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::dyn_criticalColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "criticalColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.InitializeShader
void Tayx::Graphy::ShaderGraph::InitializeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::InitializeShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.UpdateArray
void Tayx::Graphy::ShaderGraph::UpdateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::UpdateArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.UpdateAverage
void Tayx::Graphy::ShaderGraph::UpdateAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::UpdateAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.UpdateThresholds
void Tayx::Graphy::ShaderGraph::UpdateThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::UpdateThresholds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateThresholds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.UpdateColors
void Tayx::Graphy::ShaderGraph::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::UpdateColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.ShaderGraph.UpdatePoints
void Tayx::Graphy::ShaderGraph::UpdatePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::ShaderGraph::UpdatePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Utils.ExtensionMethods
#include "Tayx/Graphy/Utils/ExtensionMethods.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tayx.Graphy.Utils.ExtensionMethods.SetAllActive
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* Tayx::Graphy::Utils::ExtensionMethods::SetAllActive(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gameObjects, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::ExtensionMethods::SetAllActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "ExtensionMethods", "SetAllActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjects), ::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObjects, active);
}
// Autogenerated method: Tayx.Graphy.Utils.ExtensionMethods.SetOneActive
::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>* Tayx::Graphy::Utils::ExtensionMethods::SetOneActive(::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>* images, int active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::ExtensionMethods::SetOneActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "ExtensionMethods", "SetOneActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(images), ::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, images, active);
}
// Autogenerated method: Tayx.Graphy.Utils.ExtensionMethods.SetAllActive
::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>* Tayx::Graphy::Utils::ExtensionMethods::SetAllActive(::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>* images, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::ExtensionMethods::SetAllActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "ExtensionMethods", "SetAllActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(images), ::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, images, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Utils.IntString
#include "Tayx/Graphy/Utils/IntString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] positiveBuffer
::ArrayW<::StringW> Tayx::Graphy::Utils::IntString::_get_positiveBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::_get_positiveBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Tayx.Graphy.Utils", "IntString", "positiveBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] positiveBuffer
void Tayx::Graphy::Utils::IntString::_set_positiveBuffer(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::_set_positiveBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Utils", "IntString", "positiveBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] negativeBuffer
::ArrayW<::StringW> Tayx::Graphy::Utils::IntString::_get_negativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::_get_negativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Tayx.Graphy.Utils", "IntString", "negativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] negativeBuffer
void Tayx::Graphy::Utils::IntString::_set_negativeBuffer(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::_set_negativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Utils", "IntString", "negativeBuffer", value));
}
// Autogenerated method: Tayx.Graphy.Utils.IntString.get_maxValue
float Tayx::Graphy::Utils::IntString::get_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::get_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", "get_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.IntString.get_minValue
float Tayx::Graphy::Utils::IntString::get_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::get_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", "get_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.IntString.get_Inited
bool Tayx::Graphy::Utils::IntString::get_Inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::get_Inited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", "get_Inited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.IntString.Init
void Tayx::Graphy::Utils::IntString::Init(int minNegativeValue, int maxPositiveValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minNegativeValue), ::il2cpp_utils::ExtractType(maxPositiveValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minNegativeValue, maxPositiveValue);
}
// Autogenerated method: Tayx.Graphy.Utils.IntString.ToStringNonAlloc
::StringW Tayx::Graphy::Utils::IntString::ToStringNonAlloc(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::ToStringNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", "ToStringNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.Utils.IntString..cctor
void Tayx::Graphy::Utils::IntString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::IntString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "IntString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Utils.FloatString
#include "Tayx/Graphy/Utils/FloatString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single decimalMultiplayer
float Tayx::Graphy::Utils::FloatString::_get_decimalMultiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_get_decimalMultiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Tayx.Graphy.Utils", "FloatString", "decimalMultiplayer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single decimalMultiplayer
void Tayx::Graphy::Utils::FloatString::_set_decimalMultiplayer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_set_decimalMultiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Utils", "FloatString", "decimalMultiplayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] positiveBuffer
::ArrayW<::StringW> Tayx::Graphy::Utils::FloatString::_get_positiveBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_get_positiveBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Tayx.Graphy.Utils", "FloatString", "positiveBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] positiveBuffer
void Tayx::Graphy::Utils::FloatString::_set_positiveBuffer(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_set_positiveBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Utils", "FloatString", "positiveBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] negativeBuffer
::ArrayW<::StringW> Tayx::Graphy::Utils::FloatString::_get_negativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_get_negativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Tayx.Graphy.Utils", "FloatString", "negativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] negativeBuffer
void Tayx::Graphy::Utils::FloatString::_set_negativeBuffer(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::_set_negativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Utils", "FloatString", "negativeBuffer", value));
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.get_Inited
bool Tayx::Graphy::Utils::FloatString::get_Inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::get_Inited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "get_Inited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.get_maxValue
float Tayx::Graphy::Utils::FloatString::get_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::get_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "get_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.get_minValue
float Tayx::Graphy::Utils::FloatString::get_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::get_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "get_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.Init
void Tayx::Graphy::Utils::FloatString::Init(float minNegativeValue, float maxPositiveValue, int deciminals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minNegativeValue), ::il2cpp_utils::ExtractType(maxPositiveValue), ::il2cpp_utils::ExtractType(deciminals)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minNegativeValue, maxPositiveValue, deciminals);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.ToStringNonAlloc
::StringW Tayx::Graphy::Utils::FloatString::ToStringNonAlloc(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::ToStringNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "ToStringNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.ToStringNonAlloc
::StringW Tayx::Graphy::Utils::FloatString::ToStringNonAlloc(float value, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::ToStringNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "ToStringNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.Pow
int Tayx::Graphy::Utils::FloatString::Pow(int f, int p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.ToIndex
int Tayx::Graphy::Utils::FloatString::ToIndex(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::ToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "ToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.FromIndex
float Tayx::Graphy::Utils::FloatString::FromIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::FromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "FromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.ToInt
int Tayx::Graphy::Utils::FloatString::ToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::ToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "ToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString.ToFloat
float Tayx::Graphy::Utils::FloatString::ToFloat(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Tayx.Graphy.Utils.FloatString..cctor
void Tayx::Graphy::Utils::FloatString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Utils::FloatString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tayx.Graphy.Utils", "FloatString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.UI.IModifiableState
#include "Tayx/Graphy/UI/IModifiableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tayx.Graphy.UI.IModifiableState.SetState
void Tayx::Graphy::UI::IModifiableState::SetState(::Tayx::Graphy::GraphyManager::ModuleState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::UI::IModifiableState::SetState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::UI::IModifiableState*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.UI.IMovable
#include "Tayx/Graphy/UI/IMovable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tayx.Graphy.UI.IMovable.SetPosition
void Tayx::Graphy::UI::IMovable::SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::UI::IMovable::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::UI::IMovable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newModulePosition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Ram.RamGraph
#include "Tayx/Graphy/Ram/RamGraph.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Ram.RamMonitor
#include "Tayx/Graphy/Ram/RamMonitor.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Tayx.Graphy.ShaderGraph
#include "Tayx/Graphy/ShaderGraph.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Ram::RamGraph::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamMonitor m_ramMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamMonitor*& Tayx::Graphy::Ram::RamGraph::dyn_m_ramMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_ramMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_imageAllocated
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::Ram::RamGraph::dyn_m_imageAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_imageAllocated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_imageAllocated"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_imageReserved
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::Ram::RamGraph::dyn_m_imageReserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_imageReserved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_imageReserved"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_imageMono
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::Ram::RamGraph::dyn_m_imageMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_imageMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_imageMono"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_resolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Ram::RamGraph::dyn_m_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_resolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.ShaderGraph m_shaderGraphAllocated
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::ShaderGraph*& Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphAllocated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shaderGraphAllocated"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::ShaderGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.ShaderGraph m_shaderGraphReserved
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::ShaderGraph*& Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphReserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphReserved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shaderGraphReserved"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::ShaderGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.ShaderGraph m_shaderGraphMono
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::ShaderGraph*& Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_shaderGraphMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shaderGraphMono"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::ShaderGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderFull
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Ram::RamGraph::dyn_ShaderFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_ShaderFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderFull"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderLight
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Ram::RamGraph::dyn_ShaderLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_ShaderLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_allocatedArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::Ram::RamGraph::dyn_m_allocatedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_allocatedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allocatedArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_reservedArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::Ram::RamGraph::dyn_m_reservedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_reservedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reservedArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_monoArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::Ram::RamGraph::dyn_m_monoArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_monoArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_highestMemory
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamGraph::dyn_m_highestMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::dyn_m_highestMemory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highestMemory"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.Awake
void Tayx::Graphy::Ram::RamGraph::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.Update
void Tayx::Graphy::Ram::RamGraph::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.UpdateParameters
void Tayx::Graphy::Ram::RamGraph::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.Init
void Tayx::Graphy::Ram::RamGraph::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.UpdateGraph
void Tayx::Graphy::Ram::RamGraph::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::UpdateGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamGraph.CreatePoints
void Tayx::Graphy::Ram::RamGraph::CreatePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamGraph::CreatePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Ram.RamManager
#include "Tayx/Graphy/Ram/RamManager.hpp"
// Including type: Tayx.Graphy.GraphyManager/ModulePosition
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Ram.RamGraph
#include "Tayx/Graphy/Ram/RamGraph.hpp"
// Including type: Tayx.Graphy.Ram.RamText
#include "Tayx/Graphy/Ram/RamText.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Ram::RamManager::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamGraph m_ramGraph
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamGraph*& Tayx::Graphy::Ram::RamManager::dyn_m_ramGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_ramGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramGraph"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamText m_ramText
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamText*& Tayx::Graphy::Ram::RamManager::dyn_m_ramText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_ramText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramText"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamText**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Tayx::Graphy::Ram::RamManager::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ramGraphGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Tayx::Graphy::Ram::RamManager::dyn_m_ramGraphGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_ramGraphGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramGraphGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_childrenGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Tayx::Graphy::Ram::RamManager::dyn_m_childrenGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_childrenGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_childrenGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*& Tayx::Graphy::Ram::RamManager::dyn_m_backgroundImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_backgroundImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backgroundImages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Ram::RamManager::dyn_m_previousModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_previousModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Ram::RamManager::dyn_m_currentModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::dyn_m_currentModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.Awake
void Tayx::Graphy::Ram::RamManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.Start
void Tayx::Graphy::Ram::RamManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.SetPosition
void Tayx::Graphy::Ram::RamManager::SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Ram::RamManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newModulePosition);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.SetState
void Tayx::Graphy::Ram::RamManager::SetState(::Tayx::Graphy::GraphyManager::ModuleState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::SetState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Ram::RamManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.RestorePreviousState
void Tayx::Graphy::Ram::RamManager::RestorePreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::RestorePreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestorePreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.UpdateParameters
void Tayx::Graphy::Ram::RamManager::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.Init
void Tayx::Graphy::Ram::RamManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamManager.SetGraphActive
void Tayx::Graphy::Ram::RamManager::SetGraphActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamManager::SetGraphActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Ram.RamMonitor
#include "Tayx/Graphy/Ram/RamMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_allocatedRam
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamMonitor::dyn_m_allocatedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::dyn_m_allocatedRam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allocatedRam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_reservedRam
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamMonitor::dyn_m_reservedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::dyn_m_reservedRam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reservedRam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_monoRam
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamMonitor::dyn_m_monoRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::dyn_m_monoRam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoRam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Ram.RamMonitor.get_AllocatedRam
float Tayx::Graphy::Ram::RamMonitor::get_AllocatedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::get_AllocatedRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllocatedRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamMonitor.get_ReservedRam
float Tayx::Graphy::Ram::RamMonitor::get_ReservedRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::get_ReservedRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReservedRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamMonitor.get_MonoRam
float Tayx::Graphy::Ram::RamMonitor::get_MonoRam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::get_MonoRam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoRam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamMonitor.Update
void Tayx::Graphy::Ram::RamMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Ram.RamText
#include "Tayx/Graphy/Ram/RamText.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Ram.RamMonitor
#include "Tayx/Graphy/Ram/RamMonitor.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Ram::RamText::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Ram.RamMonitor m_ramMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Ram::RamMonitor*& Tayx::Graphy::Ram::RamText::dyn_m_ramMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_ramMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ramMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Ram::RamMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_allocatedSystemMemorySizeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Ram::RamText::dyn_m_allocatedSystemMemorySizeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_allocatedSystemMemorySizeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allocatedSystemMemorySizeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_reservedSystemMemorySizeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Ram::RamText::dyn_m_reservedSystemMemorySizeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_reservedSystemMemorySizeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reservedSystemMemorySizeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_monoSystemMemorySizeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Ram::RamText::dyn_m_monoSystemMemorySizeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_monoSystemMemorySizeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoSystemMemorySizeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_updateRate
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamText::dyn_m_updateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_updateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_deltaTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Ram::RamText::dyn_m_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String m_memoryStringFormat
[[deprecated("Use field access instead!")]] ::StringW& Tayx::Graphy::Ram::RamText::dyn_m_memoryStringFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::dyn_m_memoryStringFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_memoryStringFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Ram.RamText.Awake
void Tayx::Graphy::Ram::RamText::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamText.Update
void Tayx::Graphy::Ram::RamText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamText.UpdateParameters
void Tayx::Graphy::Ram::RamText::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Ram.RamText.Init
void Tayx::Graphy::Ram::RamText::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Ram::RamText::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Graph.Graph
#include "Tayx/Graphy/Graph/Graph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tayx.Graphy.Graph.Graph.UpdateGraph
void Tayx::Graphy::Graph::Graph::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Graph::Graph::UpdateGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Graph.Graph.CreatePoints
void Tayx::Graphy::Graph::Graph::CreatePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Graph::Graph::CreatePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Fps.FpsGraph
#include "Tayx/Graphy/Fps/FpsGraph.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Tayx.Graphy.ShaderGraph
#include "Tayx/Graphy/ShaderGraph.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Fps::FpsGraph::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsMonitor m_fpsMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsMonitor*& Tayx::Graphy::Fps::FpsGraph::dyn_m_fpsMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_fpsMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_imageGraph
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::Fps::FpsGraph::dyn_m_imageGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_imageGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_imageGraph"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_resolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsGraph::dyn_m_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_resolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.ShaderGraph m_shaderGraph
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::ShaderGraph*& Tayx::Graphy::Fps::FpsGraph::dyn_m_shaderGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_shaderGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shaderGraph"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::ShaderGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderFull
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Fps::FpsGraph::dyn_ShaderFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_ShaderFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderFull"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderLight
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Fps::FpsGraph::dyn_ShaderLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_ShaderLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_fpsArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Tayx::Graphy::Fps::FpsGraph::dyn_m_fpsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_fpsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_highestFps
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsGraph::dyn_m_highestFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::dyn_m_highestFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highestFps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.Awake
void Tayx::Graphy::Fps::FpsGraph::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.Update
void Tayx::Graphy::Fps::FpsGraph::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.UpdateParameters
void Tayx::Graphy::Fps::FpsGraph::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.Init
void Tayx::Graphy::Fps::FpsGraph::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.UpdateGraph
void Tayx::Graphy::Fps::FpsGraph::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::UpdateGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsGraph.CreatePoints
void Tayx::Graphy::Fps::FpsGraph::CreatePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsGraph::CreatePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Fps.FpsManager
#include "Tayx/Graphy/Fps/FpsManager.hpp"
// Including type: Tayx.Graphy.GraphyManager/ModulePosition
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Fps.FpsGraph
#include "Tayx/Graphy/Fps/FpsGraph.hpp"
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: Tayx.Graphy.Fps.FpsText
#include "Tayx/Graphy/Fps/FpsText.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Fps::FpsManager::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsGraph m_fpsGraph
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsGraph*& Tayx::Graphy::Fps::FpsManager::dyn_m_fpsGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_fpsGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsGraph"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsMonitor m_fpsMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsMonitor*& Tayx::Graphy::Fps::FpsManager::dyn_m_fpsMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_fpsMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsText m_fpsText
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsText*& Tayx::Graphy::Fps::FpsManager::dyn_m_fpsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_fpsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsText"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsText**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Tayx::Graphy::Fps::FpsManager::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_fpsGraphGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Tayx::Graphy::Fps::FpsManager::dyn_m_fpsGraphGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_fpsGraphGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsGraphGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_nonBasicTextGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Tayx::Graphy::Fps::FpsManager::dyn_m_nonBasicTextGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_nonBasicTextGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nonBasicTextGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*& Tayx::Graphy::Fps::FpsManager::dyn_m_backgroundImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_backgroundImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backgroundImages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_childrenGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Tayx::Graphy::Fps::FpsManager::dyn_m_childrenGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_childrenGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_childrenGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Fps::FpsManager::dyn_m_previousModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_previousModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Fps::FpsManager::dyn_m_currentModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::dyn_m_currentModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.Awake
void Tayx::Graphy::Fps::FpsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.Start
void Tayx::Graphy::Fps::FpsManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.SetPosition
void Tayx::Graphy::Fps::FpsManager::SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Fps::FpsManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newModulePosition);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.SetState
void Tayx::Graphy::Fps::FpsManager::SetState(::Tayx::Graphy::GraphyManager::ModuleState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::SetState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Fps::FpsManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.RestorePreviousState
void Tayx::Graphy::Fps::FpsManager::RestorePreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::RestorePreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestorePreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.UpdateParameters
void Tayx::Graphy::Fps::FpsManager::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.Init
void Tayx::Graphy::Fps::FpsManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsManager.SetGraphActive
void Tayx::Graphy::Fps::FpsManager::SetGraphActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsManager::SetGraphActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Fps::FpsMonitor::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_currentFps
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_currentFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_currentFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentFps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_avgFps
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_avgFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_avgFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_avgFps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_minFps
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_minFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_minFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minFps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxFps
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_maxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_maxFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxFps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_averageSamples
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsMonitor::dyn_m_averageSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_averageSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_averageSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> m_averageFpsSamples
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& Tayx::Graphy::Fps::FpsMonitor::dyn_m_averageFpsSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_averageFpsSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_averageFpsSamples"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_timeToResetMinMaxFps
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMinMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMinMaxFps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeToResetMinMaxFps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeToResetMinFpsPassed
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMinFpsPassed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMinFpsPassed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeToResetMinFpsPassed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeToResetMaxFpsPassed
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMaxFpsPassed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_m_timeToResetMaxFpsPassed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeToResetMaxFpsPassed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single unscaledDeltaTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsMonitor::dyn_unscaledDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::dyn_unscaledDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unscaledDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.get_CurrentFPS
float Tayx::Graphy::Fps::FpsMonitor::get_CurrentFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::get_CurrentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.get_AverageFPS
float Tayx::Graphy::Fps::FpsMonitor::get_AverageFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::get_AverageFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AverageFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.get_MinFPS
float Tayx::Graphy::Fps::FpsMonitor::get_MinFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::get_MinFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.get_MaxFPS
float Tayx::Graphy::Fps::FpsMonitor::get_MaxFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::get_MaxFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.Awake
void Tayx::Graphy::Fps::FpsMonitor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.Update
void Tayx::Graphy::Fps::FpsMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.UpdateParameters
void Tayx::Graphy::Fps::FpsMonitor::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsMonitor.Init
void Tayx::Graphy::Fps::FpsMonitor::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsMonitor::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Fps.FpsText
#include "Tayx/Graphy/Fps/FpsText.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Fps.FpsMonitor
#include "Tayx/Graphy/Fps/FpsMonitor.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String m_msStringFormat
::StringW Tayx::Graphy::Fps::FpsText::_get_m_msStringFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::_get_m_msStringFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Tayx.Graphy.Fps", "FpsText", "m_msStringFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String m_msStringFormat
void Tayx::Graphy::Fps::FpsText::_set_m_msStringFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::_set_m_msStringFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Fps", "FpsText", "m_msStringFormat", value));
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Fps::FpsText::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Fps.FpsMonitor m_fpsMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Fps::FpsMonitor*& Tayx::Graphy::Fps::FpsText::dyn_m_fpsMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_fpsMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Fps::FpsMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_fpsText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Fps::FpsText::dyn_m_fpsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_fpsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fpsText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_msText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Fps::FpsText::dyn_m_msText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_msText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_msText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_avgFpsText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Fps::FpsText::dyn_m_avgFpsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_avgFpsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_avgFpsText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_minFpsText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Fps::FpsText::dyn_m_minFpsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_minFpsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minFpsText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_maxFpsText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Fps::FpsText::dyn_m_maxFpsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_maxFpsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxFpsText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_updateRate
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsText::dyn_m_updateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_updateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_frameCount
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Fps::FpsText::dyn_m_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_frameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_deltaTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsText::dyn_m_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_fps
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Fps::FpsText::dyn_m_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::dyn_m_fps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fps"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsText.Awake
void Tayx::Graphy::Fps::FpsText::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsText.Update
void Tayx::Graphy::Fps::FpsText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsText.UpdateParameters
void Tayx::Graphy::Fps::FpsText::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsText.SetFpsRelatedTextColor
void Tayx::Graphy::Fps::FpsText::SetFpsRelatedTextColor(::UnityEngine::UI::Text* text, float fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::SetFpsRelatedTextColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFpsRelatedTextColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(fps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, fps);
}
// Autogenerated method: Tayx.Graphy.Fps.FpsText.Init
void Tayx::Graphy::Fps::FpsText::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::FpsText::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Audio.AudioGraph
#include "Tayx/Graphy/Audio/AudioGraph.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Tayx.Graphy.ShaderGraph
#include "Tayx/Graphy/ShaderGraph.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Audio::AudioGraph::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& Tayx::Graphy::Audio::AudioGraph::dyn_m_audioMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_audioMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_imageGraph
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& Tayx::Graphy::Audio::AudioGraph::dyn_m_imageGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_imageGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_imageGraph"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_resolution
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Audio::AudioGraph::dyn_m_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_resolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.ShaderGraph m_shaderGraph
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::ShaderGraph*& Tayx::Graphy::Audio::AudioGraph::dyn_m_shaderGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_shaderGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_shaderGraph"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::ShaderGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderFull
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Audio::AudioGraph::dyn_ShaderFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_ShaderFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderFull"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ShaderLight
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& Tayx::Graphy::Audio::AudioGraph::dyn_ShaderLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_ShaderLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShaderLight"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_graphArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::Audio::AudioGraph::dyn_m_graphArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::dyn_m_graphArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.Awake
void Tayx::Graphy::Audio::AudioGraph::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.Update
void Tayx::Graphy::Audio::AudioGraph::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.UpdateParameters
void Tayx::Graphy::Audio::AudioGraph::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.Init
void Tayx::Graphy::Audio::AudioGraph::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.UpdateGraph
void Tayx::Graphy::Audio::AudioGraph::UpdateGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::UpdateGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioGraph.CreatePoints
void Tayx::Graphy::Audio::AudioGraph::CreatePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioGraph::CreatePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Graph::Graph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Audio.AudioManager
#include "Tayx/Graphy/Audio/AudioManager.hpp"
// Including type: Tayx.Graphy.GraphyManager/ModulePosition
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Audio.AudioGraph
#include "Tayx/Graphy/Audio/AudioGraph.hpp"
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
// Including type: Tayx.Graphy.Audio.AudioText
#include "Tayx/Graphy/Audio/AudioText.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Audio::AudioManager::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioGraph m_audioGraph
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioGraph*& Tayx::Graphy::Audio::AudioManager::dyn_m_audioGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_audioGraph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioGraph"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& Tayx::Graphy::Audio::AudioManager::dyn_m_audioMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_audioMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioText m_audioText
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioText*& Tayx::Graphy::Audio::AudioManager::dyn_m_audioText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_audioText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioText"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioText**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Tayx::Graphy::Audio::AudioManager::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_audioGraphGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Tayx::Graphy::Audio::AudioManager::dyn_m_audioGraphGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_audioGraphGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioGraphGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_audioDbText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Audio::AudioManager::dyn_m_audioDbText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_audioDbText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioDbText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_childrenGameObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Tayx::Graphy::Audio::AudioManager::dyn_m_childrenGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_childrenGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_childrenGameObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*& Tayx::Graphy::Audio::AudioManager::dyn_m_backgroundImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_backgroundImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backgroundImages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Audio::AudioManager::dyn_m_previousModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_previousModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Audio::AudioManager::dyn_m_currentModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::dyn_m_currentModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.Awake
void Tayx::Graphy::Audio::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.Start
void Tayx::Graphy::Audio::AudioManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.SetPosition
void Tayx::Graphy::Audio::AudioManager::SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Audio::AudioManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newModulePosition);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.SetState
void Tayx::Graphy::Audio::AudioManager::SetState(::Tayx::Graphy::GraphyManager::ModuleState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::SetState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Audio::AudioManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.RestorePreviousState
void Tayx::Graphy::Audio::AudioManager::RestorePreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::RestorePreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestorePreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.UpdateParameters
void Tayx::Graphy::Audio::AudioManager::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.Init
void Tayx::Graphy::Audio::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioManager.SetGraphActive
void Tayx::Graphy::Audio::AudioManager::SetGraphActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::SetGraphActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single m_refValue
float Tayx::Graphy::Audio::AudioMonitor::_get_m_refValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::_get_m_refValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Tayx.Graphy.Audio", "AudioMonitor", "m_refValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single m_refValue
void Tayx::Graphy::Audio::AudioMonitor::_set_m_refValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::_set_m_refValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tayx.Graphy.Audio", "AudioMonitor", "m_refValue", value));
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Audio::AudioMonitor::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioListener m_audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& Tayx::Graphy::Audio::AudioMonitor::dyn_m_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/LookForAudioListener m_findAudioListenerInCameraIfNull
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::LookForAudioListener& Tayx::Graphy::Audio::AudioMonitor::dyn_m_findAudioListenerInCameraIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_findAudioListenerInCameraIfNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_findAudioListenerInCameraIfNull"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::LookForAudioListener*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FFTWindow m_FFTWindow
[[deprecated("Use field access instead!")]] ::UnityEngine::FFTWindow& Tayx::Graphy::Audio::AudioMonitor::dyn_m_FFTWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_FFTWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FFTWindow"))->offset;
  return *reinterpret_cast<::UnityEngine::FFTWindow*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_spectrumSize
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Audio::AudioMonitor::dyn_m_spectrumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_spectrumSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spectrumSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_spectrum
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Tayx::Graphy::Audio::AudioMonitor::dyn_m_spectrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_spectrum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spectrum"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxDB
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Audio::AudioMonitor::dyn_m_maxDB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dyn_m_maxDB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxDB"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.get_Spectrum
::ArrayW<float> Tayx::Graphy::Audio::AudioMonitor::get_Spectrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::get_Spectrum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Spectrum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.get_MaxDB
float Tayx::Graphy::Audio::AudioMonitor::get_MaxDB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::get_MaxDB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxDB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.get_SpectrumDataAvailable
bool Tayx::Graphy::Audio::AudioMonitor::get_SpectrumDataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::get_SpectrumDataAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpectrumDataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.Awake
void Tayx::Graphy::Audio::AudioMonitor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.Update
void Tayx::Graphy::Audio::AudioMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.UpdateParameters
void Tayx::Graphy::Audio::AudioMonitor::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.lin2dB
float Tayx::Graphy::Audio::AudioMonitor::lin2dB(float linear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::lin2dB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "lin2dB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linear)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, linear);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.dBNormalized
float Tayx::Graphy::Audio::AudioMonitor::dBNormalized(float db) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::dBNormalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "dBNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(db)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, db);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.FindAudioListener
void Tayx::Graphy::Audio::AudioMonitor::FindAudioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::FindAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.Init
void Tayx::Graphy::Audio::AudioMonitor::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioMonitor.<Init>b__20_0
void Tayx::Graphy::Audio::AudioMonitor::$Init$b__20_0(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode loadMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioMonitor::<Init>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(loadMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, loadMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Audio.AudioText
#include "Tayx/Graphy/Audio/AudioText.hpp"
// Including type: Tayx.Graphy.GraphyManager
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: Tayx.Graphy.Audio.AudioMonitor
#include "Tayx/Graphy/Audio/AudioMonitor.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Audio::AudioText::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& Tayx::Graphy::Audio::AudioText::dyn_m_audioMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::dyn_m_audioMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioMonitor"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::Audio::AudioMonitor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_DBText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Audio::AudioText::dyn_m_DBText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::dyn_m_DBText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DBText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_updateRate
[[deprecated("Use field access instead!")]] int& Tayx::Graphy::Audio::AudioText::dyn_m_updateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::dyn_m_updateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_deltaTimeOffset
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Audio::AudioText::dyn_m_deltaTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::dyn_m_deltaTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deltaTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioText.Awake
void Tayx::Graphy::Audio::AudioText::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioText.Update
void Tayx::Graphy::Audio::AudioText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioText.UpdateParameters
void Tayx::Graphy::Audio::AudioText::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Audio.AudioText.Init
void Tayx::Graphy::Audio::AudioText::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioText::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tayx.Graphy.Advanced.AdvancedData
#include "Tayx/Graphy/Advanced/AdvancedData.hpp"
// Including type: Tayx.Graphy.GraphyManager/ModulePosition
#include "Tayx/Graphy/GraphyManager.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager m_graphyManager
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphyManager"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_backgroundImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_backgroundImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backgroundImages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_graphicsDeviceVersionText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsDeviceVersionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsDeviceVersionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphicsDeviceVersionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_processorTypeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_processorTypeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_processorTypeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processorTypeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_operatingSystemText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_operatingSystemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_operatingSystemText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_operatingSystemText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_systemMemoryText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_systemMemoryText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_systemMemoryText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_systemMemoryText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_graphicsDeviceNameText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsDeviceNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsDeviceNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphicsDeviceNameText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_graphicsMemorySizeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsMemorySizeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_graphicsMemorySizeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_graphicsMemorySizeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_screenResolutionText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_screenResolutionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_screenResolutionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_screenResolutionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_gameWindowResolutionText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_gameWindowResolutionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_gameWindowResolutionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameWindowResolutionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_updateRate
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Advanced::AdvancedData::dyn_m_updateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_updateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_deltaTime
[[deprecated("Use field access instead!")]] float& Tayx::Graphy::Advanced::AdvancedData::dyn_m_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder m_sb
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Tayx::Graphy::Advanced::AdvancedData::dyn_m_sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Advanced::AdvancedData::dyn_m_previousModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_previousModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_previousModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
[[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& Tayx::Graphy::Advanced::AdvancedData::dyn_m_currentModuleState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_currentModuleState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentModuleState"))->offset;
  return *reinterpret_cast<::Tayx::Graphy::GraphyManager::ModuleState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] m_windowStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Tayx::Graphy::Advanced::AdvancedData::dyn_m_windowStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::dyn_m_windowStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_windowStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.Awake
void Tayx::Graphy::Advanced::AdvancedData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.Update
void Tayx::Graphy::Advanced::AdvancedData::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.SetPosition
void Tayx::Graphy::Advanced::AdvancedData::SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Advanced::AdvancedData*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newModulePosition);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.SetState
void Tayx::Graphy::Advanced::AdvancedData::SetState(::Tayx::Graphy::GraphyManager::ModuleState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::SetState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Tayx::Graphy::Advanced::AdvancedData*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.RestorePreviousState
void Tayx::Graphy::Advanced::AdvancedData::RestorePreviousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::RestorePreviousState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestorePreviousState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.UpdateParameters
void Tayx::Graphy::Advanced::AdvancedData::UpdateParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::UpdateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tayx.Graphy.Advanced.AdvancedData.Init
void Tayx::Graphy::Advanced::AdvancedData::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Advanced::AdvancedData::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetRecommendedRenderTargetSize
#include "Valve/VR/IVRSystem__GetRecommendedRenderTargetSize.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetRecommendedRenderTargetSize.Invoke
void Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::Invoke(ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetRecommendedRenderTargetSize.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::BeginInvoke(ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pnWidth), byref(pnHeight), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetRecommendedRenderTargetSize.EndInvoke
void Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::EndInvoke(ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRecommendedRenderTargetSize*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnWidth), byref(pnHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetProjectionMatrix
#include "Valve/VR/IVRSystem__GetProjectionMatrix.hpp"
// Including type: Valve.VR.HmdMatrix44_t
#include "Valve/VR/HmdMatrix44_t.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.Invoke
::Valve::VR::HmdMatrix44_t Valve::VR::IVRSystem::_GetProjectionMatrix::Invoke(::Valve::VR::EVREye eEye, float fNearZ, float fFarZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionMatrix::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionMatrix*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix44_t, false>(this, ___internal__method, eEye, fNearZ, fFarZ);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetProjectionMatrix::BeginInvoke(::Valve::VR::EVREye eEye, float fNearZ, float fFarZ, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionMatrix::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionMatrix*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, fNearZ, fFarZ, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionMatrix.EndInvoke
::Valve::VR::HmdMatrix44_t Valve::VR::IVRSystem::_GetProjectionMatrix::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionMatrix::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionMatrix*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix44_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetProjectionRaw
#include "Valve/VR/IVRSystem__GetProjectionRaw.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionRaw.Invoke
void Valve::VR::IVRSystem::_GetProjectionRaw::Invoke(::Valve::VR::EVREye eEye, ByRef<float> pfLeft, ByRef<float> pfRight, ByRef<float> pfTop, ByRef<float> pfBottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionRaw::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionRaw*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pfLeft), byref(pfRight), byref(pfTop), byref(pfBottom));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionRaw.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetProjectionRaw::BeginInvoke(::Valve::VR::EVREye eEye, ByRef<float> pfLeft, ByRef<float> pfRight, ByRef<float> pfTop, ByRef<float> pfBottom, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionRaw::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionRaw*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, byref(pfLeft), byref(pfRight), byref(pfTop), byref(pfBottom), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetProjectionRaw.EndInvoke
void Valve::VR::IVRSystem::_GetProjectionRaw::EndInvoke(ByRef<float> pfLeft, ByRef<float> pfRight, ByRef<float> pfTop, ByRef<float> pfBottom, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetProjectionRaw::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetProjectionRaw*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pfLeft), byref(pfRight), byref(pfTop), byref(pfBottom), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_ComputeDistortion
#include "Valve/VR/IVRSystem__ComputeDistortion.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: Valve.VR.DistortionCoordinates_t
#include "Valve/VR/DistortionCoordinates_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_ComputeDistortion.Invoke
bool Valve::VR::IVRSystem::_ComputeDistortion::Invoke(::Valve::VR::EVREye eEye, float fU, float fV, ByRef<::Valve::VR::DistortionCoordinates_t> pDistortionCoordinates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ComputeDistortion::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ComputeDistortion*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eEye, fU, fV, byref(pDistortionCoordinates));
}
// Autogenerated method: Valve.VR.IVRSystem/_ComputeDistortion.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_ComputeDistortion::BeginInvoke(::Valve::VR::EVREye eEye, float fU, float fV, ByRef<::Valve::VR::DistortionCoordinates_t> pDistortionCoordinates, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ComputeDistortion::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ComputeDistortion*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, fU, fV, byref(pDistortionCoordinates), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_ComputeDistortion.EndInvoke
bool Valve::VR::IVRSystem::_ComputeDistortion::EndInvoke(ByRef<::Valve::VR::DistortionCoordinates_t> pDistortionCoordinates, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ComputeDistortion::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ComputeDistortion*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pDistortionCoordinates), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetEyeToHeadTransform
#include "Valve/VR/IVRSystem__GetEyeToHeadTransform.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetEyeToHeadTransform.Invoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetEyeToHeadTransform::Invoke(::Valve::VR::EVREye eEye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEyeToHeadTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEyeToHeadTransform*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, eEye);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetEyeToHeadTransform.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetEyeToHeadTransform::BeginInvoke(::Valve::VR::EVREye eEye, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEyeToHeadTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEyeToHeadTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetEyeToHeadTransform.EndInvoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetEyeToHeadTransform::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEyeToHeadTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEyeToHeadTransform*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetTimeSinceLastVsync
#include "Valve/VR/IVRSystem__GetTimeSinceLastVsync.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetTimeSinceLastVsync.Invoke
bool Valve::VR::IVRSystem::_GetTimeSinceLastVsync::Invoke(ByRef<float> pfSecondsSinceLastVsync, ByRef<uint64_t> pulFrameCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTimeSinceLastVsync::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTimeSinceLastVsync*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pfSecondsSinceLastVsync), byref(pulFrameCounter));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTimeSinceLastVsync.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetTimeSinceLastVsync::BeginInvoke(ByRef<float> pfSecondsSinceLastVsync, ByRef<uint64_t> pulFrameCounter, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTimeSinceLastVsync::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTimeSinceLastVsync*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pfSecondsSinceLastVsync), byref(pulFrameCounter), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTimeSinceLastVsync.EndInvoke
bool Valve::VR::IVRSystem::_GetTimeSinceLastVsync::EndInvoke(ByRef<float> pfSecondsSinceLastVsync, ByRef<uint64_t> pulFrameCounter, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTimeSinceLastVsync::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTimeSinceLastVsync*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pfSecondsSinceLastVsync), byref(pulFrameCounter), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetD3D9AdapterIndex
#include "Valve/VR/IVRSystem__GetD3D9AdapterIndex.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetD3D9AdapterIndex.Invoke
int Valve::VR::IVRSystem::_GetD3D9AdapterIndex::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetD3D9AdapterIndex::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetD3D9AdapterIndex*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetD3D9AdapterIndex.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetD3D9AdapterIndex::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetD3D9AdapterIndex::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetD3D9AdapterIndex*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetD3D9AdapterIndex.EndInvoke
int Valve::VR::IVRSystem::_GetD3D9AdapterIndex::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetD3D9AdapterIndex::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetD3D9AdapterIndex*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetDXGIOutputInfo
#include "Valve/VR/IVRSystem__GetDXGIOutputInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetDXGIOutputInfo.Invoke
void Valve::VR::IVRSystem::_GetDXGIOutputInfo::Invoke(ByRef<int> pnAdapterIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDXGIOutputInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDXGIOutputInfo*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetDXGIOutputInfo.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetDXGIOutputInfo::BeginInvoke(ByRef<int> pnAdapterIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDXGIOutputInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDXGIOutputInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pnAdapterIndex), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetDXGIOutputInfo.EndInvoke
void Valve::VR::IVRSystem::_GetDXGIOutputInfo::EndInvoke(ByRef<int> pnAdapterIndex, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDXGIOutputInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDXGIOutputInfo*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetOutputDevice
#include "Valve/VR/IVRSystem__GetOutputDevice.hpp"
// Including type: Valve.VR.ETextureType
#include "Valve/VR/ETextureType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetOutputDevice.Invoke
void Valve::VR::IVRSystem::_GetOutputDevice::Invoke(ByRef<uint64_t> pnDevice, ::Valve::VR::ETextureType textureType, ::System::IntPtr pInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetOutputDevice::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetOutputDevice*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnDevice), textureType, pInstance);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetOutputDevice.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetOutputDevice::BeginInvoke(ByRef<uint64_t> pnDevice, ::Valve::VR::ETextureType textureType, ::System::IntPtr pInstance, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetOutputDevice::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetOutputDevice*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pnDevice), textureType, pInstance, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetOutputDevice.EndInvoke
void Valve::VR::IVRSystem::_GetOutputDevice::EndInvoke(ByRef<uint64_t> pnDevice, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetOutputDevice::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetOutputDevice*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnDevice), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_IsDisplayOnDesktop
#include "Valve/VR/IVRSystem__IsDisplayOnDesktop.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_IsDisplayOnDesktop.Invoke
bool Valve::VR::IVRSystem::_IsDisplayOnDesktop::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsDisplayOnDesktop::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsDisplayOnDesktop*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsDisplayOnDesktop.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_IsDisplayOnDesktop::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsDisplayOnDesktop::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsDisplayOnDesktop*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsDisplayOnDesktop.EndInvoke
bool Valve::VR::IVRSystem::_IsDisplayOnDesktop::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsDisplayOnDesktop::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsDisplayOnDesktop*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_SetDisplayVisibility
#include "Valve/VR/IVRSystem__SetDisplayVisibility.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_SetDisplayVisibility.Invoke
bool Valve::VR::IVRSystem::_SetDisplayVisibility::Invoke(bool bIsVisibleOnDesktop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_SetDisplayVisibility::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_SetDisplayVisibility*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bIsVisibleOnDesktop);
}
// Autogenerated method: Valve.VR.IVRSystem/_SetDisplayVisibility.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_SetDisplayVisibility::BeginInvoke(bool bIsVisibleOnDesktop, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_SetDisplayVisibility::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_SetDisplayVisibility*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bIsVisibleOnDesktop, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_SetDisplayVisibility.EndInvoke
bool Valve::VR::IVRSystem::_SetDisplayVisibility::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_SetDisplayVisibility::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_SetDisplayVisibility*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetDeviceToAbsoluteTrackingPose
#include "Valve/VR/IVRSystem__GetDeviceToAbsoluteTrackingPose.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetDeviceToAbsoluteTrackingPose.Invoke
void Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::Invoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, ByRef<::ArrayW<::Valve::VR::TrackedDevicePose_t>> pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin, fPredictedSecondsToPhotonsFromNow, byref(pTrackedDevicePoseArray), unTrackedDevicePoseArrayCount);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetDeviceToAbsoluteTrackingPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::BeginInvoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, ByRef<::ArrayW<::Valve::VR::TrackedDevicePose_t>> pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eOrigin, fPredictedSecondsToPhotonsFromNow, byref(pTrackedDevicePoseArray), unTrackedDevicePoseArrayCount, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetDeviceToAbsoluteTrackingPose.EndInvoke
void Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetDeviceToAbsoluteTrackingPose*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_ResetSeatedZeroPose
#include "Valve/VR/IVRSystem__ResetSeatedZeroPose.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_ResetSeatedZeroPose.Invoke
void Valve::VR::IVRSystem::_ResetSeatedZeroPose::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ResetSeatedZeroPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ResetSeatedZeroPose*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_ResetSeatedZeroPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_ResetSeatedZeroPose::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ResetSeatedZeroPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ResetSeatedZeroPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_ResetSeatedZeroPose.EndInvoke
void Valve::VR::IVRSystem::_ResetSeatedZeroPose::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ResetSeatedZeroPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ResetSeatedZeroPose*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose
#include "Valve/VR/IVRSystem__GetSeatedZeroPoseToStandingAbsoluteTrackingPose.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose.Invoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose.EndInvoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSeatedZeroPoseToStandingAbsoluteTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose
#include "Valve/VR/IVRSystem__GetRawZeroPoseToStandingAbsoluteTrackingPose.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose.Invoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose.EndInvoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetRawZeroPoseToStandingAbsoluteTrackingPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass
#include "Valve/VR/IVRSystem__GetSortedTrackedDeviceIndicesOfClass.hpp"
// Including type: Valve.VR.ETrackedDeviceClass
#include "Valve/VR/ETrackedDeviceClass.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass.Invoke
uint Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::Invoke(::Valve::VR::ETrackedDeviceClass eTrackedDeviceClass, ByRef<::ArrayW<uint>> punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, eTrackedDeviceClass, byref(punTrackedDeviceIndexArray), unTrackedDeviceIndexArrayCount, unRelativeToTrackedDeviceIndex);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::BeginInvoke(::Valve::VR::ETrackedDeviceClass eTrackedDeviceClass, ByRef<::ArrayW<uint>> punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eTrackedDeviceClass, byref(punTrackedDeviceIndexArray), unTrackedDeviceIndexArrayCount, unRelativeToTrackedDeviceIndex, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass.EndInvoke
uint Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetSortedTrackedDeviceIndicesOfClass*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetTrackedDeviceActivityLevel
#include "Valve/VR/IVRSystem__GetTrackedDeviceActivityLevel.hpp"
// Including type: Valve.VR.EDeviceActivityLevel
#include "Valve/VR/EDeviceActivityLevel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceActivityLevel.Invoke
::Valve::VR::EDeviceActivityLevel Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::Invoke(uint unDeviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::EDeviceActivityLevel, false>(this, ___internal__method, unDeviceId);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceActivityLevel.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::BeginInvoke(uint unDeviceId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceId, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceActivityLevel.EndInvoke
::Valve::VR::EDeviceActivityLevel Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceActivityLevel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::EDeviceActivityLevel, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_ApplyTransform
#include "Valve/VR/IVRSystem__ApplyTransform.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_ApplyTransform.Invoke
void Valve::VR::IVRSystem::_ApplyTransform::Invoke(ByRef<::Valve::VR::TrackedDevicePose_t> pOutputPose, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ByRef<::Valve::VR::HmdMatrix34_t> pTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ApplyTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ApplyTransform*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputPose), byref(pTrackedDevicePose), byref(pTransform));
}
// Autogenerated method: Valve.VR.IVRSystem/_ApplyTransform.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_ApplyTransform::BeginInvoke(ByRef<::Valve::VR::TrackedDevicePose_t> pOutputPose, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ByRef<::Valve::VR::HmdMatrix34_t> pTransform, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ApplyTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ApplyTransform*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pOutputPose), byref(pTrackedDevicePose), byref(pTransform), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_ApplyTransform.EndInvoke
void Valve::VR::IVRSystem::_ApplyTransform::EndInvoke(ByRef<::Valve::VR::TrackedDevicePose_t> pOutputPose, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ByRef<::Valve::VR::HmdMatrix34_t> pTransform, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ApplyTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ApplyTransform*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputPose), byref(pTrackedDevicePose), byref(pTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetTrackedDeviceIndexForControllerRole
#include "Valve/VR/IVRSystem__GetTrackedDeviceIndexForControllerRole.hpp"
// Including type: Valve.VR.ETrackedControllerRole
#include "Valve/VR/ETrackedControllerRole.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceIndexForControllerRole.Invoke
uint Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::Invoke(::Valve::VR::ETrackedControllerRole unDeviceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceType);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceIndexForControllerRole.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::BeginInvoke(::Valve::VR::ETrackedControllerRole unDeviceType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceType, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceIndexForControllerRole.EndInvoke
uint Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceIndexForControllerRole*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex
#include "Valve/VR/IVRSystem__GetControllerRoleForTrackedDeviceIndex.hpp"
// Including type: Valve.VR.ETrackedControllerRole
#include "Valve/VR/ETrackedControllerRole.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex.Invoke
::Valve::VR::ETrackedControllerRole Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::Invoke(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::ETrackedControllerRole, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::BeginInvoke(uint unDeviceIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex.EndInvoke
::Valve::VR::ETrackedControllerRole Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerRoleForTrackedDeviceIndex*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::ETrackedControllerRole, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetTrackedDeviceClass
#include "Valve/VR/IVRSystem__GetTrackedDeviceClass.hpp"
// Including type: Valve.VR.ETrackedDeviceClass
#include "Valve/VR/ETrackedDeviceClass.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceClass.Invoke
::Valve::VR::ETrackedDeviceClass Valve::VR::IVRSystem::_GetTrackedDeviceClass::Invoke(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceClass::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceClass*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::ETrackedDeviceClass, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceClass.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetTrackedDeviceClass::BeginInvoke(uint unDeviceIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceClass::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceClass*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetTrackedDeviceClass.EndInvoke
::Valve::VR::ETrackedDeviceClass Valve::VR::IVRSystem::_GetTrackedDeviceClass::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetTrackedDeviceClass::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetTrackedDeviceClass*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::ETrackedDeviceClass, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_IsTrackedDeviceConnected
#include "Valve/VR/IVRSystem__IsTrackedDeviceConnected.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_IsTrackedDeviceConnected.Invoke
bool Valve::VR::IVRSystem::_IsTrackedDeviceConnected::Invoke(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsTrackedDeviceConnected::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsTrackedDeviceConnected*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsTrackedDeviceConnected.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_IsTrackedDeviceConnected::BeginInvoke(uint unDeviceIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsTrackedDeviceConnected::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsTrackedDeviceConnected*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsTrackedDeviceConnected.EndInvoke
bool Valve::VR::IVRSystem::_IsTrackedDeviceConnected::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsTrackedDeviceConnected::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsTrackedDeviceConnected*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetBoolTrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetBoolTrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetBoolTrackedDeviceProperty.Invoke
bool Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetBoolTrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetBoolTrackedDeviceProperty.EndInvoke
bool Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetBoolTrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetFloatTrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetFloatTrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetFloatTrackedDeviceProperty.Invoke
float Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetFloatTrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetFloatTrackedDeviceProperty.EndInvoke
float Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetFloatTrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetInt32TrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetInt32TrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetInt32TrackedDeviceProperty.Invoke
int Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetInt32TrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetInt32TrackedDeviceProperty.EndInvoke
int Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetInt32TrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetUint64TrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetUint64TrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetUint64TrackedDeviceProperty.Invoke
uint64_t Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetUint64TrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetUint64TrackedDeviceProperty.EndInvoke
uint64_t Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetUint64TrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetMatrix34TrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetMatrix34TrackedDeviceProperty.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetMatrix34TrackedDeviceProperty.Invoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetMatrix34TrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetMatrix34TrackedDeviceProperty.EndInvoke
::Valve::VR::HmdMatrix34_t Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetMatrix34TrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetArrayTrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetArrayTrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetArrayTrackedDeviceProperty.Invoke
uint Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, uint propType, ::System::IntPtr pBuffer, uint unBufferSize, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, propType, pBuffer, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetArrayTrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, uint propType, ::System::IntPtr pBuffer, uint unBufferSize, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, propType, pBuffer, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetArrayTrackedDeviceProperty.EndInvoke
uint Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetArrayTrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetStringTrackedDeviceProperty
#include "Valve/VR/IVRSystem__GetStringTrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetStringTrackedDeviceProperty.Invoke
uint Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::Invoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetStringTrackedDeviceProperty.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::BeginInvoke(uint unDeviceIndex, ::Valve::VR::ETrackedDeviceProperty prop, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, prop, pchValue, unBufferSize, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetStringTrackedDeviceProperty.EndInvoke
uint Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::EndInvoke(ByRef<::Valve::VR::ETrackedPropertyError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetStringTrackedDeviceProperty*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetPropErrorNameFromEnum
#include "Valve/VR/IVRSystem__GetPropErrorNameFromEnum.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetPropErrorNameFromEnum.Invoke
::System::IntPtr Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::Invoke(::Valve::VR::ETrackedPropertyError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetPropErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::BeginInvoke(::Valve::VR::ETrackedPropertyError error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetPropErrorNameFromEnum.EndInvoke
::System::IntPtr Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetPropErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_PollNextEvent
#include "Valve/VR/IVRSystem__PollNextEvent.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.Invoke
bool Valve::VR::IVRSystem::_PollNextEvent::Invoke(ByRef<::Valve::VR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEvent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_PollNextEvent::BeginInvoke(ByRef<::Valve::VR::VREvent_t> pEvent, uint uncbVREvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEvent.EndInvoke
bool Valve::VR::IVRSystem::_PollNextEvent::EndInvoke(ByRef<::Valve::VR::VREvent_t> pEvent, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_PollNextEventWithPose
#include "Valve/VR/IVRSystem__PollNextEventWithPose.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEventWithPose.Invoke
bool Valve::VR::IVRSystem::_PollNextEventWithPose::Invoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, ByRef<::Valve::VR::VREvent_t> pEvent, uint uncbVREvent, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEventWithPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEventWithPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, byref(pEvent), uncbVREvent, byref(pTrackedDevicePose));
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEventWithPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_PollNextEventWithPose::BeginInvoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, ByRef<::Valve::VR::VREvent_t> pEvent, uint uncbVREvent, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEventWithPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEventWithPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eOrigin, byref(pEvent), uncbVREvent, byref(pTrackedDevicePose), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_PollNextEventWithPose.EndInvoke
bool Valve::VR::IVRSystem::_PollNextEventWithPose::EndInvoke(ByRef<::Valve::VR::VREvent_t> pEvent, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PollNextEventWithPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PollNextEventWithPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), byref(pTrackedDevicePose), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetEventTypeNameFromEnum
#include "Valve/VR/IVRSystem__GetEventTypeNameFromEnum.hpp"
// Including type: Valve.VR.EVREventType
#include "Valve/VR/EVREventType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetEventTypeNameFromEnum.Invoke
::System::IntPtr Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::Invoke(::Valve::VR::EVREventType eType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, eType);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetEventTypeNameFromEnum.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::BeginInvoke(::Valve::VR::EVREventType eType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eType, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetEventTypeNameFromEnum.EndInvoke
::System::IntPtr Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetEventTypeNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetHiddenAreaMesh
#include "Valve/VR/IVRSystem__GetHiddenAreaMesh.hpp"
// Including type: Valve.VR.HiddenAreaMesh_t
#include "Valve/VR/HiddenAreaMesh_t.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: Valve.VR.EHiddenAreaMeshType
#include "Valve/VR/EHiddenAreaMeshType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetHiddenAreaMesh.Invoke
::Valve::VR::HiddenAreaMesh_t Valve::VR::IVRSystem::_GetHiddenAreaMesh::Invoke(::Valve::VR::EVREye eEye, ::Valve::VR::EHiddenAreaMeshType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetHiddenAreaMesh::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetHiddenAreaMesh*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HiddenAreaMesh_t, false>(this, ___internal__method, eEye, type);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetHiddenAreaMesh.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetHiddenAreaMesh::BeginInvoke(::Valve::VR::EVREye eEye, ::Valve::VR::EHiddenAreaMeshType type, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetHiddenAreaMesh::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetHiddenAreaMesh*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, type, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetHiddenAreaMesh.EndInvoke
::Valve::VR::HiddenAreaMesh_t Valve::VR::IVRSystem::_GetHiddenAreaMesh::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetHiddenAreaMesh::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetHiddenAreaMesh*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::HiddenAreaMesh_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetControllerState
#include "Valve/VR/IVRSystem__GetControllerState.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerState.Invoke
bool Valve::VR::IVRSystem::_GetControllerState::Invoke(uint unControllerDeviceIndex, ByRef<::Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerState*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerState.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetControllerState::BeginInvoke(uint unControllerDeviceIndex, ByRef<::Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerState.EndInvoke
bool Valve::VR::IVRSystem::_GetControllerState::EndInvoke(ByRef<::Valve::VR::VRControllerState_t> pControllerState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetControllerStateWithPose
#include "Valve/VR/IVRSystem__GetControllerStateWithPose.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerStateWithPose.Invoke
bool Valve::VR::IVRSystem::_GetControllerStateWithPose::Invoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<::Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerStateWithPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerStateWithPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose));
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerStateWithPose.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetControllerStateWithPose::BeginInvoke(::Valve::VR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<::Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerStateWithPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerStateWithPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose), callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerStateWithPose.EndInvoke
bool Valve::VR::IVRSystem::_GetControllerStateWithPose::EndInvoke(ByRef<::Valve::VR::VRControllerState_t> pControllerState, ByRef<::Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerStateWithPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerStateWithPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pTrackedDevicePose), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_TriggerHapticPulse
#include "Valve/VR/IVRSystem__TriggerHapticPulse.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_TriggerHapticPulse.Invoke
void Valve::VR::IVRSystem::_TriggerHapticPulse::Invoke(uint unControllerDeviceIndex, uint unAxisId, uint16_t usDurationMicroSec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_TriggerHapticPulse::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_TriggerHapticPulse*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unControllerDeviceIndex, unAxisId, usDurationMicroSec);
}
// Autogenerated method: Valve.VR.IVRSystem/_TriggerHapticPulse.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_TriggerHapticPulse::BeginInvoke(uint unControllerDeviceIndex, uint unAxisId, uint16_t usDurationMicroSec, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_TriggerHapticPulse::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_TriggerHapticPulse*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unControllerDeviceIndex, unAxisId, usDurationMicroSec, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_TriggerHapticPulse.EndInvoke
void Valve::VR::IVRSystem::_TriggerHapticPulse::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_TriggerHapticPulse::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_TriggerHapticPulse*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetButtonIdNameFromEnum
#include "Valve/VR/IVRSystem__GetButtonIdNameFromEnum.hpp"
// Including type: Valve.VR.EVRButtonId
#include "Valve/VR/EVRButtonId.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetButtonIdNameFromEnum.Invoke
::System::IntPtr Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::Invoke(::Valve::VR::EVRButtonId eButtonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, eButtonId);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetButtonIdNameFromEnum.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::BeginInvoke(::Valve::VR::EVRButtonId eButtonId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eButtonId, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetButtonIdNameFromEnum.EndInvoke
::System::IntPtr Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetButtonIdNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_GetControllerAxisTypeNameFromEnum
#include "Valve/VR/IVRSystem__GetControllerAxisTypeNameFromEnum.hpp"
// Including type: Valve.VR.EVRControllerAxisType
#include "Valve/VR/EVRControllerAxisType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerAxisTypeNameFromEnum.Invoke
::System::IntPtr Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::Invoke(::Valve::VR::EVRControllerAxisType eAxisType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, eAxisType);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerAxisTypeNameFromEnum.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::BeginInvoke(::Valve::VR::EVRControllerAxisType eAxisType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eAxisType, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_GetControllerAxisTypeNameFromEnum.EndInvoke
::System::IntPtr Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_GetControllerAxisTypeNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_IsInputAvailable
#include "Valve/VR/IVRSystem__IsInputAvailable.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_IsInputAvailable.Invoke
bool Valve::VR::IVRSystem::_IsInputAvailable::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsInputAvailable::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsInputAvailable*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsInputAvailable.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_IsInputAvailable::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsInputAvailable::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsInputAvailable*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsInputAvailable.EndInvoke
bool Valve::VR::IVRSystem::_IsInputAvailable::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsInputAvailable::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsInputAvailable*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_IsSteamVRDrawingControllers
#include "Valve/VR/IVRSystem__IsSteamVRDrawingControllers.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_IsSteamVRDrawingControllers.Invoke
bool Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsSteamVRDrawingControllers.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_IsSteamVRDrawingControllers.EndInvoke
bool Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_IsSteamVRDrawingControllers*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_ShouldApplicationPause
#include "Valve/VR/IVRSystem__ShouldApplicationPause.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationPause.Invoke
bool Valve::VR::IVRSystem::_ShouldApplicationPause::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationPause::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationPause*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationPause.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_ShouldApplicationPause::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationPause::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationPause*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationPause.EndInvoke
bool Valve::VR::IVRSystem::_ShouldApplicationPause::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationPause::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationPause*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_ShouldApplicationReduceRenderingWork
#include "Valve/VR/IVRSystem__ShouldApplicationReduceRenderingWork.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationReduceRenderingWork.Invoke
bool Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationReduceRenderingWork.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_ShouldApplicationReduceRenderingWork.EndInvoke
bool Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_ShouldApplicationReduceRenderingWork*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_DriverDebugRequest
#include "Valve/VR/IVRSystem__DriverDebugRequest.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_DriverDebugRequest.Invoke
uint Valve::VR::IVRSystem::_DriverDebugRequest::Invoke(uint unDeviceIndex, ::StringW pchRequest, ::System::Text::StringBuilder* pchResponseBuffer, uint unResponseBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_DriverDebugRequest::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_DriverDebugRequest*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize);
}
// Autogenerated method: Valve.VR.IVRSystem/_DriverDebugRequest.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_DriverDebugRequest::BeginInvoke(uint unDeviceIndex, ::StringW pchRequest, ::System::Text::StringBuilder* pchResponseBuffer, uint unResponseBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_DriverDebugRequest::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_DriverDebugRequest*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_DriverDebugRequest.EndInvoke
uint Valve::VR::IVRSystem::_DriverDebugRequest::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_DriverDebugRequest::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_DriverDebugRequest*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_PerformFirmwareUpdate
#include "Valve/VR/IVRSystem__PerformFirmwareUpdate.hpp"
// Including type: Valve.VR.EVRFirmwareError
#include "Valve/VR/EVRFirmwareError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_PerformFirmwareUpdate.Invoke
::Valve::VR::EVRFirmwareError Valve::VR::IVRSystem::_PerformFirmwareUpdate::Invoke(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PerformFirmwareUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PerformFirmwareUpdate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::EVRFirmwareError, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.IVRSystem/_PerformFirmwareUpdate.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_PerformFirmwareUpdate::BeginInvoke(uint unDeviceIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PerformFirmwareUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PerformFirmwareUpdate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_PerformFirmwareUpdate.EndInvoke
::Valve::VR::EVRFirmwareError Valve::VR::IVRSystem::_PerformFirmwareUpdate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_PerformFirmwareUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_PerformFirmwareUpdate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::EVRFirmwareError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_AcknowledgeQuit_Exiting
#include "Valve/VR/IVRSystem__AcknowledgeQuit_Exiting.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_Exiting.Invoke
void Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_Exiting.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_Exiting.EndInvoke
void Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_Exiting*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSystem/_AcknowledgeQuit_UserPrompt
#include "Valve/VR/IVRSystem__AcknowledgeQuit_UserPrompt.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_UserPrompt.Invoke
void Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_UserPrompt.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRSystem/_AcknowledgeQuit_UserPrompt.EndInvoke
void Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRSystem::_AcknowledgeQuit_UserPrompt*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRExtendedDisplay/_GetWindowBounds
#include "Valve/VR/IVRExtendedDisplay__GetWindowBounds.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetWindowBounds.Invoke
void Valve::VR::IVRExtendedDisplay::_GetWindowBounds::Invoke(ByRef<int> pnX, ByRef<int> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetWindowBounds::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetWindowBounds*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetWindowBounds.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRExtendedDisplay::_GetWindowBounds::BeginInvoke(ByRef<int> pnX, ByRef<int> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetWindowBounds::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetWindowBounds*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight), callback, object);
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetWindowBounds.EndInvoke
void Valve::VR::IVRExtendedDisplay::_GetWindowBounds::EndInvoke(ByRef<int> pnX, ByRef<int> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetWindowBounds::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetWindowBounds*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRExtendedDisplay/_GetEyeOutputViewport
#include "Valve/VR/IVRExtendedDisplay__GetEyeOutputViewport.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetEyeOutputViewport.Invoke
void Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::Invoke(::Valve::VR::EVREye eEye, ByRef<uint> pnX, ByRef<uint> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetEyeOutputViewport.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::BeginInvoke(::Valve::VR::EVREye eEye, ByRef<uint> pnX, ByRef<uint> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eEye, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight), callback, object);
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetEyeOutputViewport.EndInvoke
void Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::EndInvoke(ByRef<uint> pnX, ByRef<uint> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetEyeOutputViewport*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRExtendedDisplay/_GetDXGIOutputInfo
#include "Valve/VR/IVRExtendedDisplay__GetDXGIOutputInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetDXGIOutputInfo.Invoke
void Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::Invoke(ByRef<int> pnAdapterIndex, ByRef<int> pnAdapterOutputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex), byref(pnAdapterOutputIndex));
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetDXGIOutputInfo.BeginInvoke
::System::IAsyncResult* Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::BeginInvoke(ByRef<int> pnAdapterIndex, ByRef<int> pnAdapterOutputIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pnAdapterIndex), byref(pnAdapterOutputIndex), callback, object);
}
// Autogenerated method: Valve.VR.IVRExtendedDisplay/_GetDXGIOutputInfo.EndInvoke
void Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::EndInvoke(ByRef<int> pnAdapterIndex, ByRef<int> pnAdapterOutputIndex, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Valve::VR::IVRExtendedDisplay::_GetDXGIOutputInfo*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex), byref(pnAdapterOutputIndex), result);
}
