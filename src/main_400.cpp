// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PROCESS_OPERATION
#include "FMOD/DSP_PROCESS_OPERATION.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PROCESS_OPERATION PROCESS_PERFORM
::FMOD::DSP_PROCESS_OPERATION FMOD::DSP_PROCESS_OPERATION::_get_PROCESS_PERFORM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_OPERATION::_get_PROCESS_PERFORM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PROCESS_OPERATION>("FMOD", "DSP_PROCESS_OPERATION", "PROCESS_PERFORM"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PROCESS_OPERATION PROCESS_PERFORM
void FMOD::DSP_PROCESS_OPERATION::_set_PROCESS_PERFORM(::FMOD::DSP_PROCESS_OPERATION value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_OPERATION::_set_PROCESS_PERFORM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PROCESS_OPERATION", "PROCESS_PERFORM", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PROCESS_OPERATION PROCESS_QUERY
::FMOD::DSP_PROCESS_OPERATION FMOD::DSP_PROCESS_OPERATION::_get_PROCESS_QUERY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_OPERATION::_get_PROCESS_QUERY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PROCESS_OPERATION>("FMOD", "DSP_PROCESS_OPERATION", "PROCESS_QUERY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PROCESS_OPERATION PROCESS_QUERY
void FMOD::DSP_PROCESS_OPERATION::_set_PROCESS_QUERY(::FMOD::DSP_PROCESS_OPERATION value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_OPERATION::_set_PROCESS_QUERY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PROCESS_OPERATION", "PROCESS_QUERY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PROCESS_OPERATION::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_OPERATION::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN_SURROUND_FLAGS
#include "FMOD/DSP_PAN_SURROUND_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_SURROUND_FLAGS DEFAULT
::FMOD::DSP_PAN_SURROUND_FLAGS FMOD::DSP_PAN_SURROUND_FLAGS::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SURROUND_FLAGS::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_SURROUND_FLAGS>("FMOD", "DSP_PAN_SURROUND_FLAGS", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_SURROUND_FLAGS DEFAULT
void FMOD::DSP_PAN_SURROUND_FLAGS::_set_DEFAULT(::FMOD::DSP_PAN_SURROUND_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SURROUND_FLAGS::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_SURROUND_FLAGS", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_SURROUND_FLAGS ROTATION_NOT_BIASED
::FMOD::DSP_PAN_SURROUND_FLAGS FMOD::DSP_PAN_SURROUND_FLAGS::_get_ROTATION_NOT_BIASED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SURROUND_FLAGS::_get_ROTATION_NOT_BIASED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_SURROUND_FLAGS>("FMOD", "DSP_PAN_SURROUND_FLAGS", "ROTATION_NOT_BIASED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_SURROUND_FLAGS ROTATION_NOT_BIASED
void FMOD::DSP_PAN_SURROUND_FLAGS::_set_ROTATION_NOT_BIASED(::FMOD::DSP_PAN_SURROUND_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SURROUND_FLAGS::_set_ROTATION_NOT_BIASED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_SURROUND_FLAGS", "ROTATION_NOT_BIASED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN_SURROUND_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SURROUND_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_CREATECALLBACK
#include "FMOD/DSP_CREATECALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_CREATECALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_CREATECALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CREATECALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_CREATECALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state));
}
// Autogenerated method: FMOD.DSP_CREATECALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_CREATECALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CREATECALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_CREATECALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), callback, object);
}
// Autogenerated method: FMOD.DSP_CREATECALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_CREATECALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CREATECALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_CREATECALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_RELEASECALLBACK
#include "FMOD/DSP_RELEASECALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_RELEASECALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_RELEASECALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RELEASECALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RELEASECALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state));
}
// Autogenerated method: FMOD.DSP_RELEASECALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_RELEASECALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RELEASECALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RELEASECALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), callback, object);
}
// Autogenerated method: FMOD.DSP_RELEASECALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_RELEASECALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RELEASECALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RELEASECALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_RESETCALLBACK
#include "FMOD/DSP_RESETCALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_RESETCALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_RESETCALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RESETCALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RESETCALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state));
}
// Autogenerated method: FMOD.DSP_RESETCALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_RESETCALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RESETCALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RESETCALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), callback, object);
}
// Autogenerated method: FMOD.DSP_RESETCALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_RESETCALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RESETCALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_RESETCALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SETPOSITIONCALLBACK
#include "FMOD/DSP_SETPOSITIONCALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SETPOSITIONCALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SETPOSITIONCALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, uint pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPOSITIONCALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPOSITIONCALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), pos);
}
// Autogenerated method: FMOD.DSP_SETPOSITIONCALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SETPOSITIONCALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, uint pos, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPOSITIONCALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPOSITIONCALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), pos, callback, object);
}
// Autogenerated method: FMOD.DSP_SETPOSITIONCALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SETPOSITIONCALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPOSITIONCALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPOSITIONCALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_READCALLBACK
#include "FMOD/DSP_READCALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_READCALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_READCALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IntPtr inbuffer, ::System::IntPtr outbuffer, uint length, int inchannels, ByRef<int> outchannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_READCALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_READCALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), inbuffer, outbuffer, length, inchannels, byref(outchannels));
}
// Autogenerated method: FMOD.DSP_READCALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_READCALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IntPtr inbuffer, ::System::IntPtr outbuffer, uint length, int inchannels, ByRef<int> outchannels, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_READCALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_READCALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), inbuffer, outbuffer, length, inchannels, byref(outchannels), callback, object);
}
// Autogenerated method: FMOD.DSP_READCALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_READCALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> outchannels, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_READCALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_READCALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(outchannels), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SHOULDIPROCESS_CALLBACK
#include "FMOD/DSP_SHOULDIPROCESS_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: FMOD.CHANNELMASK
#include "FMOD/CHANNELMASK.hpp"
// Including type: FMOD.SPEAKERMODE
#include "FMOD/SPEAKERMODE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SHOULDIPROCESS_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SHOULDIPROCESS_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, bool inputsidle, uint length, ::FMOD::CHANNELMASK inmask, int inchannels, ::FMOD::SPEAKERMODE speakermode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SHOULDIPROCESS_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SHOULDIPROCESS_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), inputsidle, length, inmask, inchannels, speakermode);
}
// Autogenerated method: FMOD.DSP_SHOULDIPROCESS_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SHOULDIPROCESS_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, bool inputsidle, uint length, ::FMOD::CHANNELMASK inmask, int inchannels, ::FMOD::SPEAKERMODE speakermode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SHOULDIPROCESS_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SHOULDIPROCESS_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), inputsidle, length, inmask, inchannels, speakermode, callback, object);
}
// Autogenerated method: FMOD.DSP_SHOULDIPROCESS_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SHOULDIPROCESS_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SHOULDIPROCESS_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SHOULDIPROCESS_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PROCESS_CALLBACK
#include "FMOD/DSP_PROCESS_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: FMOD.DSP_BUFFER_ARRAY
#include "FMOD/DSP_BUFFER_ARRAY.hpp"
// Including type: FMOD.DSP_PROCESS_OPERATION
#include "FMOD/DSP_PROCESS_OPERATION.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PROCESS_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_PROCESS_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, uint length, ByRef<::FMOD::DSP_BUFFER_ARRAY> inbufferarray, ByRef<::FMOD::DSP_BUFFER_ARRAY> outbufferarray, bool inputsidle, ::FMOD::DSP_PROCESS_OPERATION op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PROCESS_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), length, byref(inbufferarray), byref(outbufferarray), inputsidle, op);
}
// Autogenerated method: FMOD.DSP_PROCESS_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PROCESS_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, uint length, ByRef<::FMOD::DSP_BUFFER_ARRAY> inbufferarray, ByRef<::FMOD::DSP_BUFFER_ARRAY> outbufferarray, bool inputsidle, ::FMOD::DSP_PROCESS_OPERATION op, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PROCESS_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), length, byref(inbufferarray), byref(outbufferarray), inputsidle, op, callback, object);
}
// Autogenerated method: FMOD.DSP_PROCESS_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_PROCESS_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<::FMOD::DSP_BUFFER_ARRAY> inbufferarray, ByRef<::FMOD::DSP_BUFFER_ARRAY> outbufferarray, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PROCESS_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PROCESS_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(inbufferarray), byref(outbufferarray), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SETPARAM_FLOAT_CALLBACK
#include "FMOD/DSP_SETPARAM_FLOAT_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SETPARAM_FLOAT_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SETPARAM_FLOAT_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_FLOAT_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_FLOAT_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, value);
}
// Autogenerated method: FMOD.DSP_SETPARAM_FLOAT_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SETPARAM_FLOAT_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, float value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_FLOAT_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_FLOAT_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, value, callback, object);
}
// Autogenerated method: FMOD.DSP_SETPARAM_FLOAT_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SETPARAM_FLOAT_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_FLOAT_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_FLOAT_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SETPARAM_INT_CALLBACK
#include "FMOD/DSP_SETPARAM_INT_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SETPARAM_INT_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SETPARAM_INT_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_INT_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_INT_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, value);
}
// Autogenerated method: FMOD.DSP_SETPARAM_INT_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SETPARAM_INT_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, int value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_INT_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_INT_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, value, callback, object);
}
// Autogenerated method: FMOD.DSP_SETPARAM_INT_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SETPARAM_INT_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_INT_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_INT_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SETPARAM_BOOL_CALLBACK
#include "FMOD/DSP_SETPARAM_BOOL_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SETPARAM_BOOL_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SETPARAM_BOOL_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_BOOL_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_BOOL_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, value);
}
// Autogenerated method: FMOD.DSP_SETPARAM_BOOL_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SETPARAM_BOOL_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, bool value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_BOOL_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_BOOL_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, value, callback, object);
}
// Autogenerated method: FMOD.DSP_SETPARAM_BOOL_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SETPARAM_BOOL_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_BOOL_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_BOOL_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SETPARAM_DATA_CALLBACK
#include "FMOD/DSP_SETPARAM_DATA_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SETPARAM_DATA_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SETPARAM_DATA_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ::System::IntPtr data, uint length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_DATA_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_DATA_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, data, length);
}
// Autogenerated method: FMOD.DSP_SETPARAM_DATA_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SETPARAM_DATA_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ::System::IntPtr data, uint length, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_DATA_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_DATA_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, data, length, callback, object);
}
// Autogenerated method: FMOD.DSP_SETPARAM_DATA_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SETPARAM_DATA_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SETPARAM_DATA_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SETPARAM_DATA_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETPARAM_FLOAT_CALLBACK
#include "FMOD/DSP_GETPARAM_FLOAT_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETPARAM_FLOAT_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_GETPARAM_FLOAT_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<float> value, ::System::IntPtr valuestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_FLOAT_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_FLOAT_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr);
}
// Autogenerated method: FMOD.DSP_GETPARAM_FLOAT_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETPARAM_FLOAT_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<float> value, ::System::IntPtr valuestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_FLOAT_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_FLOAT_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr, callback, object);
}
// Autogenerated method: FMOD.DSP_GETPARAM_FLOAT_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_GETPARAM_FLOAT_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<float> value, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_FLOAT_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_FLOAT_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(value), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETPARAM_INT_CALLBACK
#include "FMOD/DSP_GETPARAM_INT_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETPARAM_INT_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_GETPARAM_INT_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<int> value, ::System::IntPtr valuestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_INT_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_INT_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr);
}
// Autogenerated method: FMOD.DSP_GETPARAM_INT_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETPARAM_INT_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<int> value, ::System::IntPtr valuestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_INT_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_INT_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr, callback, object);
}
// Autogenerated method: FMOD.DSP_GETPARAM_INT_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_GETPARAM_INT_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> value, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_INT_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_INT_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(value), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETPARAM_BOOL_CALLBACK
#include "FMOD/DSP_GETPARAM_BOOL_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETPARAM_BOOL_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_GETPARAM_BOOL_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<bool> value, ::System::IntPtr valuestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_BOOL_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_BOOL_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr);
}
// Autogenerated method: FMOD.DSP_GETPARAM_BOOL_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETPARAM_BOOL_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<bool> value, ::System::IntPtr valuestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_BOOL_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_BOOL_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, byref(value), valuestr, callback, object);
}
// Autogenerated method: FMOD.DSP_GETPARAM_BOOL_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_GETPARAM_BOOL_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<bool> value, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_BOOL_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_BOOL_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(value), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETPARAM_DATA_CALLBACK
#include "FMOD/DSP_GETPARAM_DATA_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETPARAM_DATA_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_GETPARAM_DATA_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<::System::IntPtr> data, ByRef<uint> length, ::System::IntPtr valuestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_DATA_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_DATA_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), index, byref(data), byref(length), valuestr);
}
// Autogenerated method: FMOD.DSP_GETPARAM_DATA_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETPARAM_DATA_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int index, ByRef<::System::IntPtr> data, ByRef<uint> length, ::System::IntPtr valuestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_DATA_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_DATA_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), index, byref(data), byref(length), valuestr, callback, object);
}
// Autogenerated method: FMOD.DSP_GETPARAM_DATA_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_GETPARAM_DATA_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<::System::IntPtr> data, ByRef<uint> length, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETPARAM_DATA_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETPARAM_DATA_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(data), byref(length), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SYSTEM_REGISTER_CALLBACK
#include "FMOD/DSP_SYSTEM_REGISTER_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SYSTEM_REGISTER_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SYSTEM_REGISTER_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_REGISTER_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_REGISTER_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state));
}
// Autogenerated method: FMOD.DSP_SYSTEM_REGISTER_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SYSTEM_REGISTER_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_REGISTER_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_REGISTER_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), callback, object);
}
// Autogenerated method: FMOD.DSP_SYSTEM_REGISTER_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SYSTEM_REGISTER_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_REGISTER_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_REGISTER_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK
#include "FMOD/DSP_SYSTEM_DEREGISTER_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state));
}
// Autogenerated method: FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), callback, object);
}
// Autogenerated method: FMOD.DSP_SYSTEM_DEREGISTER_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_DEREGISTER_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_SYSTEM_MIX_CALLBACK
#include "FMOD/DSP_SYSTEM_MIX_CALLBACK.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_SYSTEM_MIX_CALLBACK.Invoke
::FMOD::RESULT FMOD::DSP_SYSTEM_MIX_CALLBACK::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_MIX_CALLBACK::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_MIX_CALLBACK*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), stage);
}
// Autogenerated method: FMOD.DSP_SYSTEM_MIX_CALLBACK.BeginInvoke
::System::IAsyncResult* FMOD::DSP_SYSTEM_MIX_CALLBACK::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int stage, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_MIX_CALLBACK::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_MIX_CALLBACK*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), stage, callback, object);
}
// Autogenerated method: FMOD.DSP_SYSTEM_MIX_CALLBACK.EndInvoke
::FMOD::RESULT FMOD::DSP_SYSTEM_MIX_CALLBACK::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SYSTEM_MIX_CALLBACK::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_SYSTEM_MIX_CALLBACK*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_ALLOC_FUNC
#include "FMOD/DSP_ALLOC_FUNC.hpp"
// Including type: FMOD.MEMORY_TYPE
#include "FMOD/MEMORY_TYPE.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_ALLOC_FUNC.Invoke
::System::IntPtr FMOD::DSP_ALLOC_FUNC::Invoke(uint size, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ALLOC_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_ALLOC_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, size, type, sourcestr);
}
// Autogenerated method: FMOD.DSP_ALLOC_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_ALLOC_FUNC::BeginInvoke(uint size, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ALLOC_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_ALLOC_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, size, type, sourcestr, callback, object);
}
// Autogenerated method: FMOD.DSP_ALLOC_FUNC.EndInvoke
::System::IntPtr FMOD::DSP_ALLOC_FUNC::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ALLOC_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_ALLOC_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_REALLOC_FUNC
#include "FMOD/DSP_REALLOC_FUNC.hpp"
// Including type: FMOD.MEMORY_TYPE
#include "FMOD/MEMORY_TYPE.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_REALLOC_FUNC.Invoke
::System::IntPtr FMOD::DSP_REALLOC_FUNC::Invoke(::System::IntPtr ptr, uint size, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_REALLOC_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_REALLOC_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ptr, size, type, sourcestr);
}
// Autogenerated method: FMOD.DSP_REALLOC_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_REALLOC_FUNC::BeginInvoke(::System::IntPtr ptr, uint size, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_REALLOC_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_REALLOC_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ptr, size, type, sourcestr, callback, object);
}
// Autogenerated method: FMOD.DSP_REALLOC_FUNC.EndInvoke
::System::IntPtr FMOD::DSP_REALLOC_FUNC::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_REALLOC_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_REALLOC_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_FREE_FUNC
#include "FMOD/DSP_FREE_FUNC.hpp"
// Including type: FMOD.MEMORY_TYPE
#include "FMOD/MEMORY_TYPE.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_FREE_FUNC.Invoke
void FMOD::DSP_FREE_FUNC::Invoke(::System::IntPtr ptr, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FREE_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_FREE_FUNC*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr, type, sourcestr);
}
// Autogenerated method: FMOD.DSP_FREE_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_FREE_FUNC::BeginInvoke(::System::IntPtr ptr, ::FMOD::MEMORY_TYPE type, ::FMOD::StringWrapper sourcestr, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FREE_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_FREE_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ptr, type, sourcestr, callback, object);
}
// Autogenerated method: FMOD.DSP_FREE_FUNC.EndInvoke
void FMOD::DSP_FREE_FUNC::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FREE_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_FREE_FUNC*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_LOG_FUNC
#include "FMOD/DSP_LOG_FUNC.hpp"
// Including type: FMOD.DEBUG_FLAGS
#include "FMOD/DEBUG_FLAGS.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_LOG_FUNC.Invoke
void FMOD::DSP_LOG_FUNC::Invoke(::FMOD::DEBUG_FLAGS level, ::FMOD::StringWrapper file, int line, ::FMOD::StringWrapper function, ::FMOD::StringWrapper format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOG_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_LOG_FUNC*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, file, line, function, format);
}
// Autogenerated method: FMOD.DSP_LOG_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_LOG_FUNC::BeginInvoke(::FMOD::DEBUG_FLAGS level, ::FMOD::StringWrapper file, int line, ::FMOD::StringWrapper function, ::FMOD::StringWrapper format, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOG_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_LOG_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, level, file, line, function, format, callback, object);
}
// Autogenerated method: FMOD.DSP_LOG_FUNC.EndInvoke
void FMOD::DSP_LOG_FUNC::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOG_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_LOG_FUNC*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETSAMPLERATE_FUNC
#include "FMOD/DSP_GETSAMPLERATE_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETSAMPLERATE_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETSAMPLERATE_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSAMPLERATE_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSAMPLERATE_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(rate));
}
// Autogenerated method: FMOD.DSP_GETSAMPLERATE_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETSAMPLERATE_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> rate, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSAMPLERATE_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSAMPLERATE_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(rate), callback, object);
}
// Autogenerated method: FMOD.DSP_GETSAMPLERATE_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETSAMPLERATE_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> rate, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSAMPLERATE_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSAMPLERATE_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(rate), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETBLOCKSIZE_FUNC
#include "FMOD/DSP_GETBLOCKSIZE_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETBLOCKSIZE_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETBLOCKSIZE_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint> blocksize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETBLOCKSIZE_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETBLOCKSIZE_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(blocksize));
}
// Autogenerated method: FMOD.DSP_GETBLOCKSIZE_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETBLOCKSIZE_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint> blocksize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETBLOCKSIZE_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETBLOCKSIZE_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(blocksize), callback, object);
}
// Autogenerated method: FMOD.DSP_GETBLOCKSIZE_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETBLOCKSIZE_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint> blocksize, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETBLOCKSIZE_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETBLOCKSIZE_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(blocksize), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETSPEAKERMODE_FUNC
#include "FMOD/DSP_GETSPEAKERMODE_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETSPEAKERMODE_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETSPEAKERMODE_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> speakermode_mixer, ByRef<int> speakermode_output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSPEAKERMODE_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSPEAKERMODE_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(speakermode_mixer), byref(speakermode_output));
}
// Autogenerated method: FMOD.DSP_GETSPEAKERMODE_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETSPEAKERMODE_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> speakermode_mixer, ByRef<int> speakermode_output, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSPEAKERMODE_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSPEAKERMODE_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(speakermode_mixer), byref(speakermode_output), callback, object);
}
// Autogenerated method: FMOD.DSP_GETSPEAKERMODE_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETSPEAKERMODE_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> speakermode_mixer, ByRef<int> speakermode_output, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETSPEAKERMODE_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETSPEAKERMODE_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(speakermode_mixer), byref(speakermode_output), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETCLOCK_FUNC
#include "FMOD/DSP_GETCLOCK_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETCLOCK_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETCLOCK_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint64_t> clock, ByRef<uint> offset, ByRef<uint> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETCLOCK_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETCLOCK_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(clock), byref(offset), byref(length));
}
// Autogenerated method: FMOD.DSP_GETCLOCK_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETCLOCK_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint64_t> clock, ByRef<uint> offset, ByRef<uint> length, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETCLOCK_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETCLOCK_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(clock), byref(offset), byref(length), callback, object);
}
// Autogenerated method: FMOD.DSP_GETCLOCK_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETCLOCK_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<uint64_t> clock, ByRef<uint> offset, ByRef<uint> length, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETCLOCK_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETCLOCK_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(clock), byref(offset), byref(length), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETLISTENERATTRIBUTES_FUNC
#include "FMOD/DSP_GETLISTENERATTRIBUTES_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETLISTENERATTRIBUTES_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> numlisteners, ::System::IntPtr attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(numlisteners), attributes);
}
// Autogenerated method: FMOD.DSP_GETLISTENERATTRIBUTES_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> numlisteners, ::System::IntPtr attributes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(numlisteners), attributes, callback, object);
}
// Autogenerated method: FMOD.DSP_GETLISTENERATTRIBUTES_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<int> numlisteners, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETLISTENERATTRIBUTES_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(numlisteners), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_GETUSERDATA_FUNC
#include "FMOD/DSP_GETUSERDATA_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_GETUSERDATA_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_GETUSERDATA_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<::System::IntPtr> userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETUSERDATA_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETUSERDATA_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(userdata));
}
// Autogenerated method: FMOD.DSP_GETUSERDATA_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_GETUSERDATA_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<::System::IntPtr> userdata, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETUSERDATA_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETUSERDATA_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), byref(userdata), callback, object);
}
// Autogenerated method: FMOD.DSP_GETUSERDATA_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_GETUSERDATA_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<::System::IntPtr> userdata, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_GETUSERDATA_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_GETUSERDATA_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(userdata), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_DFT_FFTREAL_FUNC
#include "FMOD/DSP_DFT_FFTREAL_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_DFT_FFTREAL_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_DFT_FFTREAL_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int size, ::System::IntPtr signal, ::System::IntPtr dft, ::System::IntPtr window, int signalhop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_FFTREAL_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_FFTREAL_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), size, signal, dft, window, signalhop);
}
// Autogenerated method: FMOD.DSP_DFT_FFTREAL_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_DFT_FFTREAL_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int size, ::System::IntPtr signal, ::System::IntPtr dft, ::System::IntPtr window, int signalhop, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_FFTREAL_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_FFTREAL_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), size, signal, dft, window, signalhop, callback, object);
}
// Autogenerated method: FMOD.DSP_DFT_FFTREAL_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_DFT_FFTREAL_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_FFTREAL_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_FFTREAL_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_DFT_IFFTREAL_FUNC
#include "FMOD/DSP_DFT_IFFTREAL_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_DFT_IFFTREAL_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_DFT_IFFTREAL_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int size, ::System::IntPtr dft, ::System::IntPtr signal, ::System::IntPtr window, int signalhop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_IFFTREAL_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_IFFTREAL_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), size, dft, signal, window, signalhop);
}
// Autogenerated method: FMOD.DSP_DFT_IFFTREAL_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_DFT_IFFTREAL_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int size, ::System::IntPtr dft, ::System::IntPtr signal, ::System::IntPtr window, int signalhop, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_IFFTREAL_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_IFFTREAL_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), size, dft, signal, window, signalhop, callback, object);
}
// Autogenerated method: FMOD.DSP_DFT_IFFTREAL_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_DFT_IFFTREAL_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DFT_IFFTREAL_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_DFT_IFFTREAL_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_SUMMONOMATRIX_FUNC
#include "FMOD/DSP_PAN_SUMMONOMATRIX_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_SUMMONOMATRIX_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, float lowFrequencyGain, float overallGain, ::System::IntPtr matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, lowFrequencyGain, overallGain, matrix);
}
// Autogenerated method: FMOD.DSP_PAN_SUMMONOMATRIX_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, float lowFrequencyGain, float overallGain, ::System::IntPtr matrix, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, lowFrequencyGain, overallGain, matrix, callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_SUMMONOMATRIX_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOMATRIX_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC
#include "FMOD/DSP_PAN_SUMSTEREOMATRIX_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, float pan, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, pan, lowFrequencyGain, overallGain, matrixHop, matrix);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, float pan, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, pan, lowFrequencyGain, overallGain, matrixHop, matrix, callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOMATRIX_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOMATRIX_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC
#include "FMOD/DSP_PAN_SUMSURROUNDMATRIX_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: FMOD.DSP_PAN_SURROUND_FLAGS
#include "FMOD/DSP_PAN_SURROUND_FLAGS.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, int targetSpeakerMode, float direction, float extent, float rotation, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix, ::FMOD::DSP_PAN_SURROUND_FLAGS flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, targetSpeakerMode, direction, extent, rotation, lowFrequencyGain, overallGain, matrixHop, matrix, flags);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int sourceSpeakerMode, int targetSpeakerMode, float direction, float extent, float rotation, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix, ::FMOD::DSP_PAN_SURROUND_FLAGS flags, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), sourceSpeakerMode, targetSpeakerMode, direction, extent, rotation, lowFrequencyGain, overallGain, matrixHop, matrix, flags, callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSURROUNDMATRIX_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSURROUNDMATRIX_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC
#include "FMOD/DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int targetSpeakerMode, float direction, float extent, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), targetSpeakerMode, direction, extent, lowFrequencyGain, overallGain, matrixHop, matrix);
}
// Autogenerated method: FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int targetSpeakerMode, float direction, float extent, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), targetSpeakerMode, direction, extent, lowFrequencyGain, overallGain, matrixHop, matrix, callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMMONOTOSURROUNDMATRIX_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC
#include "FMOD/DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, int targetSpeakerMode, float direction, float extent, float rotation, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), targetSpeakerMode, direction, extent, rotation, lowFrequencyGain, overallGain, matrixHop, matrix);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, int targetSpeakerMode, float direction, float extent, float rotation, float lowFrequencyGain, float overallGain, int matrixHop, ::System::IntPtr matrix, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), targetSpeakerMode, direction, extent, rotation, lowFrequencyGain, overallGain, matrixHop, matrix, callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_SUMSTEREOTOSURROUNDMATRIX_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC
#include "FMOD/DSP_PAN_GETROLLOFFGAIN_FUNC.hpp"
// Including type: FMOD.RESULT
#include "FMOD/RESULT.hpp"
// Including type: FMOD.DSP_STATE
#include "FMOD/DSP_STATE.hpp"
// Including type: FMOD.DSP_PAN_3D_ROLLOFF_TYPE
#include "FMOD/DSP_PAN_3D_ROLLOFF_TYPE.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC.Invoke
::FMOD::RESULT FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::Invoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::FMOD::DSP_PAN_3D_ROLLOFF_TYPE rolloff, float distance, float mindistance, float maxdistance, ByRef<float> gain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), rolloff, distance, mindistance, maxdistance, byref(gain));
}
// Autogenerated method: FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC.BeginInvoke
::System::IAsyncResult* FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::BeginInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ::FMOD::DSP_PAN_3D_ROLLOFF_TYPE rolloff, float distance, float mindistance, float maxdistance, ByRef<float> gain, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(dsp_state), rolloff, distance, mindistance, maxdistance, byref(gain), callback, object);
}
// Autogenerated method: FMOD.DSP_PAN_GETROLLOFFGAIN_FUNC.EndInvoke
::FMOD::RESULT FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::EndInvoke(ByRef<::FMOD::DSP_STATE> dsp_state, ByRef<float> gain, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::FMOD::DSP_PAN_GETROLLOFFGAIN_FUNC*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::RESULT, false>(this, ___internal__method, byref(dsp_state), byref(gain), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_TYPE
#include "FMOD/DSP_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE UNKNOWN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE UNKNOWN
void FMOD::DSP_TYPE::_set_UNKNOWN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE MIXER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_MIXER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_MIXER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "MIXER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE MIXER
void FMOD::DSP_TYPE::_set_MIXER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_MIXER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "MIXER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE OSCILLATOR
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_OSCILLATOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_OSCILLATOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "OSCILLATOR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE OSCILLATOR
void FMOD::DSP_TYPE::_set_OSCILLATOR(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_OSCILLATOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "OSCILLATOR", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE LOWPASS
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_LOWPASS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_LOWPASS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "LOWPASS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE LOWPASS
void FMOD::DSP_TYPE::_set_LOWPASS(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_LOWPASS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "LOWPASS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE ITLOWPASS
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_ITLOWPASS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_ITLOWPASS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "ITLOWPASS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE ITLOWPASS
void FMOD::DSP_TYPE::_set_ITLOWPASS(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_ITLOWPASS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "ITLOWPASS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE HIGHPASS
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_HIGHPASS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_HIGHPASS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "HIGHPASS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE HIGHPASS
void FMOD::DSP_TYPE::_set_HIGHPASS(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_HIGHPASS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "HIGHPASS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE ECHO
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_ECHO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_ECHO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "ECHO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE ECHO
void FMOD::DSP_TYPE::_set_ECHO(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_ECHO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "ECHO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE FADER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_FADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_FADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "FADER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE FADER
void FMOD::DSP_TYPE::_set_FADER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_FADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "FADER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE FLANGE
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_FLANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_FLANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "FLANGE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE FLANGE
void FMOD::DSP_TYPE::_set_FLANGE(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_FLANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "FLANGE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE DISTORTION
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_DISTORTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_DISTORTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "DISTORTION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE DISTORTION
void FMOD::DSP_TYPE::_set_DISTORTION(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_DISTORTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "DISTORTION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE NORMALIZE
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_NORMALIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_NORMALIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "NORMALIZE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE NORMALIZE
void FMOD::DSP_TYPE::_set_NORMALIZE(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_NORMALIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "NORMALIZE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE LIMITER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_LIMITER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_LIMITER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "LIMITER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE LIMITER
void FMOD::DSP_TYPE::_set_LIMITER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_LIMITER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "LIMITER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE PARAMEQ
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_PARAMEQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_PARAMEQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "PARAMEQ"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE PARAMEQ
void FMOD::DSP_TYPE::_set_PARAMEQ(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_PARAMEQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "PARAMEQ", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE PITCHSHIFT
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_PITCHSHIFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_PITCHSHIFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "PITCHSHIFT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE PITCHSHIFT
void FMOD::DSP_TYPE::_set_PITCHSHIFT(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_PITCHSHIFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "PITCHSHIFT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE CHORUS
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_CHORUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_CHORUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "CHORUS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE CHORUS
void FMOD::DSP_TYPE::_set_CHORUS(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_CHORUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "CHORUS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE VSTPLUGIN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_VSTPLUGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_VSTPLUGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "VSTPLUGIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE VSTPLUGIN
void FMOD::DSP_TYPE::_set_VSTPLUGIN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_VSTPLUGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "VSTPLUGIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE WINAMPPLUGIN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_WINAMPPLUGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_WINAMPPLUGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "WINAMPPLUGIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE WINAMPPLUGIN
void FMOD::DSP_TYPE::_set_WINAMPPLUGIN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_WINAMPPLUGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "WINAMPPLUGIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE ITECHO
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_ITECHO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_ITECHO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "ITECHO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE ITECHO
void FMOD::DSP_TYPE::_set_ITECHO(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_ITECHO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "ITECHO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE COMPRESSOR
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_COMPRESSOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_COMPRESSOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "COMPRESSOR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE COMPRESSOR
void FMOD::DSP_TYPE::_set_COMPRESSOR(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_COMPRESSOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "COMPRESSOR", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE SFXREVERB
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_SFXREVERB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_SFXREVERB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "SFXREVERB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE SFXREVERB
void FMOD::DSP_TYPE::_set_SFXREVERB(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_SFXREVERB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "SFXREVERB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE LOWPASS_SIMPLE
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_LOWPASS_SIMPLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_LOWPASS_SIMPLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "LOWPASS_SIMPLE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE LOWPASS_SIMPLE
void FMOD::DSP_TYPE::_set_LOWPASS_SIMPLE(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_LOWPASS_SIMPLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "LOWPASS_SIMPLE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE DELAY
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "DELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE DELAY
void FMOD::DSP_TYPE::_set_DELAY(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "DELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE TREMOLO
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_TREMOLO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_TREMOLO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "TREMOLO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE TREMOLO
void FMOD::DSP_TYPE::_set_TREMOLO(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_TREMOLO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "TREMOLO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE LADSPAPLUGIN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_LADSPAPLUGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_LADSPAPLUGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "LADSPAPLUGIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE LADSPAPLUGIN
void FMOD::DSP_TYPE::_set_LADSPAPLUGIN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_LADSPAPLUGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "LADSPAPLUGIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE SEND
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_SEND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_SEND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "SEND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE SEND
void FMOD::DSP_TYPE::_set_SEND(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_SEND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "SEND", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE RETURN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_RETURN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_RETURN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "RETURN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE RETURN
void FMOD::DSP_TYPE::_set_RETURN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_RETURN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "RETURN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE HIGHPASS_SIMPLE
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_HIGHPASS_SIMPLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_HIGHPASS_SIMPLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "HIGHPASS_SIMPLE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE HIGHPASS_SIMPLE
void FMOD::DSP_TYPE::_set_HIGHPASS_SIMPLE(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_HIGHPASS_SIMPLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "HIGHPASS_SIMPLE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE PAN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_PAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_PAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "PAN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE PAN
void FMOD::DSP_TYPE::_set_PAN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_PAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "PAN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE THREE_EQ
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_THREE_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_THREE_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "THREE_EQ"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE THREE_EQ
void FMOD::DSP_TYPE::_set_THREE_EQ(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_THREE_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "THREE_EQ", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE FFT
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_FFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_FFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "FFT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE FFT
void FMOD::DSP_TYPE::_set_FFT(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_FFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "FFT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE LOUDNESS_METER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_LOUDNESS_METER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_LOUDNESS_METER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "LOUDNESS_METER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE LOUDNESS_METER
void FMOD::DSP_TYPE::_set_LOUDNESS_METER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_LOUDNESS_METER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "LOUDNESS_METER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE ENVELOPEFOLLOWER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_ENVELOPEFOLLOWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_ENVELOPEFOLLOWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "ENVELOPEFOLLOWER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE ENVELOPEFOLLOWER
void FMOD::DSP_TYPE::_set_ENVELOPEFOLLOWER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_ENVELOPEFOLLOWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "ENVELOPEFOLLOWER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE CONVOLUTIONREVERB
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_CONVOLUTIONREVERB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_CONVOLUTIONREVERB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "CONVOLUTIONREVERB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE CONVOLUTIONREVERB
void FMOD::DSP_TYPE::_set_CONVOLUTIONREVERB(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_CONVOLUTIONREVERB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "CONVOLUTIONREVERB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE CHANNELMIX
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_CHANNELMIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_CHANNELMIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "CHANNELMIX"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE CHANNELMIX
void FMOD::DSP_TYPE::_set_CHANNELMIX(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_CHANNELMIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "CHANNELMIX", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE TRANSCEIVER
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_TRANSCEIVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_TRANSCEIVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "TRANSCEIVER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE TRANSCEIVER
void FMOD::DSP_TYPE::_set_TRANSCEIVER(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_TRANSCEIVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "TRANSCEIVER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE OBJECTPAN
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_OBJECTPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_OBJECTPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "OBJECTPAN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE OBJECTPAN
void FMOD::DSP_TYPE::_set_OBJECTPAN(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_OBJECTPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "OBJECTPAN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TYPE MULTIBAND_EQ
::FMOD::DSP_TYPE FMOD::DSP_TYPE::_get_MULTIBAND_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_get_MULTIBAND_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TYPE>("FMOD", "DSP_TYPE", "MULTIBAND_EQ"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TYPE MULTIBAND_EQ
void FMOD::DSP_TYPE::_set_MULTIBAND_EQ(::FMOD::DSP_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::_set_MULTIBAND_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TYPE", "MULTIBAND_EQ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PARAMETER_TYPE
#include "FMOD/DSP_PARAMETER_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_TYPE FLOAT
::FMOD::DSP_PARAMETER_TYPE FMOD::DSP_PARAMETER_TYPE::_get_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_get_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_TYPE>("FMOD", "DSP_PARAMETER_TYPE", "FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_TYPE FLOAT
void FMOD::DSP_PARAMETER_TYPE::_set_FLOAT(::FMOD::DSP_PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_set_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_TYPE", "FLOAT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_TYPE INT
::FMOD::DSP_PARAMETER_TYPE FMOD::DSP_PARAMETER_TYPE::_get_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_get_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_TYPE>("FMOD", "DSP_PARAMETER_TYPE", "INT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_TYPE INT
void FMOD::DSP_PARAMETER_TYPE::_set_INT(::FMOD::DSP_PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_set_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_TYPE", "INT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_TYPE BOOL
::FMOD::DSP_PARAMETER_TYPE FMOD::DSP_PARAMETER_TYPE::_get_BOOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_get_BOOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_TYPE>("FMOD", "DSP_PARAMETER_TYPE", "BOOL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_TYPE BOOL
void FMOD::DSP_PARAMETER_TYPE::_set_BOOL(::FMOD::DSP_PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_set_BOOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_TYPE", "BOOL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_TYPE DATA
::FMOD::DSP_PARAMETER_TYPE FMOD::DSP_PARAMETER_TYPE::_get_DATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_get_DATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_TYPE>("FMOD", "DSP_PARAMETER_TYPE", "DATA"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_TYPE DATA
void FMOD::DSP_PARAMETER_TYPE::_set_DATA(::FMOD::DSP_PARAMETER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::_set_DATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_TYPE", "DATA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMETER_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE
#include "FMOD/DSP_PARAMETER_FLOAT_MAPPING_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR
::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE>("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR
void FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO
::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE>("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO
void FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_AUTO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR
::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_get_DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE>("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR
void FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::_set_DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_FLOAT_MAPPING_TYPE", "DSP_PARAMETER_FLOAT_MAPPING_TYPE_PIECEWISE_LINEAR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PARAMETER_DATA_TYPE
#include "FMOD/DSP_PARAMETER_DATA_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_USER
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_USER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_USER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_USER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_USER
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_USER(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_USER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_USER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_OVERALLGAIN
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_OVERALLGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_OVERALLGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_OVERALLGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_OVERALLGAIN
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_OVERALLGAIN(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_OVERALLGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_OVERALLGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_SIDECHAIN
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_SIDECHAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_SIDECHAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_SIDECHAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_SIDECHAIN
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_SIDECHAIN(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_SIDECHAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_SIDECHAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_FFT
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_FFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_FFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_FFT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_FFT
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_FFT(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_FFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_FFT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI
::FMOD::DSP_PARAMETER_DATA_TYPE FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_get_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMETER_DATA_TYPE>("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMETER_DATA_TYPE DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI
void FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI(::FMOD::DSP_PARAMETER_DATA_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::_set_DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMETER_DATA_TYPE", "DSP_PARAMETER_DATA_TYPE_3DATTRIBUTES_MULTI", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMETER_DATA_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_DATA_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PARAMETER_FFT
#include "FMOD/DSP_PARAMETER_FFT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMETER_FFT::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FFT::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numchannels
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMETER_FFT::dyn_numchannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FFT::dyn_numchannels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numchannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr[] spectrum_internal
[[deprecated("Use field access instead!")]] ::ArrayW<::System::IntPtr>& FMOD::DSP_PARAMETER_FFT::dyn_spectrum_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FFT::dyn_spectrum_internal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spectrum_internal"))->offset;
  return *reinterpret_cast<::ArrayW<::System::IntPtr>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FMOD.DSP_PARAMETER_FFT.get_spectrum
::ArrayW<::ArrayW<float>> FMOD::DSP_PARAMETER_FFT::get_spectrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMETER_FFT::get_spectrum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_spectrum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<float>>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_OSCILLATOR
#include "FMOD/DSP_OSCILLATOR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OSCILLATOR TYPE
::FMOD::DSP_OSCILLATOR FMOD::DSP_OSCILLATOR::_get_TYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OSCILLATOR::_get_TYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OSCILLATOR>("FMOD", "DSP_OSCILLATOR", "TYPE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OSCILLATOR TYPE
void FMOD::DSP_OSCILLATOR::_set_TYPE(::FMOD::DSP_OSCILLATOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OSCILLATOR::_set_TYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OSCILLATOR", "TYPE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_OSCILLATOR RATE
::FMOD::DSP_OSCILLATOR FMOD::DSP_OSCILLATOR::_get_RATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OSCILLATOR::_get_RATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_OSCILLATOR>("FMOD", "DSP_OSCILLATOR", "RATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_OSCILLATOR RATE
void FMOD::DSP_OSCILLATOR::_set_RATE(::FMOD::DSP_OSCILLATOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OSCILLATOR::_set_RATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_OSCILLATOR", "RATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_OSCILLATOR::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_OSCILLATOR::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_LOWPASS
#include "FMOD/DSP_LOWPASS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LOWPASS CUTOFF
::FMOD::DSP_LOWPASS FMOD::DSP_LOWPASS::_get_CUTOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS::_get_CUTOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LOWPASS>("FMOD", "DSP_LOWPASS", "CUTOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LOWPASS CUTOFF
void FMOD::DSP_LOWPASS::_set_CUTOFF(::FMOD::DSP_LOWPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS::_set_CUTOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LOWPASS", "CUTOFF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LOWPASS RESONANCE
::FMOD::DSP_LOWPASS FMOD::DSP_LOWPASS::_get_RESONANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS::_get_RESONANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LOWPASS>("FMOD", "DSP_LOWPASS", "RESONANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LOWPASS RESONANCE
void FMOD::DSP_LOWPASS::_set_RESONANCE(::FMOD::DSP_LOWPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS::_set_RESONANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LOWPASS", "RESONANCE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_LOWPASS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_ITLOWPASS
#include "FMOD/DSP_ITLOWPASS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITLOWPASS CUTOFF
::FMOD::DSP_ITLOWPASS FMOD::DSP_ITLOWPASS::_get_CUTOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITLOWPASS::_get_CUTOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITLOWPASS>("FMOD", "DSP_ITLOWPASS", "CUTOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITLOWPASS CUTOFF
void FMOD::DSP_ITLOWPASS::_set_CUTOFF(::FMOD::DSP_ITLOWPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITLOWPASS::_set_CUTOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITLOWPASS", "CUTOFF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITLOWPASS RESONANCE
::FMOD::DSP_ITLOWPASS FMOD::DSP_ITLOWPASS::_get_RESONANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITLOWPASS::_get_RESONANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITLOWPASS>("FMOD", "DSP_ITLOWPASS", "RESONANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITLOWPASS RESONANCE
void FMOD::DSP_ITLOWPASS::_set_RESONANCE(::FMOD::DSP_ITLOWPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITLOWPASS::_set_RESONANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITLOWPASS", "RESONANCE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_ITLOWPASS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITLOWPASS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_HIGHPASS
#include "FMOD/DSP_HIGHPASS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_HIGHPASS CUTOFF
::FMOD::DSP_HIGHPASS FMOD::DSP_HIGHPASS::_get_CUTOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS::_get_CUTOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_HIGHPASS>("FMOD", "DSP_HIGHPASS", "CUTOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_HIGHPASS CUTOFF
void FMOD::DSP_HIGHPASS::_set_CUTOFF(::FMOD::DSP_HIGHPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS::_set_CUTOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_HIGHPASS", "CUTOFF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_HIGHPASS RESONANCE
::FMOD::DSP_HIGHPASS FMOD::DSP_HIGHPASS::_get_RESONANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS::_get_RESONANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_HIGHPASS>("FMOD", "DSP_HIGHPASS", "RESONANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_HIGHPASS RESONANCE
void FMOD::DSP_HIGHPASS::_set_RESONANCE(::FMOD::DSP_HIGHPASS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS::_set_RESONANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_HIGHPASS", "RESONANCE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_HIGHPASS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_ECHO
#include "FMOD/DSP_ECHO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ECHO DELAY
::FMOD::DSP_ECHO FMOD::DSP_ECHO::_get_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_get_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ECHO>("FMOD", "DSP_ECHO", "DELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ECHO DELAY
void FMOD::DSP_ECHO::_set_DELAY(::FMOD::DSP_ECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_set_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ECHO", "DELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ECHO FEEDBACK
::FMOD::DSP_ECHO FMOD::DSP_ECHO::_get_FEEDBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_get_FEEDBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ECHO>("FMOD", "DSP_ECHO", "FEEDBACK"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ECHO FEEDBACK
void FMOD::DSP_ECHO::_set_FEEDBACK(::FMOD::DSP_ECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_set_FEEDBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ECHO", "FEEDBACK", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ECHO DRYLEVEL
::FMOD::DSP_ECHO FMOD::DSP_ECHO::_get_DRYLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_get_DRYLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ECHO>("FMOD", "DSP_ECHO", "DRYLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ECHO DRYLEVEL
void FMOD::DSP_ECHO::_set_DRYLEVEL(::FMOD::DSP_ECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_set_DRYLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ECHO", "DRYLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ECHO WETLEVEL
::FMOD::DSP_ECHO FMOD::DSP_ECHO::_get_WETLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_get_WETLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ECHO>("FMOD", "DSP_ECHO", "WETLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ECHO WETLEVEL
void FMOD::DSP_ECHO::_set_WETLEVEL(::FMOD::DSP_ECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::_set_WETLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ECHO", "WETLEVEL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_ECHO::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ECHO::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_FADER
#include "FMOD/DSP_FADER.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FADER GAIN
::FMOD::DSP_FADER FMOD::DSP_FADER::_get_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FADER::_get_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FADER>("FMOD", "DSP_FADER", "GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FADER GAIN
void FMOD::DSP_FADER::_set_GAIN(::FMOD::DSP_FADER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FADER::_set_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FADER", "GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FADER OVERALL_GAIN
::FMOD::DSP_FADER FMOD::DSP_FADER::_get_OVERALL_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FADER::_get_OVERALL_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FADER>("FMOD", "DSP_FADER", "OVERALL_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FADER OVERALL_GAIN
void FMOD::DSP_FADER::_set_OVERALL_GAIN(::FMOD::DSP_FADER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FADER::_set_OVERALL_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FADER", "OVERALL_GAIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_FADER::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FADER::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_DELAY
#include "FMOD/DSP_DELAY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH0
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH0"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH0
void FMOD::DSP_DELAY::_set_CH0(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH0", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH1
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH1"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH1
void FMOD::DSP_DELAY::_set_CH1(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH1", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH2
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH2"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH2
void FMOD::DSP_DELAY::_set_CH2(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH2", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH3
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH3"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH3
void FMOD::DSP_DELAY::_set_CH3(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH3", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH4
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH4"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH4
void FMOD::DSP_DELAY::_set_CH4(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH4", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH5
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH5"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH5
void FMOD::DSP_DELAY::_set_CH5(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH5", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH6
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH6"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH6
void FMOD::DSP_DELAY::_set_CH6(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH6", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH7
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH7"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH7
void FMOD::DSP_DELAY::_set_CH7(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH7", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH8
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH8"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH8
void FMOD::DSP_DELAY::_set_CH8(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH8", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH9
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH9"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH9
void FMOD::DSP_DELAY::_set_CH9(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH9", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH10
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH10"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH10
void FMOD::DSP_DELAY::_set_CH10(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH10", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH11
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH11"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH11
void FMOD::DSP_DELAY::_set_CH11(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH11", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH12
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH12"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH12
void FMOD::DSP_DELAY::_set_CH12(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH12", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH13
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH13"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH13
void FMOD::DSP_DELAY::_set_CH13(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH13", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH14
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH14"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH14
void FMOD::DSP_DELAY::_set_CH14(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH14", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY CH15
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_CH15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_CH15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "CH15"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY CH15
void FMOD::DSP_DELAY::_set_CH15(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_CH15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "CH15", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DELAY MAXDELAY
::FMOD::DSP_DELAY FMOD::DSP_DELAY::_get_MAXDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_get_MAXDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DELAY>("FMOD", "DSP_DELAY", "MAXDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DELAY MAXDELAY
void FMOD::DSP_DELAY::_set_MAXDELAY(::FMOD::DSP_DELAY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::_set_MAXDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DELAY", "MAXDELAY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_DELAY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DELAY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_FLANGE
#include "FMOD/DSP_FLANGE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FLANGE MIX
::FMOD::DSP_FLANGE FMOD::DSP_FLANGE::_get_MIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_get_MIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FLANGE>("FMOD", "DSP_FLANGE", "MIX"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FLANGE MIX
void FMOD::DSP_FLANGE::_set_MIX(::FMOD::DSP_FLANGE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_set_MIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FLANGE", "MIX", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FLANGE DEPTH
::FMOD::DSP_FLANGE FMOD::DSP_FLANGE::_get_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_get_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FLANGE>("FMOD", "DSP_FLANGE", "DEPTH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FLANGE DEPTH
void FMOD::DSP_FLANGE::_set_DEPTH(::FMOD::DSP_FLANGE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_set_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FLANGE", "DEPTH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FLANGE RATE
::FMOD::DSP_FLANGE FMOD::DSP_FLANGE::_get_RATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_get_RATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FLANGE>("FMOD", "DSP_FLANGE", "RATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FLANGE RATE
void FMOD::DSP_FLANGE::_set_RATE(::FMOD::DSP_FLANGE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::_set_RATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FLANGE", "RATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_FLANGE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FLANGE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_TREMOLO
#include "FMOD/DSP_TREMOLO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO FREQUENCY
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO FREQUENCY
void FMOD::DSP_TREMOLO::_set_FREQUENCY(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO DEPTH
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "DEPTH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO DEPTH
void FMOD::DSP_TREMOLO::_set_DEPTH(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "DEPTH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO SHAPE
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_SHAPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_SHAPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "SHAPE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO SHAPE
void FMOD::DSP_TREMOLO::_set_SHAPE(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_SHAPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "SHAPE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO SKEW
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_SKEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_SKEW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "SKEW"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO SKEW
void FMOD::DSP_TREMOLO::_set_SKEW(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_SKEW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "SKEW", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO DUTY
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_DUTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_DUTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "DUTY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO DUTY
void FMOD::DSP_TREMOLO::_set_DUTY(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_DUTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "DUTY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO SQUARE
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_SQUARE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_SQUARE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "SQUARE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO SQUARE
void FMOD::DSP_TREMOLO::_set_SQUARE(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_SQUARE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "SQUARE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO PHASE
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_PHASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_PHASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "PHASE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO PHASE
void FMOD::DSP_TREMOLO::_set_PHASE(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_PHASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "PHASE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TREMOLO SPREAD
::FMOD::DSP_TREMOLO FMOD::DSP_TREMOLO::_get_SPREAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_get_SPREAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TREMOLO>("FMOD", "DSP_TREMOLO", "SPREAD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TREMOLO SPREAD
void FMOD::DSP_TREMOLO::_set_SPREAD(::FMOD::DSP_TREMOLO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::_set_SPREAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TREMOLO", "SPREAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_TREMOLO::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TREMOLO::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_DISTORTION
#include "FMOD/DSP_DISTORTION.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_DISTORTION LEVEL
::FMOD::DSP_DISTORTION FMOD::DSP_DISTORTION::_get_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DISTORTION::_get_LEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_DISTORTION>("FMOD", "DSP_DISTORTION", "LEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_DISTORTION LEVEL
void FMOD::DSP_DISTORTION::_set_LEVEL(::FMOD::DSP_DISTORTION value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DISTORTION::_set_LEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_DISTORTION", "LEVEL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_DISTORTION::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_DISTORTION::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_NORMALIZE
#include "FMOD/DSP_NORMALIZE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_NORMALIZE FADETIME
::FMOD::DSP_NORMALIZE FMOD::DSP_NORMALIZE::_get_FADETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_get_FADETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_NORMALIZE>("FMOD", "DSP_NORMALIZE", "FADETIME"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_NORMALIZE FADETIME
void FMOD::DSP_NORMALIZE::_set_FADETIME(::FMOD::DSP_NORMALIZE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_set_FADETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_NORMALIZE", "FADETIME", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_NORMALIZE THRESHHOLD
::FMOD::DSP_NORMALIZE FMOD::DSP_NORMALIZE::_get_THRESHHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_get_THRESHHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_NORMALIZE>("FMOD", "DSP_NORMALIZE", "THRESHHOLD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_NORMALIZE THRESHHOLD
void FMOD::DSP_NORMALIZE::_set_THRESHHOLD(::FMOD::DSP_NORMALIZE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_set_THRESHHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_NORMALIZE", "THRESHHOLD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_NORMALIZE MAXAMP
::FMOD::DSP_NORMALIZE FMOD::DSP_NORMALIZE::_get_MAXAMP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_get_MAXAMP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_NORMALIZE>("FMOD", "DSP_NORMALIZE", "MAXAMP"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_NORMALIZE MAXAMP
void FMOD::DSP_NORMALIZE::_set_MAXAMP(::FMOD::DSP_NORMALIZE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::_set_MAXAMP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_NORMALIZE", "MAXAMP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_NORMALIZE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_NORMALIZE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_LIMITER
#include "FMOD/DSP_LIMITER.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LIMITER RELEASETIME
::FMOD::DSP_LIMITER FMOD::DSP_LIMITER::_get_RELEASETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_get_RELEASETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LIMITER>("FMOD", "DSP_LIMITER", "RELEASETIME"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LIMITER RELEASETIME
void FMOD::DSP_LIMITER::_set_RELEASETIME(::FMOD::DSP_LIMITER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_set_RELEASETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LIMITER", "RELEASETIME", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LIMITER CEILING
::FMOD::DSP_LIMITER FMOD::DSP_LIMITER::_get_CEILING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_get_CEILING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LIMITER>("FMOD", "DSP_LIMITER", "CEILING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LIMITER CEILING
void FMOD::DSP_LIMITER::_set_CEILING(::FMOD::DSP_LIMITER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_set_CEILING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LIMITER", "CEILING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LIMITER MAXIMIZERGAIN
::FMOD::DSP_LIMITER FMOD::DSP_LIMITER::_get_MAXIMIZERGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_get_MAXIMIZERGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LIMITER>("FMOD", "DSP_LIMITER", "MAXIMIZERGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LIMITER MAXIMIZERGAIN
void FMOD::DSP_LIMITER::_set_MAXIMIZERGAIN(::FMOD::DSP_LIMITER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_set_MAXIMIZERGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LIMITER", "MAXIMIZERGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LIMITER MODE
::FMOD::DSP_LIMITER FMOD::DSP_LIMITER::_get_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_get_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LIMITER>("FMOD", "DSP_LIMITER", "MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LIMITER MODE
void FMOD::DSP_LIMITER::_set_MODE(::FMOD::DSP_LIMITER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::_set_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LIMITER", "MODE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_LIMITER::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LIMITER::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PARAMEQ
#include "FMOD/DSP_PARAMEQ.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMEQ CENTER
::FMOD::DSP_PARAMEQ FMOD::DSP_PARAMEQ::_get_CENTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_get_CENTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMEQ>("FMOD", "DSP_PARAMEQ", "CENTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMEQ CENTER
void FMOD::DSP_PARAMEQ::_set_CENTER(::FMOD::DSP_PARAMEQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_set_CENTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMEQ", "CENTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMEQ BANDWIDTH
::FMOD::DSP_PARAMEQ FMOD::DSP_PARAMEQ::_get_BANDWIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_get_BANDWIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMEQ>("FMOD", "DSP_PARAMEQ", "BANDWIDTH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMEQ BANDWIDTH
void FMOD::DSP_PARAMEQ::_set_BANDWIDTH(::FMOD::DSP_PARAMEQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_set_BANDWIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMEQ", "BANDWIDTH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PARAMEQ GAIN
::FMOD::DSP_PARAMEQ FMOD::DSP_PARAMEQ::_get_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_get_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PARAMEQ>("FMOD", "DSP_PARAMEQ", "GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PARAMEQ GAIN
void FMOD::DSP_PARAMEQ::_set_GAIN(::FMOD::DSP_PARAMEQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::_set_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PARAMEQ", "GAIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PARAMEQ::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PARAMEQ::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_MULTIBAND_EQ
#include "FMOD/DSP_MULTIBAND_EQ.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ A_FILTER
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_A_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_A_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "A_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ A_FILTER
void FMOD::DSP_MULTIBAND_EQ::_set_A_FILTER(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_A_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "A_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ A_FREQUENCY
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_A_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_A_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "A_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ A_FREQUENCY
void FMOD::DSP_MULTIBAND_EQ::_set_A_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_A_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "A_FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ A_Q
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_A_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_A_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "A_Q"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ A_Q
void FMOD::DSP_MULTIBAND_EQ::_set_A_Q(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_A_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "A_Q", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ A_GAIN
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_A_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_A_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "A_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ A_GAIN
void FMOD::DSP_MULTIBAND_EQ::_set_A_GAIN(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_A_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "A_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ B_FILTER
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_B_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_B_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "B_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ B_FILTER
void FMOD::DSP_MULTIBAND_EQ::_set_B_FILTER(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_B_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "B_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ B_FREQUENCY
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_B_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_B_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "B_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ B_FREQUENCY
void FMOD::DSP_MULTIBAND_EQ::_set_B_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_B_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "B_FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ B_Q
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_B_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_B_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "B_Q"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ B_Q
void FMOD::DSP_MULTIBAND_EQ::_set_B_Q(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_B_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "B_Q", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ B_GAIN
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_B_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_B_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "B_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ B_GAIN
void FMOD::DSP_MULTIBAND_EQ::_set_B_GAIN(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_B_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "B_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ C_FILTER
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_C_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_C_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "C_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ C_FILTER
void FMOD::DSP_MULTIBAND_EQ::_set_C_FILTER(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_C_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "C_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ C_FREQUENCY
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_C_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_C_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "C_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ C_FREQUENCY
void FMOD::DSP_MULTIBAND_EQ::_set_C_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_C_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "C_FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ C_Q
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_C_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_C_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "C_Q"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ C_Q
void FMOD::DSP_MULTIBAND_EQ::_set_C_Q(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_C_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "C_Q", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ C_GAIN
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_C_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_C_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "C_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ C_GAIN
void FMOD::DSP_MULTIBAND_EQ::_set_C_GAIN(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_C_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "C_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ D_FILTER
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_D_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_D_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "D_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ D_FILTER
void FMOD::DSP_MULTIBAND_EQ::_set_D_FILTER(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_D_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "D_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ D_FREQUENCY
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_D_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_D_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "D_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ D_FREQUENCY
void FMOD::DSP_MULTIBAND_EQ::_set_D_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_D_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "D_FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ D_Q
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_D_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_D_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "D_Q"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ D_Q
void FMOD::DSP_MULTIBAND_EQ::_set_D_Q(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_D_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "D_Q", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ D_GAIN
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_D_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_D_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "D_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ D_GAIN
void FMOD::DSP_MULTIBAND_EQ::_set_D_GAIN(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_D_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "D_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ E_FILTER
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_E_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_E_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "E_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ E_FILTER
void FMOD::DSP_MULTIBAND_EQ::_set_E_FILTER(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_E_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "E_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ E_FREQUENCY
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_E_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_E_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "E_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ E_FREQUENCY
void FMOD::DSP_MULTIBAND_EQ::_set_E_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_E_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "E_FREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ E_Q
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_E_Q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_E_Q");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "E_Q"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ E_Q
void FMOD::DSP_MULTIBAND_EQ::_set_E_Q(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_E_Q");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "E_Q", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ E_GAIN
::FMOD::DSP_MULTIBAND_EQ FMOD::DSP_MULTIBAND_EQ::_get_E_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_get_E_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ>("FMOD", "DSP_MULTIBAND_EQ", "E_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ E_GAIN
void FMOD::DSP_MULTIBAND_EQ::_set_E_GAIN(::FMOD::DSP_MULTIBAND_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::_set_E_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ", "E_GAIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_MULTIBAND_EQ::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE
#include "FMOD/DSP_MULTIBAND_EQ_FILTER_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE DISABLED
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_DISABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_DISABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "DISABLED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE DISABLED
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_DISABLED(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_DISABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "DISABLED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_12DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_12DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_12DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_12DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_12DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_12DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_12DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_12DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_24DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_24DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_24DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_24DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_24DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_24DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_24DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_24DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_48DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_48DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWPASS_48DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_48DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWPASS_48DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_48DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWPASS_48DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWPASS_48DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_12DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_12DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_12DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_12DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_12DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_12DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_12DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_12DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_24DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_24DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_24DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_24DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_24DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_24DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_24DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_24DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_48DB
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_48DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHPASS_48DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_48DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHPASS_48DB
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_48DB(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHPASS_48DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHPASS_48DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWSHELF
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWSHELF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_LOWSHELF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWSHELF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE LOWSHELF
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWSHELF(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_LOWSHELF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "LOWSHELF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHSHELF
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHSHELF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_HIGHSHELF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHSHELF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE HIGHSHELF
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHSHELF(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_HIGHSHELF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "HIGHSHELF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE PEAKING
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_PEAKING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_PEAKING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "PEAKING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE PEAKING
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_PEAKING(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_PEAKING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "PEAKING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE BANDPASS
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_BANDPASS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_BANDPASS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "BANDPASS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE BANDPASS
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_BANDPASS(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_BANDPASS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "BANDPASS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE NOTCH
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_NOTCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_NOTCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "NOTCH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE NOTCH
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_NOTCH(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_NOTCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "NOTCH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE ALLPASS
::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_ALLPASS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_get_ALLPASS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE>("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "ALLPASS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_MULTIBAND_EQ_FILTER_TYPE ALLPASS
void FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_ALLPASS(::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::_set_ALLPASS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_MULTIBAND_EQ_FILTER_TYPE", "ALLPASS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_MULTIBAND_EQ_FILTER_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PITCHSHIFT
#include "FMOD/DSP_PITCHSHIFT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PITCHSHIFT PITCH
::FMOD::DSP_PITCHSHIFT FMOD::DSP_PITCHSHIFT::_get_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_get_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PITCHSHIFT>("FMOD", "DSP_PITCHSHIFT", "PITCH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PITCHSHIFT PITCH
void FMOD::DSP_PITCHSHIFT::_set_PITCH(::FMOD::DSP_PITCHSHIFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_set_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PITCHSHIFT", "PITCH", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PITCHSHIFT FFTSIZE
::FMOD::DSP_PITCHSHIFT FMOD::DSP_PITCHSHIFT::_get_FFTSIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_get_FFTSIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PITCHSHIFT>("FMOD", "DSP_PITCHSHIFT", "FFTSIZE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PITCHSHIFT FFTSIZE
void FMOD::DSP_PITCHSHIFT::_set_FFTSIZE(::FMOD::DSP_PITCHSHIFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_set_FFTSIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PITCHSHIFT", "FFTSIZE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PITCHSHIFT OVERLAP
::FMOD::DSP_PITCHSHIFT FMOD::DSP_PITCHSHIFT::_get_OVERLAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_get_OVERLAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PITCHSHIFT>("FMOD", "DSP_PITCHSHIFT", "OVERLAP"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PITCHSHIFT OVERLAP
void FMOD::DSP_PITCHSHIFT::_set_OVERLAP(::FMOD::DSP_PITCHSHIFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_set_OVERLAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PITCHSHIFT", "OVERLAP", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PITCHSHIFT MAXCHANNELS
::FMOD::DSP_PITCHSHIFT FMOD::DSP_PITCHSHIFT::_get_MAXCHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_get_MAXCHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PITCHSHIFT>("FMOD", "DSP_PITCHSHIFT", "MAXCHANNELS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PITCHSHIFT MAXCHANNELS
void FMOD::DSP_PITCHSHIFT::_set_MAXCHANNELS(::FMOD::DSP_PITCHSHIFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::_set_MAXCHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PITCHSHIFT", "MAXCHANNELS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PITCHSHIFT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PITCHSHIFT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_CHORUS
#include "FMOD/DSP_CHORUS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHORUS MIX
::FMOD::DSP_CHORUS FMOD::DSP_CHORUS::_get_MIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_get_MIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHORUS>("FMOD", "DSP_CHORUS", "MIX"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHORUS MIX
void FMOD::DSP_CHORUS::_set_MIX(::FMOD::DSP_CHORUS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_set_MIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHORUS", "MIX", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHORUS RATE
::FMOD::DSP_CHORUS FMOD::DSP_CHORUS::_get_RATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_get_RATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHORUS>("FMOD", "DSP_CHORUS", "RATE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHORUS RATE
void FMOD::DSP_CHORUS::_set_RATE(::FMOD::DSP_CHORUS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_set_RATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHORUS", "RATE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHORUS DEPTH
::FMOD::DSP_CHORUS FMOD::DSP_CHORUS::_get_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_get_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHORUS>("FMOD", "DSP_CHORUS", "DEPTH"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHORUS DEPTH
void FMOD::DSP_CHORUS::_set_DEPTH(::FMOD::DSP_CHORUS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::_set_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHORUS", "DEPTH", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_CHORUS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHORUS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_ITECHO
#include "FMOD/DSP_ITECHO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITECHO WETDRYMIX
::FMOD::DSP_ITECHO FMOD::DSP_ITECHO::_get_WETDRYMIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_get_WETDRYMIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITECHO>("FMOD", "DSP_ITECHO", "WETDRYMIX"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITECHO WETDRYMIX
void FMOD::DSP_ITECHO::_set_WETDRYMIX(::FMOD::DSP_ITECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_set_WETDRYMIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITECHO", "WETDRYMIX", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITECHO FEEDBACK
::FMOD::DSP_ITECHO FMOD::DSP_ITECHO::_get_FEEDBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_get_FEEDBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITECHO>("FMOD", "DSP_ITECHO", "FEEDBACK"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITECHO FEEDBACK
void FMOD::DSP_ITECHO::_set_FEEDBACK(::FMOD::DSP_ITECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_set_FEEDBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITECHO", "FEEDBACK", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITECHO LEFTDELAY
::FMOD::DSP_ITECHO FMOD::DSP_ITECHO::_get_LEFTDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_get_LEFTDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITECHO>("FMOD", "DSP_ITECHO", "LEFTDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITECHO LEFTDELAY
void FMOD::DSP_ITECHO::_set_LEFTDELAY(::FMOD::DSP_ITECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_set_LEFTDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITECHO", "LEFTDELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITECHO RIGHTDELAY
::FMOD::DSP_ITECHO FMOD::DSP_ITECHO::_get_RIGHTDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_get_RIGHTDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITECHO>("FMOD", "DSP_ITECHO", "RIGHTDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITECHO RIGHTDELAY
void FMOD::DSP_ITECHO::_set_RIGHTDELAY(::FMOD::DSP_ITECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_set_RIGHTDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITECHO", "RIGHTDELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ITECHO PANDELAY
::FMOD::DSP_ITECHO FMOD::DSP_ITECHO::_get_PANDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_get_PANDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ITECHO>("FMOD", "DSP_ITECHO", "PANDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ITECHO PANDELAY
void FMOD::DSP_ITECHO::_set_PANDELAY(::FMOD::DSP_ITECHO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::_set_PANDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ITECHO", "PANDELAY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_ITECHO::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ITECHO::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_COMPRESSOR
#include "FMOD/DSP_COMPRESSOR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR THRESHOLD
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR THRESHOLD
void FMOD::DSP_COMPRESSOR::_set_THRESHOLD(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR RATIO
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_RATIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_RATIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "RATIO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR RATIO
void FMOD::DSP_COMPRESSOR::_set_RATIO(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_RATIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "RATIO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR ATTACK
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_ATTACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_ATTACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "ATTACK"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR ATTACK
void FMOD::DSP_COMPRESSOR::_set_ATTACK(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_ATTACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "ATTACK", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR RELEASE
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_RELEASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_RELEASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "RELEASE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR RELEASE
void FMOD::DSP_COMPRESSOR::_set_RELEASE(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_RELEASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "RELEASE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR GAINMAKEUP
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_GAINMAKEUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_GAINMAKEUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "GAINMAKEUP"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR GAINMAKEUP
void FMOD::DSP_COMPRESSOR::_set_GAINMAKEUP(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_GAINMAKEUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "GAINMAKEUP", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR USESIDECHAIN
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_USESIDECHAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_USESIDECHAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "USESIDECHAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR USESIDECHAIN
void FMOD::DSP_COMPRESSOR::_set_USESIDECHAIN(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_USESIDECHAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "USESIDECHAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_COMPRESSOR LINKED
::FMOD::DSP_COMPRESSOR FMOD::DSP_COMPRESSOR::_get_LINKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_get_LINKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_COMPRESSOR>("FMOD", "DSP_COMPRESSOR", "LINKED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_COMPRESSOR LINKED
void FMOD::DSP_COMPRESSOR::_set_LINKED(::FMOD::DSP_COMPRESSOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::_set_LINKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_COMPRESSOR", "LINKED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_COMPRESSOR::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_COMPRESSOR::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_SFXREVERB
#include "FMOD/DSP_SFXREVERB.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB DECAYTIME
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_DECAYTIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_DECAYTIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "DECAYTIME"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB DECAYTIME
void FMOD::DSP_SFXREVERB::_set_DECAYTIME(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_DECAYTIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "DECAYTIME", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB EARLYDELAY
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_EARLYDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_EARLYDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "EARLYDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB EARLYDELAY
void FMOD::DSP_SFXREVERB::_set_EARLYDELAY(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_EARLYDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "EARLYDELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB LATEDELAY
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_LATEDELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_LATEDELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "LATEDELAY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB LATEDELAY
void FMOD::DSP_SFXREVERB::_set_LATEDELAY(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_LATEDELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "LATEDELAY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB HFREFERENCE
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_HFREFERENCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_HFREFERENCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "HFREFERENCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB HFREFERENCE
void FMOD::DSP_SFXREVERB::_set_HFREFERENCE(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_HFREFERENCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "HFREFERENCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB HFDECAYRATIO
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_HFDECAYRATIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_HFDECAYRATIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "HFDECAYRATIO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB HFDECAYRATIO
void FMOD::DSP_SFXREVERB::_set_HFDECAYRATIO(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_HFDECAYRATIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "HFDECAYRATIO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB DIFFUSION
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_DIFFUSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_DIFFUSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "DIFFUSION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB DIFFUSION
void FMOD::DSP_SFXREVERB::_set_DIFFUSION(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_DIFFUSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "DIFFUSION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB DENSITY
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_DENSITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_DENSITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "DENSITY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB DENSITY
void FMOD::DSP_SFXREVERB::_set_DENSITY(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_DENSITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "DENSITY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB LOWSHELFFREQUENCY
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_LOWSHELFFREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_LOWSHELFFREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "LOWSHELFFREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB LOWSHELFFREQUENCY
void FMOD::DSP_SFXREVERB::_set_LOWSHELFFREQUENCY(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_LOWSHELFFREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "LOWSHELFFREQUENCY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB LOWSHELFGAIN
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_LOWSHELFGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_LOWSHELFGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "LOWSHELFGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB LOWSHELFGAIN
void FMOD::DSP_SFXREVERB::_set_LOWSHELFGAIN(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_LOWSHELFGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "LOWSHELFGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB HIGHCUT
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_HIGHCUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_HIGHCUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "HIGHCUT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB HIGHCUT
void FMOD::DSP_SFXREVERB::_set_HIGHCUT(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_HIGHCUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "HIGHCUT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB EARLYLATEMIX
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_EARLYLATEMIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_EARLYLATEMIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "EARLYLATEMIX"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB EARLYLATEMIX
void FMOD::DSP_SFXREVERB::_set_EARLYLATEMIX(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_EARLYLATEMIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "EARLYLATEMIX", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB WETLEVEL
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_WETLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_WETLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "WETLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB WETLEVEL
void FMOD::DSP_SFXREVERB::_set_WETLEVEL(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_WETLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "WETLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SFXREVERB DRYLEVEL
::FMOD::DSP_SFXREVERB FMOD::DSP_SFXREVERB::_get_DRYLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_get_DRYLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SFXREVERB>("FMOD", "DSP_SFXREVERB", "DRYLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SFXREVERB DRYLEVEL
void FMOD::DSP_SFXREVERB::_set_DRYLEVEL(::FMOD::DSP_SFXREVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::_set_DRYLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SFXREVERB", "DRYLEVEL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_SFXREVERB::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SFXREVERB::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_LOWPASS_SIMPLE
#include "FMOD/DSP_LOWPASS_SIMPLE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_LOWPASS_SIMPLE CUTOFF
::FMOD::DSP_LOWPASS_SIMPLE FMOD::DSP_LOWPASS_SIMPLE::_get_CUTOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS_SIMPLE::_get_CUTOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_LOWPASS_SIMPLE>("FMOD", "DSP_LOWPASS_SIMPLE", "CUTOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_LOWPASS_SIMPLE CUTOFF
void FMOD::DSP_LOWPASS_SIMPLE::_set_CUTOFF(::FMOD::DSP_LOWPASS_SIMPLE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS_SIMPLE::_set_CUTOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_LOWPASS_SIMPLE", "CUTOFF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_LOWPASS_SIMPLE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_LOWPASS_SIMPLE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_SEND
#include "FMOD/DSP_SEND.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SEND RETURNID
::FMOD::DSP_SEND FMOD::DSP_SEND::_get_RETURNID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SEND::_get_RETURNID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SEND>("FMOD", "DSP_SEND", "RETURNID"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SEND RETURNID
void FMOD::DSP_SEND::_set_RETURNID(::FMOD::DSP_SEND value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SEND::_set_RETURNID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SEND", "RETURNID", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_SEND LEVEL
::FMOD::DSP_SEND FMOD::DSP_SEND::_get_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SEND::_get_LEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_SEND>("FMOD", "DSP_SEND", "LEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_SEND LEVEL
void FMOD::DSP_SEND::_set_LEVEL(::FMOD::DSP_SEND value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SEND::_set_LEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_SEND", "LEVEL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_SEND::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_SEND::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_RETURN
#include "FMOD/DSP_RETURN.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_RETURN ID
::FMOD::DSP_RETURN FMOD::DSP_RETURN::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RETURN::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_RETURN>("FMOD", "DSP_RETURN", "ID"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_RETURN ID
void FMOD::DSP_RETURN::_set_ID(::FMOD::DSP_RETURN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RETURN::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_RETURN", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_RETURN INPUT_SPEAKER_MODE
::FMOD::DSP_RETURN FMOD::DSP_RETURN::_get_INPUT_SPEAKER_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RETURN::_get_INPUT_SPEAKER_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_RETURN>("FMOD", "DSP_RETURN", "INPUT_SPEAKER_MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_RETURN INPUT_SPEAKER_MODE
void FMOD::DSP_RETURN::_set_INPUT_SPEAKER_MODE(::FMOD::DSP_RETURN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RETURN::_set_INPUT_SPEAKER_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_RETURN", "INPUT_SPEAKER_MODE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_RETURN::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_RETURN::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_HIGHPASS_SIMPLE
#include "FMOD/DSP_HIGHPASS_SIMPLE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_HIGHPASS_SIMPLE CUTOFF
::FMOD::DSP_HIGHPASS_SIMPLE FMOD::DSP_HIGHPASS_SIMPLE::_get_CUTOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS_SIMPLE::_get_CUTOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_HIGHPASS_SIMPLE>("FMOD", "DSP_HIGHPASS_SIMPLE", "CUTOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_HIGHPASS_SIMPLE CUTOFF
void FMOD::DSP_HIGHPASS_SIMPLE::_set_CUTOFF(::FMOD::DSP_HIGHPASS_SIMPLE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS_SIMPLE::_set_CUTOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_HIGHPASS_SIMPLE", "CUTOFF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_HIGHPASS_SIMPLE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_HIGHPASS_SIMPLE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN_2D_STEREO_MODE_TYPE
#include "FMOD/DSP_PAN_2D_STEREO_MODE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_2D_STEREO_MODE_TYPE DISTRIBUTED
::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_get_DISTRIBUTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_get_DISTRIBUTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE>("FMOD", "DSP_PAN_2D_STEREO_MODE_TYPE", "DISTRIBUTED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_2D_STEREO_MODE_TYPE DISTRIBUTED
void FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_set_DISTRIBUTED(::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_set_DISTRIBUTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_2D_STEREO_MODE_TYPE", "DISTRIBUTED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_2D_STEREO_MODE_TYPE DISCRETE
::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_get_DISCRETE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_get_DISCRETE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE>("FMOD", "DSP_PAN_2D_STEREO_MODE_TYPE", "DISCRETE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_2D_STEREO_MODE_TYPE DISCRETE
void FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_set_DISCRETE(::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::_set_DISCRETE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_2D_STEREO_MODE_TYPE", "DISCRETE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_2D_STEREO_MODE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN_MODE_TYPE
#include "FMOD/DSP_PAN_MODE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_MODE_TYPE MONO
::FMOD::DSP_PAN_MODE_TYPE FMOD::DSP_PAN_MODE_TYPE::_get_MONO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_get_MONO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_MODE_TYPE>("FMOD", "DSP_PAN_MODE_TYPE", "MONO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_MODE_TYPE MONO
void FMOD::DSP_PAN_MODE_TYPE::_set_MONO(::FMOD::DSP_PAN_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_set_MONO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_MODE_TYPE", "MONO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_MODE_TYPE STEREO
::FMOD::DSP_PAN_MODE_TYPE FMOD::DSP_PAN_MODE_TYPE::_get_STEREO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_get_STEREO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_MODE_TYPE>("FMOD", "DSP_PAN_MODE_TYPE", "STEREO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_MODE_TYPE STEREO
void FMOD::DSP_PAN_MODE_TYPE::_set_STEREO(::FMOD::DSP_PAN_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_set_STEREO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_MODE_TYPE", "STEREO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_MODE_TYPE SURROUND
::FMOD::DSP_PAN_MODE_TYPE FMOD::DSP_PAN_MODE_TYPE::_get_SURROUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_get_SURROUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_MODE_TYPE>("FMOD", "DSP_PAN_MODE_TYPE", "SURROUND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_MODE_TYPE SURROUND
void FMOD::DSP_PAN_MODE_TYPE::_set_SURROUND(::FMOD::DSP_PAN_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::_set_SURROUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_MODE_TYPE", "SURROUND", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN_MODE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_MODE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN_3D_ROLLOFF_TYPE
#include "FMOD/DSP_PAN_3D_ROLLOFF_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE LINEARSQUARED
::FMOD::DSP_PAN_3D_ROLLOFF_TYPE FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_LINEARSQUARED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_LINEARSQUARED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_ROLLOFF_TYPE>("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "LINEARSQUARED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE LINEARSQUARED
void FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_LINEARSQUARED(::FMOD::DSP_PAN_3D_ROLLOFF_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_LINEARSQUARED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "LINEARSQUARED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE LINEAR
::FMOD::DSP_PAN_3D_ROLLOFF_TYPE FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_ROLLOFF_TYPE>("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE LINEAR
void FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_LINEAR(::FMOD::DSP_PAN_3D_ROLLOFF_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE INVERSE
::FMOD::DSP_PAN_3D_ROLLOFF_TYPE FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_INVERSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_INVERSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_ROLLOFF_TYPE>("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "INVERSE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE INVERSE
void FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_INVERSE(::FMOD::DSP_PAN_3D_ROLLOFF_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_INVERSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "INVERSE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE INVERSETAPERED
::FMOD::DSP_PAN_3D_ROLLOFF_TYPE FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_INVERSETAPERED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_INVERSETAPERED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_ROLLOFF_TYPE>("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "INVERSETAPERED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE INVERSETAPERED
void FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_INVERSETAPERED(::FMOD::DSP_PAN_3D_ROLLOFF_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_INVERSETAPERED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "INVERSETAPERED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE CUSTOM
::FMOD::DSP_PAN_3D_ROLLOFF_TYPE FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_CUSTOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_get_CUSTOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_ROLLOFF_TYPE>("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "CUSTOM"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_ROLLOFF_TYPE CUSTOM
void FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_CUSTOM(::FMOD::DSP_PAN_3D_ROLLOFF_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::_set_CUSTOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_ROLLOFF_TYPE", "CUSTOM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN_3D_ROLLOFF_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_ROLLOFF_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE
#include "FMOD/DSP_PAN_3D_EXTENT_MODE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE AUTO
::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_AUTO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_AUTO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE>("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "AUTO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE AUTO
void FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_AUTO(::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_AUTO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "AUTO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE USER
::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_USER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_USER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE>("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "USER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE USER
void FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_USER(::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_USER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "USER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE OFF
::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_OFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_get_OFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE>("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "OFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN_3D_EXTENT_MODE_TYPE OFF
void FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_OFF(::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::_set_OFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN_3D_EXTENT_MODE_TYPE", "OFF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN_3D_EXTENT_MODE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_PAN
#include "FMOD/DSP_PAN.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN MODE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN MODE
void FMOD::DSP_PAN::_set_MODE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "MODE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_STEREO_POSITION
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_STEREO_POSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_STEREO_POSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_STEREO_POSITION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_STEREO_POSITION
void FMOD::DSP_PAN::_set__2D_STEREO_POSITION(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_STEREO_POSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_STEREO_POSITION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_DIRECTION
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_DIRECTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_DIRECTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_DIRECTION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_DIRECTION
void FMOD::DSP_PAN::_set__2D_DIRECTION(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_DIRECTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_DIRECTION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_EXTENT
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_EXTENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_EXTENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_EXTENT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_EXTENT
void FMOD::DSP_PAN::_set__2D_EXTENT(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_EXTENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_EXTENT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_ROTATION
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_ROTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_ROTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_ROTATION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_ROTATION
void FMOD::DSP_PAN::_set__2D_ROTATION(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_ROTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_ROTATION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_LFE_LEVEL
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_LFE_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_LFE_LEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_LFE_LEVEL"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_LFE_LEVEL
void FMOD::DSP_PAN::_set__2D_LFE_LEVEL(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_LFE_LEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_LFE_LEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_STEREO_MODE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_STEREO_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_STEREO_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_STEREO_MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_STEREO_MODE
void FMOD::DSP_PAN::_set__2D_STEREO_MODE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_STEREO_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_STEREO_MODE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_STEREO_SEPARATION
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_STEREO_SEPARATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_STEREO_SEPARATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_STEREO_SEPARATION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_STEREO_SEPARATION
void FMOD::DSP_PAN::_set__2D_STEREO_SEPARATION(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_STEREO_SEPARATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_STEREO_SEPARATION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_STEREO_AXIS
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_STEREO_AXIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_STEREO_AXIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_STEREO_AXIS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_STEREO_AXIS
void FMOD::DSP_PAN::_set__2D_STEREO_AXIS(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_STEREO_AXIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_STEREO_AXIS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN ENABLED_SPEAKERS
::FMOD::DSP_PAN FMOD::DSP_PAN::_get_ENABLED_SPEAKERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get_ENABLED_SPEAKERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "ENABLED_SPEAKERS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN ENABLED_SPEAKERS
void FMOD::DSP_PAN::_set_ENABLED_SPEAKERS(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set_ENABLED_SPEAKERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "ENABLED_SPEAKERS", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_POSITION
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_POSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_POSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_POSITION"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_POSITION
void FMOD::DSP_PAN::_set__3D_POSITION(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_POSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_POSITION", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_ROLLOFF
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_ROLLOFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_ROLLOFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_ROLLOFF"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_ROLLOFF
void FMOD::DSP_PAN::_set__3D_ROLLOFF(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_ROLLOFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_ROLLOFF", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_MIN_DISTANCE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_MIN_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_MIN_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_MIN_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_MIN_DISTANCE
void FMOD::DSP_PAN::_set__3D_MIN_DISTANCE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_MIN_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_MIN_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_MAX_DISTANCE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_MAX_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_MAX_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_MAX_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_MAX_DISTANCE
void FMOD::DSP_PAN::_set__3D_MAX_DISTANCE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_MAX_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_MAX_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_EXTENT_MODE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_EXTENT_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_EXTENT_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_EXTENT_MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_EXTENT_MODE
void FMOD::DSP_PAN::_set__3D_EXTENT_MODE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_EXTENT_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_EXTENT_MODE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_SOUND_SIZE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_SOUND_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_SOUND_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_SOUND_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_SOUND_SIZE
void FMOD::DSP_PAN::_set__3D_SOUND_SIZE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_SOUND_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_SOUND_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_MIN_EXTENT
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_MIN_EXTENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_MIN_EXTENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_MIN_EXTENT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_MIN_EXTENT
void FMOD::DSP_PAN::_set__3D_MIN_EXTENT(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_MIN_EXTENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_MIN_EXTENT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _3D_PAN_BLEND
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__3D_PAN_BLEND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__3D_PAN_BLEND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_3D_PAN_BLEND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _3D_PAN_BLEND
void FMOD::DSP_PAN::_set__3D_PAN_BLEND(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__3D_PAN_BLEND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_3D_PAN_BLEND", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN LFE_UPMIX_ENABLED
::FMOD::DSP_PAN FMOD::DSP_PAN::_get_LFE_UPMIX_ENABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get_LFE_UPMIX_ENABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "LFE_UPMIX_ENABLED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN LFE_UPMIX_ENABLED
void FMOD::DSP_PAN::_set_LFE_UPMIX_ENABLED(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set_LFE_UPMIX_ENABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "LFE_UPMIX_ENABLED", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN OVERALL_GAIN
::FMOD::DSP_PAN FMOD::DSP_PAN::_get_OVERALL_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get_OVERALL_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "OVERALL_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN OVERALL_GAIN
void FMOD::DSP_PAN::_set_OVERALL_GAIN(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set_OVERALL_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "OVERALL_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN SURROUND_SPEAKER_MODE
::FMOD::DSP_PAN FMOD::DSP_PAN::_get_SURROUND_SPEAKER_MODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get_SURROUND_SPEAKER_MODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "SURROUND_SPEAKER_MODE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN SURROUND_SPEAKER_MODE
void FMOD::DSP_PAN::_set_SURROUND_SPEAKER_MODE(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set_SURROUND_SPEAKER_MODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "SURROUND_SPEAKER_MODE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_PAN _2D_HEIGHT_BLEND
::FMOD::DSP_PAN FMOD::DSP_PAN::_get__2D_HEIGHT_BLEND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_get__2D_HEIGHT_BLEND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_PAN>("FMOD", "DSP_PAN", "_2D_HEIGHT_BLEND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_PAN _2D_HEIGHT_BLEND
void FMOD::DSP_PAN::_set__2D_HEIGHT_BLEND(::FMOD::DSP_PAN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::_set__2D_HEIGHT_BLEND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_PAN", "_2D_HEIGHT_BLEND", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_PAN::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_PAN::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE
#include "FMOD/DSP_THREE_EQ_CROSSOVERSLOPE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _12DB
::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__12DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__12DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE>("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_12DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _12DB
void FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__12DB(::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__12DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_12DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _24DB
::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__24DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__24DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE>("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_24DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _24DB
void FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__24DB(::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__24DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_24DB", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _48DB
::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__48DB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_get__48DB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE>("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_48DB"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ_CROSSOVERSLOPE_TYPE _48DB
void FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__48DB(::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::_set__48DB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ_CROSSOVERSLOPE_TYPE", "_48DB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ_CROSSOVERSLOPE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_THREE_EQ
#include "FMOD/DSP_THREE_EQ.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ LOWGAIN
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_LOWGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_LOWGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "LOWGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ LOWGAIN
void FMOD::DSP_THREE_EQ::_set_LOWGAIN(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_LOWGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "LOWGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ MIDGAIN
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_MIDGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_MIDGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "MIDGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ MIDGAIN
void FMOD::DSP_THREE_EQ::_set_MIDGAIN(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_MIDGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "MIDGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ HIGHGAIN
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_HIGHGAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_HIGHGAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "HIGHGAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ HIGHGAIN
void FMOD::DSP_THREE_EQ::_set_HIGHGAIN(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_HIGHGAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "HIGHGAIN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ LOWCROSSOVER
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_LOWCROSSOVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_LOWCROSSOVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "LOWCROSSOVER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ LOWCROSSOVER
void FMOD::DSP_THREE_EQ::_set_LOWCROSSOVER(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_LOWCROSSOVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "LOWCROSSOVER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ HIGHCROSSOVER
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_HIGHCROSSOVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_HIGHCROSSOVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "HIGHCROSSOVER"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ HIGHCROSSOVER
void FMOD::DSP_THREE_EQ::_set_HIGHCROSSOVER(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_HIGHCROSSOVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "HIGHCROSSOVER", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_THREE_EQ CROSSOVERSLOPE
::FMOD::DSP_THREE_EQ FMOD::DSP_THREE_EQ::_get_CROSSOVERSLOPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_get_CROSSOVERSLOPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_THREE_EQ>("FMOD", "DSP_THREE_EQ", "CROSSOVERSLOPE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_THREE_EQ CROSSOVERSLOPE
void FMOD::DSP_THREE_EQ::_set_CROSSOVERSLOPE(::FMOD::DSP_THREE_EQ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::_set_CROSSOVERSLOPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_THREE_EQ", "CROSSOVERSLOPE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_THREE_EQ::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_THREE_EQ::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_FFT_WINDOW
#include "FMOD/DSP_FFT_WINDOW.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW RECT
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_RECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_RECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "RECT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW RECT
void FMOD::DSP_FFT_WINDOW::_set_RECT(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_RECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "RECT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW TRIANGLE
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_TRIANGLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_TRIANGLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "TRIANGLE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW TRIANGLE
void FMOD::DSP_FFT_WINDOW::_set_TRIANGLE(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_TRIANGLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "TRIANGLE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW HAMMING
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_HAMMING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_HAMMING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "HAMMING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW HAMMING
void FMOD::DSP_FFT_WINDOW::_set_HAMMING(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_HAMMING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "HAMMING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW HANNING
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_HANNING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_HANNING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "HANNING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW HANNING
void FMOD::DSP_FFT_WINDOW::_set_HANNING(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_HANNING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "HANNING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW BLACKMAN
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_BLACKMAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_BLACKMAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "BLACKMAN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW BLACKMAN
void FMOD::DSP_FFT_WINDOW::_set_BLACKMAN(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_BLACKMAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "BLACKMAN", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT_WINDOW BLACKMANHARRIS
::FMOD::DSP_FFT_WINDOW FMOD::DSP_FFT_WINDOW::_get_BLACKMANHARRIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_get_BLACKMANHARRIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT_WINDOW>("FMOD", "DSP_FFT_WINDOW", "BLACKMANHARRIS"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT_WINDOW BLACKMANHARRIS
void FMOD::DSP_FFT_WINDOW::_set_BLACKMANHARRIS(::FMOD::DSP_FFT_WINDOW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::_set_BLACKMANHARRIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT_WINDOW", "BLACKMANHARRIS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_FFT_WINDOW::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT_WINDOW::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_FFT
#include "FMOD/DSP_FFT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT WINDOWSIZE
::FMOD::DSP_FFT FMOD::DSP_FFT::_get_WINDOWSIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_get_WINDOWSIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT>("FMOD", "DSP_FFT", "WINDOWSIZE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT WINDOWSIZE
void FMOD::DSP_FFT::_set_WINDOWSIZE(::FMOD::DSP_FFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_set_WINDOWSIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT", "WINDOWSIZE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT WINDOWTYPE
::FMOD::DSP_FFT FMOD::DSP_FFT::_get_WINDOWTYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_get_WINDOWTYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT>("FMOD", "DSP_FFT", "WINDOWTYPE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT WINDOWTYPE
void FMOD::DSP_FFT::_set_WINDOWTYPE(::FMOD::DSP_FFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_set_WINDOWTYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT", "WINDOWTYPE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT SPECTRUMDATA
::FMOD::DSP_FFT FMOD::DSP_FFT::_get_SPECTRUMDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_get_SPECTRUMDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT>("FMOD", "DSP_FFT", "SPECTRUMDATA"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT SPECTRUMDATA
void FMOD::DSP_FFT::_set_SPECTRUMDATA(::FMOD::DSP_FFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_set_SPECTRUMDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT", "SPECTRUMDATA", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_FFT DOMINANT_FREQ
::FMOD::DSP_FFT FMOD::DSP_FFT::_get_DOMINANT_FREQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_get_DOMINANT_FREQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_FFT>("FMOD", "DSP_FFT", "DOMINANT_FREQ"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_FFT DOMINANT_FREQ
void FMOD::DSP_FFT::_set_DOMINANT_FREQ(::FMOD::DSP_FFT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::_set_DOMINANT_FREQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_FFT", "DOMINANT_FREQ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_FFT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_FFT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_ENVELOPEFOLLOWER
#include "FMOD/DSP_ENVELOPEFOLLOWER.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ENVELOPEFOLLOWER ATTACK
::FMOD::DSP_ENVELOPEFOLLOWER FMOD::DSP_ENVELOPEFOLLOWER::_get_ATTACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_get_ATTACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ENVELOPEFOLLOWER>("FMOD", "DSP_ENVELOPEFOLLOWER", "ATTACK"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ENVELOPEFOLLOWER ATTACK
void FMOD::DSP_ENVELOPEFOLLOWER::_set_ATTACK(::FMOD::DSP_ENVELOPEFOLLOWER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_set_ATTACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ENVELOPEFOLLOWER", "ATTACK", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ENVELOPEFOLLOWER RELEASE
::FMOD::DSP_ENVELOPEFOLLOWER FMOD::DSP_ENVELOPEFOLLOWER::_get_RELEASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_get_RELEASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ENVELOPEFOLLOWER>("FMOD", "DSP_ENVELOPEFOLLOWER", "RELEASE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ENVELOPEFOLLOWER RELEASE
void FMOD::DSP_ENVELOPEFOLLOWER::_set_RELEASE(::FMOD::DSP_ENVELOPEFOLLOWER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_set_RELEASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ENVELOPEFOLLOWER", "RELEASE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ENVELOPEFOLLOWER ENVELOPE
::FMOD::DSP_ENVELOPEFOLLOWER FMOD::DSP_ENVELOPEFOLLOWER::_get_ENVELOPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_get_ENVELOPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ENVELOPEFOLLOWER>("FMOD", "DSP_ENVELOPEFOLLOWER", "ENVELOPE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ENVELOPEFOLLOWER ENVELOPE
void FMOD::DSP_ENVELOPEFOLLOWER::_set_ENVELOPE(::FMOD::DSP_ENVELOPEFOLLOWER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_set_ENVELOPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ENVELOPEFOLLOWER", "ENVELOPE", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_ENVELOPEFOLLOWER USESIDECHAIN
::FMOD::DSP_ENVELOPEFOLLOWER FMOD::DSP_ENVELOPEFOLLOWER::_get_USESIDECHAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_get_USESIDECHAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_ENVELOPEFOLLOWER>("FMOD", "DSP_ENVELOPEFOLLOWER", "USESIDECHAIN"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_ENVELOPEFOLLOWER USESIDECHAIN
void FMOD::DSP_ENVELOPEFOLLOWER::_set_USESIDECHAIN(::FMOD::DSP_ENVELOPEFOLLOWER value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::_set_USESIDECHAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_ENVELOPEFOLLOWER", "USESIDECHAIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_ENVELOPEFOLLOWER::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_ENVELOPEFOLLOWER::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_CONVOLUTION_REVERB
#include "FMOD/DSP_CONVOLUTION_REVERB.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CONVOLUTION_REVERB IR
::FMOD::DSP_CONVOLUTION_REVERB FMOD::DSP_CONVOLUTION_REVERB::_get_IR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_get_IR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CONVOLUTION_REVERB>("FMOD", "DSP_CONVOLUTION_REVERB", "IR"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CONVOLUTION_REVERB IR
void FMOD::DSP_CONVOLUTION_REVERB::_set_IR(::FMOD::DSP_CONVOLUTION_REVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_set_IR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CONVOLUTION_REVERB", "IR", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CONVOLUTION_REVERB WET
::FMOD::DSP_CONVOLUTION_REVERB FMOD::DSP_CONVOLUTION_REVERB::_get_WET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_get_WET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CONVOLUTION_REVERB>("FMOD", "DSP_CONVOLUTION_REVERB", "WET"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CONVOLUTION_REVERB WET
void FMOD::DSP_CONVOLUTION_REVERB::_set_WET(::FMOD::DSP_CONVOLUTION_REVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_set_WET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CONVOLUTION_REVERB", "WET", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CONVOLUTION_REVERB DRY
::FMOD::DSP_CONVOLUTION_REVERB FMOD::DSP_CONVOLUTION_REVERB::_get_DRY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_get_DRY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CONVOLUTION_REVERB>("FMOD", "DSP_CONVOLUTION_REVERB", "DRY"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CONVOLUTION_REVERB DRY
void FMOD::DSP_CONVOLUTION_REVERB::_set_DRY(::FMOD::DSP_CONVOLUTION_REVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_set_DRY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CONVOLUTION_REVERB", "DRY", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CONVOLUTION_REVERB LINKED
::FMOD::DSP_CONVOLUTION_REVERB FMOD::DSP_CONVOLUTION_REVERB::_get_LINKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_get_LINKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CONVOLUTION_REVERB>("FMOD", "DSP_CONVOLUTION_REVERB", "LINKED"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CONVOLUTION_REVERB LINKED
void FMOD::DSP_CONVOLUTION_REVERB::_set_LINKED(::FMOD::DSP_CONVOLUTION_REVERB value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::_set_LINKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CONVOLUTION_REVERB", "LINKED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_CONVOLUTION_REVERB::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CONVOLUTION_REVERB::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_CHANNELMIX_OUTPUT
#include "FMOD/DSP_CHANNELMIX_OUTPUT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT DEFAULT
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT DEFAULT
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_DEFAULT(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLMONO
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLMONO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLMONO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLMONO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLMONO
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLMONO(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLMONO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLMONO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLSTEREO
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLSTEREO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLSTEREO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLSTEREO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLSTEREO
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLSTEREO(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLSTEREO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLSTEREO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLQUAD
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLQUAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLQUAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLQUAD"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLQUAD
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLQUAD(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLQUAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLQUAD", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALL5POINT1
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALL5POINT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALL5POINT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALL5POINT1"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALL5POINT1
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALL5POINT1(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALL5POINT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALL5POINT1", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALL7POINT1
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALL7POINT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALL7POINT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALL7POINT1"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALL7POINT1
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALL7POINT1(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALL7POINT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALL7POINT1", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLLFE
::FMOD::DSP_CHANNELMIX_OUTPUT FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLLFE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_get_ALLLFE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX_OUTPUT>("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLLFE"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX_OUTPUT ALLLFE
void FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLLFE(::FMOD::DSP_CHANNELMIX_OUTPUT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::_set_ALLLFE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX_OUTPUT", "ALLLFE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_CHANNELMIX_OUTPUT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX_OUTPUT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_CHANNELMIX
#include "FMOD/DSP_CHANNELMIX.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX OUTPUTGROUPING
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_OUTPUTGROUPING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_OUTPUTGROUPING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "OUTPUTGROUPING"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX OUTPUTGROUPING
void FMOD::DSP_CHANNELMIX::_set_OUTPUTGROUPING(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_OUTPUTGROUPING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "OUTPUTGROUPING", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH0
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH0"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH0
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH0(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH0", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH1
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH1"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH1
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH1(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH1", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH2
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH2"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH2
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH2(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH2", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH3
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH3"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH3
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH3(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH3", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH4
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH4"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH4
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH4(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH4", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH5
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH5"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH5
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH5(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH5", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH6
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH6"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH6
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH6(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH6", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH7
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH7"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH7
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH7(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH7", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH8
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH8"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH8
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH8(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH8", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH9
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH9"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH9
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH9(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH9", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH10
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH10"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH10
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH10(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH10", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH11
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH11"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH11
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH11(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH11", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH12
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH12"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH12
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH12(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH12", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH13
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH13"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH13
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH13(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH13", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH14
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH14"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH14
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH14(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH14", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH15
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH15"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH15
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH15(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH15", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH16
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH16"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH16
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH16(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH16", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH17
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH17"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH17
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH17(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH17", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH18
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH18"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH18
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH18(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH18", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH19
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH19"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH19
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH19(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH19", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH20
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH20");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH20"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH20
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH20(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH20");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH20", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH21
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH21");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH21"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH21
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH21(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH21");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH21", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH22
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH22");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH22"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH22
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH22(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH22");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH22", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH23
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH23");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH23"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH23
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH23(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH23");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH23", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH24
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH24"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH24
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH24(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH24", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH25
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH25");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH25"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH25
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH25(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH25");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH25", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH26
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH26");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH26"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH26
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH26(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH26");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH26", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH27
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH27");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH27"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH27
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH27(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH27");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH27", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH28
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH28");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH28"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH28
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH28(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH28");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH28", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH29
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH29");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH29"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH29
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH29(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH29");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH29", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH30
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH30");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH30"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH30
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH30(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH30");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH30", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_CHANNELMIX GAIN_CH31
::FMOD::DSP_CHANNELMIX FMOD::DSP_CHANNELMIX::_get_GAIN_CH31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_get_GAIN_CH31");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_CHANNELMIX>("FMOD", "DSP_CHANNELMIX", "GAIN_CH31"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_CHANNELMIX GAIN_CH31
void FMOD::DSP_CHANNELMIX::_set_GAIN_CH31(::FMOD::DSP_CHANNELMIX value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::_set_GAIN_CH31");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_CHANNELMIX", "GAIN_CH31", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_CHANNELMIX::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_CHANNELMIX::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FMOD.DSP_TRANSCEIVER_SPEAKERMODE
#include "FMOD/DSP_TRANSCEIVER_SPEAKERMODE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE AUTO
::FMOD::DSP_TRANSCEIVER_SPEAKERMODE FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_AUTO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_AUTO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER_SPEAKERMODE>("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "AUTO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE AUTO
void FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_AUTO(::FMOD::DSP_TRANSCEIVER_SPEAKERMODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_AUTO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "AUTO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE MONO
::FMOD::DSP_TRANSCEIVER_SPEAKERMODE FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_MONO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_MONO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER_SPEAKERMODE>("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "MONO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE MONO
void FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_MONO(::FMOD::DSP_TRANSCEIVER_SPEAKERMODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_MONO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "MONO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE STEREO
::FMOD::DSP_TRANSCEIVER_SPEAKERMODE FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_STEREO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_STEREO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER_SPEAKERMODE>("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "STEREO"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE STEREO
void FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_STEREO(::FMOD::DSP_TRANSCEIVER_SPEAKERMODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_STEREO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "STEREO", value));
}
// Autogenerated static field getter
// Get static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE SURROUND
::FMOD::DSP_TRANSCEIVER_SPEAKERMODE FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_SURROUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_get_SURROUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP_TRANSCEIVER_SPEAKERMODE>("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "SURROUND"));
}
// Autogenerated static field setter
// Set static field: static public FMOD.DSP_TRANSCEIVER_SPEAKERMODE SURROUND
void FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_SURROUND(::FMOD::DSP_TRANSCEIVER_SPEAKERMODE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::_set_SURROUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("FMOD", "DSP_TRANSCEIVER_SPEAKERMODE", "SURROUND", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& FMOD::DSP_TRANSCEIVER_SPEAKERMODE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::DSP_TRANSCEIVER_SPEAKERMODE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
