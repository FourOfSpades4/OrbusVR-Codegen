// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem
#include "ExtUI/InventoryItem.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass44_0
#include "ExtUI/InventoryItem_--c__DisplayClass44_0.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass44_1
#include "ExtUI/InventoryItem_--c__DisplayClass44_1.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass45_0
#include "ExtUI/InventoryItem_--c__DisplayClass45_0.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass45_1
#include "ExtUI/InventoryItem_--c__DisplayClass45_1.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass46_0
#include "ExtUI/InventoryItem_--c__DisplayClass46_0.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass46_1
#include "ExtUI/InventoryItem_--c__DisplayClass46_1.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass48_0
#include "ExtUI/InventoryItem_--c__DisplayClass48_0.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String htmlName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_htmlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_htmlName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "htmlName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String icon
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "icon"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String description
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String prefabName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_prefabName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean descriptionCached
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn_descriptionCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_descriptionCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "descriptionCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxstackable
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_maxstackable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_maxstackable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxstackable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String defaultRarity
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_defaultRarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_defaultRarity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultRarity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String slot
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slot"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ilevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_ilevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_ilevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ilevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minlevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_minlevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_minlevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minlevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String reqclass
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_reqclass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_reqclass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reqclass"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& ExtUI::InventoryItem::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean destroyable
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn_destroyable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_destroyable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean soulbound
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn_soulbound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_soulbound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soulbound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sellsfor
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_sellsfor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_sellsfor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sellsfor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 foilType
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItem::dyn_foilType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_foilType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foilType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String model
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItem::dyn_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn_model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "model"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& ExtUI::InventoryItem::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _instancePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::InventoryItem::dyn__instancePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__instancePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instancePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _craftingPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::InventoryItem::dyn__craftingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__craftingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_craftingPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture _instanceTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& ExtUI::InventoryItem::dyn__instanceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__instanceTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instanceTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _triedFetchingMesh
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn__triedFetchingMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__triedFetchingMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triedFetchingMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _triedFetchingInstancePrefab
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn__triedFetchingInstancePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__triedFetchingInstancePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triedFetchingInstancePrefab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _triedFetchingCraftingPrefab
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn__triedFetchingCraftingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__triedFetchingCraftingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triedFetchingCraftingPrefab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _triedFetchingInstanceTexture
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItem::dyn__triedFetchingInstanceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::dyn__triedFetchingInstanceTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triedFetchingInstanceTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItem.FetchMesh
void ExtUI::InventoryItem::FetchMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::FetchMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.get_mesh
::UnityEngine::Mesh* ExtUI::InventoryItem::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.set_mesh
void ExtUI::InventoryItem::set_mesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ExtUI.InventoryItem.FetchInstancePrefab
void ExtUI::InventoryItem::FetchInstancePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::FetchInstancePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchInstancePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.get_instancePrefab
::UnityEngine::GameObject* ExtUI::InventoryItem::get_instancePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::get_instancePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instancePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.set_instancePrefab
void ExtUI::InventoryItem::set_instancePrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::set_instancePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_instancePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ExtUI.InventoryItem.FetchCraftingPrefab
void ExtUI::InventoryItem::FetchCraftingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::FetchCraftingPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchCraftingPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.get_craftingPrefab
::UnityEngine::GameObject* ExtUI::InventoryItem::get_craftingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::get_craftingPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_craftingPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.set_craftingPrefab
void ExtUI::InventoryItem::set_craftingPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::set_craftingPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_craftingPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ExtUI.InventoryItem.FetchInstanceTexture
void ExtUI::InventoryItem::FetchInstanceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::FetchInstanceTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchInstanceTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.get_instanceTexture
::UnityEngine::Texture* ExtUI::InventoryItem::get_instanceTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::get_instanceTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instanceTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItem.set_instanceTexture
void ExtUI::InventoryItem::set_instanceTexture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::set_instanceTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_instanceTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ExtUI.InventoryItem.GetMeshAsync
void ExtUI::InventoryItem::GetMeshAsync(::System::Action_1<::UnityEngine::Mesh*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::GetMeshAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.InventoryItem.GetPrefabAsync
void ExtUI::InventoryItem::GetPrefabAsync(::System::Action_1<::UnityEngine::GameObject*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::GetPrefabAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefabAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.InventoryItem.GetTextureAsync
void ExtUI::InventoryItem::GetTextureAsync(::System::Action_1<::UnityEngine::Texture*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::GetTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.InventoryItem.waitForDescription
void ExtUI::InventoryItem::waitForDescription(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::waitForDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass44_0
#include "ExtUI/InventoryItem_--c__DisplayClass44_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& ExtUI::InventoryItem::$$c__DisplayClass44_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Mesh> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Mesh*>*& ExtUI::InventoryItem::$$c__DisplayClass44_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Mesh*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass44_1
#include "ExtUI/InventoryItem_--c__DisplayClass44_1.hpp"
// Including type: UnityEngine.ResourceRequest
#include "UnityEngine/ResourceRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass44_0
#include "ExtUI/InventoryItem_--c__DisplayClass44_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceRequest async
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceRequest*& ExtUI::InventoryItem::$$c__DisplayClass44_1::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_1::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem/<>c__DisplayClass44_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem::$$c__DisplayClass44_0*& ExtUI::InventoryItem::$$c__DisplayClass44_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem::$$c__DisplayClass44_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItem/<>c__DisplayClass44_1.<GetMeshAsync>b__0
void ExtUI::InventoryItem::$$c__DisplayClass44_1::$GetMeshAsync$b__0(::UnityEngine::AsyncOperation* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_1::<GetMeshAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMeshAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass45_0
#include "ExtUI/InventoryItem_--c__DisplayClass45_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& ExtUI::InventoryItem::$$c__DisplayClass45_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass45_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.GameObject> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::GameObject*>*& ExtUI::InventoryItem::$$c__DisplayClass45_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass45_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass45_1
#include "ExtUI/InventoryItem_--c__DisplayClass45_1.hpp"
// Including type: UnityEngine.ResourceRequest
#include "UnityEngine/ResourceRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass45_0
#include "ExtUI/InventoryItem_--c__DisplayClass45_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceRequest async
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceRequest*& ExtUI::InventoryItem::$$c__DisplayClass45_1::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass45_1::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem/<>c__DisplayClass45_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem::$$c__DisplayClass45_0*& ExtUI::InventoryItem::$$c__DisplayClass45_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass45_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem::$$c__DisplayClass45_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItem/<>c__DisplayClass45_1.<GetPrefabAsync>b__0
void ExtUI::InventoryItem::$$c__DisplayClass45_1::$GetPrefabAsync$b__0(::UnityEngine::AsyncOperation* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass45_1::<GetPrefabAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPrefabAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass46_0
#include "ExtUI/InventoryItem_--c__DisplayClass46_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& ExtUI::InventoryItem::$$c__DisplayClass46_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass46_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Texture> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Texture*>*& ExtUI::InventoryItem::$$c__DisplayClass46_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass46_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Texture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass46_1
#include "ExtUI/InventoryItem_--c__DisplayClass46_1.hpp"
// Including type: UnityEngine.ResourceRequest
#include "UnityEngine/ResourceRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: ExtUI.InventoryItem/<>c__DisplayClass46_0
#include "ExtUI/InventoryItem_--c__DisplayClass46_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceRequest async
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceRequest*& ExtUI::InventoryItem::$$c__DisplayClass46_1::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass46_1::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem/<>c__DisplayClass46_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem::$$c__DisplayClass46_0*& ExtUI::InventoryItem::$$c__DisplayClass46_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass46_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem::$$c__DisplayClass46_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItem/<>c__DisplayClass46_1.<GetTextureAsync>b__0
void ExtUI::InventoryItem::$$c__DisplayClass46_1::$GetTextureAsync$b__0(::UnityEngine::AsyncOperation* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass46_1::<GetTextureAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetTextureAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItem/<>c__DisplayClass48_0
#include "ExtUI/InventoryItem_--c__DisplayClass48_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& ExtUI::InventoryItem::$$c__DisplayClass48_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass48_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::InventoryItem::$$c__DisplayClass48_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass48_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItem/<>c__DisplayClass48_0.<waitForDescription>b__0
void ExtUI::InventoryItem::$$c__DisplayClass48_0::$waitForDescription$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass48_0::<waitForDescription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForDescription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItemInstance
#include "ExtUI/InventoryItemInstance.hpp"
// Including type: ExtUI.InventoryItem
#include "ExtUI/InventoryItem.hpp"
// Including type: ExtUI.InventoryItemMeta
#include "ExtUI/InventoryItemMeta.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItem baseItem
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& ExtUI::InventoryItemInstance::dyn_baseItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_baseItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseItem"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stacks
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_stacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_stacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stacks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentDurability
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_currentDurability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_currentDurability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDurability"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItemMeta metaInfo
[[deprecated("Use field access instead!")]] ::ExtUI::InventoryItemMeta*& ExtUI::InventoryItemInstance::dyn_metaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_metaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metaInfo"))->offset;
  return *reinterpret_cast<::ExtUI::InventoryItemMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isTradable
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItemInstance::dyn_isTradable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_isTradable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTradable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 armor
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_armor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_armor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "armor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attack
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attack"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 strength
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intellect
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_intellect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_intellect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intellect"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 regen
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_regen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_regen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 defense
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_defense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_defense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 magdefense
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_magdefense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_magdefense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magdefense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vitality
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_vitality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_vitality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vitality"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 crit
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_crit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_crit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wisdom
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_wisdom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_wisdom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wisdom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 speed
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 luck
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_luck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_luck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "luck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxDurability
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_maxDurability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_maxDurability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDurability"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 itemLevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_itemLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_itemLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 itemPlusLevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemInstance::dyn_itemPlusLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_itemPlusLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemPlusLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String rarity
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemInstance::dyn_rarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_rarity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rarity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean perfect
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItemInstance::dyn_perfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_perfect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perfect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String loadout
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemInstance::dyn_loadout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::dyn_loadout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadout"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InventoryItemInstance.isBroken
bool ExtUI::InventoryItemInstance::isBroken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::isBroken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "isBroken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItemInstance.GetAppearanceId
int ExtUI::InventoryItemInstance::GetAppearanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::GetAppearanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppearanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItemInstance.MetaDescription
::StringW ExtUI::InventoryItemInstance::MetaDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::MetaDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MetaDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.InventoryItemInstance.CompareId
bool ExtUI::InventoryItemInstance::CompareId(::ExtUI::InventoryItemInstance* otherItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemInstance::CompareId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherItem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, otherItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InventoryItemMeta
#include "ExtUI/InventoryItemMeta.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32[] parts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& ExtUI::InventoryItemMeta::dyn_parts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_parts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] tileset
[[deprecated("Use field access instead!")]] ::ArrayW<int>& ExtUI::InventoryItemMeta::dyn_tileset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_tileset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileset"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] mutations
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InventoryItemMeta::dyn_mutations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_mutations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mutations"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sharddungeon
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_sharddungeon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_sharddungeon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharddungeon"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 shardlevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_shardlevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_shardlevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shardlevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String majordye
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_majordye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_majordye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "majordye"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String minordye
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_minordye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_minordye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minordye"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 durability
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_durability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_durability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "durability"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] tempTradable
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InventoryItemMeta::dyn_tempTradable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_tempTradable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTradable"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 strength
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intellect
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_intellect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_intellect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intellect"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 regen
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_regen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_regen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 defense
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_defense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_defense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 magdefense
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_magdefense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_magdefense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magdefense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vitality
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_vitality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_vitality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vitality"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 armor
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_armor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_armor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "armor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attack
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attack"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 crit
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_crit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_crit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wisdom
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_wisdom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_wisdom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wisdom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 speed
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 luck
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_luck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_luck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "luck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxDurability
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_maxDurability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_maxDurability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDurability"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String rarity
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_rarity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_rarity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rarity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] affixes
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InventoryItemMeta::dyn_affixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_affixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "affixes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean perfect
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItemMeta::dyn_perfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_perfect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perfect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] primaryColor
[[deprecated("Use field access instead!")]] ::ArrayW<int>& ExtUI::InventoryItemMeta::dyn_primaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_primaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryColor"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] secondaryColor
[[deprecated("Use field access instead!")]] ::ArrayW<int>& ExtUI::InventoryItemMeta::dyn_secondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_secondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryColor"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] spotColor
[[deprecated("Use field access instead!")]] ::ArrayW<int>& ExtUI::InventoryItemMeta::dyn_spotColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_spotColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spotColor"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 size
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mood
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_mood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_mood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mood"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 happiness
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_happiness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_happiness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "happiness"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bonusType
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_bonusType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_bonusType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonusType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rollLevel
[[deprecated("Use field access instead!")]] float& ExtUI::InventoryItemMeta::dyn_rollLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_rollLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rollLevel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 looksLike
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_looksLike() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_looksLike");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looksLike"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 itemLevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_itemLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_itemLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 itemPlusLevel
[[deprecated("Use field access instead!")]] int& ExtUI::InventoryItemMeta::dyn_itemPlusLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_itemPlusLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemPlusLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] containedItems
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InventoryItemMeta::dyn_containedItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_containedItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containedItems"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String loadout
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_loadout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_loadout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadout"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String locationId
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_locationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_locationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locationId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 expireTime
[[deprecated("Use field access instead!")]] int64_t& ExtUI::InventoryItemMeta::dyn_expireTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_expireTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expireTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean locked
[[deprecated("Use field access instead!")]] bool& ExtUI::InventoryItemMeta::dyn_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String breederName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::InventoryItemMeta::dyn_breederName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItemMeta::dyn_breederName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "breederName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterStatsResponse
#include "ExtUI/CharacterStatsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 armor
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_armor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_armor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "armor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attack
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_attack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_attack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attack"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 crit
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_crit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_crit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 defense
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_defense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_defense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 magdefense
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_magdefense() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_magdefense");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magdefense"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wisdom
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_wisdom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_wisdom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wisdom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 regen
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_regen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_regen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 speed
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 luck
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_luck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_luck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "luck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vitality
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_vitality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_vitality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vitality"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intellect
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_intellect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_intellect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intellect"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 strength
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterStatsResponse::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsResponse::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestCharacterStatsArray
#include "ExtUI/RequestCharacterStatsArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestCharacterStatsArray::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterStatsArray::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterStatsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterStatsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterStatsArray
#include "ExtUI/CharacterStatsArray.hpp"
// Including type: ExtUI.CharacterStatsArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterStatsArray_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::CharacterStatsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> stats
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& ExtUI::CharacterStatsArray::dyn_stats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::dyn_stats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stats"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterStatsArray.waitForStats
void ExtUI::CharacterStatsArray::waitForStats(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::waitForStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.CharacterStatsArray.GetStat
int ExtUI::CharacterStatsArray::GetStat(::StringW statKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::GetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, statKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterStatsArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterStatsArray_--c__DisplayClass2_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.CharacterStatsArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::CharacterStatsArray*& ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::CharacterStatsArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterStatsArray/<>c__DisplayClass2_0.<waitForStats>b__0
void ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::$waitForStats$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterStatsArray::$$c__DisplayClass2_0::<waitForStats>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForStats>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestCharacterTeleportDestinations
#include "ExtUI/RequestCharacterTeleportDestinations.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestCharacterTeleportDestinations::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterTeleportDestinations::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterTeleportDestinations::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterTeleportDestinations::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String pillarKey
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterTeleportDestinations::dyn_pillarKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterTeleportDestinations::dyn_pillarKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pillarKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.TeleportDestinationsResponse
#include "ExtUI/TeleportDestinationsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] destinations
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::TeleportDestinationsResponse::dyn_destinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsResponse::dyn_destinations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destinations"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.TeleportDestinationsArray
#include "ExtUI/TeleportDestinationsArray.hpp"
// Including type: ExtUI.TeleportDestinationsArray/<>c__DisplayClass3_0
#include "ExtUI/TeleportDestinationsArray_--c__DisplayClass3_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::TeleportDestinationsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String pillarkey
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::TeleportDestinationsArray::dyn_pillarkey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::dyn_pillarkey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pillarkey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] destinations
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::TeleportDestinationsArray::dyn_destinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::dyn_destinations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destinations"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.TeleportDestinationsArray.waitForDestinations
void ExtUI::TeleportDestinationsArray::waitForDestinations(::StringW pillarKey, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::waitForDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pillarKey), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pillarKey, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.TeleportDestinationsArray/<>c__DisplayClass3_0
#include "ExtUI/TeleportDestinationsArray_--c__DisplayClass3_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.TeleportDestinationsArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::TeleportDestinationsArray*& ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::TeleportDestinationsArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.TeleportDestinationsArray/<>c__DisplayClass3_0.<waitForDestinations>b__0
void ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::$waitForDestinations$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TeleportDestinationsArray::$$c__DisplayClass3_0::<waitForDestinations>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForDestinations>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestInfusionCalculation
#include "ExtUI/RequestInfusionCalculation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestInfusionCalculation::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestInfusionCalculation::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 oldidx
[[deprecated("Use field access instead!")]] int& ExtUI::RequestInfusionCalculation::dyn_oldidx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestInfusionCalculation::dyn_oldidx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldidx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 newidx
[[deprecated("Use field access instead!")]] int& ExtUI::RequestInfusionCalculation::dyn_newidx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestInfusionCalculation::dyn_newidx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newidx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InfusionCalculationResponse
#include "ExtUI/InfusionCalculationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] upgradedStatNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InfusionCalculationResponse::dyn_upgradedStatNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationResponse::dyn_upgradedStatNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradedStatNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] upgradedStatValues
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InfusionCalculationResponse::dyn_upgradedStatValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationResponse::dyn_upgradedStatValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradedStatValues"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InfusionCalculationArray
#include "ExtUI/InfusionCalculationArray.hpp"
// Including type: ExtUI.InfusionCalculationArray/<>c__DisplayClass4_0
#include "ExtUI/InfusionCalculationArray_--c__DisplayClass4_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 oldidx
[[deprecated("Use field access instead!")]] int& ExtUI::InfusionCalculationArray::dyn_oldidx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::dyn_oldidx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldidx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 newidx
[[deprecated("Use field access instead!")]] int& ExtUI::InfusionCalculationArray::dyn_newidx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::dyn_newidx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newidx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] upgradedStatNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InfusionCalculationArray::dyn_upgradedStatNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::dyn_upgradedStatNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradedStatNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] upgradedStatValues
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::InfusionCalculationArray::dyn_upgradedStatValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::dyn_upgradedStatValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradedStatValues"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InfusionCalculationArray.waitForCalculation
void ExtUI::InfusionCalculationArray::waitForCalculation(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::waitForCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.InfusionCalculationArray/<>c__DisplayClass4_0
#include "ExtUI/InfusionCalculationArray_--c__DisplayClass4_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.InfusionCalculationArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::InfusionCalculationArray*& ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::InfusionCalculationArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.InfusionCalculationArray/<>c__DisplayClass4_0.<waitForCalculation>b__0
void ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::$waitForCalculation$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationArray::$$c__DisplayClass4_0::<waitForCalculation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForCalculation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterTalentsResponse
#include "ExtUI/CharacterTalentsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 tierone
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterTalentsResponse::dyn_tierone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::dyn_tierone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tierone"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tiertwo
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterTalentsResponse::dyn_tiertwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::dyn_tiertwo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tiertwo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tierthree
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterTalentsResponse::dyn_tierthree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::dyn_tierthree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tierthree"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tierfour
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterTalentsResponse::dyn_tierfour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::dyn_tierfour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tierfour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tierfive
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterTalentsResponse::dyn_tierfive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::dyn_tierfive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tierfive"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestCharacterTalentsArray
#include "ExtUI/RequestCharacterTalentsArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestCharacterTalentsArray::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterTalentsArray::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterTalentsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterTalentsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterTalentsArray
#include "ExtUI/CharacterTalentsArray.hpp"
// Including type: ExtUI.CharacterTalentsArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterTalentsArray_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::CharacterTalentsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> stats
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& ExtUI::CharacterTalentsArray::dyn_stats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::dyn_stats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stats"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterTalentsArray.waitForTalents
void ExtUI::CharacterTalentsArray::waitForTalents(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::waitForTalents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForTalents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.CharacterTalentsArray.GetTalent
int ExtUI::CharacterTalentsArray::GetTalent(::StringW statKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::GetTalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, statKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterTalentsArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterTalentsArray_--c__DisplayClass2_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.CharacterTalentsArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::CharacterTalentsArray*& ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::CharacterTalentsArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterTalentsArray/<>c__DisplayClass2_0.<waitForTalents>b__0
void ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::$waitForTalents$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsArray::$$c__DisplayClass2_0::<waitForTalents>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForTalents>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterPerksResponse
#include "ExtUI/CharacterPerksResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 mountSpeed
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_mountSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_mountSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mountSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 luck
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_luck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_luck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "luck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 weight
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 potionMaking
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_potionMaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_potionMaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potionMaking"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lureCrafting
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_lureCrafting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_lureCrafting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lureCrafting"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 potionAging
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_potionAging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_potionAging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "potionAging"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 priceDecrease
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_priceDecrease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_priceDecrease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priceDecrease"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dramCap
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_dramCap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_dramCap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dramCap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fishing
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_fishing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_fishing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fishing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cauldronSpeed
[[deprecated("Use field access instead!")]] int& ExtUI::CharacterPerksResponse::dyn_cauldronSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksResponse::dyn_cauldronSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cauldronSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestCharacterPerksArray
#include "ExtUI/RequestCharacterPerksArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestCharacterPerksArray::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterPerksArray::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterPerksArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterPerksArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterPerksArray
#include "ExtUI/CharacterPerksArray.hpp"
// Including type: ExtUI.CharacterPerksArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterPerksArray_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::CharacterPerksArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> stats
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& ExtUI::CharacterPerksArray::dyn_stats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::dyn_stats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stats"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterPerksArray.waitForPerks
void ExtUI::CharacterPerksArray::waitForPerks(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::waitForPerks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForPerks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.CharacterPerksArray.GetPerk
int ExtUI::CharacterPerksArray::GetPerk(::StringW statKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::GetPerk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPerk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, statKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterPerksArray/<>c__DisplayClass2_0
#include "ExtUI/CharacterPerksArray_--c__DisplayClass2_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.CharacterPerksArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::CharacterPerksArray*& ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::CharacterPerksArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterPerksArray/<>c__DisplayClass2_0.<waitForPerks>b__0
void ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::$waitForPerks$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterPerksArray::$$c__DisplayClass2_0::<waitForPerks>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForPerks>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterAchievementsResponse
#include "ExtUI/CharacterAchievementsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String achievementData
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::CharacterAchievementsResponse::dyn_achievementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsResponse::dyn_achievementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievementData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestCharacterAchievementsArray
#include "ExtUI/RequestCharacterAchievementsArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestCharacterAchievementsArray::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterAchievementsArray::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestCharacterAchievementsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestCharacterAchievementsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterAchievementsArray
#include "ExtUI/CharacterAchievementsArray.hpp"
// Including type: ExtUI.CharacterAchievementsArray/<>c__DisplayClass3_0
#include "ExtUI/CharacterAchievementsArray_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::CharacterAchievementsArray::dyn_characterid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::dyn_characterid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Single> achievements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, float>*& ExtUI::CharacterAchievementsArray::dyn_achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::dyn_achievements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> achievementNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& ExtUI::CharacterAchievementsArray::dyn_achievementNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::dyn_achievementNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievementNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterAchievementsArray.waitForAchievements
void ExtUI::CharacterAchievementsArray::waitForAchievements(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::waitForAchievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: ExtUI.CharacterAchievementsArray.GetAchievementPercentage
float ExtUI::CharacterAchievementsArray::GetAchievementPercentage(::StringW achievementKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::GetAchievementPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementKey)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, achievementKey);
}
// Autogenerated method: ExtUI.CharacterAchievementsArray.GetAchievementNames
::System::Collections::Generic::List_1<::StringW>* ExtUI::CharacterAchievementsArray::GetAchievementNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::GetAchievementNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.CharacterAchievementsArray/<>c__DisplayClass3_0
#include "ExtUI/CharacterAchievementsArray_--c__DisplayClass3_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.CharacterAchievementsArray <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::CharacterAchievementsArray*& ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::CharacterAchievementsArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.CharacterAchievementsArray/<>c__DisplayClass3_0.<waitForAchievements>b__0
void ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::$waitForAchievements$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterAchievementsArray::$$c__DisplayClass3_0::<waitForAchievements>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForAchievements>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.TradeOffer
#include "ExtUI/TradeOffer.hpp"
// Including type: ExtUI.InventoryItemInstance
#include "ExtUI/InventoryItemInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String myOffer
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::TradeOffer::dyn_myOffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_myOffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myOffer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String theirOffer
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::TradeOffer::dyn_theirOffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_theirOffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "theirOffer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String theirName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::TradeOffer::dyn_theirName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_theirName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "theirName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean haveIAccepted
[[deprecated("Use field access instead!")]] bool& ExtUI::TradeOffer::dyn_haveIAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_haveIAccepted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveIAccepted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean haveTheyAccepted
[[deprecated("Use field access instead!")]] bool& ExtUI::TradeOffer::dyn_haveTheyAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_haveTheyAccepted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveTheyAccepted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 myCurrencyOffer
[[deprecated("Use field access instead!")]] int& ExtUI::TradeOffer::dyn_myCurrencyOffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_myCurrencyOffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCurrencyOffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 theirCurrencyOffer
[[deprecated("Use field access instead!")]] int& ExtUI::TradeOffer::dyn_theirCurrencyOffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_theirCurrencyOffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "theirCurrencyOffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItemInstance[] myOfferInstance
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& ExtUI::TradeOffer::dyn_myOfferInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_myOfferInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myOfferInstance"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::InventoryItemInstance*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.InventoryItemInstance[] theirOfferInstance
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& ExtUI::TradeOffer::dyn_theirOfferInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::dyn_theirOfferInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "theirOfferInstance"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::InventoryItemInstance*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.TradeOffer.UpdateItemInstances
void ExtUI::TradeOffer::UpdateItemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::TradeOffer::UpdateItemInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateItemInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FriendsListEntry
#include "ExtUI/FriendsListEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String dbid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FriendsListEntry::dyn_dbid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FriendsListEntry::dyn_dbid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dbid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FriendsListEntry::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FriendsListEntry::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String lastzone
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FriendsListEntry::dyn_lastzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FriendsListEntry::dyn_lastzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastzone"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isonline
[[deprecated("Use field access instead!")]] bool& ExtUI::FriendsListEntry::dyn_isonline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FriendsListEntry::dyn_isonline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isonline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FellowshipListEntry
#include "ExtUI/FellowshipListEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastseen
[[deprecated("Use field access instead!")]] int& ExtUI::FellowshipListEntry::dyn_lastseen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipListEntry::dyn_lastseen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastseen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOfficer
[[deprecated("Use field access instead!")]] bool& ExtUI::FellowshipListEntry::dyn_isOfficer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipListEntry::dyn_isOfficer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOfficer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasChestAccess
[[deprecated("Use field access instead!")]] bool& ExtUI::FellowshipListEntry::dyn_hasChestAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipListEntry::dyn_hasChestAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasChestAccess"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PrivateMessageJson
#include "ExtUI/PrivateMessageJson.hpp"
// Including type: ExtUI.PrivateMessage
#include "ExtUI/PrivateMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessageJson::dyn_playerid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageJson::dyn_playerid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.PrivateMessage[] messages
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::PrivateMessage*>& ExtUI::PrivateMessageJson::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageJson::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::PrivateMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PrivateMessage
#include "ExtUI/PrivateMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessage::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String subject
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessage::dyn_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] readBy
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessage::dyn_readBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_readBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBy"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String from
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessage::dyn_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "from"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String fromName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessage::dyn_fromName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_fromName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] recipients
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessage::dyn_recipients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_recipients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recipients"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] recipientNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessage::dyn_recipientNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_recipientNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recipientNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timestamp
[[deprecated("Use field access instead!")]] int& ExtUI::PrivateMessage::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isNew
[[deprecated("Use field access instead!")]] bool& ExtUI::PrivateMessage::dyn_isNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessage::dyn_isNew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNew"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PrivateMessageResponse
#include "ExtUI/PrivateMessageResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessageResponse::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageResponse::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] messages
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessageResponse::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageResponse::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] fromNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessageResponse::dyn_fromNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageResponse::dyn_fromNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestPrivateMessage
#include "ExtUI/RequestPrivateMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestPrivateMessage::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestPrivateMessage::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String threadid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::RequestPrivateMessage::dyn_threadid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestPrivateMessage::dyn_threadid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestUnlockedSkins
#include "ExtUI/RequestUnlockedSkins.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestUnlockedSkins::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestUnlockedSkins::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestReputationRank
#include "ExtUI/RequestReputationRank.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestReputationRank::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestReputationRank::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte reputationtype
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestReputationRank::dyn_reputationtype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestReputationRank::dyn_reputationtype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reputationtype"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestVendorMissions
#include "ExtUI/RequestVendorMissions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestVendorMissions::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestVendorMissions::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 vendorGuid
[[deprecated("Use field access instead!")]] uint16_t& ExtUI::RequestVendorMissions::dyn_vendorGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestVendorMissions::dyn_vendorGuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vendorGuid"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestMissions
#include "ExtUI/RequestMissions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestMissions::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestMissions::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestTitles
#include "ExtUI/RequestTitles.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestTitles::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestTitles::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestVendorDialogType
#include "ExtUI/RequestVendorDialogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestVendorDialogType::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestVendorDialogType::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 vendorGuid
[[deprecated("Use field access instead!")]] uint16_t& ExtUI::RequestVendorDialogType::dyn_vendorGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestVendorDialogType::dyn_vendorGuid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vendorGuid"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.RequestUnlockedBlueprints
#include "ExtUI/RequestUnlockedBlueprints.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte requestType
[[deprecated("Use field access instead!")]] uint8_t& ExtUI::RequestUnlockedBlueprints::dyn_requestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::RequestUnlockedBlueprints::dyn_requestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestType"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.DataRequest
#include "ExtUI/DataRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDone
[[deprecated("Use field access instead!")]] bool& ExtUI::DataRequest::dyn_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::DataRequest::dyn_isDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String response
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::DataRequest::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::DataRequest::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.WaitforRequestResponse
#include "ExtUI/WaitforRequestResponse.hpp"
// Including type: ExtUI.DataRequest
#include "ExtUI/DataRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ExtUI.DataRequest request
[[deprecated("Use field access instead!")]] ::ExtUI::DataRequest*& ExtUI::WaitforRequestResponse::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::WaitforRequestResponse::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::ExtUI::DataRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.WaitforRequestResponse.get_keepWaiting
bool ExtUI::WaitforRequestResponse::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::WaitforRequestResponse::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PrivateMessageThread
#include "ExtUI/PrivateMessageThread.hpp"
// Including type: ExtUI.PrivateMessageThread/<>c__DisplayClass3_0
#include "ExtUI/PrivateMessageThread_--c__DisplayClass3_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] messages
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessageThread::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] fromNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& ExtUI::PrivateMessageThread::dyn_fromNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::dyn_fromNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String threadid
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PrivateMessageThread::dyn_threadid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::dyn_threadid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.PrivateMessageThread.waitForThread
void ExtUI::PrivateMessageThread::waitForThread(::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::waitForThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "waitForThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PrivateMessageThread/<>c__DisplayClass3_0
#include "ExtUI/PrivateMessageThread_--c__DisplayClass3_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.PrivateMessageThread <>4__this
[[deprecated("Use field access instead!")]] ::ExtUI::PrivateMessageThread*& ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ExtUI::PrivateMessageThread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.PrivateMessageThread/<>c__DisplayClass3_0.<waitForThread>b__0
void ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::$waitForThread$b__0(::StringW jsonResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PrivateMessageThread::$$c__DisplayClass3_0::<waitForThread>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<waitForThread>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonResponse);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.LfgPostJson
#include "ExtUI/LfgPostJson.hpp"
// Including type: ExtUI.LfgPost
#include "ExtUI/LfgPost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String timestamp
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::LfgPostJson::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPostJson::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExtUI.LfgPost[] posts
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::LfgPost*>& ExtUI::LfgPostJson::dyn_posts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPostJson::dyn_posts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posts"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::LfgPost*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.LfgPost
#include "ExtUI/LfgPost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::LfgPost::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String posterName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::LfgPost::dyn_posterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_posterName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posterName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String posterId
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::LfgPost::dyn_posterId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_posterId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posterId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::LfgPost::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minLevel
[[deprecated("Use field access instead!")]] int& ExtUI::LfgPost::dyn_minLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_minLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxLevel
[[deprecated("Use field access instead!")]] int& ExtUI::LfgPost::dyn_maxLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_maxLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timestamp
[[deprecated("Use field access instead!")]] int& ExtUI::LfgPost::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::LfgPost::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.BlogPost
#include "ExtUI/BlogPost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::BlogPost::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPost::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String title
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::BlogPost::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPost::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String slug
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::BlogPost::dyn_slug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPost::dyn_slug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slug"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String markdown
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::BlogPost::dyn_markdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPost::dyn_markdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markdown"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.BlogPostList
#include "ExtUI/BlogPostList.hpp"
// Including type: ExtUI.BlogPost
#include "ExtUI/BlogPost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.BlogPost[] posts
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::BlogPost*>& ExtUI::BlogPostList::dyn_posts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPostList::dyn_posts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posts"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::BlogPost*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.ScoreboardEntry
#include "ExtUI/ScoreboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::ScoreboardEntry::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 kills
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_kills() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_kills");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kills"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 deaths
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_deaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_deaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deaths"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 damageDone
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_damageDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_damageDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damageDone"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 damageTaken
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_damageTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_damageTaken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damageTaken"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 healingDone
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_healingDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_healingDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healingDone"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 healingTaken
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_healingTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_healingTaken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healingTaken"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 captures
[[deprecated("Use field access instead!")]] int& ExtUI::ScoreboardEntry::dyn_captures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_captures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captures"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single kdr
[[deprecated("Use field access instead!")]] float& ExtUI::ScoreboardEntry::dyn_kdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardEntry::dyn_kdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kdr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.ScoreboardList
#include "ExtUI/ScoreboardList.hpp"
// Including type: ExtUI.ScoreboardEntry
#include "ExtUI/ScoreboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.ScoreboardEntry[] scores
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::ScoreboardEntry*>& ExtUI::ScoreboardList::dyn_scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::ScoreboardList::dyn_scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scores"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::ScoreboardEntry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.BlockedPlayerInfo
#include "ExtUI/BlockedPlayerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ids
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::BlockedPlayerInfo::dyn_ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlockedPlayerInfo::dyn_ids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ids"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.BlockedPlayers
#include "ExtUI/BlockedPlayers.hpp"
// Including type: ExtUI.BlockedPlayerInfo
#include "ExtUI/BlockedPlayerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExtUI.BlockedPlayerInfo[] playerIDs
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::BlockedPlayerInfo*>& ExtUI::BlockedPlayers::dyn_playerIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlockedPlayers::dyn_playerIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerIDs"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::BlockedPlayerInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.StringExt
#include "ExtUI/StringExt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ExtUI.StringExt.Truncate
::StringW ExtUI::StringExt::Truncate(::StringW value, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::StringExt::Truncate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ExtUI", "StringExt", "Truncate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, maxLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ExtUI.FellowshipChest
#include "ExtUI/FellowshipChest.hpp"
// Including type: ExtUI.FellowshipChest/<>c
#include "ExtUI/FellowshipChest_--c.hpp"
// Including type: MagicalActual.NetEntity
#include "MagicalActual/NetEntity.hpp"
// Including type: MagicalActual.ItemContainer
#include "MagicalActual/ItemContainer.hpp"
// Including type: MagicalActual.WorldMenu
#include "MagicalActual/WorldMenu.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OrbusNetComponent
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FellowshipChest::dyn_OrbusNetComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_OrbusNetComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrbusNetComponent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.NetEntity myEntity
[[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& ExtUI::FellowshipChest::dyn_myEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_myEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myEntity"))->offset;
  return *reinterpret_cast<::MagicalActual::NetEntity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.ItemContainer myItemContainer
[[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& ExtUI::FellowshipChest::dyn_myItemContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_myItemContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myItemContainer"))->offset;
  return *reinterpret_cast<::MagicalActual::ItemContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.WorldMenu interactionMenu
[[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& ExtUI::FellowshipChest::dyn_interactionMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_interactionMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionMenu"))->offset;
  return *reinterpret_cast<::MagicalActual::WorldMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String chestLog
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FellowshipChest::dyn_chestLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_chestLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fellowshipOwnerId
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FellowshipChest::dyn_fellowshipOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::dyn_fellowshipOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fellowshipOwnerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FellowshipChest.Awake
void ExtUI::FellowshipChest::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.Start
void ExtUI::FellowshipChest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.UpdateChestLog
void ExtUI::FellowshipChest::UpdateChestLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::UpdateChestLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateChestLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.ItemContainerInventoryChanged
void ExtUI::FellowshipChest::ItemContainerInventoryChanged(::MagicalActual::ItemContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::ItemContainerInventoryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ItemContainerInventoryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: ExtUI.FellowshipChest.PlayerInteraction
void ExtUI::FellowshipChest::PlayerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::PlayerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.WithdrawCurrency
void ExtUI::FellowshipChest::WithdrawCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::WithdrawCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithdrawCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.AvailableCurrency
int ExtUI::FellowshipChest::AvailableCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::AvailableCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AvailableCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest.orbusNetInit
void ExtUI::FellowshipChest::orbusNetInit(::MagicalActual::NetEntity* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::orbusNetInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "orbusNetInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: ExtUI.FellowshipChest.<orbusNetInit>b__13_0
void ExtUI::FellowshipChest::$orbusNetInit$b__13_0(::System::Collections::ArrayList* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::<orbusNetInit>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<orbusNetInit>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: ExtUI.FellowshipChest.<orbusNetInit>b__13_1
void ExtUI::FellowshipChest::$orbusNetInit$b__13_1(::Il2CppObject* newvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::<orbusNetInit>b__13_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<orbusNetInit>b__13_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newvalue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newvalue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FellowshipChest/<>c
#include "ExtUI/FellowshipChest_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ExtUI.FellowshipChest/<>c <>9
::ExtUI::FellowshipChest::$$c* ExtUI::FellowshipChest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExtUI::FellowshipChest::$$c*>("ExtUI", "FellowshipChest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ExtUI.FellowshipChest/<>c <>9
void ExtUI::FellowshipChest::$$c::_set_$$9(::ExtUI::FellowshipChest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "FellowshipChest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.BinaryWriter> <>9__8_0
::System::Action_1<::System::IO::BinaryWriter*>* ExtUI::FellowshipChest::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::BinaryWriter*>*>("ExtUI", "FellowshipChest/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.BinaryWriter> <>9__8_0
void ExtUI::FellowshipChest::$$c::_set_$$9__8_0(::System::Action_1<::System::IO::BinaryWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "FellowshipChest/<>c", "<>9__8_0", value)));
}
// Autogenerated method: ExtUI.FellowshipChest/<>c..cctor
void ExtUI::FellowshipChest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ExtUI", "FellowshipChest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipChest/<>c.<UpdateChestLog>b__8_0
void ExtUI::FellowshipChest::$$c::$UpdateChestLog$b__8_0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipChest::$$c::<UpdateChestLog>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateChestLog>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FellowshipRegistrar
#include "ExtUI/FellowshipRegistrar.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MagicalActual.WorldMenu
#include "MagicalActual/WorldMenu.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ownerMenuPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::FellowshipRegistrar::dyn_ownerMenuPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::dyn_ownerMenuPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerMenuPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.WorldMenu interactionMenu
[[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& ExtUI::FellowshipRegistrar::dyn_interactionMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::dyn_interactionMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionMenu"))->offset;
  return *reinterpret_cast<::MagicalActual::WorldMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset MenuHtml
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& ExtUI::FellowshipRegistrar::dyn_MenuHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::dyn_MenuHtml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MenuHtml"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FellowshipRegistrar.Start
void ExtUI::FellowshipRegistrar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipRegistrar.PlayerInteraction
void ExtUI::FellowshipRegistrar::PlayerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::PlayerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipRegistrar.ResetMenu
void ExtUI::FellowshipRegistrar::ResetMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::ResetMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FellowshipRegistrar.OnDestroy
void ExtUI::FellowshipRegistrar::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FellowshipRegistrar::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest
#include "ExtUI/FurnitureChest.hpp"
// Including type: ExtUI.FurnitureChest/orbusNetMethodIdx
#include "ExtUI/FurnitureChest_orbusNetMethodIdx.hpp"
// Including type: ExtUI.FurnitureChest/orbusIncomingMethodIdx
#include "ExtUI/FurnitureChest_orbusIncomingMethodIdx.hpp"
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass18_0
#include "ExtUI/FurnitureChest_--c__DisplayClass18_0.hpp"
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass19_0
#include "ExtUI/FurnitureChest_--c__DisplayClass19_0.hpp"
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass20_0
#include "ExtUI/FurnitureChest_--c__DisplayClass20_0.hpp"
// Including type: ExtUI.FurnitureChest/<>c
#include "ExtUI/FurnitureChest_--c.hpp"
// Including type: ExtUI.InventoryItemInstance
#include "ExtUI/InventoryItemInstance.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MagicalActual.NetEntity
#include "MagicalActual/NetEntity.hpp"
// Including type: MagicalActual.ItemContainer
#include "MagicalActual/ItemContainer.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OrbusNetComponent
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FurnitureChest::dyn_OrbusNetComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_OrbusNetComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrbusNetComponent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExtUI.InventoryItemInstance[] currentFurniture
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& ExtUI::FurnitureChest::dyn_currentFurniture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_currentFurniture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentFurniture"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::InventoryItemInstance*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] furnitureSlots
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& ExtUI::FurnitureChest::dyn_furnitureSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_furnitureSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "furnitureSlots"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject furniturePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::FurnitureChest::dyn_furniturePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_furniturePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "furniturePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.NetEntity myEntity
[[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& ExtUI::FurnitureChest::dyn_myEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_myEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myEntity"))->offset;
  return *reinterpret_cast<::MagicalActual::NetEntity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.ItemContainer myItemContainer
[[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& ExtUI::FurnitureChest::dyn_myItemContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_myItemContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myItemContainer"))->offset;
  return *reinterpret_cast<::MagicalActual::ItemContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String furnitureName
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::FurnitureChest::dyn_furnitureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_furnitureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "furnitureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buildMode
[[deprecated("Use field access instead!")]] bool& ExtUI::FurnitureChest::dyn_buildMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::dyn_buildMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FurnitureChest.Awake
void ExtUI::FurnitureChest::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.Start
void ExtUI::FurnitureChest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.ItemContainerInventoryChanged
void ExtUI::FurnitureChest::ItemContainerInventoryChanged(::MagicalActual::ItemContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::ItemContainerInventoryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ItemContainerInventoryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: ExtUI.FurnitureChest.UpdateRoom
void ExtUI::FurnitureChest::UpdateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::UpdateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.GetBuildMode
bool ExtUI::FurnitureChest::GetBuildMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::GetBuildMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuildMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.ToggleBuildMode
void ExtUI::FurnitureChest::ToggleBuildMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::ToggleBuildMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleBuildMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.UpdateAllInteractables
void ExtUI::FurnitureChest::UpdateAllInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::UpdateAllInteractables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllInteractables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.UpdateInteractable
void ExtUI::FurnitureChest::UpdateInteractable(int slotNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::UpdateInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slotNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slotNum);
}
// Autogenerated method: ExtUI.FurnitureChest.LoadSavedPositionAndRotation
void ExtUI::FurnitureChest::LoadSavedPositionAndRotation(int slotNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::LoadSavedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSavedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slotNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slotNum);
}
// Autogenerated method: ExtUI.FurnitureChest.ResetSavedPositionAndRotation
void ExtUI::FurnitureChest::ResetSavedPositionAndRotation(int slotNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::ResetSavedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetSavedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slotNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slotNum);
}
// Autogenerated method: ExtUI.FurnitureChest.SavePositionAndRotation
void ExtUI::FurnitureChest::SavePositionAndRotation(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int slotNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::SavePositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SavePositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(slotNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation, slotNum);
}
// Autogenerated method: ExtUI.FurnitureChest.SaveAllObjectData
void ExtUI::FurnitureChest::SaveAllObjectData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::SaveAllObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveAllObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.RequestUpgrade
void ExtUI::FurnitureChest::RequestUpgrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::RequestUpgrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestUpgrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest.orbusNetInit
void ExtUI::FurnitureChest::orbusNetInit(::MagicalActual::NetEntity* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "orbusNetInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: ExtUI.FurnitureChest.<orbusNetInit>b__23_0
void ExtUI::FurnitureChest::$orbusNetInit$b__23_0(::System::Collections::ArrayList* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::<orbusNetInit>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<orbusNetInit>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/orbusNetMethodIdx
#include "ExtUI/FurnitureChest_orbusNetMethodIdx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx SAVE
::ExtUI::FurnitureChest::orbusNetMethodIdx ExtUI::FurnitureChest::orbusNetMethodIdx::_get_SAVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_get_SAVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::orbusNetMethodIdx>("ExtUI", "FurnitureChest/orbusNetMethodIdx", "SAVE"));
}
// Autogenerated static field setter
// Set static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx SAVE
void ExtUI::FurnitureChest::orbusNetMethodIdx::_set_SAVE(::ExtUI::FurnitureChest::orbusNetMethodIdx value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_set_SAVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/orbusNetMethodIdx", "SAVE", value));
}
// Autogenerated static field getter
// Get static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx RESET
::ExtUI::FurnitureChest::orbusNetMethodIdx ExtUI::FurnitureChest::orbusNetMethodIdx::_get_RESET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_get_RESET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::orbusNetMethodIdx>("ExtUI", "FurnitureChest/orbusNetMethodIdx", "RESET"));
}
// Autogenerated static field setter
// Set static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx RESET
void ExtUI::FurnitureChest::orbusNetMethodIdx::_set_RESET(::ExtUI::FurnitureChest::orbusNetMethodIdx value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_set_RESET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/orbusNetMethodIdx", "RESET", value));
}
// Autogenerated static field getter
// Get static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx LOAD
::ExtUI::FurnitureChest::orbusNetMethodIdx ExtUI::FurnitureChest::orbusNetMethodIdx::_get_LOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_get_LOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::orbusNetMethodIdx>("ExtUI", "FurnitureChest/orbusNetMethodIdx", "LOAD"));
}
// Autogenerated static field setter
// Set static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx LOAD
void ExtUI::FurnitureChest::orbusNetMethodIdx::_set_LOAD(::ExtUI::FurnitureChest::orbusNetMethodIdx value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_set_LOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/orbusNetMethodIdx", "LOAD", value));
}
// Autogenerated static field getter
// Get static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx UPGRADE
::ExtUI::FurnitureChest::orbusNetMethodIdx ExtUI::FurnitureChest::orbusNetMethodIdx::_get_UPGRADE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_get_UPGRADE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::orbusNetMethodIdx>("ExtUI", "FurnitureChest/orbusNetMethodIdx", "UPGRADE"));
}
// Autogenerated static field setter
// Set static field: static public ExtUI.FurnitureChest/orbusNetMethodIdx UPGRADE
void ExtUI::FurnitureChest::orbusNetMethodIdx::_set_UPGRADE(::ExtUI::FurnitureChest::orbusNetMethodIdx value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::_set_UPGRADE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/orbusNetMethodIdx", "UPGRADE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ExtUI::FurnitureChest::orbusNetMethodIdx::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusNetMethodIdx::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/orbusIncomingMethodIdx
#include "ExtUI/FurnitureChest_orbusIncomingMethodIdx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ExtUI.FurnitureChest/orbusIncomingMethodIdx LOAD
::ExtUI::FurnitureChest::orbusIncomingMethodIdx ExtUI::FurnitureChest::orbusIncomingMethodIdx::_get_LOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusIncomingMethodIdx::_get_LOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::orbusIncomingMethodIdx>("ExtUI", "FurnitureChest/orbusIncomingMethodIdx", "LOAD"));
}
// Autogenerated static field setter
// Set static field: static public ExtUI.FurnitureChest/orbusIncomingMethodIdx LOAD
void ExtUI::FurnitureChest::orbusIncomingMethodIdx::_set_LOAD(::ExtUI::FurnitureChest::orbusIncomingMethodIdx value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusIncomingMethodIdx::_set_LOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/orbusIncomingMethodIdx", "LOAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ExtUI::FurnitureChest::orbusIncomingMethodIdx::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::orbusIncomingMethodIdx::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass18_0
#include "ExtUI/FurnitureChest_--c__DisplayClass18_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 slotNum
[[deprecated("Use field access instead!")]] int& ExtUI::FurnitureChest::$$c__DisplayClass18_0::dyn_slotNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass18_0::dyn_slotNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slotNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FurnitureChest/<>c__DisplayClass18_0.<LoadSavedPositionAndRotation>b__0
void ExtUI::FurnitureChest::$$c__DisplayClass18_0::$LoadSavedPositionAndRotation$b__0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass18_0::<LoadSavedPositionAndRotation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSavedPositionAndRotation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass19_0
#include "ExtUI/FurnitureChest_--c__DisplayClass19_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 slotNum
[[deprecated("Use field access instead!")]] int& ExtUI::FurnitureChest::$$c__DisplayClass19_0::dyn_slotNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass19_0::dyn_slotNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slotNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FurnitureChest/<>c__DisplayClass19_0.<ResetSavedPositionAndRotation>b__0
void ExtUI::FurnitureChest::$$c__DisplayClass19_0::$ResetSavedPositionAndRotation$b__0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass19_0::<ResetSavedPositionAndRotation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResetSavedPositionAndRotation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/<>c__DisplayClass20_0
#include "ExtUI/FurnitureChest_--c__DisplayClass20_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 slotNum
[[deprecated("Use field access instead!")]] int& ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_slotNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass20_0::dyn_slotNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slotNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.FurnitureChest/<>c__DisplayClass20_0.<SavePositionAndRotation>b__0
void ExtUI::FurnitureChest::$$c__DisplayClass20_0::$SavePositionAndRotation$b__0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c__DisplayClass20_0::<SavePositionAndRotation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SavePositionAndRotation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.FurnitureChest/<>c
#include "ExtUI/FurnitureChest_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ExtUI.FurnitureChest/<>c <>9
::ExtUI::FurnitureChest::$$c* ExtUI::FurnitureChest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExtUI::FurnitureChest::$$c*>("ExtUI", "FurnitureChest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ExtUI.FurnitureChest/<>c <>9
void ExtUI::FurnitureChest::$$c::_set_$$9(::ExtUI::FurnitureChest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.BinaryWriter> <>9__22_0
::System::Action_1<::System::IO::BinaryWriter*>* ExtUI::FurnitureChest::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::BinaryWriter*>*>("ExtUI", "FurnitureChest/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.BinaryWriter> <>9__22_0
void ExtUI::FurnitureChest::$$c::_set_$$9__22_0(::System::Action_1<::System::IO::BinaryWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "FurnitureChest/<>c", "<>9__22_0", value)));
}
// Autogenerated method: ExtUI.FurnitureChest/<>c..cctor
void ExtUI::FurnitureChest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ExtUI", "FurnitureChest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ExtUI.FurnitureChest/<>c.<RequestUpgrade>b__22_0
void ExtUI::FurnitureChest::$$c::$RequestUpgrade$b__22_0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::FurnitureChest::$$c::<RequestUpgrade>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestUpgrade>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ExtUI.MarketStall
#include "ExtUI/MarketStall.hpp"
// Including type: ExtUI.MarketStall/<>c__DisplayClass23_0
#include "ExtUI/MarketStall_--c__DisplayClass23_0.hpp"
// Including type: ExtUI.MarketStall/<>c
#include "ExtUI/MarketStall_--c.hpp"
// Including type: MagicalActual.NetEntity
#include "MagicalActual/NetEntity.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MagicalActual.GenericChest
#include "MagicalActual/GenericChest.hpp"
// Including type: ExtUI.InventoryItemInstance
#include "ExtUI/InventoryItemInstance.hpp"
// Including type: MagicalActual.ItemContainer
#include "MagicalActual/ItemContainer.hpp"
// Including type: MagicalActual.Vendor
#include "MagicalActual/Vendor.hpp"
// Including type: MagicalActual.WorldMenu
#include "MagicalActual/WorldMenu.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OrbusNetComponent
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::MarketStall::dyn_OrbusNetComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_OrbusNetComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrbusNetComponent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.NetEntity myEntity
[[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& ExtUI::MarketStall::dyn_myEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_myEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myEntity"))->offset;
  return *reinterpret_cast<::MagicalActual::NetEntity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] ingredientSlots
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& ExtUI::MarketStall::dyn_ingredientSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_ingredientSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ingredientSlots"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MagicalActual.GenericChest myChest
[[deprecated("Use field access instead!")]] ::MagicalActual::GenericChest*& ExtUI::MarketStall::dyn_myChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_myChest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myChest"))->offset;
  return *reinterpret_cast<::MagicalActual::GenericChest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExtUI.InventoryItemInstance[] currentIngredients
[[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& ExtUI::MarketStall::dyn_currentIngredients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_currentIngredients");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIngredients"))->offset;
  return *reinterpret_cast<::ArrayW<::ExtUI::InventoryItemInstance*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.ItemContainer myItemContainer
[[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& ExtUI::MarketStall::dyn_myItemContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_myItemContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myItemContainer"))->offset;
  return *reinterpret_cast<::MagicalActual::ItemContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.Vendor myVendor
[[deprecated("Use field access instead!")]] ::MagicalActual::Vendor*& ExtUI::MarketStall::dyn_myVendor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_myVendor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVendor"))->offset;
  return *reinterpret_cast<::MagicalActual::Vendor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ownerMenuPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::MarketStall::dyn_ownerMenuPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_ownerMenuPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerMenuPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.WorldMenu interactionMenu
[[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& ExtUI::MarketStall::dyn_interactionMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_interactionMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionMenu"))->offset;
  return *reinterpret_cast<::MagicalActual::WorldMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset ownerMenuHtml
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& ExtUI::MarketStall::dyn_ownerMenuHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_ownerMenuHtml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerMenuHtml"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject myNpc
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::MarketStall::dyn_myNpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_myNpc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myNpc"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean menuStarted
[[deprecated("Use field access instead!")]] bool& ExtUI::MarketStall::dyn_menuStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_menuStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String playerOwnerId
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::MarketStall::dyn_playerOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::dyn_playerOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerOwnerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.MarketStall.Awake
void ExtUI::MarketStall::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.Start
void ExtUI::MarketStall::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.UpdateOwnerMenu
void ExtUI::MarketStall::UpdateOwnerMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::UpdateOwnerMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOwnerMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.ItemContainerInventoryChanged
void ExtUI::MarketStall::ItemContainerInventoryChanged(::MagicalActual::ItemContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::ItemContainerInventoryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ItemContainerInventoryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: ExtUI.MarketStall.VendorInventoryChanged
void ExtUI::MarketStall::VendorInventoryChanged(::MagicalActual::Vendor* avendor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::VendorInventoryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VendorInventoryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avendor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avendor);
}
// Autogenerated method: ExtUI.MarketStall.PutItemInSlot
void ExtUI::MarketStall::PutItemInSlot(::ExtUI::InventoryItemInstance* itemInstance, ::UnityEngine::GameObject* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::PutItemInSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutItemInSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemInstance), ::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemInstance, slot);
}
// Autogenerated method: ExtUI.MarketStall.UpdateTableDisplay
void ExtUI::MarketStall::UpdateTableDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::UpdateTableDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTableDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.DetachedFromInterface
void ExtUI::MarketStall::DetachedFromInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::DetachedFromInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachedFromInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.GetCurrentPrices
::ArrayW<int> ExtUI::MarketStall::GetCurrentPrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::GetCurrentPrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.GetCurrentItems
::ArrayW<::ExtUI::InventoryItemInstance*> ExtUI::MarketStall::GetCurrentItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::GetCurrentItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ExtUI::InventoryItemInstance*>, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.SavePrices
void ExtUI::MarketStall::SavePrices(::StringW newprices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::SavePrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SavePrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newprices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newprices);
}
// Autogenerated method: ExtUI.MarketStall.PlayerInteraction
void ExtUI::MarketStall::PlayerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::PlayerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.OnDestroy
void ExtUI::MarketStall::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.WithdrawCurrency
void ExtUI::MarketStall::WithdrawCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::WithdrawCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithdrawCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.AvailableCurrency
int ExtUI::MarketStall::AvailableCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::AvailableCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AvailableCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.orbusNetInit
void ExtUI::MarketStall::orbusNetInit(::MagicalActual::NetEntity* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::orbusNetInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "orbusNetInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: ExtUI.MarketStall.<UpdateOwnerMenu>b__15_0
void ExtUI::MarketStall::$UpdateOwnerMenu$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::<UpdateOwnerMenu>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateOwnerMenu>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall.<orbusNetInit>b__28_0
void ExtUI::MarketStall::$orbusNetInit$b__28_0(::Il2CppObject* newvalue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::<orbusNetInit>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<orbusNetInit>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newvalue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newvalue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.MarketStall/<>c__DisplayClass23_0
#include "ExtUI/MarketStall_--c__DisplayClass23_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String newprices
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::MarketStall::$$c__DisplayClass23_0::dyn_newprices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c__DisplayClass23_0::dyn_newprices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newprices"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.MarketStall/<>c__DisplayClass23_0.<SavePrices>b__0
void ExtUI::MarketStall::$$c__DisplayClass23_0::$SavePrices$b__0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c__DisplayClass23_0::<SavePrices>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SavePrices>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.MarketStall/<>c
#include "ExtUI/MarketStall_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ExtUI.MarketStall/<>c <>9
::ExtUI::MarketStall::$$c* ExtUI::MarketStall::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExtUI::MarketStall::$$c*>("ExtUI", "MarketStall/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ExtUI.MarketStall/<>c <>9
void ExtUI::MarketStall::$$c::_set_$$9(::ExtUI::MarketStall::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "MarketStall/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.BinaryWriter> <>9__24_0
::System::Action_1<::System::IO::BinaryWriter*>* ExtUI::MarketStall::$$c::_get_$$9__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::_get_$$9__24_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::BinaryWriter*>*>("ExtUI", "MarketStall/<>c", "<>9__24_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.BinaryWriter> <>9__24_0
void ExtUI::MarketStall::$$c::_set_$$9__24_0(::System::Action_1<::System::IO::BinaryWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::_set_$$9__24_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "MarketStall/<>c", "<>9__24_0", value)));
}
// Autogenerated method: ExtUI.MarketStall/<>c..cctor
void ExtUI::MarketStall::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ExtUI", "MarketStall/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ExtUI.MarketStall/<>c.<PlayerInteraction>b__24_0
void ExtUI::MarketStall::$$c::$PlayerInteraction$b__24_0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c::<PlayerInteraction>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PlayerInteraction>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PlayerChest
#include "ExtUI/PlayerChest.hpp"
// Including type: ExtUI.PlayerChest/<>c
#include "ExtUI/PlayerChest_--c.hpp"
// Including type: MagicalActual.NetEntity
#include "MagicalActual/NetEntity.hpp"
// Including type: MagicalActual.ItemContainer
#include "MagicalActual/ItemContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String OrbusNetComponent
[[deprecated("Use field access instead!")]] ::StringW& ExtUI::PlayerChest::dyn_OrbusNetComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::dyn_OrbusNetComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrbusNetComponent"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.NetEntity myEntity
[[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& ExtUI::PlayerChest::dyn_myEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::dyn_myEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myEntity"))->offset;
  return *reinterpret_cast<::MagicalActual::NetEntity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.ItemContainer myItemContainer
[[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& ExtUI::PlayerChest::dyn_myItemContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::dyn_myItemContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myItemContainer"))->offset;
  return *reinterpret_cast<::MagicalActual::ItemContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.PlayerChest.Awake
void ExtUI::PlayerChest::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerChest.Start
void ExtUI::PlayerChest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerChest.RequestRepair
void ExtUI::PlayerChest::RequestRepair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::RequestRepair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestRepair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerChest.orbusNetInit
void ExtUI::PlayerChest::orbusNetInit(::MagicalActual::NetEntity* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::orbusNetInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "orbusNetInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PlayerChest/<>c
#include "ExtUI/PlayerChest_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ExtUI.PlayerChest/<>c <>9
::ExtUI::PlayerChest::$$c* ExtUI::PlayerChest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExtUI::PlayerChest::$$c*>("ExtUI", "PlayerChest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ExtUI.PlayerChest/<>c <>9
void ExtUI::PlayerChest::$$c::_set_$$9(::ExtUI::PlayerChest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "PlayerChest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.BinaryWriter> <>9__5_0
::System::Action_1<::System::IO::BinaryWriter*>* ExtUI::PlayerChest::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::BinaryWriter*>*>("ExtUI", "PlayerChest/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.BinaryWriter> <>9__5_0
void ExtUI::PlayerChest::$$c::_set_$$9__5_0(::System::Action_1<::System::IO::BinaryWriter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("ExtUI", "PlayerChest/<>c", "<>9__5_0", value)));
}
// Autogenerated method: ExtUI.PlayerChest/<>c..cctor
void ExtUI::PlayerChest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ExtUI", "PlayerChest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ExtUI.PlayerChest/<>c.<RequestRepair>b__5_0
void ExtUI::PlayerChest::$$c::$RequestRepair$b__5_0(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerChest::$$c::<RequestRepair>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RequestRepair>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExtUI.PlayerHouseMenuObject
#include "ExtUI/PlayerHouseMenuObject.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MagicalActual.WorldMenu
#include "MagicalActual/WorldMenu.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ownerMenuPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& ExtUI::PlayerHouseMenuObject::dyn_ownerMenuPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::dyn_ownerMenuPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerMenuPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MagicalActual.WorldMenu interactionMenu
[[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& ExtUI::PlayerHouseMenuObject::dyn_interactionMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::dyn_interactionMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionMenu"))->offset;
  return *reinterpret_cast<::MagicalActual::WorldMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset MenuHtml
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& ExtUI::PlayerHouseMenuObject::dyn_MenuHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::dyn_MenuHtml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MenuHtml"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExtUI.PlayerHouseMenuObject.Awake
void ExtUI::PlayerHouseMenuObject::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerHouseMenuObject.Start
void ExtUI::PlayerHouseMenuObject::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerHouseMenuObject.ResetMenu
void ExtUI::PlayerHouseMenuObject::ResetMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::ResetMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExtUI.PlayerHouseMenuObject.OnDestroy
void ExtUI::PlayerHouseMenuObject::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::PlayerHouseMenuObject::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.Calibration
#include "LIV/SDK/Unity/Calibration.hpp"
// Including type: LIV.SDK.Unity.Calibration/<>c
#include "LIV/SDK/Unity/Calibration_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String ConfigFileName
::StringW LIV::SDK::Unity::Calibration::_get_ConfigFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_ConfigFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "Calibration", "ConfigFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ConfigFileName
void LIV::SDK::Unity::Calibration::_set_ConfigFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_ConfigFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "ConfigFileName", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAE12CC
// Autogenerated static field getter
// Get static field: static private System.EventHandler Changed
::System::EventHandler* LIV::SDK::Unity::Calibration::_get_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Changed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventHandler*>("LIV.SDK.Unity", "Calibration", "Changed"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler Changed
void LIV::SDK::Unity::Calibration::_set_Changed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Changed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Changed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single X
float LIV::SDK::Unity::Calibration::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "X"));
}
// Autogenerated static field setter
// Set static field: static public System.Single X
void LIV::SDK::Unity::Calibration::_set_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Y
float LIV::SDK::Unity::Calibration::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "Y"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Y
void LIV::SDK::Unity::Calibration::_set_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Z
float LIV::SDK::Unity::Calibration::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "Z"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Z
void LIV::SDK::Unity::Calibration::_set_Z(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Yaw
float LIV::SDK::Unity::Calibration::_get_Yaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Yaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "Yaw"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Yaw
void LIV::SDK::Unity::Calibration::_set_Yaw(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Yaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Yaw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Pitch
float LIV::SDK::Unity::Calibration::_get_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Pitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "Pitch"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Pitch
void LIV::SDK::Unity::Calibration::_set_Pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Pitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Pitch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Roll
float LIV::SDK::Unity::Calibration::_get_Roll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_Roll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "Roll"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Roll
void LIV::SDK::Unity::Calibration::_set_Roll(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_Roll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "Roll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FieldOfVision
float LIV::SDK::Unity::Calibration::_get_FieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_FieldOfVision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "FieldOfVision"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FieldOfVision
void LIV::SDK::Unity::Calibration::_set_FieldOfVision(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_FieldOfVision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "FieldOfVision", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NearClip
float LIV::SDK::Unity::Calibration::_get_NearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_NearClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "NearClip"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NearClip
void LIV::SDK::Unity::Calibration::_set_NearClip(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_NearClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "NearClip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FarClip
float LIV::SDK::Unity::Calibration::_get_FarClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_FarClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "FarClip"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FarClip
void LIV::SDK::Unity::Calibration::_set_FarClip(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_FarClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "FarClip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single HMDOffset
float LIV::SDK::Unity::Calibration::_get_HMDOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_HMDOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "HMDOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single HMDOffset
void LIV::SDK::Unity::Calibration::_set_HMDOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_HMDOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "HMDOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NearOffset
float LIV::SDK::Unity::Calibration::_get_NearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_NearOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("LIV.SDK.Unity", "Calibration", "NearOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NearOffset
void LIV::SDK::Unity::Calibration::_set_NearOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_NearOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "NearOffset", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IO.FileSystemWatcher ConfigWatcher
::System::IO::FileSystemWatcher* LIV::SDK::Unity::Calibration::_get_ConfigWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_get_ConfigWatcher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileSystemWatcher*>("LIV.SDK.Unity", "Calibration", "ConfigWatcher"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.FileSystemWatcher ConfigWatcher
void LIV::SDK::Unity::Calibration::_set_ConfigWatcher(::System::IO::FileSystemWatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::_set_ConfigWatcher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration", "ConfigWatcher", value));
}
// Autogenerated method: LIV.SDK.Unity.Calibration.add_Changed
void LIV::SDK::Unity::Calibration::add_Changed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::add_Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "add_Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.remove_Changed
void LIV::SDK::Unity::Calibration::remove_Changed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::remove_Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "remove_Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.get_PositionOffset
::UnityEngine::Vector3 LIV::SDK::Unity::Calibration::get_PositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::get_PositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "get_PositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.get_RotationOffset
::UnityEngine::Quaternion LIV::SDK::Unity::Calibration::get_RotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::get_RotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "get_RotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration..cctor
void LIV::SDK::Unity::Calibration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.Reset
void LIV::SDK::Unity::Calibration::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.Read
void LIV::SDK::Unity::Calibration::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration.TryParseInvariantFloat
bool LIV::SDK::Unity::Calibration::TryParseInvariantFloat(::StringW number, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::TryParseInvariantFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration", "TryParseInvariantFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.Calibration/<>c
#include "LIV/SDK/Unity/Calibration_--c.hpp"
// Including type: System.IO.FileSystemEventArgs
#include "System/IO/FileSystemEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LIV.SDK.Unity.Calibration/<>c <>9
::LIV::SDK::Unity::Calibration::$$c* LIV::SDK::Unity::Calibration::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::Calibration::$$c*>("LIV.SDK.Unity", "Calibration/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LIV.SDK.Unity.Calibration/<>c <>9
void LIV::SDK::Unity::Calibration::$$c::_set_$$9(::LIV::SDK::Unity::Calibration::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "Calibration/<>c", "<>9", value)));
}
// Autogenerated method: LIV.SDK.Unity.Calibration/<>c..cctor
void LIV::SDK::Unity::Calibration::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Calibration/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.Calibration/<>c.<.cctor>b__20_0
void LIV::SDK::Unity::Calibration::$$c::$_cctor$b__20_0(::Il2CppObject* o, ::System::IO::FileSystemEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Calibration::$$c::<.cctor>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.Extensions
#include "LIV/SDK/Unity/Extensions.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.Extensions._copysign
float LIV::SDK::Unity::Extensions::_copysign(float sizeval, float signval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Extensions::_copysign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Extensions", "_copysign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeval), ::il2cpp_utils::ExtractType(signval)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sizeval, signval);
}
// Autogenerated method: LIV.SDK.Unity.Extensions.GetRotation
::UnityEngine::Quaternion LIV::SDK::Unity::Extensions::GetRotation(::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Extensions::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Extensions", "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix);
}
// Autogenerated method: LIV.SDK.Unity.Extensions.GetPosition
::UnityEngine::Vector3 LIV::SDK::Unity::Extensions::GetPosition(::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::Extensions::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "Extensions", "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.ExternalCamera
#include "LIV/SDK/Unity/ExternalCamera.hpp"
// Including type: LIV.SDK.Unity.ExternalCamera/<>c
#include "LIV/SDK/Unity/ExternalCamera_--c.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <OpenVRTrackedDeviceId>k__BackingField
[[deprecated("Use field access instead!")]] uint& LIV::SDK::Unity::ExternalCamera::dyn_$OpenVRTrackedDeviceId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::dyn_$OpenVRTrackedDeviceId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OpenVRTrackedDeviceId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.TrackedDevicePose_t _trackedDevicePose
[[deprecated("Use field access instead!")]] ::Valve::VR::TrackedDevicePose_t& LIV::SDK::Unity::ExternalCamera::dyn__trackedDevicePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::dyn__trackedDevicePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackedDevicePose"))->offset;
  return *reinterpret_cast<::Valve::VR::TrackedDevicePose_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.TrackedDevicePose_t[] _devices
[[deprecated("Use field access instead!")]] ::ArrayW<::Valve::VR::TrackedDevicePose_t>& LIV::SDK::Unity::ExternalCamera::dyn__devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::dyn__devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_devices"))->offset;
  return *reinterpret_cast<::ArrayW<::Valve::VR::TrackedDevicePose_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.TrackedDevicePose_t[] _gameDevices
[[deprecated("Use field access instead!")]] ::ArrayW<::Valve::VR::TrackedDevicePose_t>& LIV::SDK::Unity::ExternalCamera::dyn__gameDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::dyn__gameDevices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameDevices"))->offset;
  return *reinterpret_cast<::ArrayW<::Valve::VR::TrackedDevicePose_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.get_IsValid
bool LIV::SDK::Unity::ExternalCamera::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.get_OpenVRTrackedDeviceId
uint LIV::SDK::Unity::ExternalCamera::get_OpenVRTrackedDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::get_OpenVRTrackedDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OpenVRTrackedDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.set_OpenVRTrackedDeviceId
void LIV::SDK::Unity::ExternalCamera::set_OpenVRTrackedDeviceId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::set_OpenVRTrackedDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OpenVRTrackedDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.OnEnable
void LIV::SDK::Unity::ExternalCamera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.OnDisable
void LIV::SDK::Unity::ExternalCamera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.LateUpdate
void LIV::SDK::Unity::ExternalCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.OnPreCull
void LIV::SDK::Unity::ExternalCamera::OnPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::OnPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.UpdateCamera
void LIV::SDK::Unity::ExternalCamera::UpdateCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::UpdateCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.UpdateOpenVRPose
void LIV::SDK::Unity::ExternalCamera::UpdateOpenVRPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::UpdateOpenVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOpenVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.UpdateTransform
void LIV::SDK::Unity::ExternalCamera::UpdateTransform(::Valve::VR::HmdMatrix34_t deviceToAbsolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::UpdateTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceToAbsolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceToAbsolute);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.UpdateOpenVRDevice
void LIV::SDK::Unity::ExternalCamera::UpdateOpenVRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::UpdateOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.IdentifyExternalCameraDevice
uint LIV::SDK::Unity::ExternalCamera::IdentifyExternalCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::IdentifyExternalCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IdentifyExternalCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera.GetStringTrackedDeviceProperty
::StringW LIV::SDK::Unity::ExternalCamera::GetStringTrackedDeviceProperty(uint device, ::Valve::VR::ETrackedDeviceProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::GetStringTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "ExternalCamera", "GetStringTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.ExternalCamera/<>c
#include "LIV/SDK/Unity/ExternalCamera_--c.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: <>f__AnonymousType0`2
#include "GlobalNamespace/--f__AnonymousType0_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: <>f__AnonymousType1`3
#include "GlobalNamespace/--f__AnonymousType1_3.hpp"
// Including type: <>f__AnonymousType2`6
#include "GlobalNamespace/--f__AnonymousType2_6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LIV.SDK.Unity.ExternalCamera/<>c <>9
::LIV::SDK::Unity::ExternalCamera::$$c* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::ExternalCamera::$$c*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LIV.SDK.Unity.ExternalCamera/<>c <>9
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9(::LIV::SDK::Unity::ExternalCamera::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<Valve.VR.TrackedDevicePose_t,System.Int32,<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>> <>9__17_0
::System::Func_3<::Valve::VR::TrackedDevicePose_t, int, ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::Valve::VR::TrackedDevicePose_t, int, ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<Valve.VR.TrackedDevicePose_t,System.Int32,<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>> <>9__17_0
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_0(::System::Func_3<::Valve::VR::TrackedDevicePose_t, int, ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,System.Boolean> <>9__17_1
::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, bool>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, bool>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,System.Boolean> <>9__17_1
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_1(::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>> <>9__17_2
::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>> <>9__17_2
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_2(::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,System.Boolean> <>9__17_3
::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, bool>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, bool>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,System.Boolean> <>9__17_3
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_3(::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>> <>9__17_4
::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>> <>9__17_4
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_4(::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>,System.Int32> <>9__17_5
::System::Func_2<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, int>* LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_get_$$9__17_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, int>*>("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_5")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>,System.Int32> <>9__17_5
void LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_5(::System::Func_2<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::_set_$$9__17_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "ExternalCamera/<>c", "<>9__17_5", value)));
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c..cctor
void LIV::SDK::Unity::ExternalCamera::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "ExternalCamera/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_0
::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_0(::Valve::VR::TrackedDevicePose_t pose, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, false>(this, ___internal__method, pose, index);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_1
bool LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_1(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, candidate);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_2
::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_2(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, false>(this, ___internal__method, candidate);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_3
bool LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_3(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, candidate);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_4
::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>* LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_4(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, false>(this, ___internal__method, candidate);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCamera/<>c.<IdentifyExternalCameraDevice>b__17_5
int LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_5(::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>* candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::<IdentifyExternalCameraDevice>b__17_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IdentifyExternalCameraDevice>b__17_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, candidate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.ExternalCameraOculus
#include "LIV/SDK/Unity/ExternalCameraOculus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.get_IsValid
bool LIV::SDK::Unity::ExternalCameraOculus::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.OnEnable
void LIV::SDK::Unity::ExternalCameraOculus::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.OnDisable
void LIV::SDK::Unity::ExternalCameraOculus::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.LateUpdate
void LIV::SDK::Unity::ExternalCameraOculus::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.OnPreCull
void LIV::SDK::Unity::ExternalCameraOculus::OnPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::OnPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.UpdateCamera
void LIV::SDK::Unity::ExternalCameraOculus::UpdateCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::UpdateCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.ExternalCameraOculus.UpdateOpenVRDevice
void LIV::SDK::Unity::ExternalCameraOculus::UpdateOpenVRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCameraOculus::UpdateOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.HelpAttribute
#include "LIV/SDK/Unity/HelpAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String text
[[deprecated("Use field access instead!")]] ::StringW& LIV::SDK::Unity::HelpAttribute::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::HelpAttribute::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: LIV.SDK.Unity.SharedTextureProtocol
#include "LIV/SDK/Unity/SharedTextureProtocol.hpp"
// Including type: LIV.SDK.Unity.ExternalCamera
#include "LIV/SDK/Unity/ExternalCamera.hpp"
// Including type: LIV.SDK.Unity.MixedRealityRender
#include "LIV/SDK/Unity/MixedRealityRender.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform TrackedSpaceOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn_TrackedSpaceOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_TrackedSpaceOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackedSpaceOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera HMDCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn_HMDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_HMDCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HMDCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableStandardAssets
[[deprecated("Use field access instead!")]] bool& LIV::SDK::Unity::LIV::dyn_DisableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_DisableStandardAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableStandardAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask SpectatorLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& LIV::SDK::Unity::LIV::dyn_SpectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_SpectatorLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpectatorLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean WasActive
[[deprecated("Use field access instead!")]] bool& LIV::SDK::Unity::LIV::dyn_WasActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_WasActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WasActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SharedTextureProtocol _sharedTextureProtocol
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SharedTextureProtocol*& LIV::SDK::Unity::LIV::dyn__sharedTextureProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__sharedTextureProtocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharedTextureProtocol"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SharedTextureProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.ExternalCamera _externalCamera
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::ExternalCamera*& LIV::SDK::Unity::LIV::dyn__externalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__externalCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCamera"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::ExternalCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.MixedRealityRender _mixedRealityRender
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::MixedRealityRender*& LIV::SDK::Unity::LIV::dyn__mixedRealityRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__mixedRealityRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mixedRealityRender"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::MixedRealityRender**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasSteamVRExternalCameraActive
[[deprecated("Use field access instead!")]] bool& LIV::SDK::Unity::LIV::dyn__wasSteamVRExternalCameraActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__wasSteamVRExternalCameraActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasSteamVRExternalCameraActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_Origin
::UnityEngine::Transform* LIV::SDK::Unity::LIV::get_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_Origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnEnable
void LIV::SDK::Unity::LIV::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnDisable
void LIV::SDK::Unity::LIV::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.Update
void LIV::SDK::Unity::LIV::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnCompositorActivated
void LIV::SDK::Unity::LIV::OnCompositorActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnCompositorActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCompositorActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnCompositorDeactivated
void LIV::SDK::Unity::LIV::OnCompositorDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnCompositorDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCompositorDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.CreateSharedTextureProtocol
void LIV::SDK::Unity::LIV::CreateSharedTextureProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::CreateSharedTextureProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSharedTextureProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.DestroySharedTextureProtocol
void LIV::SDK::Unity::LIV::DestroySharedTextureProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::DestroySharedTextureProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySharedTextureProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.CreateExternalCamera
void LIV::SDK::Unity::LIV::CreateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::CreateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.DestroyExternalCamera
void LIV::SDK::Unity::LIV::DestroyExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::DestroyExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.CreateMixedRealityRender
void LIV::SDK::Unity::LIV::CreateMixedRealityRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::CreateMixedRealityRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMixedRealityRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.DestroyMixedRealityRender
void LIV::SDK::Unity::LIV::DestroyMixedRealityRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::DestroyMixedRealityRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyMixedRealityRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.MixedRealityRender
#include "LIV/SDK/Unity/MixedRealityRender.hpp"
// Including type: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20
#include "LIV/SDK/Unity/MixedRealityRender_-RenderLoop-d__20.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSetup
[[deprecated("Use field access instead!")]] bool& LIV::SDK::Unity::MixedRealityRender::dyn__isSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__isSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::MixedRealityRender::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mrCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& LIV::SDK::Unity::MixedRealityRender::dyn__mrCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__mrCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mrCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& LIV::SDK::Unity::MixedRealityRender::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clipQuad
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& LIV::SDK::Unity::MixedRealityRender::dyn__clipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__clipQuad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipQuad"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::MixedRealityRender::dyn__clipMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__clipMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _blitMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& LIV::SDK::Unity::MixedRealityRender::dyn__blitMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__blitMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blitMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _compositeTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::MixedRealityRender::dyn__compositeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__compositeTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compositeTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _foregroundTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::MixedRealityRender::dyn__foregroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__foregroundTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foregroundTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _backgroundTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& LIV::SDK::Unity::MixedRealityRender::dyn__backgroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::dyn__backgroundTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.Setup
void LIV::SDK::Unity::MixedRealityRender::Setup(::LIV::SDK::Unity::LIV* liv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(liv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, liv);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.CreateClipQuad
void LIV::SDK::Unity::MixedRealityRender::CreateClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::CreateClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.UpdateCamera
void LIV::SDK::Unity::MixedRealityRender::UpdateCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::UpdateCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.UpdateTextures
void LIV::SDK::Unity::MixedRealityRender::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.GetDistanceToHMD
float LIV::SDK::Unity::MixedRealityRender::GetDistanceToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::GetDistanceToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.OrientClipQuad
void LIV::SDK::Unity::MixedRealityRender::OrientClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::OrientClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OrientClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.RenderNear
void LIV::SDK::Unity::MixedRealityRender::RenderNear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::RenderNear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderNear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.RenderFar
void LIV::SDK::Unity::MixedRealityRender::RenderFar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::RenderFar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderFar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.Composite
void LIV::SDK::Unity::MixedRealityRender::Composite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::Composite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Composite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.OnEnable
void LIV::SDK::Unity::MixedRealityRender::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender.RenderLoop
::System::Collections::IEnumerator* LIV::SDK::Unity::MixedRealityRender::RenderLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::RenderLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20
#include "LIV/SDK/Unity/MixedRealityRender_-RenderLoop-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.MixedRealityRender <>4__this
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::MixedRealityRender*& LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::MixedRealityRender**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20.System.IDisposable.Dispose
void LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20.MoveNext
bool LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20.System.Collections.IEnumerator.Reset
void LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.MixedRealityRender/<RenderLoop>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::MixedRealityRender::$RenderLoop$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SharedTextureProtocol
#include "LIV/SDK/Unity/SharedTextureProtocol.hpp"
// Including type: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13
#include "LIV/SDK/Unity/SharedTextureProtocol_-CallPluginAtEndOfFrames-d__13.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.GetRenderEventFunc
::System::IntPtr LIV::SDK::Unity::SharedTextureProtocol::GetRenderEventFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::GetRenderEventFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "GetRenderEventFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.GetIsCaptureActive
bool LIV::SDK::Unity::SharedTextureProtocol::GetIsCaptureActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::GetIsCaptureActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "GetIsCaptureActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.GetTextureWidth
int LIV::SDK::Unity::SharedTextureProtocol::GetTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::GetTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "GetTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.GetTextureHeight
int LIV::SDK::Unity::SharedTextureProtocol::GetTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::GetTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "GetTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.SetTexture
void LIV::SDK::Unity::SharedTextureProtocol::SetTexture(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.get_IsActive
bool LIV::SDK::Unity::SharedTextureProtocol::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.get_TextureWidth
int LIV::SDK::Unity::SharedTextureProtocol::get_TextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::get_TextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "get_TextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.get_TextureHeight
int LIV::SDK::Unity::SharedTextureProtocol::get_TextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::get_TextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "get_TextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.SetOutputTexture
void LIV::SDK::Unity::SharedTextureProtocol::SetOutputTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::SetOutputTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SharedTextureProtocol", "SetOutputTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.OnEnable
void LIV::SDK::Unity::SharedTextureProtocol::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.CallPluginAtEndOfFrames
::System::Collections::IEnumerator* LIV::SDK::Unity::SharedTextureProtocol::CallPluginAtEndOfFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::CallPluginAtEndOfFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallPluginAtEndOfFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol.OnDisable
void LIV::SDK::Unity::SharedTextureProtocol::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13
#include "LIV/SDK/Unity/SharedTextureProtocol_-CallPluginAtEndOfFrames-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SharedTextureProtocol <>4__this
[[deprecated("Use field access instead!")]] ::LIV::SDK::Unity::SharedTextureProtocol*& LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SharedTextureProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13.System.IDisposable.Dispose
void LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13.MoveNext
bool LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13.System.Collections.IEnumerator.Reset
void LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SharedTextureProtocol/<CallPluginAtEndOfFrames>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SteamVRCompatibility
#include "LIV/SDK/Unity/SteamVRCompatibility.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean IsAvailable
bool LIV::SDK::Unity::SteamVRCompatibility::_get_IsAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_get_IsAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SteamVRCompatibility", "IsAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IsAvailable
void LIV::SDK::Unity::SteamVRCompatibility::_set_IsAvailable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_set_IsAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SteamVRCompatibility", "IsAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Type SteamVRCamera
::System::Type* LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRCamera"));
}
// Autogenerated static field setter
// Set static field: static public System.Type SteamVRCamera
void LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRCamera(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRCamera", value));
}
// Autogenerated static field getter
// Get static field: static public System.Type SteamVRExternalCamera
::System::Type* LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRExternalCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRExternalCamera"));
}
// Autogenerated static field setter
// Set static field: static public System.Type SteamVRExternalCamera
void LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRExternalCamera(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRExternalCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRExternalCamera", value));
}
// Autogenerated static field getter
// Get static field: static public System.Type SteamVRFade
::System::Type* LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_get_SteamVRFade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRFade"));
}
// Autogenerated static field setter
// Set static field: static public System.Type SteamVRFade
void LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRFade(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::_set_SteamVRFade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SteamVRCompatibility", "SteamVRFade", value));
}
// Autogenerated method: LIV.SDK.Unity.SteamVRCompatibility..cctor
void LIV::SDK::Unity::SteamVRCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SteamVRCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SteamVRCompatibility.FindSteamVRAsset
bool LIV::SDK::Unity::SteamVRCompatibility::FindSteamVRAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SteamVRCompatibility::FindSteamVRAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SteamVRCompatibility", "FindSteamVRAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KevinIglesias.BucketRoute
#include "KevinIglesias/BucketRoute.hpp"
// Including type: KevinIglesias.BucketRoute/<ChangeBucket>d__8
#include "KevinIglesias/BucketRoute_-ChangeBucket-d__8.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] buckets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& KevinIglesias::BucketRoute::dyn_buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_buckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buckets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject liftedBucket
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& KevinIglesias::BucketRoute::dyn_liftedBucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_liftedBucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "liftedBucket"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drop
[[deprecated("Use field access instead!")]] bool& KevinIglesias::BucketRoute::dyn_drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_drop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform villager
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& KevinIglesias::BucketRoute::dyn_villager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_villager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "villager"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& KevinIglesias::BucketRoute::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean going
[[deprecated("Use field access instead!")]] bool& KevinIglesias::BucketRoute::dyn_going() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::dyn_going");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "going"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.BucketRoute.Awake
void KevinIglesias::BucketRoute::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.BucketRoute.LiftBucket
void KevinIglesias::BucketRoute::LiftBucket(float delay, bool lift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::LiftBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiftBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(lift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delay, lift);
}
// Autogenerated method: KevinIglesias.BucketRoute.ChangeBucket
::System::Collections::IEnumerator* KevinIglesias::BucketRoute::ChangeBucket(float delay, bool lift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::ChangeBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(lift)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay, lift);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.BucketRoute/<ChangeBucket>d__8
#include "KevinIglesias/BucketRoute_-ChangeBucket-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.BucketRoute <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::BucketRoute*& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::BucketRoute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lift
[[deprecated("Use field access instead!")]] bool& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_lift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_lift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lift"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <limit>5__2
[[deprecated("Use field access instead!")]] float& KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$limit$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::dyn_$limit$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<limit>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.BucketRoute/<ChangeBucket>d__8.System.IDisposable.Dispose
void KevinIglesias::BucketRoute::$ChangeBucket$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::BucketRoute::$ChangeBucket$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.BucketRoute/<ChangeBucket>d__8.MoveNext
bool KevinIglesias::BucketRoute::$ChangeBucket$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::BucketRoute::$ChangeBucket$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.BucketRoute/<ChangeBucket>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::BucketRoute::$ChangeBucket$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::BucketRoute::$ChangeBucket$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.BucketRoute/<ChangeBucket>d__8.System.Collections.IEnumerator.Reset
void KevinIglesias::BucketRoute::$ChangeBucket$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::BucketRoute::$ChangeBucket$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.BucketRoute/<ChangeBucket>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::BucketRoute::$ChangeBucket$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRoute::$ChangeBucket$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::BucketRoute::$ChangeBucket$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KevinIglesias.BucketRouteAnimator
#include "KevinIglesias/BucketRouteAnimator.hpp"
// Including type: KevinIglesias.BucketRoute
#include "KevinIglesias/BucketRoute.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private KevinIglesias.BucketRoute bR
[[deprecated("Use field access instead!")]] ::KevinIglesias::BucketRoute*& KevinIglesias::BucketRouteAnimator::dyn_bR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRouteAnimator::dyn_bR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bR"))->offset;
  return *reinterpret_cast<::KevinIglesias::BucketRoute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& KevinIglesias::BucketRouteAnimator::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRouteAnimator::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lift
[[deprecated("Use field access instead!")]] bool& KevinIglesias::BucketRouteAnimator::dyn_lift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRouteAnimator::dyn_lift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lift"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.BucketRouteAnimator.OnStateEnter
void KevinIglesias::BucketRouteAnimator::OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRouteAnimator::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KevinIglesias.ResourceType
#include "KevinIglesias/ResourceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KevinIglesias.ResourceType Berries
::KevinIglesias::ResourceType KevinIglesias::ResourceType::_get_Berries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_get_Berries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::KevinIglesias::ResourceType>("KevinIglesias", "ResourceType", "Berries"));
}
// Autogenerated static field setter
// Set static field: static public KevinIglesias.ResourceType Berries
void KevinIglesias::ResourceType::_set_Berries(::KevinIglesias::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_set_Berries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("KevinIglesias", "ResourceType", "Berries", value));
}
// Autogenerated static field getter
// Get static field: static public KevinIglesias.ResourceType Farm
::KevinIglesias::ResourceType KevinIglesias::ResourceType::_get_Farm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_get_Farm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::KevinIglesias::ResourceType>("KevinIglesias", "ResourceType", "Farm"));
}
// Autogenerated static field setter
// Set static field: static public KevinIglesias.ResourceType Farm
void KevinIglesias::ResourceType::_set_Farm(::KevinIglesias::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_set_Farm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("KevinIglesias", "ResourceType", "Farm", value));
}
// Autogenerated static field getter
// Get static field: static public KevinIglesias.ResourceType Wood
::KevinIglesias::ResourceType KevinIglesias::ResourceType::_get_Wood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_get_Wood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::KevinIglesias::ResourceType>("KevinIglesias", "ResourceType", "Wood"));
}
// Autogenerated static field setter
// Set static field: static public KevinIglesias.ResourceType Wood
void KevinIglesias::ResourceType::_set_Wood(::KevinIglesias::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_set_Wood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("KevinIglesias", "ResourceType", "Wood", value));
}
// Autogenerated static field getter
// Get static field: static public KevinIglesias.ResourceType Gold
::KevinIglesias::ResourceType KevinIglesias::ResourceType::_get_Gold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_get_Gold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::KevinIglesias::ResourceType>("KevinIglesias", "ResourceType", "Gold"));
}
// Autogenerated static field setter
// Set static field: static public KevinIglesias.ResourceType Gold
void KevinIglesias::ResourceType::_set_Gold(::KevinIglesias::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_set_Gold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("KevinIglesias", "ResourceType", "Gold", value));
}
// Autogenerated static field getter
// Get static field: static public KevinIglesias.ResourceType Builder
::KevinIglesias::ResourceType KevinIglesias::ResourceType::_get_Builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_get_Builder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::KevinIglesias::ResourceType>("KevinIglesias", "ResourceType", "Builder"));
}
// Autogenerated static field setter
// Set static field: static public KevinIglesias.ResourceType Builder
void KevinIglesias::ResourceType::_set_Builder(::KevinIglesias::ResourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::_set_Builder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("KevinIglesias", "ResourceType", "Builder", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& KevinIglesias::ResourceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::ResourceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KevinIglesias.GatherResource
#include "KevinIglesias/GatherResource.hpp"
// Including type: KevinIglesias.GatherResource/<StartWorking>d__9
#include "KevinIglesias/GatherResource_-StartWorking-d__9.hpp"
// Including type: KevinIglesias.GatherResource/<FarmCycle>d__10
#include "KevinIglesias/GatherResource_-FarmCycle-d__10.hpp"
// Including type: KevinIglesias.GatherResource/<EndFarmCycle>d__11
#include "KevinIglesias/GatherResource_-EndFarmCycle-d__11.hpp"
// Including type: KevinIglesias.GatherResource/<BerryCycle>d__12
#include "KevinIglesias/GatherResource_-BerryCycle-d__12.hpp"
// Including type: KevinIglesias.GatherResource/<ChopTree>d__13
#include "KevinIglesias/GatherResource_-ChopTree-d__13.hpp"
// Including type: KevinIglesias.GatherResource/<ChopCycle>d__14
#include "KevinIglesias/GatherResource_-ChopCycle-d__14.hpp"
// Including type: KevinIglesias.GatherResource/<MiningCycle>d__15
#include "KevinIglesias/GatherResource_-MiningCycle-d__15.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single delayTime
[[deprecated("Use field access instead!")]] float& KevinIglesias::GatherResource::dyn_delayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_delayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.ResourceType resource
[[deprecated("Use field access instead!")]] ::KevinIglesias::ResourceType& KevinIglesias::GatherResource::dyn_resource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_resource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resource"))->offset;
  return *reinterpret_cast<::KevinIglesias::ResourceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPath
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::dyn_currentPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_currentPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPath"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& KevinIglesias::GatherResource::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] paths
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& KevinIglesias::GatherResource::dyn_paths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_paths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paths"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] props
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& KevinIglesias::GatherResource::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_props");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 initRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& KevinIglesias::GatherResource::dyn_initRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::dyn_initRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource.Awake
void KevinIglesias::GatherResource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.Start
void KevinIglesias::GatherResource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.StartWorking
::System::Collections::IEnumerator* KevinIglesias::GatherResource::StartWorking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::StartWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.FarmCycle
::System::Collections::IEnumerator* KevinIglesias::GatherResource::FarmCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::FarmCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FarmCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.EndFarmCycle
::System::Collections::IEnumerator* KevinIglesias::GatherResource::EndFarmCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::EndFarmCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndFarmCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.BerryCycle
::System::Collections::IEnumerator* KevinIglesias::GatherResource::BerryCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::BerryCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BerryCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.ChopTree
::System::Collections::IEnumerator* KevinIglesias::GatherResource::ChopTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::ChopTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChopTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.ChopCycle
::System::Collections::IEnumerator* KevinIglesias::GatherResource::ChopCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::ChopCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChopCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource.MiningCycle
::System::Collections::IEnumerator* KevinIglesias::GatherResource::MiningCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::MiningCycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MiningCycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.GatherResource/<StartWorking>d__9
#include "KevinIglesias/GatherResource_-StartWorking-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.GatherResource <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::GatherResource*& KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::GatherResource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource/<StartWorking>d__9.System.IDisposable.Dispose
void KevinIglesias::GatherResource::$StartWorking$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$StartWorking$d__9*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<StartWorking>d__9.MoveNext
bool KevinIglesias::GatherResource::$StartWorking$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$StartWorking$d__9*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<StartWorking>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$StartWorking$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$StartWorking$d__9*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<StartWorking>d__9.System.Collections.IEnumerator.Reset
void KevinIglesias::GatherResource::$StartWorking$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$StartWorking$d__9*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<StartWorking>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$StartWorking$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$StartWorking$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$StartWorking$d__9*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.GatherResource/<FarmCycle>d__10
#include "KevinIglesias/GatherResource_-FarmCycle-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.GatherResource <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::GatherResource*& KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::GatherResource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource/<FarmCycle>d__10.System.IDisposable.Dispose
void KevinIglesias::GatherResource::$FarmCycle$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$FarmCycle$d__10*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<FarmCycle>d__10.MoveNext
bool KevinIglesias::GatherResource::$FarmCycle$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$FarmCycle$d__10*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<FarmCycle>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$FarmCycle$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$FarmCycle$d__10*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<FarmCycle>d__10.System.Collections.IEnumerator.Reset
void KevinIglesias::GatherResource::$FarmCycle$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$FarmCycle$d__10*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<FarmCycle>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$FarmCycle$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$FarmCycle$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$FarmCycle$d__10*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.GatherResource/<EndFarmCycle>d__11
#include "KevinIglesias/GatherResource_-EndFarmCycle-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.GatherResource <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::GatherResource*& KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::GatherResource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource/<EndFarmCycle>d__11.System.IDisposable.Dispose
void KevinIglesias::GatherResource::$EndFarmCycle$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$EndFarmCycle$d__11*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<EndFarmCycle>d__11.MoveNext
bool KevinIglesias::GatherResource::$EndFarmCycle$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$EndFarmCycle$d__11*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<EndFarmCycle>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$EndFarmCycle$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$EndFarmCycle$d__11*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<EndFarmCycle>d__11.System.Collections.IEnumerator.Reset
void KevinIglesias::GatherResource::$EndFarmCycle$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$EndFarmCycle$d__11*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<EndFarmCycle>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$EndFarmCycle$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$EndFarmCycle$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$EndFarmCycle$d__11*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.GatherResource/<BerryCycle>d__12
#include "KevinIglesias/GatherResource_-BerryCycle-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.GatherResource <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::GatherResource*& KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::GatherResource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource/<BerryCycle>d__12.System.IDisposable.Dispose
void KevinIglesias::GatherResource::$BerryCycle$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$BerryCycle$d__12*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<BerryCycle>d__12.MoveNext
bool KevinIglesias::GatherResource::$BerryCycle$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$BerryCycle$d__12*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<BerryCycle>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$BerryCycle$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$BerryCycle$d__12*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<BerryCycle>d__12.System.Collections.IEnumerator.Reset
void KevinIglesias::GatherResource::$BerryCycle$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$BerryCycle$d__12*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<BerryCycle>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$BerryCycle$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$BerryCycle$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$BerryCycle$d__12*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KevinIglesias.GatherResource/<ChopTree>d__13
#include "KevinIglesias/GatherResource_-ChopTree-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public KevinIglesias.GatherResource <>4__this
[[deprecated("Use field access instead!")]] ::KevinIglesias::GatherResource*& KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::KevinIglesias::GatherResource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KevinIglesias.GatherResource/<ChopTree>d__13.System.IDisposable.Dispose
void KevinIglesias::GatherResource::$ChopTree$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$ChopTree$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<ChopTree>d__13.MoveNext
bool KevinIglesias::GatherResource::$ChopTree$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$ChopTree$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<ChopTree>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$ChopTree$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$ChopTree$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<ChopTree>d__13.System.Collections.IEnumerator.Reset
void KevinIglesias::GatherResource::$ChopTree$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$ChopTree$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KevinIglesias.GatherResource/<ChopTree>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* KevinIglesias::GatherResource::$ChopTree$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::GatherResource::$ChopTree$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::KevinIglesias::GatherResource::$ChopTree$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
