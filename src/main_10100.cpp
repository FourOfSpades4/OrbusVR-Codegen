// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_1
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_1.hpp"
// Including type: vx_req_account_send_subscription_reply_t
#include "GlobalNamespace/vx_req_account_send_subscription_reply_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_account_send_subscription_reply_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_send_subscription_reply_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_send_subscription_reply_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_1.<BeginAddAllowedSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::$BeginAddAllowedSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_1::<BeginAddAllowedSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddAllowedSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_2
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_2.hpp"
// Including type: vx_req_account_create_auto_accept_rule_t
#include "GlobalNamespace/vx_req_account_create_auto_accept_rule_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_account_create_auto_accept_rule_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_create_auto_accept_rule_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_create_auto_accept_rule_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_2.<BeginAddAllowedSubscription>b__1
void VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::$BeginAddAllowedSubscription$b__1(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_2::<BeginAddAllowedSubscription>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddAllowedSubscription>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass108_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass108_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_delete_auto_accept_rule_t
#include "GlobalNamespace/vx_req_account_delete_auto_accept_rule_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_delete_auto_accept_rule_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_delete_auto_accept_rule_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_delete_auto_accept_rule_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass108_0.<BeginRemoveAllowedSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::$BeginRemoveAllowedSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass108_0::<BeginRemoveAllowedSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginRemoveAllowedSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass110_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass110_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncResult`1
#include "VivoxUnity/AsyncResult_1.hpp"
// Including type: VivoxUnity.IPresenceSubscription
#include "VivoxUnity/IPresenceSubscription.hpp"
// Including type: vx_req_account_buddy_set_t
#include "GlobalNamespace/vx_req_account_buddy_set_t.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncResult`1<VivoxUnity.IPresenceSubscription> ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncResult_1<::VivoxUnity::IPresenceSubscription*>*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncResult_1<::VivoxUnity::IPresenceSubscription*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_buddy_set_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_buddy_set_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_buddy_set_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.AsyncCallback <>9__2
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$9__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.AsyncCallback <>9__1
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass110_0.<BeginAddPresenceSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::$BeginAddPresenceSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::<BeginAddPresenceSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddPresenceSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass110_0.<BeginAddPresenceSubscription>b__1
void VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::$BeginAddPresenceSubscription$b__1(::System::IAsyncResult* ar2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::<BeginAddPresenceSubscription>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddPresenceSubscription>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar2);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass110_0.<BeginAddPresenceSubscription>b__2
void VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::$BeginAddPresenceSubscription$b__2(::System::IAsyncResult* ar3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass110_0::<BeginAddPresenceSubscription>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddPresenceSubscription>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar3);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass112_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass112_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_buddy_delete_t
#include "GlobalNamespace/vx_req_account_buddy_delete_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_buddy_delete_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_buddy_delete_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_buddy_delete_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass112_0.<BeginRemovePresenceSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::$BeginRemovePresenceSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass112_0::<BeginRemovePresenceSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginRemovePresenceSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass114_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass114_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_resp_account_control_communications_t
#include "GlobalNamespace/vx_resp_account_control_communications_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId accountId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_accountId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_accountId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accountId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean muted
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass114_0.<SetCrossMutedCommunications>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::$SetCrossMutedCommunications$b__0(::GlobalNamespace::vx_resp_account_control_communications_t* resp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass114_0::<SetCrossMutedCommunications>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetCrossMutedCommunications>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass115_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass115_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_resp_account_control_communications_t
#include "GlobalNamespace/vx_resp_account_control_communications_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean muted
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass115_0.<SetCrossMutedCommunications>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::$SetCrossMutedCommunications$b__0(::GlobalNamespace::vx_resp_account_control_communications_t* resp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass115_0::<SetCrossMutedCommunications>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetCrossMutedCommunications>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass116_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass116_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_resp_account_control_communications_t
#include "GlobalNamespace/vx_resp_account_control_communications_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass116_0.<ClearCrossMutedCommunications>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::$ClearCrossMutedCommunications$b__0(::GlobalNamespace::vx_resp_account_control_communications_t* resp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass116_0::<ClearCrossMutedCommunications>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearCrossMutedCommunications>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass117_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass117_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: vx_resp_account_control_communications_t
#include "GlobalNamespace/vx_resp_account_control_communications_t.hpp"
// Including type: vx_req_account_control_communications_t
#include "GlobalNamespace/vx_req_account_control_communications_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<vx_resp_account_control_communications_t> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::vx_resp_account_control_communications_t*>*& VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::vx_resp_account_control_communications_t*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_control_communications_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_control_communications_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_control_communications_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass117_0.<SendCrossMuteOperationRequest>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::$SendCrossMuteOperationRequest$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass117_0::<SendCrossMuteOperationRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendCrossMuteOperationRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass125_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass125_0.hpp"
// Including type: vx_req_sessiongroup_set_tx_session_t
#include "GlobalNamespace/vx_req_sessiongroup_set_tx_session_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_set_tx_session_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_set_tx_session_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass125_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass125_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_set_tx_session_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass125_0.<SetTransmitting>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass125_0::$SetTransmitting$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass125_0::<SetTransmitting>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetTransmitting>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass126_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass126_0.hpp"
// Including type: vx_req_sessiongroup_set_tx_no_session_t
#include "GlobalNamespace/vx_req_sessiongroup_set_tx_no_session_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_set_tx_no_session_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_set_tx_no_session_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass126_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass126_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_set_tx_no_session_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass126_0.<SetNoSessionTransmitting>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass126_0::$SetNoSessionTransmitting$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass126_0::<SetNoSessionTransmitting>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetNoSessionTransmitting>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass127_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass127_0.hpp"
// Including type: vx_req_sessiongroup_set_tx_all_sessions_t
#include "GlobalNamespace/vx_req_sessiongroup_set_tx_all_sessions_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_set_tx_all_sessions_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_set_tx_all_sessions_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass127_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass127_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_set_tx_all_sessions_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass127_0.<SetAllSessionsTransmitting>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass127_0::$SetAllSessionsTransmitting$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass127_0::<SetAllSessionsTransmitting>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetAllSessionsTransmitting>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.PresenceLocation
#include "VivoxUnity/Private/PresenceLocation.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IPresenceSubscription
#include "VivoxUnity/IPresenceSubscription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Presence _currentPresence
[[deprecated("Use field access instead!")]] ::VivoxUnity::Presence& VivoxUnity::Private::PresenceLocation::dyn__currentPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::dyn__currentPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPresence"))->offset;
  return *reinterpret_cast<::VivoxUnity::Presence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _location
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::PresenceLocation::dyn__location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::dyn__location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_location"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::PresenceLocation::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::PresenceLocation::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.IPresenceSubscription <Subscription>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::IPresenceSubscription*& VivoxUnity::Private::PresenceLocation::dyn_$Subscription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::dyn_$Subscription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Subscription>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::IPresenceSubscription**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.add_PropertyChanged
void VivoxUnity::Private::PresenceLocation::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.remove_PropertyChanged
void VivoxUnity::Private::PresenceLocation::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.get_Key
::StringW VivoxUnity::Private::PresenceLocation::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.get_CurrentPresence
::VivoxUnity::Presence VivoxUnity::Private::PresenceLocation::get_CurrentPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::get_CurrentPresence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::Presence, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.set_CurrentPresence
void VivoxUnity::Private::PresenceLocation::set_CurrentPresence(::VivoxUnity::Presence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::set_CurrentPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.get_Location
::StringW VivoxUnity::Private::PresenceLocation::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::get_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.set_Location
void VivoxUnity::Private::PresenceLocation::set_Location(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::set_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.get_Subscription
::VivoxUnity::IPresenceSubscription* VivoxUnity::Private::PresenceLocation::get_Subscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::get_Subscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IPresenceSubscription*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.set_Subscription
void VivoxUnity::Private::PresenceLocation::set_Subscription(::VivoxUnity::IPresenceSubscription* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::set_Subscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Subscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceLocation.get_LocationId
::StringW VivoxUnity::Private::PresenceLocation::get_LocationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::get_LocationId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceLocation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.PresenceSubscription
#include "VivoxUnity/Private/PresenceSubscription.hpp"
// Including type: VivoxUnity.Common.ReadWriteDictionary`3
#include "VivoxUnity/Common/ReadWriteDictionary_3.hpp"
// Including type: VivoxUnity.IPresenceLocation
#include "VivoxUnity/IPresenceLocation.hpp"
// Including type: VivoxUnity.Private.PresenceLocation
#include "VivoxUnity/Private/PresenceLocation.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.IReadOnlyDictionary`2
#include "VivoxUnity/IReadOnlyDictionary_2.hpp"
// Including type: VivoxUnity.PresenceStatus
#include "VivoxUnity/PresenceStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<System.String,VivoxUnity.IPresenceLocation,VivoxUnity.Private.PresenceLocation> _locations
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IPresenceLocation*, ::VivoxUnity::Private::PresenceLocation*>*& VivoxUnity::Private::PresenceSubscription::dyn__locations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::dyn__locations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locations"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IPresenceLocation*, ::VivoxUnity::Private::PresenceLocation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::PresenceSubscription::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::PresenceSubscription::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.add_PropertyChanged
void VivoxUnity::Private::PresenceSubscription::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceSubscription*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.remove_PropertyChanged
void VivoxUnity::Private::PresenceSubscription::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceSubscription*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.get_Key
::VivoxUnity::AccountId* VivoxUnity::Private::PresenceSubscription::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceSubscription*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.set_Key
void VivoxUnity::Private::PresenceSubscription::set_Key(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.get_Locations
::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IPresenceLocation*>* VivoxUnity::Private::PresenceSubscription::get_Locations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::get_Locations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceSubscription*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IPresenceLocation*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.UpdateLocation
void VivoxUnity::Private::PresenceSubscription::UpdateLocation(::StringW uriWithTag, ::VivoxUnity::PresenceStatus status, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::UpdateLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriWithTag), ::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uriWithTag, status, message);
}
// Autogenerated method: VivoxUnity.Private.PresenceSubscription.get_SubscribedAccount
::VivoxUnity::AccountId* VivoxUnity::Private::PresenceSubscription::get_SubscribedAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceSubscription::get_SubscribedAccount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::PresenceSubscription*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.DirectedTextMessage
#include "VivoxUnity/Private/DirectedTextMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.ILoginSession
#include "VivoxUnity/ILoginSession.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::DirectedTextMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::DirectedTextMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedTextMessage::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <ReceivedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::DirectedTextMessage::dyn_$ReceivedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$ReceivedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedTextMessage::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Language>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedTextMessage::dyn_$Language$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$Language$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Language>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ILoginSession <LoginSession>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::ILoginSession*& VivoxUnity::Private::DirectedTextMessage::dyn_$LoginSession$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$LoginSession$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoginSession>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::ILoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Sender>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::DirectedTextMessage::dyn_$Sender$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$Sender$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sender>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ApplicationStanzaNamespace>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedTextMessage::dyn_$ApplicationStanzaNamespace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$ApplicationStanzaNamespace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ApplicationStanzaNamespace>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ApplicationStanzaBody>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedTextMessage::dyn_$ApplicationStanzaBody$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::dyn_$ApplicationStanzaBody$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ApplicationStanzaBody>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.add_PropertyChanged
void VivoxUnity::Private::DirectedTextMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.remove_PropertyChanged
void VivoxUnity::Private::DirectedTextMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_Exception
::System::Exception* VivoxUnity::Private::DirectedTextMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_Exception
void VivoxUnity::Private::DirectedTextMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_Key
::StringW VivoxUnity::Private::DirectedTextMessage::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_Key
void VivoxUnity::Private::DirectedTextMessage::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_ReceivedTime
::System::DateTime VivoxUnity::Private::DirectedTextMessage::get_ReceivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_ReceivedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_ReceivedTime
void VivoxUnity::Private::DirectedTextMessage::set_ReceivedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_ReceivedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_Message
::StringW VivoxUnity::Private::DirectedTextMessage::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_Message
void VivoxUnity::Private::DirectedTextMessage::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_Language
::StringW VivoxUnity::Private::DirectedTextMessage::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_Language");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_Language
void VivoxUnity::Private::DirectedTextMessage::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_LoginSession
::VivoxUnity::ILoginSession* VivoxUnity::Private::DirectedTextMessage::get_LoginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_LoginSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ILoginSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_LoginSession
void VivoxUnity::Private::DirectedTextMessage::set_LoginSession(::VivoxUnity::ILoginSession* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_LoginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_Sender
::VivoxUnity::AccountId* VivoxUnity::Private::DirectedTextMessage::get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_Sender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_Sender
void VivoxUnity::Private::DirectedTextMessage::set_Sender(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_Sender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_ApplicationStanzaNamespace
::StringW VivoxUnity::Private::DirectedTextMessage::get_ApplicationStanzaNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_ApplicationStanzaNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_ApplicationStanzaNamespace
void VivoxUnity::Private::DirectedTextMessage::set_ApplicationStanzaNamespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_ApplicationStanzaNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplicationStanzaNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.get_ApplicationStanzaBody
::StringW VivoxUnity::Private::DirectedTextMessage::get_ApplicationStanzaBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::get_ApplicationStanzaBody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedTextMessage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedTextMessage.set_ApplicationStanzaBody
void VivoxUnity::Private::DirectedTextMessage::set_ApplicationStanzaBody(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedTextMessage::set_ApplicationStanzaBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplicationStanzaBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.FailedDirectedTextMessage
#include "VivoxUnity/Private/FailedDirectedTextMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::FailedDirectedTextMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::FailedDirectedTextMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Sender>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::FailedDirectedTextMessage::dyn_$Sender$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::dyn_$Sender$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sender>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <RequestId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::FailedDirectedTextMessage::dyn_$RequestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::dyn_$RequestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StatusCode>k__BackingField
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::FailedDirectedTextMessage::dyn_$StatusCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::dyn_$StatusCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StatusCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.add_PropertyChanged
void VivoxUnity::Private::FailedDirectedTextMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::add_PropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.remove_PropertyChanged
void VivoxUnity::Private::FailedDirectedTextMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::remove_PropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.get_Exception
::System::Exception* VivoxUnity::Private::FailedDirectedTextMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.set_Exception
void VivoxUnity::Private::FailedDirectedTextMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.get_Sender
::VivoxUnity::AccountId* VivoxUnity::Private::FailedDirectedTextMessage::get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::get_Sender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::FailedDirectedTextMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.set_Sender
void VivoxUnity::Private::FailedDirectedTextMessage::set_Sender(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::set_Sender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.get_RequestId
::StringW VivoxUnity::Private::FailedDirectedTextMessage::get_RequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::get_RequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::FailedDirectedTextMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.set_RequestId
void VivoxUnity::Private::FailedDirectedTextMessage::set_RequestId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::set_RequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.get_StatusCode
int VivoxUnity::Private::FailedDirectedTextMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::get_StatusCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::FailedDirectedTextMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.FailedDirectedTextMessage.set_StatusCode
void VivoxUnity::Private::FailedDirectedTextMessage::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::FailedDirectedTextMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelTextMessage
#include "VivoxUnity/Private/ChannelTextMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::ChannelTextMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::ChannelTextMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelTextMessage::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <ReceivedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::ChannelTextMessage::dyn_$ReceivedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$ReceivedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelTextMessage::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Language>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelTextMessage::dyn_$Language$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$Language$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Language>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.IChannelSession <ChannelSession>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::IChannelSession*& VivoxUnity::Private::ChannelTextMessage::dyn_$ChannelSession$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$ChannelSession$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ChannelSession>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::IChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Sender>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::ChannelTextMessage::dyn_$Sender$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$Sender$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sender>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <FromSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelTextMessage::dyn_$FromSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$FromSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FromSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ApplicationStanzaNamespace>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelTextMessage::dyn_$ApplicationStanzaNamespace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$ApplicationStanzaNamespace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ApplicationStanzaNamespace>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ApplicationStanzaBody>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelTextMessage::dyn_$ApplicationStanzaBody$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::dyn_$ApplicationStanzaBody$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ApplicationStanzaBody>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.add_PropertyChanged
void VivoxUnity::Private::ChannelTextMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.remove_PropertyChanged
void VivoxUnity::Private::ChannelTextMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_Exception
::System::Exception* VivoxUnity::Private::ChannelTextMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_Exception
void VivoxUnity::Private::ChannelTextMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_Key
::StringW VivoxUnity::Private::ChannelTextMessage::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_Key
void VivoxUnity::Private::ChannelTextMessage::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_ReceivedTime
::System::DateTime VivoxUnity::Private::ChannelTextMessage::get_ReceivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_ReceivedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_ReceivedTime
void VivoxUnity::Private::ChannelTextMessage::set_ReceivedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_ReceivedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_Message
::StringW VivoxUnity::Private::ChannelTextMessage::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_Message
void VivoxUnity::Private::ChannelTextMessage::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_Language
::StringW VivoxUnity::Private::ChannelTextMessage::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_Language");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_Language
void VivoxUnity::Private::ChannelTextMessage::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_ChannelSession
::VivoxUnity::IChannelSession* VivoxUnity::Private::ChannelTextMessage::get_ChannelSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_ChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IChannelSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_ChannelSession
void VivoxUnity::Private::ChannelTextMessage::set_ChannelSession(::VivoxUnity::IChannelSession* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_ChannelSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_Sender
::VivoxUnity::AccountId* VivoxUnity::Private::ChannelTextMessage::get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_Sender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_Sender
void VivoxUnity::Private::ChannelTextMessage::set_Sender(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_Sender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_FromSelf
bool VivoxUnity::Private::ChannelTextMessage::get_FromSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_FromSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_FromSelf
void VivoxUnity::Private::ChannelTextMessage::set_FromSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_FromSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FromSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_ApplicationStanzaNamespace
::StringW VivoxUnity::Private::ChannelTextMessage::get_ApplicationStanzaNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_ApplicationStanzaNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_ApplicationStanzaNamespace
void VivoxUnity::Private::ChannelTextMessage::set_ApplicationStanzaNamespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_ApplicationStanzaNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplicationStanzaNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.get_ApplicationStanzaBody
::StringW VivoxUnity::Private::ChannelTextMessage::get_ApplicationStanzaBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::get_ApplicationStanzaBody");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelTextMessage*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelTextMessage.set_ApplicationStanzaBody
void VivoxUnity::Private::ChannelTextMessage::set_ApplicationStanzaBody(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelTextMessage::set_ApplicationStanzaBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplicationStanzaBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.SessionArchiveMessage
#include "VivoxUnity/Private/SessionArchiveMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::SessionArchiveMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::SessionArchiveMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::SessionArchiveMessage::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <ReceivedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::SessionArchiveMessage::dyn_$ReceivedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$ReceivedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::SessionArchiveMessage::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Language>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::SessionArchiveMessage::dyn_$Language$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$Language$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Language>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.IChannelSession <ChannelSession>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::IChannelSession*& VivoxUnity::Private::SessionArchiveMessage::dyn_$ChannelSession$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$ChannelSession$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ChannelSession>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::IChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Sender>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::SessionArchiveMessage::dyn_$Sender$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$Sender$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sender>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <FromSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::SessionArchiveMessage::dyn_$FromSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$FromSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FromSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <QueryId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::SessionArchiveMessage::dyn_$QueryId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$QueryId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QueryId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <MessageId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::SessionArchiveMessage::dyn_$MessageId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::dyn_$MessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MessageId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.add_PropertyChanged
void VivoxUnity::Private::SessionArchiveMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.remove_PropertyChanged
void VivoxUnity::Private::SessionArchiveMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_Exception
::System::Exception* VivoxUnity::Private::SessionArchiveMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_Exception
void VivoxUnity::Private::SessionArchiveMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_Key
::StringW VivoxUnity::Private::SessionArchiveMessage::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_Key
void VivoxUnity::Private::SessionArchiveMessage::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_ReceivedTime
::System::DateTime VivoxUnity::Private::SessionArchiveMessage::get_ReceivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_ReceivedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_ReceivedTime
void VivoxUnity::Private::SessionArchiveMessage::set_ReceivedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_ReceivedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_Message
::StringW VivoxUnity::Private::SessionArchiveMessage::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_Message
void VivoxUnity::Private::SessionArchiveMessage::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_Language
::StringW VivoxUnity::Private::SessionArchiveMessage::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_Language");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_Language
void VivoxUnity::Private::SessionArchiveMessage::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_ChannelSession
::VivoxUnity::IChannelSession* VivoxUnity::Private::SessionArchiveMessage::get_ChannelSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_ChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IChannelSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_ChannelSession
void VivoxUnity::Private::SessionArchiveMessage::set_ChannelSession(::VivoxUnity::IChannelSession* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_ChannelSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_Sender
::VivoxUnity::AccountId* VivoxUnity::Private::SessionArchiveMessage::get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_Sender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_Sender
void VivoxUnity::Private::SessionArchiveMessage::set_Sender(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_Sender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_FromSelf
bool VivoxUnity::Private::SessionArchiveMessage::get_FromSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_FromSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_FromSelf
void VivoxUnity::Private::SessionArchiveMessage::set_FromSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_FromSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FromSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_QueryId
::StringW VivoxUnity::Private::SessionArchiveMessage::get_QueryId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_QueryId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_QueryId
void VivoxUnity::Private::SessionArchiveMessage::set_QueryId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_QueryId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QueryId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.get_MessageId
::StringW VivoxUnity::Private::SessionArchiveMessage::get_MessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::get_MessageId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::SessionArchiveMessage*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.SessionArchiveMessage.set_MessageId
void VivoxUnity::Private::SessionArchiveMessage::set_MessageId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::SessionArchiveMessage::set_MessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AccountArchiveMessage
#include "VivoxUnity/Private/AccountArchiveMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.ILoginSession
#include "VivoxUnity/ILoginSession.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.ChannelId
#include "VivoxUnity/ChannelId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::AccountArchiveMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::AccountArchiveMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AccountArchiveMessage::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <ReceivedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::AccountArchiveMessage::dyn_$ReceivedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$ReceivedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AccountArchiveMessage::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Language>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AccountArchiveMessage::dyn_$Language$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$Language$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Language>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ILoginSession <LoginSession>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::ILoginSession*& VivoxUnity::Private::AccountArchiveMessage::dyn_$LoginSession$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$LoginSession$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoginSession>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::ILoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <QueryId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AccountArchiveMessage::dyn_$QueryId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$QueryId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QueryId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <RemoteParticipant>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::AccountArchiveMessage::dyn_$RemoteParticipant$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$RemoteParticipant$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RemoteParticipant>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ChannelId <Channel>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::ChannelId*& VivoxUnity::Private::AccountArchiveMessage::dyn_$Channel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$Channel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Channel>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::ChannelId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Inbound>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::AccountArchiveMessage::dyn_$Inbound$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$Inbound$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Inbound>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <MessageId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AccountArchiveMessage::dyn_$MessageId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::dyn_$MessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MessageId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.add_PropertyChanged
void VivoxUnity::Private::AccountArchiveMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.remove_PropertyChanged
void VivoxUnity::Private::AccountArchiveMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Exception
::System::Exception* VivoxUnity::Private::AccountArchiveMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Exception
void VivoxUnity::Private::AccountArchiveMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Key
::StringW VivoxUnity::Private::AccountArchiveMessage::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Key
void VivoxUnity::Private::AccountArchiveMessage::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_ReceivedTime
::System::DateTime VivoxUnity::Private::AccountArchiveMessage::get_ReceivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_ReceivedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_ReceivedTime
void VivoxUnity::Private::AccountArchiveMessage::set_ReceivedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_ReceivedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Message
::StringW VivoxUnity::Private::AccountArchiveMessage::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Message
void VivoxUnity::Private::AccountArchiveMessage::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Language
::StringW VivoxUnity::Private::AccountArchiveMessage::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Language");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Language
void VivoxUnity::Private::AccountArchiveMessage::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_LoginSession
::VivoxUnity::ILoginSession* VivoxUnity::Private::AccountArchiveMessage::get_LoginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_LoginSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ILoginSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_LoginSession
void VivoxUnity::Private::AccountArchiveMessage::set_LoginSession(::VivoxUnity::ILoginSession* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_LoginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_QueryId
::StringW VivoxUnity::Private::AccountArchiveMessage::get_QueryId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_QueryId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_QueryId
void VivoxUnity::Private::AccountArchiveMessage::set_QueryId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_QueryId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QueryId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_RemoteParticipant
::VivoxUnity::AccountId* VivoxUnity::Private::AccountArchiveMessage::get_RemoteParticipant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_RemoteParticipant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_RemoteParticipant
void VivoxUnity::Private::AccountArchiveMessage::set_RemoteParticipant(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_RemoteParticipant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemoteParticipant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Channel
::VivoxUnity::ChannelId* VivoxUnity::Private::AccountArchiveMessage::get_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Channel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ChannelId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Channel
void VivoxUnity::Private::AccountArchiveMessage::set_Channel(::VivoxUnity::ChannelId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Channel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Channel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_Inbound
bool VivoxUnity::Private::AccountArchiveMessage::get_Inbound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_Inbound");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_Inbound
void VivoxUnity::Private::AccountArchiveMessage::set_Inbound(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_Inbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.get_MessageId
::StringW VivoxUnity::Private::AccountArchiveMessage::get_MessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::get_MessageId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AccountArchiveMessage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AccountArchiveMessage.set_MessageId
void VivoxUnity::Private::AccountArchiveMessage::set_MessageId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AccountArchiveMessage::set_MessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.TranscribedMessage
#include "VivoxUnity/Private/TranscribedMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& VivoxUnity::Private::TranscribedMessage::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::TranscribedMessage::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::TranscribedMessage::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <ReceivedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::TranscribedMessage::dyn_$ReceivedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$ReceivedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::TranscribedMessage::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Language>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::TranscribedMessage::dyn_$Language$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$Language$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Language>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.IChannelSession <ChannelSession>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::IChannelSession*& VivoxUnity::Private::TranscribedMessage::dyn_$ChannelSession$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$ChannelSession$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ChannelSession>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::IChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.AccountId <Sender>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::TranscribedMessage::dyn_$Sender$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$Sender$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Sender>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <FromSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::TranscribedMessage::dyn_$FromSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::dyn_$FromSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FromSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.add_PropertyChanged
void VivoxUnity::Private::TranscribedMessage::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.remove_PropertyChanged
void VivoxUnity::Private::TranscribedMessage::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_Exception
::System::Exception* VivoxUnity::Private::TranscribedMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_Exception
void VivoxUnity::Private::TranscribedMessage::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_Key
::StringW VivoxUnity::Private::TranscribedMessage::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_Key
void VivoxUnity::Private::TranscribedMessage::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_ReceivedTime
::System::DateTime VivoxUnity::Private::TranscribedMessage::get_ReceivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_ReceivedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_ReceivedTime
void VivoxUnity::Private::TranscribedMessage::set_ReceivedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_ReceivedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_Message
::StringW VivoxUnity::Private::TranscribedMessage::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_Message
void VivoxUnity::Private::TranscribedMessage::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_Language
::StringW VivoxUnity::Private::TranscribedMessage::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_Language");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_Language
void VivoxUnity::Private::TranscribedMessage::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_ChannelSession
::VivoxUnity::IChannelSession* VivoxUnity::Private::TranscribedMessage::get_ChannelSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_ChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IChannelSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_ChannelSession
void VivoxUnity::Private::TranscribedMessage::set_ChannelSession(::VivoxUnity::IChannelSession* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_ChannelSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_Sender
::VivoxUnity::AccountId* VivoxUnity::Private::TranscribedMessage::get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_Sender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_Sender
void VivoxUnity::Private::TranscribedMessage::set_Sender(::VivoxUnity::AccountId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_Sender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Sender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.get_FromSelf
bool VivoxUnity::Private::TranscribedMessage::get_FromSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::get_FromSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TranscribedMessage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TranscribedMessage.set_FromSelf
void VivoxUnity::Private::TranscribedMessage::set_FromSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::set_FromSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FromSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VivoxUnity.Private.TTSMessageQueue
#include "VivoxUnity/Private/TTSMessageQueue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VivoxUnity.TTSMessage
#include "VivoxUnity/TTSMessage.hpp"
// Including type: VivoxUnity.Private.TextToSpeech
#include "VivoxUnity/Private/TextToSpeech.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: VivoxUnity.ITTSMessageQueueEventArgs
#include "VivoxUnity/ITTSMessageQueueEventArgs.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VivoxUnity.TTSMessage> _messages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VivoxUnity::TTSMessage*>*& VivoxUnity::Private::TTSMessageQueue::dyn__messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::dyn__messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VivoxUnity::TTSMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.TextToSpeech _parentTTS
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::TextToSpeech*& VivoxUnity::Private::TTSMessageQueue::dyn__parentTTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::dyn__parentTTS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTTS"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::TextToSpeech**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<VivoxUnity.ITTSMessageQueueEventArgs> AfterMessageAdded
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>*& VivoxUnity::Private::TTSMessageQueue::dyn_AfterMessageAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::dyn_AfterMessageAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AfterMessageAdded"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<VivoxUnity.ITTSMessageQueueEventArgs> BeforeMessageRemoved
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>*& VivoxUnity::Private::TTSMessageQueue::dyn_BeforeMessageRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::dyn_BeforeMessageRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BeforeMessageRemoved"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<VivoxUnity.ITTSMessageQueueEventArgs> AfterMessageUpdated
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>*& VivoxUnity::Private::TTSMessageQueue::dyn_AfterMessageUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::dyn_AfterMessageUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AfterMessageUpdated"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.add_AfterMessageAdded
void VivoxUnity::Private::TTSMessageQueue::add_AfterMessageAdded(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::add_AfterMessageAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.remove_AfterMessageAdded
void VivoxUnity::Private::TTSMessageQueue::remove_AfterMessageAdded(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::remove_AfterMessageAdded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.add_BeforeMessageRemoved
void VivoxUnity::Private::TTSMessageQueue::add_BeforeMessageRemoved(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::add_BeforeMessageRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.remove_BeforeMessageRemoved
void VivoxUnity::Private::TTSMessageQueue::remove_BeforeMessageRemoved(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::remove_BeforeMessageRemoved");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.add_AfterMessageUpdated
void VivoxUnity::Private::TTSMessageQueue::add_AfterMessageUpdated(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::add_AfterMessageUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.remove_AfterMessageUpdated
void VivoxUnity::Private::TTSMessageQueue::remove_AfterMessageUpdated(::System::EventHandler_1<::VivoxUnity::ITTSMessageQueueEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::remove_AfterMessageUpdated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Cleanup
void VivoxUnity::Private::TTSMessageQueue::Cleanup(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Clear
void VivoxUnity::Private::TTSMessageQueue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Contains
bool VivoxUnity::Private::TTSMessageQueue::Contains(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.get_Count
int VivoxUnity::Private::TTSMessageQueue::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Dequeue
::VivoxUnity::TTSMessage* VivoxUnity::Private::TTSMessageQueue::Dequeue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Dequeue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::TTSMessage*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Enqueue
void VivoxUnity::Private::TTSMessageQueue::Enqueue(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Enqueue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.OnMessage_PropertyChanged
void VivoxUnity::Private::TTSMessageQueue::OnMessage_PropertyChanged(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::OnMessage_PropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMessage_PropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Peek
::VivoxUnity::TTSMessage* VivoxUnity::Private::TTSMessageQueue::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Peek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::TTSMessage*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.Remove
bool VivoxUnity::Private::TTSMessageQueue::Remove(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::VivoxUnity::TTSMessage*>* VivoxUnity::Private::TTSMessageQueue::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::VivoxUnity::TTSMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSMessageQueue.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* VivoxUnity::Private::TTSMessageQueue::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSMessageQueue::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSMessageQueue*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VivoxUnity.Private.TextToSpeech
#include "VivoxUnity/Private/TextToSpeech.hpp"
// Including type: VivoxUnity.Private.TextToSpeech/<>c
#include "VivoxUnity/Private/TextToSpeech_--c.hpp"
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass17_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass17_0.hpp"
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass24_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass24_0.hpp"
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass29_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass29_0.hpp"
// Including type: VivoxUnity.Client
#include "VivoxUnity/Client.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VivoxUnity.ITTSVoice
#include "VivoxUnity/ITTSVoice.hpp"
// Including type: VivoxUnity.Private.TTSVoice
#include "VivoxUnity/Private/TTSVoice.hpp"
// Including type: VivoxUnity.Private.TTSMessageQueue
#include "VivoxUnity/Private/TTSMessageQueue.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: vx_evt_base_t
#include "GlobalNamespace/vx_evt_base_t.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: VivoxUnity.TTSMessage
#include "VivoxUnity/TTSMessage.hpp"
// Including type: VivoxUnity.TTSDestination
#include "VivoxUnity/TTSDestination.hpp"
// Including type: VivoxUnity.ITTSMessageQueue
#include "VivoxUnity/ITTSMessageQueue.hpp"
// Including type: vx_tts_status
#include "GlobalNamespace/vx_tts_status.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Client _client
[[deprecated("Use field access instead!")]] ::VivoxUnity::Client*& VivoxUnity::Private::TextToSpeech::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::VivoxUnity::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VivoxUnity.ITTSVoice> _ttsAvailableVoices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VivoxUnity::ITTSVoice*>*& VivoxUnity::Private::TextToSpeech::dyn__ttsAvailableVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::dyn__ttsAvailableVoices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ttsAvailableVoices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VivoxUnity::ITTSVoice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.TTSVoice _ttsCurrentVoice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::TTSVoice*& VivoxUnity::Private::TextToSpeech::dyn__ttsCurrentVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::dyn__ttsCurrentVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ttsCurrentVoice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::TTSVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Private.TTSMessageQueue _ttsMessages
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::TTSMessageQueue*& VivoxUnity::Private::TextToSpeech::dyn__ttsMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::dyn__ttsMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ttsMessages"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::TTSMessageQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::TextToSpeech::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.InstanceOnEventMessageReceived
void VivoxUnity::Private::TextToSpeech::InstanceOnEventMessageReceived(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::InstanceOnEventMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstanceOnEventMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.HandleTTSInjectionStarted
void VivoxUnity::Private::TextToSpeech::HandleTTSInjectionStarted(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::HandleTTSInjectionStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTTSInjectionStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.HandleTTSInjectionEnded
void VivoxUnity::Private::TextToSpeech::HandleTTSInjectionEnded(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::HandleTTSInjectionEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTTSInjectionEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.HandleTTSInjectionFailed
void VivoxUnity::Private::TextToSpeech::HandleTTSInjectionFailed(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::HandleTTSInjectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTTSInjectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.add_PropertyChanged
void VivoxUnity::Private::TextToSpeech::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.remove_PropertyChanged
void VivoxUnity::Private::TextToSpeech::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.get_AvailableVoices
::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ITTSVoice*>* VivoxUnity::Private::TextToSpeech::get_AvailableVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::get_AvailableVoices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ITTSVoice*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.get_CurrentVoice
::VivoxUnity::ITTSVoice* VivoxUnity::Private::TextToSpeech::get_CurrentVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::get_CurrentVoice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ITTSVoice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.set_CurrentVoice
void VivoxUnity::Private::TextToSpeech::set_CurrentVoice(::VivoxUnity::ITTSVoice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::set_CurrentVoice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.Speak
void VivoxUnity::Private::TextToSpeech::Speak(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::Speak");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.CancelMessage
void VivoxUnity::Private::TextToSpeech::CancelMessage(::VivoxUnity::TTSMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::CancelMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.CancelDestination
void VivoxUnity::Private::TextToSpeech::CancelDestination(::VivoxUnity::TTSDestination destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::CancelDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.CancelAll
void VivoxUnity::Private::TextToSpeech::CancelAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::CancelAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.get_Messages
::VivoxUnity::ITTSMessageQueue* VivoxUnity::Private::TextToSpeech::get_Messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::get_Messages");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ITTSMessageQueue*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.GetMessagesFromDestination
::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::TTSMessage*>* VivoxUnity::Private::TextToSpeech::GetMessagesFromDestination(::VivoxUnity::TTSDestination destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::GetMessagesFromDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TextToSpeech*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::TTSMessage*>*, false>(this, ___internal__method, destination);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.get_TTSManagerId
uint VivoxUnity::Private::TextToSpeech::get_TTSManagerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::get_TTSManagerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TTSManagerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.TTSInitialize
bool VivoxUnity::Private::TextToSpeech::TTSInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::TTSInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TTSInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.IsNotTTSError
bool VivoxUnity::Private::TextToSpeech::IsNotTTSError(::GlobalNamespace::vx_tts_status status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::IsNotTTSError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VivoxUnity.Private", "TextToSpeech", "IsNotTTSError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.GetTTSMessageFromEvt
::VivoxUnity::TTSMessage* VivoxUnity::Private::TextToSpeech::GetTTSMessageFromEvt(uint utteranceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::GetTTSMessageFromEvt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTTSMessageFromEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utteranceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::TTSMessage*, false>(this, ___internal__method, utteranceId);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.CleanupTTS
void VivoxUnity::Private::TextToSpeech::CleanupTTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::CleanupTTS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupTTS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech.Finalize
void VivoxUnity::Private::TextToSpeech::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.TextToSpeech/<>c
#include "VivoxUnity/Private/TextToSpeech_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: vx_tts_voice_t
#include "GlobalNamespace/vx_tts_voice_t.hpp"
// Including type: VivoxUnity.Private.TTSVoice
#include "VivoxUnity/Private/TTSVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VivoxUnity.Private.TextToSpeech/<>c <>9
::VivoxUnity::Private::TextToSpeech::$$c* VivoxUnity::Private::TextToSpeech::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VivoxUnity::Private::TextToSpeech::$$c*>("VivoxUnity.Private", "TextToSpeech/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VivoxUnity.Private.TextToSpeech/<>c <>9
void VivoxUnity::Private::TextToSpeech::$$c::_set_$$9(::VivoxUnity::Private::TextToSpeech::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VivoxUnity.Private", "TextToSpeech/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<vx_tts_voice_t,VivoxUnity.Private.TTSVoice> <>9__14_0
::System::Func_2<::GlobalNamespace::vx_tts_voice_t*, ::VivoxUnity::Private::TTSVoice*>* VivoxUnity::Private::TextToSpeech::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::vx_tts_voice_t*, ::VivoxUnity::Private::TTSVoice*>*>("VivoxUnity.Private", "TextToSpeech/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<vx_tts_voice_t,VivoxUnity.Private.TTSVoice> <>9__14_0
void VivoxUnity::Private::TextToSpeech::$$c::_set_$$9__14_0(::System::Func_2<::GlobalNamespace::vx_tts_voice_t*, ::VivoxUnity::Private::TTSVoice*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VivoxUnity.Private", "TextToSpeech/<>c", "<>9__14_0", value)));
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech/<>c..cctor
void VivoxUnity::Private::TextToSpeech::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VivoxUnity.Private", "TextToSpeech/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech/<>c.<get_AvailableVoices>b__14_0
::VivoxUnity::Private::TTSVoice* VivoxUnity::Private::TextToSpeech::$$c::$get_AvailableVoices$b__14_0(::GlobalNamespace::vx_tts_voice_t* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c::<get_AvailableVoices>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AvailableVoices>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::Private::TTSVoice*, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass17_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass17_0.hpp"
// Including type: VivoxUnity.ITTSVoice
#include "VivoxUnity/ITTSVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.ITTSVoice value
[[deprecated("Use field access instead!")]] ::VivoxUnity::ITTSVoice*& VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::VivoxUnity::ITTSVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass17_0.<set_CurrentVoice>b__0
bool VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::$set_CurrentVoice$b__0(::VivoxUnity::ITTSVoice* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::<set_CurrentVoice>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_CurrentVoice>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass24_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass24_0.hpp"
// Including type: VivoxUnity.TTSMessage
#include "VivoxUnity/TTSMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.TTSDestination destination
[[deprecated("Use field access instead!")]] ::VivoxUnity::TTSDestination& VivoxUnity::Private::TextToSpeech::$$c__DisplayClass24_0::dyn_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass24_0::dyn_destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destination"))->offset;
  return *reinterpret_cast<::VivoxUnity::TTSDestination*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass24_0.<GetMessagesFromDestination>b__0
bool VivoxUnity::Private::TextToSpeech::$$c__DisplayClass24_0::$GetMessagesFromDestination$b__0(::VivoxUnity::TTSMessage* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass24_0::<GetMessagesFromDestination>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMessagesFromDestination>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass29_0
#include "VivoxUnity/Private/TextToSpeech_--c__DisplayClass29_0.hpp"
// Including type: VivoxUnity.TTSMessage
#include "VivoxUnity/TTSMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 utteranceId
[[deprecated("Use field access instead!")]] uint& VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::dyn_utteranceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::dyn_utteranceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "utteranceId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass29_0.<GetTTSMessageFromEvt>b__0
bool VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::$GetTTSMessageFromEvt$b__0(::VivoxUnity::TTSMessage* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::<GetTTSMessageFromEvt>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetTTSMessageFromEvt>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VivoxUnity.Private.TTSVoice
#include "VivoxUnity/Private/TTSVoice.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: vx_tts_voice_t
#include "GlobalNamespace/vx_tts_voice_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::TTSVoice::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <Key>k__BackingField
[[deprecated("Use field access instead!")]] uint& VivoxUnity::Private::TTSVoice::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::TTSVoice::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.get_Name
::StringW VivoxUnity::Private::TTSVoice::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSVoice*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.set_Name
void VivoxUnity::Private::TTSVoice::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.get_Key
uint VivoxUnity::Private::TTSVoice::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSVoice*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.set_Key
void VivoxUnity::Private::TTSVoice::set_Key(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.Equals
bool VivoxUnity::Private::TTSVoice::Equals(::VivoxUnity::Private::TTSVoice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.add_PropertyChanged
void VivoxUnity::Private::TTSVoice::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSVoice*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.remove_PropertyChanged
void VivoxUnity::Private::TTSVoice::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSVoice*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.OnPropertyChanged
void VivoxUnity::Private::TTSVoice::OnPropertyChanged(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::OnPropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::TTSVoice*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.Equals
bool VivoxUnity::Private::TTSVoice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: VivoxUnity.Private.TTSVoice.GetHashCode
int VivoxUnity::Private::TTSVoice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TTSVoice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Ext
#include "WebSocketSharp/Ext.hpp"
// Including type: WebSocketSharp.Ext/<ContainsTwice>c__AnonStorey1
#include "WebSocketSharp/Ext_-ContainsTwice-c__AnonStorey1.hpp"
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey3
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey3.hpp"
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey4.hpp"
// Including type: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0
#include "WebSocketSharp/Ext_-SplitHeaderValue-c__Iterator0.hpp"
// Including type: WebSocketSharp.Ext/<ToString>c__AnonStorey7`1
#include "WebSocketSharp/Ext_-ToString-c__AnonStorey7_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: WebSocketSharp.WebSocketState
#include "WebSocketSharp/WebSocketState.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: WebSocketSharp.CloseStatusCode
#include "WebSocketSharp/CloseStatusCode.hpp"
// Including type: WebSocketSharp.ByteOrder
#include "WebSocketSharp/ByteOrder.hpp"
// Including type: WebSocketSharp.Opcode
#include "WebSocketSharp/Opcode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: WebSocketSharp.Net.CookieCollection
#include "WebSocketSharp/Net/CookieCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] _last
::ArrayW<uint8_t> WebSocketSharp::Ext::_get__last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_get__last");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("WebSocketSharp", "Ext", "_last"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] _last
void WebSocketSharp::Ext::_set__last(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_set__last");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Ext", "_last", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC09F0
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
::System::Func_2<::StringW, bool>* WebSocketSharp::Ext::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("WebSocketSharp", "Ext", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
void WebSocketSharp::Ext::_set_$$f__am$cache0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Ext", "<>f__am$cache0", value));
}
// Autogenerated method: WebSocketSharp.Ext.compress
::System::IO::MemoryStream* WebSocketSharp::Ext::compress(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MemoryStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: WebSocketSharp.Ext.decompress
::ArrayW<uint8_t> WebSocketSharp::Ext::decompress(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::decompress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "decompress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: WebSocketSharp.Ext.decompress
::System::IO::MemoryStream* WebSocketSharp::Ext::decompress(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::decompress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "decompress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MemoryStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: WebSocketSharp.Ext.decompressToArray
::ArrayW<uint8_t> WebSocketSharp::Ext::decompressToArray(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::decompressToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "decompressToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: WebSocketSharp.Ext.Append
::ArrayW<uint8_t> WebSocketSharp::Ext::Append(uint16_t code, ::StringW reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(reason)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code, reason);
}
// Autogenerated method: WebSocketSharp.Ext.CheckIfAvailable
::StringW WebSocketSharp::Ext::CheckIfAvailable(::WebSocketSharp::WebSocketState state, bool connecting, bool open, bool closing, bool closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::CheckIfAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "CheckIfAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(connecting), ::il2cpp_utils::ExtractType(open), ::il2cpp_utils::ExtractType(closing), ::il2cpp_utils::ExtractType(closed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, connecting, open, closing, closed);
}
// Autogenerated method: WebSocketSharp.Ext.CheckIfValidProtocols
::StringW WebSocketSharp::Ext::CheckIfValidProtocols(::ArrayW<::StringW> protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::CheckIfValidProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "CheckIfValidProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: WebSocketSharp.Ext.Compress
::System::IO::Stream* WebSocketSharp::Ext::Compress(::System::IO::Stream* stream, ::WebSocketSharp::CompressionMethod method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, method);
}
// Autogenerated method: WebSocketSharp.Ext.ContainsTwice
bool WebSocketSharp::Ext::ContainsTwice(::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ContainsTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ContainsTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: WebSocketSharp.Ext.CopyTo
void WebSocketSharp::Ext::CopyTo(::System::IO::Stream* source, ::System::IO::Stream* destination, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, bufferLength);
}
// Autogenerated method: WebSocketSharp.Ext.Decompress
::ArrayW<uint8_t> WebSocketSharp::Ext::Decompress(::ArrayW<uint8_t> data, ::WebSocketSharp::CompressionMethod method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Decompress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Decompress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, method);
}
// Autogenerated method: WebSocketSharp.Ext.DecompressToArray
::ArrayW<uint8_t> WebSocketSharp::Ext::DecompressToArray(::System::IO::Stream* stream, ::WebSocketSharp::CompressionMethod method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::DecompressToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "DecompressToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, method);
}
// Autogenerated method: WebSocketSharp.Ext.EqualsWith
bool WebSocketSharp::Ext::EqualsWith(int value, ::Il2CppChar c, ::System::Action_1<int>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::EqualsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "EqualsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, c, action);
}
// Autogenerated method: WebSocketSharp.Ext.GetAbsolutePath
::StringW WebSocketSharp::Ext::GetAbsolutePath(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::GetAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "GetAbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: WebSocketSharp.Ext.GetMessage
::StringW WebSocketSharp::Ext::GetMessage(::WebSocketSharp::CloseStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: WebSocketSharp.Ext.GetValue
::StringW WebSocketSharp::Ext::GetValue(::StringW nameAndValue, ::Il2CppChar separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameAndValue), ::il2cpp_utils::ExtractType(separator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameAndValue, separator);
}
// Autogenerated method: WebSocketSharp.Ext.GetValue
::StringW WebSocketSharp::Ext::GetValue(::StringW nameAndValue, ::Il2CppChar separator, bool unquote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameAndValue), ::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(unquote)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameAndValue, separator, unquote);
}
// Autogenerated method: WebSocketSharp.Ext.InternalToByteArray
::ArrayW<uint8_t> WebSocketSharp::Ext::InternalToByteArray(uint16_t value, ::WebSocketSharp::ByteOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::InternalToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "InternalToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, order);
}
// Autogenerated method: WebSocketSharp.Ext.InternalToByteArray
::ArrayW<uint8_t> WebSocketSharp::Ext::InternalToByteArray(uint64_t value, ::WebSocketSharp::ByteOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::InternalToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "InternalToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, order);
}
// Autogenerated method: WebSocketSharp.Ext.IsCompressionExtension
bool WebSocketSharp::Ext::IsCompressionExtension(::StringW value, ::WebSocketSharp::CompressionMethod method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsCompressionExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsCompressionExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, method);
}
// Autogenerated method: WebSocketSharp.Ext.IsControl
bool WebSocketSharp::Ext::IsControl(uint8_t opcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opcode);
}
// Autogenerated method: WebSocketSharp.Ext.IsData
bool WebSocketSharp::Ext::IsData(uint8_t opcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opcode);
}
// Autogenerated method: WebSocketSharp.Ext.IsData
bool WebSocketSharp::Ext::IsData(::WebSocketSharp::Opcode opcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opcode);
}
// Autogenerated method: WebSocketSharp.Ext.IsReserved
bool WebSocketSharp::Ext::IsReserved(uint16_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: WebSocketSharp.Ext.IsReserved
bool WebSocketSharp::Ext::IsReserved(::WebSocketSharp::CloseStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: WebSocketSharp.Ext.IsSupported
bool WebSocketSharp::Ext::IsSupported(uint8_t opcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opcode);
}
// Autogenerated method: WebSocketSharp.Ext.IsText
bool WebSocketSharp::Ext::IsText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.IsToken
bool WebSocketSharp::Ext::IsToken(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.ReadBytes
::ArrayW<uint8_t> WebSocketSharp::Ext::ReadBytes(::System::IO::Stream* stream, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, length);
}
// Autogenerated method: WebSocketSharp.Ext.ReadBytes
::ArrayW<uint8_t> WebSocketSharp::Ext::ReadBytes(::System::IO::Stream* stream, int64_t length, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, length, bufferLength);
}
// Autogenerated method: WebSocketSharp.Ext.ReadBytesAsync
void WebSocketSharp::Ext::ReadBytesAsync(::System::IO::Stream* stream, int length, ::System::Action_1<::ArrayW<uint8_t>>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ReadBytesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ReadBytesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, length, completed, error);
}
// Autogenerated method: WebSocketSharp.Ext.ReadBytesAsync
void WebSocketSharp::Ext::ReadBytesAsync(::System::IO::Stream* stream, int64_t length, int bufferLength, ::System::Action_1<::ArrayW<uint8_t>>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ReadBytesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ReadBytesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bufferLength), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, length, bufferLength, completed, error);
}
// Autogenerated method: WebSocketSharp.Ext.SplitHeaderValue
::System::Collections::Generic::IEnumerable_1<::StringW>* WebSocketSharp::Ext::SplitHeaderValue(::StringW value, ::ArrayW<::Il2CppChar> separators) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::SplitHeaderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "SplitHeaderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(separators)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, separators);
}
// Autogenerated method: WebSocketSharp.Ext.ToByteArray
::ArrayW<uint8_t> WebSocketSharp::Ext::ToByteArray(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: WebSocketSharp.Ext.ToExtensionString
::StringW WebSocketSharp::Ext::ToExtensionString(::WebSocketSharp::CompressionMethod method, ::ArrayW<::StringW> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToExtensionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToExtensionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, parameters);
}
// Autogenerated method: WebSocketSharp.Ext.ToUInt16
uint16_t WebSocketSharp::Ext::ToUInt16(::ArrayW<uint8_t> source, ::WebSocketSharp::ByteOrder sourceOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sourceOrder);
}
// Autogenerated method: WebSocketSharp.Ext.ToUInt64
uint64_t WebSocketSharp::Ext::ToUInt64(::ArrayW<uint8_t> source, ::WebSocketSharp::ByteOrder sourceOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sourceOrder);
}
// Autogenerated method: WebSocketSharp.Ext.TryCreateWebSocketUri
bool WebSocketSharp::Ext::TryCreateWebSocketUri(::StringW uriString, ByRef<::System::Uri*> result, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::TryCreateWebSocketUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "TryCreateWebSocketUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, byref(result), byref(message));
}
// Autogenerated method: WebSocketSharp.Ext.Unquote
::StringW WebSocketSharp::Ext::Unquote(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Unquote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Unquote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.UTF8Decode
::StringW WebSocketSharp::Ext::UTF8Decode(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::UTF8Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "UTF8Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: WebSocketSharp.Ext.UTF8Encode
::ArrayW<uint8_t> WebSocketSharp::Ext::UTF8Encode(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::UTF8Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "UTF8Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: WebSocketSharp.Ext.WriteBytes
void WebSocketSharp::Ext::WriteBytes(::System::IO::Stream* stream, ::ArrayW<uint8_t> bytes, int bufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(bufferLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, bytes, bufferLength);
}
// Autogenerated method: WebSocketSharp.Ext.Contains
bool WebSocketSharp::Ext::Contains(::StringW value, ::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, chars);
}
// Autogenerated method: WebSocketSharp.Ext.Contains
bool WebSocketSharp::Ext::Contains(::System::Collections::Specialized::NameValueCollection* collection, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collection, name);
}
// Autogenerated method: WebSocketSharp.Ext.Contains
bool WebSocketSharp::Ext::Contains(::System::Collections::Specialized::NameValueCollection* collection, ::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collection, name, value);
}
// Autogenerated method: WebSocketSharp.Ext.Emit
void WebSocketSharp::Ext::Emit(::System::EventHandler* eventHandler, ::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventHandler), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventHandler, sender, e);
}
// Autogenerated method: WebSocketSharp.Ext.GetCookies
::WebSocketSharp::Net::CookieCollection* WebSocketSharp::Ext::GetCookies(::System::Collections::Specialized::NameValueCollection* headers, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::GetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "GetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::CookieCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headers, response);
}
// Autogenerated method: WebSocketSharp.Ext.IsEnclosedIn
bool WebSocketSharp::Ext::IsEnclosedIn(::StringW value, ::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsEnclosedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsEnclosedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, c);
}
// Autogenerated method: WebSocketSharp.Ext.IsHostOrder
bool WebSocketSharp::Ext::IsHostOrder(::WebSocketSharp::ByteOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsHostOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsHostOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, order);
}
// Autogenerated method: WebSocketSharp.Ext.IsNullOrEmpty
bool WebSocketSharp::Ext::IsNullOrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.IsPredefinedScheme
bool WebSocketSharp::Ext::IsPredefinedScheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::IsPredefinedScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "IsPredefinedScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.MaybeUri
bool WebSocketSharp::Ext::MaybeUri(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::MaybeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "MaybeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext.Times
void WebSocketSharp::Ext::Times(int n, ::System::Action_1<int>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::Times");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "Times", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, action);
}
// Autogenerated method: WebSocketSharp.Ext.ToHostOrder
::ArrayW<uint8_t> WebSocketSharp::Ext::ToHostOrder(::ArrayW<uint8_t> source, ::WebSocketSharp::ByteOrder sourceOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToHostOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToHostOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, sourceOrder);
}
// Autogenerated method: WebSocketSharp.Ext.ToUri
::System::Uri* WebSocketSharp::Ext::ToUri(::StringW uriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::ToUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "ToUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString);
}
// Autogenerated method: WebSocketSharp.Ext.UrlDecode
::StringW WebSocketSharp::Ext::UrlDecode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::UrlDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "UrlDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Ext..cctor
void WebSocketSharp::Ext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext.<CheckIfValidProtocols>m__0
bool WebSocketSharp::Ext::$CheckIfValidProtocols$m__0(::StringW protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::<CheckIfValidProtocols>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Ext", "<CheckIfValidProtocols>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Ext/<ContainsTwice>c__AnonStorey1
#include "WebSocketSharp/Ext_-ContainsTwice-c__AnonStorey1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 len
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] values
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Func`2<System.Int32,System.Boolean> contains
[[deprecated("Use field access instead!")]] ::System::Func_2<int, bool>*& WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_contains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::dyn_contains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contains"))->offset;
  return *reinterpret_cast<::System::Func_2<int, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Ext/<ContainsTwice>c__AnonStorey1.<>m__0
bool WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::$$m__0(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ContainsTwice$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey3
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey3.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 length
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Byte[]> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<uint8_t>>*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] buff
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 offset
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.AsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Exception> error
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey3.<>m__0
void WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::$$m__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey3::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey4.hpp"
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4/<ReadBytesAsync>c__AnonStorey5
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey4_-ReadBytesAsync-c__AnonStorey5.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 bufferLength
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_bufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_bufferLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] buff
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.MemoryStream dest
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_dest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_dest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dest"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Byte[]> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<uint8_t>>*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Int64> read
[[deprecated("Use field access instead!")]] ::System::Action_1<int64_t>*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read"))->offset;
  return *reinterpret_cast<::System::Action_1<int64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Exception> error
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4.<>m__0
void WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$$m__0(int64_t len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4/<ReadBytesAsync>c__AnonStorey5
#include "WebSocketSharp/Ext_-ReadBytesAsync-c__AnonStorey4_-ReadBytesAsync-c__AnonStorey5.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 len
[[deprecated("Use field access instead!")]] int64_t& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4 <>f__ref$4
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4*& WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::dyn_$$f__ref$4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::dyn_$$f__ref$4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__ref$4"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Ext/<ReadBytesAsync>c__AnonStorey4/<ReadBytesAsync>c__AnonStorey5.<>m__0
void WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::$$m__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ReadBytesAsync$c__AnonStorey4::$ReadBytesAsync$c__AnonStorey5::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0
#include "WebSocketSharp/Ext_-SplitHeaderValue-c__Iterator0.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 <len>__0
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$len$__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$len$__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<len>__0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char[] separators
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_separators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_separators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "separators"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String <seps>__1
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$seps$__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$seps$__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<seps>__1"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.StringBuilder <buff>__2
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$buff$__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$buff$__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buff>__2"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean <escaped>__3
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$escaped$__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$escaped$__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<escaped>__3"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean <quoted>__4
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$quoted$__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$quoted$__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<quoted>__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 <i>__5
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$i$__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$i$__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char <c>__6
[[deprecated("Use field access instead!")]] ::Il2CppChar& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$c$__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$c$__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<c>__6"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String $current
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.MoveNext
bool WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.System.Collections.Generic.IEnumerator<string>.get_Current
::StringW WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System_Collections_Generic_IEnumerator$string$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System.Collections.Generic.IEnumerator<string>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.Dispose
void WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.Reset
void WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Ext/<SplitHeaderValue>c__Iterator0.System.Collections.Generic.IEnumerable<string>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::StringW>* WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System_Collections_Generic_IEnumerable$string$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0::System.Collections.Generic.IEnumerable<string>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Ext::$SplitHeaderValue$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.MessageEventArgs
#include "WebSocketSharp/MessageEventArgs.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _data
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::MessageEventArgs::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dataSet
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::MessageEventArgs::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Opcode _opcode
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Opcode& WebSocketSharp::MessageEventArgs::dyn__opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::dyn__opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_opcode"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Opcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _rawData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::MessageEventArgs::dyn__rawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::dyn__rawData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.MessageEventArgs.get_Data
::StringW WebSocketSharp::MessageEventArgs::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.MessageEventArgs.get_IsText
bool WebSocketSharp::MessageEventArgs::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.MessageEventArgs.get_RawData
::ArrayW<uint8_t> WebSocketSharp::MessageEventArgs::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::MessageEventArgs::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.CloseEventArgs
#include "WebSocketSharp/CloseEventArgs.hpp"
// Including type: WebSocketSharp.PayloadData
#include "WebSocketSharp/PayloadData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clean
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::CloseEventArgs::dyn__clean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::dyn__clean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clean"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _code
[[deprecated("Use field access instead!")]] uint16_t& WebSocketSharp::CloseEventArgs::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.PayloadData _payloadData
[[deprecated("Use field access instead!")]] ::WebSocketSharp::PayloadData*& WebSocketSharp::CloseEventArgs::dyn__payloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::dyn__payloadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_payloadData"))->offset;
  return *reinterpret_cast<::WebSocketSharp::PayloadData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _reason
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::CloseEventArgs::dyn__reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::dyn__reason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.CloseEventArgs.get_PayloadData
::WebSocketSharp::PayloadData* WebSocketSharp::CloseEventArgs::get_PayloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::get_PayloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PayloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::PayloadData*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.CloseEventArgs.get_Code
uint16_t WebSocketSharp::CloseEventArgs::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.CloseEventArgs.get_Reason
::StringW WebSocketSharp::CloseEventArgs::get_Reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::get_Reason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.CloseEventArgs.set_WasClean
void WebSocketSharp::CloseEventArgs::set_WasClean(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseEventArgs::set_WasClean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WasClean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.ByteOrder
#include "WebSocketSharp/ByteOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.ByteOrder Little
::WebSocketSharp::ByteOrder WebSocketSharp::ByteOrder::_get_Little() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ByteOrder::_get_Little");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::ByteOrder>("WebSocketSharp", "ByteOrder", "Little"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.ByteOrder Little
void WebSocketSharp::ByteOrder::_set_Little(::WebSocketSharp::ByteOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ByteOrder::_set_Little");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "ByteOrder", "Little", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.ByteOrder Big
::WebSocketSharp::ByteOrder WebSocketSharp::ByteOrder::_get_Big() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ByteOrder::_get_Big");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::ByteOrder>("WebSocketSharp", "ByteOrder", "Big"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.ByteOrder Big
void WebSocketSharp::ByteOrder::_set_Big(::WebSocketSharp::ByteOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ByteOrder::_set_Big");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "ByteOrder", "Big", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& WebSocketSharp::ByteOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ByteOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.ErrorEventArgs
#include "WebSocketSharp/ErrorEventArgs.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception _exception
[[deprecated("Use field access instead!")]] ::System::Exception*& WebSocketSharp::ErrorEventArgs::dyn__exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ErrorEventArgs::dyn__exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::ErrorEventArgs::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ErrorEventArgs::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.ErrorEventArgs.get_Message
::StringW WebSocketSharp::ErrorEventArgs::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::ErrorEventArgs::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.WebSocket
#include "WebSocketSharp/WebSocket.hpp"
// Including type: WebSocketSharp.WebSocket/<sendAsync>c__AnonStorey3
#include "WebSocketSharp/WebSocket_-sendAsync-c__AnonStorey3.hpp"
// Including type: WebSocketSharp.WebSocket/<startReceiving>c__AnonStorey4
#include "WebSocketSharp/WebSocket_-startReceiving-c__AnonStorey4.hpp"
// Including type: WebSocketSharp.WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5
#include "WebSocketSharp/WebSocket_-validateSecWebSocketExtensionsServerHeader-c__AnonStorey5.hpp"
// Including type: WebSocketSharp.WebSocket/<validateSecWebSocketProtocolServerHeader>c__AnonStorey6
#include "WebSocketSharp/WebSocket_-validateSecWebSocketProtocolServerHeader-c__AnonStorey6.hpp"
// Including type: WebSocketSharp.Net.AuthenticationChallenge
#include "WebSocketSharp/Net/AuthenticationChallenge.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: WebSocketSharp.Net.WebSockets.WebSocketContext
#include "WebSocketSharp/Net/WebSockets/WebSocketContext.hpp"
// Including type: WebSocketSharp.Net.CookieCollection
#include "WebSocketSharp/Net/CookieCollection.hpp"
// Including type: WebSocketSharp.Net.NetworkCredential
#include "WebSocketSharp/Net/NetworkCredential.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: WebSocketSharp.Logger
#include "WebSocketSharp/Logger.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: WebSocketSharp.MessageEventArgs
#include "WebSocketSharp/MessageEventArgs.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: WebSocketSharp.Net.ClientSslConfiguration
#include "WebSocketSharp/Net/ClientSslConfiguration.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: WebSocketSharp.CloseEventArgs
#include "WebSocketSharp/CloseEventArgs.hpp"
// Including type: WebSocketSharp.ErrorEventArgs
#include "WebSocketSharp/ErrorEventArgs.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: WebSocketSharp.HttpResponse
#include "WebSocketSharp/HttpResponse.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
// Including type: WebSocketSharp.HttpRequest
#include "WebSocketSharp/HttpRequest.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: WebSocketSharp.CloseStatusCode
#include "WebSocketSharp/CloseStatusCode.hpp"
// Including type: WebSocketSharp.Fin
#include "WebSocketSharp/Fin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _guid
::StringW WebSocketSharp::WebSocket::_get__guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_get__guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("WebSocketSharp", "WebSocket", "_guid"));
}
// Autogenerated static field setter
// Set static field: static private System.String _guid
void WebSocketSharp::WebSocket::_set__guid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_set__guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocket", "_guid", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _version
::StringW WebSocketSharp::WebSocket::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_get__version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("WebSocketSharp", "WebSocket", "_version"));
}
// Autogenerated static field setter
// Set static field: static private System.String _version
void WebSocketSharp::WebSocket::_set__version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_set__version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocket", "_version", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] EmptyBytes
::ArrayW<uint8_t> WebSocketSharp::WebSocket::_get_EmptyBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_get_EmptyBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("WebSocketSharp", "WebSocket", "EmptyBytes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] EmptyBytes
void WebSocketSharp::WebSocket::_set_EmptyBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_set_EmptyBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocket", "EmptyBytes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 FragmentLength
int WebSocketSharp::WebSocket::_get_FragmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_get_FragmentLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("WebSocketSharp", "WebSocket", "FragmentLength"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 FragmentLength
void WebSocketSharp::WebSocket::_set_FragmentLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_set_FragmentLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocket", "FragmentLength", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Security.Cryptography.RandomNumberGenerator RandomNumber
::System::Security::Cryptography::RandomNumberGenerator* WebSocketSharp::WebSocket::_get_RandomNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_get_RandomNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("WebSocketSharp", "WebSocket", "RandomNumber"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Security.Cryptography.RandomNumberGenerator RandomNumber
void WebSocketSharp::WebSocket::_set_RandomNumber(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::_set_RandomNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocket", "RandomNumber", value));
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.AuthenticationChallenge _authChallenge
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::AuthenticationChallenge*& WebSocketSharp::WebSocket::dyn__authChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__authChallenge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authChallenge"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::AuthenticationChallenge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _base64Key
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::dyn__base64Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__base64Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_base64Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _client
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action _closeContext
[[deprecated("Use field access instead!")]] ::System::Action*& WebSocketSharp::WebSocket::dyn__closeContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__closeContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeContext"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.CompressionMethod _compression
[[deprecated("Use field access instead!")]] ::WebSocketSharp::CompressionMethod& WebSocketSharp::WebSocket::dyn__compression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__compression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compression"))->offset;
  return *reinterpret_cast<::WebSocketSharp::CompressionMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.WebSockets.WebSocketContext _context
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::WebSockets::WebSocketContext*& WebSocketSharp::WebSocket::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::WebSockets::WebSocketContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.CookieCollection _cookies
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::CookieCollection*& WebSocketSharp::WebSocket::dyn__cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__cookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cookies"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::CookieCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.NetworkCredential _credentials
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::NetworkCredential*& WebSocketSharp::WebSocket::dyn__credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credentials"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::NetworkCredential**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _emitOnPing
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__emitOnPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__emitOnPing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitOnPing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableRedirection
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__enableRedirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__enableRedirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableRedirection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent _exitReceiving
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& WebSocketSharp::WebSocket::dyn__exitReceiving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__exitReceiving");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitReceiving"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _extensions
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::dyn__extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extensions"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _extensionsRequested
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__extensionsRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__extensionsRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extensionsRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _forConn
[[deprecated("Use field access instead!")]] ::Il2CppObject*& WebSocketSharp::WebSocket::dyn__forConn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__forConn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forConn"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _forMessageEventQueue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& WebSocketSharp::WebSocket::dyn__forMessageEventQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__forMessageEventQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forMessageEventQueue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _forSend
[[deprecated("Use field access instead!")]] ::Il2CppObject*& WebSocketSharp::WebSocket::dyn__forSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__forSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forSend"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream _fragmentsBuffer
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& WebSocketSharp::WebSocket::dyn__fragmentsBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__fragmentsBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragmentsBuffer"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fragmentsCompressed
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__fragmentsCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__fragmentsCompressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragmentsCompressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Opcode _fragmentsOpcode
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Opcode& WebSocketSharp::WebSocket::dyn__fragmentsOpcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__fragmentsOpcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragmentsOpcode"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Opcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<WebSocketSharp.Net.WebSockets.WebSocketContext,System.String> _handshakeRequestChecker
[[deprecated("Use field access instead!")]] ::System::Func_2<::WebSocketSharp::Net::WebSockets::WebSocketContext*, ::StringW>*& WebSocketSharp::WebSocket::dyn__handshakeRequestChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__handshakeRequestChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handshakeRequestChecker"))->offset;
  return *reinterpret_cast<::System::Func_2<::WebSocketSharp::Net::WebSockets::WebSocketContext*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreExtensions
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__ignoreExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__ignoreExtensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreExtensions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inContinuation
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__inContinuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__inContinuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inContinuation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inMessage
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__inMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__inMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Logger _logger
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Logger*& WebSocketSharp::WebSocket::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Logger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<WebSocketSharp.MessageEventArgs> _message
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::MessageEventArgs*>*& WebSocketSharp::WebSocket::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::MessageEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<WebSocketSharp.MessageEventArgs> _messageEventQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::WebSocketSharp::MessageEventArgs*>*& WebSocketSharp::WebSocket::dyn__messageEventQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__messageEventQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageEventQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::WebSocketSharp::MessageEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nonceCount
[[deprecated("Use field access instead!")]] uint& WebSocketSharp::WebSocket::dyn__nonceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__nonceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonceCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _origin
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _preAuth
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__preAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__preAuth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preAuth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _protocol
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::dyn__protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _protocols
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& WebSocketSharp::WebSocket::dyn__protocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__protocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocols"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _protocolsRequested
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__protocolsRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__protocolsRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolsRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.NetworkCredential _proxyCredentials
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::NetworkCredential*& WebSocketSharp::WebSocket::dyn__proxyCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__proxyCredentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxyCredentials"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::NetworkCredential**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _proxyUri
[[deprecated("Use field access instead!")]] ::System::Uri*& WebSocketSharp::WebSocket::dyn__proxyUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__proxyUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxyUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.WebSocketState _readyState
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketState& WebSocketSharp::WebSocket::dyn__readyState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__readyState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyState"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent _receivePong
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& WebSocketSharp::WebSocket::dyn__receivePong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__receivePong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivePong"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _secure
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocket::dyn__secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.ClientSslConfiguration _sslConfig
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::ClientSslConfiguration*& WebSocketSharp::WebSocket::dyn__sslConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__sslConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sslConfig"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::ClientSslConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& WebSocketSharp::WebSocket::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.TcpClient _tcpClient
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::TcpClient*& WebSocketSharp::WebSocket::dyn__tcpClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__tcpClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tcpClient"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::TcpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _uri
[[deprecated("Use field access instead!")]] ::System::Uri*& WebSocketSharp::WebSocket::dyn__uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan _waitTime
[[deprecated("Use field access instead!")]] ::System::TimeSpan& WebSocketSharp::WebSocket::dyn__waitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn__waitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitTime"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<WebSocketSharp.CloseEventArgs> OnClose
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::WebSocketSharp::CloseEventArgs*>*& WebSocketSharp::WebSocket::dyn_OnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn_OnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnClose"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::WebSocketSharp::CloseEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<WebSocketSharp.ErrorEventArgs> OnError
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::WebSocketSharp::ErrorEventArgs*>*& WebSocketSharp::WebSocket::dyn_OnError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn_OnError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnError"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::WebSocketSharp::ErrorEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<WebSocketSharp.MessageEventArgs> OnMessage
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::WebSocketSharp::MessageEventArgs*>*& WebSocketSharp::WebSocket::dyn_OnMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn_OnMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMessage"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::WebSocketSharp::MessageEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler OnOpen
[[deprecated("Use field access instead!")]] ::System::EventHandler*& WebSocketSharp::WebSocket::dyn_OnOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::dyn_OnOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOpen"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocket..cctor
void WebSocketSharp::WebSocket::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocket", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.get_HasMessage
bool WebSocketSharp::WebSocket::get_HasMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::get_HasMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.get_SslConfiguration
::WebSocketSharp::Net::ClientSslConfiguration* WebSocketSharp::WebSocket::get_SslConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::get_SslConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::ClientSslConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.add_OnClose
void WebSocketSharp::WebSocket::add_OnClose(::System::EventHandler_1<::WebSocketSharp::CloseEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::add_OnClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.remove_OnClose
void WebSocketSharp::WebSocket::remove_OnClose(::System::EventHandler_1<::WebSocketSharp::CloseEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::remove_OnClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.add_OnError
void WebSocketSharp::WebSocket::add_OnError(::System::EventHandler_1<::WebSocketSharp::ErrorEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::add_OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.remove_OnError
void WebSocketSharp::WebSocket::remove_OnError(::System::EventHandler_1<::WebSocketSharp::ErrorEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::remove_OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.add_OnMessage
void WebSocketSharp::WebSocket::add_OnMessage(::System::EventHandler_1<::WebSocketSharp::MessageEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::add_OnMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.remove_OnMessage
void WebSocketSharp::WebSocket::remove_OnMessage(::System::EventHandler_1<::WebSocketSharp::MessageEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::remove_OnMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.add_OnOpen
void WebSocketSharp::WebSocket::add_OnOpen(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::add_OnOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.remove_OnOpen
void WebSocketSharp::WebSocket::remove_OnOpen(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::remove_OnOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.checkHandshakeResponse
bool WebSocketSharp::WebSocket::checkHandshakeResponse(::WebSocketSharp::HttpResponse* response, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::checkHandshakeResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkHandshakeResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response, byref(message));
}
// Autogenerated method: WebSocketSharp.WebSocket.checkIfAvailable
bool WebSocketSharp::WebSocket::checkIfAvailable(bool connecting, bool open, bool closing, bool closed, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::checkIfAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkIfAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connecting), ::il2cpp_utils::ExtractType(open), ::il2cpp_utils::ExtractType(closing), ::il2cpp_utils::ExtractType(closed), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, connecting, open, closing, closed, byref(message));
}
// Autogenerated method: WebSocketSharp.WebSocket.checkIfAvailable
bool WebSocketSharp::WebSocket::checkIfAvailable(bool client, bool server, bool connecting, bool open, bool closing, bool closed, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::checkIfAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkIfAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(connecting), ::il2cpp_utils::ExtractType(open), ::il2cpp_utils::ExtractType(closing), ::il2cpp_utils::ExtractType(closed), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, client, server, connecting, open, closing, closed, byref(message));
}
// Autogenerated method: WebSocketSharp.WebSocket.checkReceivedFrame
bool WebSocketSharp::WebSocket::checkReceivedFrame(::WebSocketSharp::WebSocketFrame* frame, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::checkReceivedFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkReceivedFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame, byref(message));
}
// Autogenerated method: WebSocketSharp.WebSocket.close
void WebSocketSharp::WebSocket::close(::WebSocketSharp::CloseEventArgs* e, bool send, bool receive, bool received) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(send), ::il2cpp_utils::ExtractType(receive), ::il2cpp_utils::ExtractType(received)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, send, receive, received);
}
// Autogenerated method: WebSocketSharp.WebSocket.closeHandshake
bool WebSocketSharp::WebSocket::closeHandshake(::ArrayW<uint8_t> frameAsBytes, bool receive, bool received) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::closeHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "closeHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameAsBytes), ::il2cpp_utils::ExtractType(receive), ::il2cpp_utils::ExtractType(received)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frameAsBytes, receive, received);
}
// Autogenerated method: WebSocketSharp.WebSocket.connect
bool WebSocketSharp::WebSocket::connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.createExtensions
::StringW WebSocketSharp::WebSocket::createExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::createExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.createHandshakeRequest
::WebSocketSharp::HttpRequest* WebSocketSharp::WebSocket::createHandshakeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::createHandshakeRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createHandshakeRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpRequest*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.doHandshake
bool WebSocketSharp::WebSocket::doHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::doHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "doHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.enqueueToMessageEventQueue
void WebSocketSharp::WebSocket::enqueueToMessageEventQueue(::WebSocketSharp::MessageEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::enqueueToMessageEventQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "enqueueToMessageEventQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: WebSocketSharp.WebSocket.error
void WebSocketSharp::WebSocket::error(::StringW message, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, exception);
}
// Autogenerated method: WebSocketSharp.WebSocket.fatal
void WebSocketSharp::WebSocket::fatal(::StringW message, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::fatal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fatal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, exception);
}
// Autogenerated method: WebSocketSharp.WebSocket.fatal
void WebSocketSharp::WebSocket::fatal(::StringW message, ::WebSocketSharp::CloseStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::fatal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fatal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, code);
}
// Autogenerated method: WebSocketSharp.WebSocket.init
void WebSocketSharp::WebSocket::init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.message
void WebSocketSharp::WebSocket::message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.messagec
void WebSocketSharp::WebSocket::messagec(::WebSocketSharp::MessageEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::messagec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "messagec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: WebSocketSharp.WebSocket.open
void WebSocketSharp::WebSocket::open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.processCloseFrame
bool WebSocketSharp::WebSocket::processCloseFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processCloseFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processCloseFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processCookies
void WebSocketSharp::WebSocket::processCookies(::WebSocketSharp::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: WebSocketSharp.WebSocket.processDataFrame
bool WebSocketSharp::WebSocket::processDataFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processDataFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processDataFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processFragmentFrame
bool WebSocketSharp::WebSocket::processFragmentFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processFragmentFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processFragmentFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processPingFrame
bool WebSocketSharp::WebSocket::processPingFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processPingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processPingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processPongFrame
bool WebSocketSharp::WebSocket::processPongFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processPongFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processPongFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processReceivedFrame
bool WebSocketSharp::WebSocket::processReceivedFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processReceivedFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processReceivedFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.processSecWebSocketExtensionsServerHeader
void WebSocketSharp::WebSocket::processSecWebSocketExtensionsServerHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processSecWebSocketExtensionsServerHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processSecWebSocketExtensionsServerHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.processUnsupportedFrame
bool WebSocketSharp::WebSocket::processUnsupportedFrame(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::processUnsupportedFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processUnsupportedFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket.releaseClientResources
void WebSocketSharp::WebSocket::releaseClientResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::releaseClientResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "releaseClientResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.releaseCommonResources
void WebSocketSharp::WebSocket::releaseCommonResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::releaseCommonResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "releaseCommonResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.releaseResources
void WebSocketSharp::WebSocket::releaseResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::releaseResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "releaseResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.releaseServerResources
void WebSocketSharp::WebSocket::releaseServerResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::releaseServerResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "releaseServerResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.send
bool WebSocketSharp::WebSocket::send(::ArrayW<uint8_t> frameAsBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameAsBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, frameAsBytes);
}
// Autogenerated method: WebSocketSharp.WebSocket.send
bool WebSocketSharp::WebSocket::send(::WebSocketSharp::Opcode opcode, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opcode, stream);
}
// Autogenerated method: WebSocketSharp.WebSocket.send
bool WebSocketSharp::WebSocket::send(::WebSocketSharp::Opcode opcode, ::System::IO::Stream* stream, bool compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opcode, stream, compressed);
}
// Autogenerated method: WebSocketSharp.WebSocket.send
bool WebSocketSharp::WebSocket::send(::WebSocketSharp::Fin fin, ::WebSocketSharp::Opcode opcode, ::ArrayW<uint8_t> data, bool compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fin), ::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fin, opcode, data, compressed);
}
// Autogenerated method: WebSocketSharp.WebSocket.sendAsync
void WebSocketSharp::WebSocket::sendAsync(::WebSocketSharp::Opcode opcode, ::System::IO::Stream* stream, ::System::Action_1<bool>* completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::sendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opcode), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(completed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opcode, stream, completed);
}
// Autogenerated method: WebSocketSharp.WebSocket.sendBytes
bool WebSocketSharp::WebSocket::sendBytes(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::sendBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bytes);
}
// Autogenerated method: WebSocketSharp.WebSocket.sendHandshakeRequest
::WebSocketSharp::HttpResponse* WebSocketSharp::WebSocket::sendHandshakeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::sendHandshakeRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendHandshakeRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpResponse*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.sendHttpRequest
::WebSocketSharp::HttpResponse* WebSocketSharp::WebSocket::sendHttpRequest(::WebSocketSharp::HttpRequest* request, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::sendHttpRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendHttpRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpResponse*, false>(this, ___internal__method, request, millisecondsTimeout);
}
// Autogenerated method: WebSocketSharp.WebSocket.sendProxyConnectRequest
void WebSocketSharp::WebSocket::sendProxyConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::sendProxyConnectRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendProxyConnectRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.setClientStream
void WebSocketSharp::WebSocket::setClientStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::setClientStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setClientStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.startReceiving
void WebSocketSharp::WebSocket::startReceiving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::startReceiving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "startReceiving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.validateSecWebSocketAcceptHeader
bool WebSocketSharp::WebSocket::validateSecWebSocketAcceptHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::validateSecWebSocketAcceptHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateSecWebSocketAcceptHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.validateSecWebSocketExtensionsServerHeader
bool WebSocketSharp::WebSocket::validateSecWebSocketExtensionsServerHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::validateSecWebSocketExtensionsServerHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateSecWebSocketExtensionsServerHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.validateSecWebSocketProtocolServerHeader
bool WebSocketSharp::WebSocket::validateSecWebSocketProtocolServerHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::validateSecWebSocketProtocolServerHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateSecWebSocketProtocolServerHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.validateSecWebSocketVersionServerHeader
bool WebSocketSharp::WebSocket::validateSecWebSocketVersionServerHeader(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::validateSecWebSocketVersionServerHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateSecWebSocketVersionServerHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.WebSocket.CheckSendParameter
::StringW WebSocketSharp::WebSocket::CheckSendParameter(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::CheckSendParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocket", "CheckSendParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: WebSocketSharp.WebSocket.CheckSendParameter
::StringW WebSocketSharp::WebSocket::CheckSendParameter(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::CheckSendParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocket", "CheckSendParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: WebSocketSharp.WebSocket.CreateBase64Key
::StringW WebSocketSharp::WebSocket::CreateBase64Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::CreateBase64Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocket", "CreateBase64Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.CreateResponseKey
::StringW WebSocketSharp::WebSocket::CreateResponseKey(::StringW base64Key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::CreateResponseKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocket", "CreateResponseKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(base64Key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, base64Key);
}
// Autogenerated method: WebSocketSharp.WebSocket.Close
void WebSocketSharp::WebSocket::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.Connect
void WebSocketSharp::WebSocket::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.Send
void WebSocketSharp::WebSocket::Send(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: WebSocketSharp.WebSocket.SendAsync
void WebSocketSharp::WebSocket::SendAsync(::ArrayW<uint8_t> data, ::System::Action_1<bool>* completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(completed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, completed);
}
// Autogenerated method: WebSocketSharp.WebSocket.System.IDisposable.Dispose
void WebSocketSharp::WebSocket::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocket*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket.<open>m__0
void WebSocketSharp::WebSocket::$open$m__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::<open>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<open>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocket/<sendAsync>c__AnonStorey3
#include "WebSocketSharp/WebSocket_-sendAsync-c__AnonStorey3.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Func`3<WebSocketSharp.Opcode,System.IO.Stream,System.Boolean> sender
[[deprecated("Use field access instead!")]] ::System::Func_3<::WebSocketSharp::Opcode, ::System::IO::Stream*, bool>*& WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::System::Func_3<::WebSocketSharp::Opcode, ::System::IO::Stream*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Boolean> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocket $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocket*& WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocket/<sendAsync>c__AnonStorey3.<>m__0
void WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::$$m__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocket/<startReceiving>c__AnonStorey4
#include "WebSocketSharp/WebSocket_-startReceiving-c__AnonStorey4.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Action receive
[[deprecated("Use field access instead!")]] ::System::Action*& WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::dyn_receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::dyn_receive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receive"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocket $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocket*& WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocket/<startReceiving>c__AnonStorey4.<>m__0
void WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocket/<startReceiving>c__AnonStorey4.<>m__1
void WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::$$m__1(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::<>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocket/<startReceiving>c__AnonStorey4.<>m__2
void WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::$$m__2(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$startReceiving$c__AnonStorey4::<>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5
#include "WebSocketSharp/WebSocket_-validateSecWebSocketExtensionsServerHeader-c__AnonStorey5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String method
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5.<>m__0
bool WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::$$m__0(::StringW t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocket/<validateSecWebSocketProtocolServerHeader>c__AnonStorey6
#include "WebSocketSharp/WebSocket_-validateSecWebSocketProtocolServerHeader-c__AnonStorey6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocket::$validateSecWebSocketProtocolServerHeader$c__AnonStorey6::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$validateSecWebSocketProtocolServerHeader$c__AnonStorey6::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocket/<validateSecWebSocketProtocolServerHeader>c__AnonStorey6.<>m__0
bool WebSocketSharp::WebSocket::$validateSecWebSocketProtocolServerHeader$c__AnonStorey6::$$m__0(::StringW p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$validateSecWebSocketProtocolServerHeader$c__AnonStorey6::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.AuthenticationSchemes
#include "WebSocketSharp/Net/AuthenticationSchemes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.AuthenticationSchemes None
::WebSocketSharp::Net::AuthenticationSchemes WebSocketSharp::Net::AuthenticationSchemes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::AuthenticationSchemes>("WebSocketSharp.Net", "AuthenticationSchemes", "None"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.AuthenticationSchemes None
void WebSocketSharp::Net::AuthenticationSchemes::_set_None(::WebSocketSharp::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "AuthenticationSchemes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.AuthenticationSchemes Digest
::WebSocketSharp::Net::AuthenticationSchemes WebSocketSharp::Net::AuthenticationSchemes::_get_Digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_get_Digest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::AuthenticationSchemes>("WebSocketSharp.Net", "AuthenticationSchemes", "Digest"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.AuthenticationSchemes Digest
void WebSocketSharp::Net::AuthenticationSchemes::_set_Digest(::WebSocketSharp::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_set_Digest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "AuthenticationSchemes", "Digest", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.AuthenticationSchemes Basic
::WebSocketSharp::Net::AuthenticationSchemes WebSocketSharp::Net::AuthenticationSchemes::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::AuthenticationSchemes>("WebSocketSharp.Net", "AuthenticationSchemes", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.AuthenticationSchemes Basic
void WebSocketSharp::Net::AuthenticationSchemes::_set_Basic(::WebSocketSharp::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "AuthenticationSchemes", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.AuthenticationSchemes Anonymous
::WebSocketSharp::Net::AuthenticationSchemes WebSocketSharp::Net::AuthenticationSchemes::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::AuthenticationSchemes>("WebSocketSharp.Net", "AuthenticationSchemes", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.AuthenticationSchemes Anonymous
void WebSocketSharp::Net::AuthenticationSchemes::_set_Anonymous(::WebSocketSharp::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "AuthenticationSchemes", "Anonymous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Net::AuthenticationSchemes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationSchemes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.Cookie
#include "WebSocketSharp/Net/Cookie.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _reservedCharsForName
::ArrayW<::Il2CppChar> WebSocketSharp::Net::Cookie::_get__reservedCharsForName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::_get__reservedCharsForName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("WebSocketSharp.Net", "Cookie", "_reservedCharsForName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _reservedCharsForName
void WebSocketSharp::Net::Cookie::_set__reservedCharsForName(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::_set__reservedCharsForName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "Cookie", "_reservedCharsForName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _reservedCharsForValue
::ArrayW<::Il2CppChar> WebSocketSharp::Net::Cookie::_get__reservedCharsForValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::_get__reservedCharsForValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("WebSocketSharp.Net", "Cookie", "_reservedCharsForValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _reservedCharsForValue
void WebSocketSharp::Net::Cookie::_set__reservedCharsForValue(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::_set__reservedCharsForValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "Cookie", "_reservedCharsForValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _comment
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _commentUri
[[deprecated("Use field access instead!")]] ::System::Uri*& WebSocketSharp::Net::Cookie::dyn__commentUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__commentUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commentUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _discard
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::Cookie::dyn__discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__discard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _domain
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _expires
[[deprecated("Use field access instead!")]] ::System::DateTime& WebSocketSharp::Net::Cookie::dyn__expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _httpOnly
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::Cookie::dyn__httpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__httpOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_httpOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _path
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _port
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _ports
[[deprecated("Use field access instead!")]] ::ArrayW<int>& WebSocketSharp::Net::Cookie::dyn__ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ports"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _secure
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::Cookie::dyn__secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _timestamp
[[deprecated("Use field access instead!")]] ::System::DateTime& WebSocketSharp::Net::Cookie::dyn__timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timestamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _value
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::Cookie::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Net::Cookie::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ExactDomain>k__BackingField
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::Cookie::dyn_$ExactDomain$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::dyn_$ExactDomain$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExactDomain>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.Cookie..cctor
void WebSocketSharp::Net::Cookie::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "Cookie", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_ExactDomain
void WebSocketSharp::Net::Cookie::set_ExactDomain(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_ExactDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExactDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Comment
void WebSocketSharp::Net::Cookie::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_CommentUri
void WebSocketSharp::Net::Cookie::set_CommentUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_CommentUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CommentUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Discard
void WebSocketSharp::Net::Cookie::set_Discard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Discard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Discard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Domain
::StringW WebSocketSharp::Net::Cookie::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Domain
void WebSocketSharp::Net::Cookie::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Expired
bool WebSocketSharp::Net::Cookie::get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Expires
::System::DateTime WebSocketSharp::Net::Cookie::get_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Expires
void WebSocketSharp::Net::Cookie::set_Expires(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_HttpOnly
void WebSocketSharp::Net::Cookie::set_HttpOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_HttpOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Name
::StringW WebSocketSharp::Net::Cookie::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Name
void WebSocketSharp::Net::Cookie::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Path
::StringW WebSocketSharp::Net::Cookie::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Path
void WebSocketSharp::Net::Cookie::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Port
void WebSocketSharp::Net::Cookie::set_Port(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Secure
void WebSocketSharp::Net::Cookie::set_Secure(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Value
::StringW WebSocketSharp::Net::Cookie::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Value
void WebSocketSharp::Net::Cookie::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.get_Version
int WebSocketSharp::Net::Cookie::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.set_Version
void WebSocketSharp::Net::Cookie::set_Version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.canSetName
bool WebSocketSharp::Net::Cookie::canSetName(::StringW name, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::canSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "Cookie", "canSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(message));
}
// Autogenerated method: WebSocketSharp.Net.Cookie.canSetValue
bool WebSocketSharp::Net::Cookie::canSetValue(::StringW value, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::canSetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "Cookie", "canSetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(message));
}
// Autogenerated method: WebSocketSharp.Net.Cookie.hash
int WebSocketSharp::Net::Cookie::hash(int i, int j, int k, int l, int m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "Cookie", "hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractType(k), ::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, j, k, l, m);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.tryCreatePorts
bool WebSocketSharp::Net::Cookie::tryCreatePorts(::StringW value, ByRef<::ArrayW<int>> result, ByRef<::StringW> parseError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::tryCreatePorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "Cookie", "tryCreatePorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int>&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, byref(result), byref(parseError));
}
// Autogenerated method: WebSocketSharp.Net.Cookie.ToRequestString
::StringW WebSocketSharp::Net::Cookie::ToRequestString(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::ToRequestString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRequestString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.Equals
bool WebSocketSharp::Net::Cookie::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.GetHashCode
int WebSocketSharp::Net::Cookie::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.Cookie.ToString
::StringW WebSocketSharp::Net::Cookie::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::Cookie::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.CookieCollection
#include "WebSocketSharp/Net/CookieCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: WebSocketSharp.Net.Cookie
#include "WebSocketSharp/Net/Cookie.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAC0A3C
// Autogenerated static field getter
// Get static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache0
::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* WebSocketSharp::Net::CookieCollection::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::WebSocketSharp::Net::Cookie*>*>("WebSocketSharp.Net", "CookieCollection", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache0
void WebSocketSharp::Net::CookieCollection::_set_$$f__mg$cache0(::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "CookieCollection", "<>f__mg$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC0A4C
// Autogenerated static field getter
// Get static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache1
::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* WebSocketSharp::Net::CookieCollection::_get_$$f__mg$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::_get_$$f__mg$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::WebSocketSharp::Net::Cookie*>*>("WebSocketSharp.Net", "CookieCollection", "<>f__mg$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache1
void WebSocketSharp::Net::CookieCollection::_set_$$f__mg$cache1(::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::_set_$$f__mg$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "CookieCollection", "<>f__mg$cache1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<WebSocketSharp.Net.Cookie> _list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::WebSocketSharp::Net::Cookie*>*& WebSocketSharp::Net::CookieCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::WebSocketSharp::Net::Cookie*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _sync
[[deprecated("Use field access instead!")]] ::Il2CppObject*& WebSocketSharp::Net::CookieCollection::dyn__sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::dyn__sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sync"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.get_Sorted
::System::Collections::Generic::IEnumerable_1<::WebSocketSharp::Net::Cookie*>* WebSocketSharp::Net::CookieCollection::get_Sorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::get_Sorted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Sorted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::WebSocketSharp::Net::Cookie*>*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.get_Count
int WebSocketSharp::Net::CookieCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.get_IsSynchronized
bool WebSocketSharp::Net::CookieCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.get_SyncRoot
::Il2CppObject* WebSocketSharp::Net::CookieCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.compareCookieWithinSorted
int WebSocketSharp::Net::CookieCollection::compareCookieWithinSorted(::WebSocketSharp::Net::Cookie* x, ::WebSocketSharp::Net::Cookie* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::compareCookieWithinSorted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "CookieCollection", "compareCookieWithinSorted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.parseRequest
::WebSocketSharp::Net::CookieCollection* WebSocketSharp::Net::CookieCollection::parseRequest(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::parseRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "CookieCollection", "parseRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::CookieCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.parseResponse
::WebSocketSharp::Net::CookieCollection* WebSocketSharp::Net::CookieCollection::parseResponse(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::parseResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "CookieCollection", "parseResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::CookieCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.searchCookie
int WebSocketSharp::Net::CookieCollection::searchCookie(::WebSocketSharp::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::searchCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "searchCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cookie);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.splitCookieHeaderValue
::ArrayW<::StringW> WebSocketSharp::Net::CookieCollection::splitCookieHeaderValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::splitCookieHeaderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "CookieCollection", "splitCookieHeaderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.Parse
::WebSocketSharp::Net::CookieCollection* WebSocketSharp::Net::CookieCollection::Parse(::StringW value, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "CookieCollection", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::CookieCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, response);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.SetOrRemove
void WebSocketSharp::Net::CookieCollection::SetOrRemove(::WebSocketSharp::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::SetOrRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.SetOrRemove
void WebSocketSharp::Net::CookieCollection::SetOrRemove(::WebSocketSharp::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::SetOrRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.Add
void WebSocketSharp::Net::CookieCollection::Add(::WebSocketSharp::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.CopyTo
void WebSocketSharp::Net::CookieCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: WebSocketSharp.Net.CookieCollection.GetEnumerator
::System::Collections::IEnumerator* WebSocketSharp::Net::CookieCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.CookieException
#include "WebSocketSharp/Net/CookieException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WebSocketSharp.Net.CookieException.System.Runtime.Serialization.ISerializable.GetObjectData
void WebSocketSharp::Net::CookieException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::CookieException*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: WebSocketSharp.Net.CookieException.GetObjectData
void WebSocketSharp::Net::CookieException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.HttpUtility
#include "WebSocketSharp/Net/HttpUtility.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char[] _hexChars
::ArrayW<::Il2CppChar> WebSocketSharp::Net::HttpUtility::_get__hexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::_get__hexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("WebSocketSharp.Net", "HttpUtility", "_hexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] _hexChars
void WebSocketSharp::Net::HttpUtility::_set__hexChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::_set__hexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpUtility", "_hexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _sync
::Il2CppObject* WebSocketSharp::Net::HttpUtility::_get__sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::_get__sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("WebSocketSharp.Net", "HttpUtility", "_sync"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _sync
void WebSocketSharp::Net::HttpUtility::_set__sync(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::_set__sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpUtility", "_sync", value));
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.getChar
int WebSocketSharp::Net::HttpUtility::getChar(::StringW s, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::getChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "getChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset, length);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.getInt
int WebSocketSharp::Net::HttpUtility::getInt(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::getInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "getInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.writeCharBytes
void WebSocketSharp::Net::HttpUtility::writeCharBytes(::Il2CppChar c, ::System::Collections::IList* buffer, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::writeCharBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "writeCharBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, buffer, encoding);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.GetEncoding
::System::Text::Encoding* WebSocketSharp::Net::HttpUtility::GetEncoding(::StringW contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::GetEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "GetEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contentType);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.UrlDecode
::StringW WebSocketSharp::Net::HttpUtility::UrlDecode(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::UrlDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "UrlDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility.UrlDecode
::StringW WebSocketSharp::Net::HttpUtility::UrlDecode(::StringW s, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::UrlDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", "UrlDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, encoding);
}
// Autogenerated method: WebSocketSharp.Net.HttpUtility..cctor
void WebSocketSharp::Net::HttpUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.WebHeaderCollection
#include "WebSocketSharp/Net/WebHeaderCollection.hpp"
// Including type: WebSocketSharp.Net.WebHeaderCollection/<GetObjectData>c__AnonStorey1
#include "WebSocketSharp/Net/WebHeaderCollection_-GetObjectData-c__AnonStorey1.hpp"
// Including type: WebSocketSharp.Net.WebHeaderCollection/<ToString>c__AnonStorey2
#include "WebSocketSharp/Net/WebHeaderCollection_-ToString-c__AnonStorey2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: WebSocketSharp.Net.HttpHeaderInfo
#include "WebSocketSharp/Net/HttpHeaderInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,WebSocketSharp.Net.HttpHeaderInfo> _headers
::System::Collections::Generic::Dictionary_2<::StringW, ::WebSocketSharp::Net::HttpHeaderInfo*>* WebSocketSharp::Net::WebHeaderCollection::_get__headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::_get__headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::WebSocketSharp::Net::HttpHeaderInfo*>*>("WebSocketSharp.Net", "WebHeaderCollection", "_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,WebSocketSharp.Net.HttpHeaderInfo> _headers
void WebSocketSharp::Net::WebHeaderCollection::_set__headers(::System::Collections::Generic::Dictionary_2<::StringW, ::WebSocketSharp::Net::HttpHeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::_set__headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "WebHeaderCollection", "_headers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _internallyUsed
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::WebHeaderCollection::dyn__internallyUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::dyn__internallyUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internallyUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.HttpHeaderType _state
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::HttpHeaderType& WebSocketSharp::Net::WebHeaderCollection::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::HttpHeaderType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection..cctor
void WebSocketSharp::Net::WebHeaderCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.add
void WebSocketSharp::Net::WebHeaderCollection::add(::StringW name, ::StringW value, bool ignoreRestricted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreRestricted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value, ignoreRestricted);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.addWithoutCheckingName
void WebSocketSharp::Net::WebHeaderCollection::addWithoutCheckingName(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::addWithoutCheckingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addWithoutCheckingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.addWithoutCheckingNameAndRestricted
void WebSocketSharp::Net::WebHeaderCollection::addWithoutCheckingNameAndRestricted(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::addWithoutCheckingNameAndRestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addWithoutCheckingNameAndRestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkColonSeparated
int WebSocketSharp::Net::WebHeaderCollection::checkColonSeparated(::StringW header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkColonSeparated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "checkColonSeparated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, header);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkHeaderType
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::WebHeaderCollection::checkHeaderType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkHeaderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "checkHeaderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::HttpHeaderType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkName
::StringW WebSocketSharp::Net::WebHeaderCollection::checkName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "checkName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkRestricted
void WebSocketSharp::Net::WebHeaderCollection::checkRestricted(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkRestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkRestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkState
void WebSocketSharp::Net::WebHeaderCollection::checkState(bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.checkValue
::StringW WebSocketSharp::Net::WebHeaderCollection::checkValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::checkValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "checkValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.doWithCheckingState
void WebSocketSharp::Net::WebHeaderCollection::doWithCheckingState(::System::Action_2<::StringW, ::StringW>* action, ::StringW name, ::StringW value, bool setState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::doWithCheckingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "doWithCheckingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(setState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, name, value, setState);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.doWithCheckingState
void WebSocketSharp::Net::WebHeaderCollection::doWithCheckingState(::System::Action_2<::StringW, ::StringW>* action, ::StringW name, ::StringW value, bool response, bool setState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::doWithCheckingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "doWithCheckingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(setState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, name, value, response, setState);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.doWithoutCheckingName
void WebSocketSharp::Net::WebHeaderCollection::doWithoutCheckingName(::System::Action_2<::StringW, ::StringW>* action, ::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::doWithoutCheckingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "doWithoutCheckingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.getHeaderInfo
::WebSocketSharp::Net::HttpHeaderInfo* WebSocketSharp::Net::WebHeaderCollection::getHeaderInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::getHeaderInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "getHeaderInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::HttpHeaderInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.isRestricted
bool WebSocketSharp::Net::WebHeaderCollection::isRestricted(::StringW name, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::isRestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "isRestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, response);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.removeWithoutCheckingName
void WebSocketSharp::Net::WebHeaderCollection::removeWithoutCheckingName(::StringW name, ::StringW unuse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::removeWithoutCheckingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "removeWithoutCheckingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(unuse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, unuse);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.setWithoutCheckingName
void WebSocketSharp::Net::WebHeaderCollection::setWithoutCheckingName(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::setWithoutCheckingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setWithoutCheckingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.InternalSet
void WebSocketSharp::Net::WebHeaderCollection::InternalSet(::StringW header, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::InternalSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, header, response);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.InternalSet
void WebSocketSharp::Net::WebHeaderCollection::InternalSet(::StringW name, ::StringW value, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::InternalSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value, response);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.IsHeaderName
bool WebSocketSharp::Net::WebHeaderCollection::IsHeaderName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::IsHeaderName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "IsHeaderName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.IsHeaderValue
bool WebSocketSharp::Net::WebHeaderCollection::IsHeaderValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::IsHeaderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "IsHeaderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.IsMultiValue
bool WebSocketSharp::Net::WebHeaderCollection::IsMultiValue(::StringW headerName, bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::IsMultiValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "WebHeaderCollection", "IsMultiValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerName), ::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headerName, response);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.System.Runtime.Serialization.ISerializable.GetObjectData
void WebSocketSharp::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::WebHeaderCollection*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.get_AllKeys
::ArrayW<::StringW> WebSocketSharp::Net::WebHeaderCollection::get_AllKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::get_AllKeys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.get_Count
int WebSocketSharp::Net::WebHeaderCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameObjectCollectionBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.Add
void WebSocketSharp::Net::WebHeaderCollection::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.Get
::StringW WebSocketSharp::Net::WebHeaderCollection::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.Get
::StringW WebSocketSharp::Net::WebHeaderCollection::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.GetEnumerator
::System::Collections::IEnumerator* WebSocketSharp::Net::WebHeaderCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameObjectCollectionBase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.GetKey
::StringW WebSocketSharp::Net::WebHeaderCollection::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::GetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.GetValues
::ArrayW<::StringW> WebSocketSharp::Net::WebHeaderCollection::GetValues(::StringW header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, header);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.GetObjectData
void WebSocketSharp::Net::WebHeaderCollection::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameObjectCollectionBase*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.OnDeserialization
void WebSocketSharp::Net::WebHeaderCollection::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameObjectCollectionBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.Remove
void WebSocketSharp::Net::WebHeaderCollection::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.Set
void WebSocketSharp::Net::WebHeaderCollection::Set(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::NameValueCollection*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection.ToString
::StringW WebSocketSharp::Net::WebHeaderCollection::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.WebHeaderCollection/<GetObjectData>c__AnonStorey1
#include "WebSocketSharp/Net/WebHeaderCollection_-GetObjectData-c__AnonStorey1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Runtime.Serialization.SerializationInfo serializationInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_serializationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_serializationInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializationInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 cnt
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_cnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_cnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.Net.WebHeaderCollection $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::WebHeaderCollection*& WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection/<GetObjectData>c__AnonStorey1.<>m__0
void WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::$$m__0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.WebHeaderCollection/<ToString>c__AnonStorey2
#include "WebSocketSharp/Net/WebHeaderCollection_-ToString-c__AnonStorey2.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.StringBuilder buff
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.Net.WebHeaderCollection $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::WebHeaderCollection*& WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.WebHeaderCollection/<ToString>c__AnonStorey2.<>m__0
void WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::$$m__0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$ToString$c__AnonStorey2::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.HttpVersion
#include "WebSocketSharp/Net/HttpVersion.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version Version10
::System::Version* WebSocketSharp::Net::HttpVersion::_get_Version10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpVersion::_get_Version10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("WebSocketSharp.Net", "HttpVersion", "Version10"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version Version10
void WebSocketSharp::Net::HttpVersion::_set_Version10(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpVersion::_set_Version10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpVersion", "Version10", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version Version11
::System::Version* WebSocketSharp::Net::HttpVersion::_get_Version11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpVersion::_get_Version11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("WebSocketSharp.Net", "HttpVersion", "Version11"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version Version11
void WebSocketSharp::Net::HttpVersion::_set_Version11(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpVersion::_set_Version11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpVersion", "Version11", value));
}
// Autogenerated method: WebSocketSharp.Net.HttpVersion..cctor
void WebSocketSharp::Net::HttpVersion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpVersion::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "HttpVersion", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.CloseStatusCode
#include "WebSocketSharp/CloseStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode Normal
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode Normal
void WebSocketSharp::CloseStatusCode::_set_Normal(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode Away
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_Away() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_Away");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "Away"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode Away
void WebSocketSharp::CloseStatusCode::_set_Away(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_Away");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "Away", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode ProtocolError
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_ProtocolError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_ProtocolError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "ProtocolError"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode ProtocolError
void WebSocketSharp::CloseStatusCode::_set_ProtocolError(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_ProtocolError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "ProtocolError", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode UnsupportedData
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_UnsupportedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_UnsupportedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "UnsupportedData"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode UnsupportedData
void WebSocketSharp::CloseStatusCode::_set_UnsupportedData(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_UnsupportedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "UnsupportedData", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode Undefined
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode Undefined
void WebSocketSharp::CloseStatusCode::_set_Undefined(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode NoStatus
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_NoStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_NoStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "NoStatus"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode NoStatus
void WebSocketSharp::CloseStatusCode::_set_NoStatus(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_NoStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "NoStatus", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode Abnormal
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_Abnormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_Abnormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "Abnormal"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode Abnormal
void WebSocketSharp::CloseStatusCode::_set_Abnormal(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_Abnormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "Abnormal", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode InvalidData
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_InvalidData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_InvalidData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "InvalidData"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode InvalidData
void WebSocketSharp::CloseStatusCode::_set_InvalidData(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_InvalidData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "InvalidData", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode PolicyViolation
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_PolicyViolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_PolicyViolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "PolicyViolation"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode PolicyViolation
void WebSocketSharp::CloseStatusCode::_set_PolicyViolation(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_PolicyViolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "PolicyViolation", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode TooBig
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_TooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_TooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "TooBig"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode TooBig
void WebSocketSharp::CloseStatusCode::_set_TooBig(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_TooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "TooBig", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode MandatoryExtension
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_MandatoryExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_MandatoryExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "MandatoryExtension"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode MandatoryExtension
void WebSocketSharp::CloseStatusCode::_set_MandatoryExtension(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_MandatoryExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "MandatoryExtension", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode ServerError
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_ServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_ServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "ServerError"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode ServerError
void WebSocketSharp::CloseStatusCode::_set_ServerError(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_ServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "ServerError", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CloseStatusCode TlsHandshakeFailure
::WebSocketSharp::CloseStatusCode WebSocketSharp::CloseStatusCode::_get_TlsHandshakeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_get_TlsHandshakeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CloseStatusCode>("WebSocketSharp", "CloseStatusCode", "TlsHandshakeFailure"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CloseStatusCode TlsHandshakeFailure
void WebSocketSharp::CloseStatusCode::_set_TlsHandshakeFailure(::WebSocketSharp::CloseStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::_set_TlsHandshakeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CloseStatusCode", "TlsHandshakeFailure", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& WebSocketSharp::CloseStatusCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CloseStatusCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Fin
#include "WebSocketSharp/Fin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Fin More
::WebSocketSharp::Fin WebSocketSharp::Fin::_get_More() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Fin::_get_More");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Fin>("WebSocketSharp", "Fin", "More"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Fin More
void WebSocketSharp::Fin::_set_More(::WebSocketSharp::Fin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Fin::_set_More");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Fin", "More", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Fin Final
::WebSocketSharp::Fin WebSocketSharp::Fin::_get_Final() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Fin::_get_Final");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Fin>("WebSocketSharp", "Fin", "Final"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Fin Final
void WebSocketSharp::Fin::_set_Final(::WebSocketSharp::Fin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Fin::_set_Final");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Fin", "Final", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::Fin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Fin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Mask
#include "WebSocketSharp/Mask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Mask Off
::WebSocketSharp::Mask WebSocketSharp::Mask::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Mask::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Mask>("WebSocketSharp", "Mask", "Off"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Mask Off
void WebSocketSharp::Mask::_set_Off(::WebSocketSharp::Mask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Mask::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Mask", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Mask On
::WebSocketSharp::Mask WebSocketSharp::Mask::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Mask::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Mask>("WebSocketSharp", "Mask", "On"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Mask On
void WebSocketSharp::Mask::_set_On(::WebSocketSharp::Mask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Mask::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Mask", "On", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::Mask::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Mask::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Opcode
#include "WebSocketSharp/Opcode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Cont
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Cont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Cont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Cont"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Cont
void WebSocketSharp::Opcode::_set_Cont(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Cont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Cont", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Text
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Text"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Text
void WebSocketSharp::Opcode::_set_Text(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Binary
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Binary
void WebSocketSharp::Opcode::_set_Binary(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Close
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Close");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Close"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Close
void WebSocketSharp::Opcode::_set_Close(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Close");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Close", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Ping
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Ping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Ping"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Ping
void WebSocketSharp::Opcode::_set_Ping(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Ping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Ping", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Opcode Pong
::WebSocketSharp::Opcode WebSocketSharp::Opcode::_get_Pong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_get_Pong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Opcode>("WebSocketSharp", "Opcode", "Pong"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Opcode Pong
void WebSocketSharp::Opcode::_set_Pong(::WebSocketSharp::Opcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::_set_Pong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Opcode", "Pong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::Opcode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Opcode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.PayloadData
#include "WebSocketSharp/PayloadData.hpp"
// Including type: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0
#include "WebSocketSharp/PayloadData_-GetEnumerator-c__Iterator0.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly WebSocketSharp.PayloadData Empty
::WebSocketSharp::PayloadData* WebSocketSharp::PayloadData::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::PayloadData*>("WebSocketSharp", "PayloadData", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly WebSocketSharp.PayloadData Empty
void WebSocketSharp::PayloadData::_set_Empty(::WebSocketSharp::PayloadData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "PayloadData", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.UInt64 MaxLength
uint64_t WebSocketSharp::PayloadData::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("WebSocketSharp", "PayloadData", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.UInt64 MaxLength
void WebSocketSharp::PayloadData::_set_MaxLength(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "PayloadData", "MaxLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::PayloadData::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _extDataLength
[[deprecated("Use field access instead!")]] int64_t& WebSocketSharp::PayloadData::dyn__extDataLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::dyn__extDataLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extDataLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _length
[[deprecated("Use field access instead!")]] int64_t& WebSocketSharp::PayloadData::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.PayloadData..cctor
void WebSocketSharp::PayloadData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "PayloadData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.get_IncludesReservedCloseStatusCode
bool WebSocketSharp::PayloadData::get_IncludesReservedCloseStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::get_IncludesReservedCloseStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludesReservedCloseStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.get_ApplicationData
::ArrayW<uint8_t> WebSocketSharp::PayloadData::get_ApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::get_ApplicationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.get_Length
uint64_t WebSocketSharp::PayloadData::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.Mask
void WebSocketSharp::PayloadData::Mask(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::Mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: WebSocketSharp.PayloadData.GetEnumerator
::System::Collections::Generic::IEnumerator_1<uint8_t>* WebSocketSharp::PayloadData::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.ToArray
::ArrayW<uint8_t> WebSocketSharp::PayloadData::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* WebSocketSharp::PayloadData::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData.ToString
::StringW WebSocketSharp::PayloadData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0
#include "WebSocketSharp/PayloadData_-GetEnumerator-c__Iterator0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] $locvar0
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$locvar0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$locvar0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar0"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $locvar1
[[deprecated("Use field access instead!")]] int& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$locvar1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$locvar1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte <b>__0
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$b$__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$b$__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<b>__0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.PayloadData $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::PayloadData*& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::PayloadData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte $current
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0.MoveNext
bool WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0.System.Collections.Generic.IEnumerator<byte>.get_Current
uint8_t WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::System_Collections_Generic_IEnumerator$byte$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::System.Collections.Generic.IEnumerator<byte>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0.Dispose
void WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.PayloadData/<GetEnumerator>c__Iterator0.Reset
void WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::PayloadData::$GetEnumerator$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Rsv
#include "WebSocketSharp/Rsv.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Rsv Off
::WebSocketSharp::Rsv WebSocketSharp::Rsv::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Rsv::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Rsv>("WebSocketSharp", "Rsv", "Off"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Rsv Off
void WebSocketSharp::Rsv::_set_Off(::WebSocketSharp::Rsv value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Rsv::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Rsv", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Rsv On
::WebSocketSharp::Rsv WebSocketSharp::Rsv::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Rsv::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Rsv>("WebSocketSharp", "Rsv", "On"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Rsv On
void WebSocketSharp::Rsv::_set_On(::WebSocketSharp::Rsv value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Rsv::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Rsv", "On", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::Rsv::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Rsv::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.HttpHeaderType
#include "WebSocketSharp/Net/HttpHeaderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType Unspecified
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType Unspecified
void WebSocketSharp::Net::HttpHeaderType::_set_Unspecified(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType Request
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "Request"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType Request
void WebSocketSharp::Net::HttpHeaderType::_set_Request(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType Response
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "Response"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType Response
void WebSocketSharp::Net::HttpHeaderType::_set_Response(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType Restricted
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_Restricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_Restricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "Restricted"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType Restricted
void WebSocketSharp::Net::HttpHeaderType::_set_Restricted(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_Restricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "Restricted", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType MultiValue
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_MultiValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_MultiValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "MultiValue"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType MultiValue
void WebSocketSharp::Net::HttpHeaderType::_set_MultiValue(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_MultiValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "MultiValue", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType MultiValueInRequest
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_MultiValueInRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_MultiValueInRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "MultiValueInRequest"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType MultiValueInRequest
void WebSocketSharp::Net::HttpHeaderType::_set_MultiValueInRequest(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_MultiValueInRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "MultiValueInRequest", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.Net.HttpHeaderType MultiValueInResponse
::WebSocketSharp::Net::HttpHeaderType WebSocketSharp::Net::HttpHeaderType::_get_MultiValueInResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_get_MultiValueInResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::Net::HttpHeaderType>("WebSocketSharp.Net", "HttpHeaderType", "MultiValueInResponse"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.Net.HttpHeaderType MultiValueInResponse
void WebSocketSharp::Net::HttpHeaderType::_set_MultiValueInResponse(::WebSocketSharp::Net::HttpHeaderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::_set_MultiValueInResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "HttpHeaderType", "MultiValueInResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& WebSocketSharp::Net::HttpHeaderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.HttpHeaderInfo
#include "WebSocketSharp/Net/HttpHeaderInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::HttpHeaderInfo::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.HttpHeaderType _type
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::HttpHeaderType& WebSocketSharp::Net::HttpHeaderInfo::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::HttpHeaderType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.get_IsMultiValueInRequest
bool WebSocketSharp::Net::HttpHeaderInfo::get_IsMultiValueInRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::get_IsMultiValueInRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMultiValueInRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.get_IsMultiValueInResponse
bool WebSocketSharp::Net::HttpHeaderInfo::get_IsMultiValueInResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::get_IsMultiValueInResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMultiValueInResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.get_IsRequest
bool WebSocketSharp::Net::HttpHeaderInfo::get_IsRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::get_IsRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.get_IsResponse
bool WebSocketSharp::Net::HttpHeaderInfo::get_IsResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::get_IsResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.get_Name
::StringW WebSocketSharp::Net::HttpHeaderInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.IsMultiValue
bool WebSocketSharp::Net::HttpHeaderInfo::IsMultiValue(bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::IsMultiValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMultiValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response);
}
// Autogenerated method: WebSocketSharp.Net.HttpHeaderInfo.IsRestricted
bool WebSocketSharp::Net::HttpHeaderInfo::IsRestricted(bool response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::HttpHeaderInfo::IsRestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.CompressionMethod
#include "WebSocketSharp/CompressionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CompressionMethod None
::WebSocketSharp::CompressionMethod WebSocketSharp::CompressionMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CompressionMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CompressionMethod>("WebSocketSharp", "CompressionMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CompressionMethod None
void WebSocketSharp::CompressionMethod::_set_None(::WebSocketSharp::CompressionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CompressionMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CompressionMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.CompressionMethod Deflate
::WebSocketSharp::CompressionMethod WebSocketSharp::CompressionMethod::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CompressionMethod::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::CompressionMethod>("WebSocketSharp", "CompressionMethod", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.CompressionMethod Deflate
void WebSocketSharp::CompressionMethod::_set_Deflate(::WebSocketSharp::CompressionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CompressionMethod::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "CompressionMethod", "Deflate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::CompressionMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::CompressionMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketException
#include "WebSocketSharp/WebSocketException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.CloseStatusCode _code
[[deprecated("Use field access instead!")]] ::WebSocketSharp::CloseStatusCode& WebSocketSharp::WebSocketException::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketException::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::WebSocketSharp::CloseStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketException.get_Code
::WebSocketSharp::CloseStatusCode WebSocketSharp::WebSocketException::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketException::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::CloseStatusCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.LogData
#include "WebSocketSharp/LogData.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.StackFrame _caller
[[deprecated("Use field access instead!")]] ::System::Diagnostics::StackFrame*& WebSocketSharp::LogData::dyn__caller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogData::dyn__caller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caller"))->offset;
  return *reinterpret_cast<::System::Diagnostics::StackFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _date
[[deprecated("Use field access instead!")]] ::System::DateTime& WebSocketSharp::LogData::dyn__date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogData::dyn__date");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_date"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.LogLevel _level
[[deprecated("Use field access instead!")]] ::WebSocketSharp::LogLevel& WebSocketSharp::LogData::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogData::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::WebSocketSharp::LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::LogData::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogData::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.LogData.ToString
::StringW WebSocketSharp::LogData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.LogLevel
#include "WebSocketSharp/LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Trace
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Trace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Trace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Trace"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Trace
void WebSocketSharp::LogLevel::_set_Trace(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Trace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Trace", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Debug
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Debug
void WebSocketSharp::LogLevel::_set_Debug(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Info
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Info
void WebSocketSharp::LogLevel::_set_Info(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Warn
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Warn
void WebSocketSharp::LogLevel::_set_Warn(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Warn", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Error
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Error
void WebSocketSharp::LogLevel::_set_Error(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.LogLevel Fatal
::WebSocketSharp::LogLevel WebSocketSharp::LogLevel::_get_Fatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_get_Fatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::LogLevel>("WebSocketSharp", "LogLevel", "Fatal"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.LogLevel Fatal
void WebSocketSharp::LogLevel::_set_Fatal(::WebSocketSharp::LogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::_set_Fatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "LogLevel", "Fatal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& WebSocketSharp::LogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::LogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Logger
#include "WebSocketSharp/Logger.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: WebSocketSharp.LogData
#include "WebSocketSharp/LogData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAC0A5C
// Autogenerated static field getter
// Get static field: static private System.Action`2<WebSocketSharp.LogData,System.String> <>f__mg$cache0
::System::Action_2<::WebSocketSharp::LogData*, ::StringW>* WebSocketSharp::Logger::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::WebSocketSharp::LogData*, ::StringW>*>("WebSocketSharp", "Logger", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<WebSocketSharp.LogData,System.String> <>f__mg$cache0
void WebSocketSharp::Logger::_set_$$f__mg$cache0(::System::Action_2<::WebSocketSharp::LogData*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Logger", "<>f__mg$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC0A6C
// Autogenerated static field getter
// Get static field: static private System.Action`2<WebSocketSharp.LogData,System.String> <>f__mg$cache1
::System::Action_2<::WebSocketSharp::LogData*, ::StringW>* WebSocketSharp::Logger::_get_$$f__mg$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::_get_$$f__mg$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::WebSocketSharp::LogData*, ::StringW>*>("WebSocketSharp", "Logger", "<>f__mg$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<WebSocketSharp.LogData,System.String> <>f__mg$cache1
void WebSocketSharp::Logger::_set_$$f__mg$cache1(::System::Action_2<::WebSocketSharp::LogData*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::_set_$$f__mg$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "Logger", "<>f__mg$cache1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _file
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Logger::dyn__file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::dyn__file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_file"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.LogLevel _level
[[deprecated("Use field access instead!")]] ::WebSocketSharp::LogLevel& WebSocketSharp::Logger::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::WebSocketSharp::LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<WebSocketSharp.LogData,System.String> _output
[[deprecated("Use field access instead!")]] ::System::Action_2<::WebSocketSharp::LogData*, ::StringW>*& WebSocketSharp::Logger::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::Action_2<::WebSocketSharp::LogData*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _sync
[[deprecated("Use field access instead!")]] ::Il2CppObject*& WebSocketSharp::Logger::dyn__sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::dyn__sync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sync"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Logger.defaultOutput
void WebSocketSharp::Logger::defaultOutput(::WebSocketSharp::LogData* data, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::defaultOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Logger", "defaultOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, path);
}
// Autogenerated method: WebSocketSharp.Logger.output
void WebSocketSharp::Logger::output(::StringW message, ::WebSocketSharp::LogLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, level);
}
// Autogenerated method: WebSocketSharp.Logger.writeToFile
void WebSocketSharp::Logger::writeToFile(::StringW value, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::writeToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "Logger", "writeToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, path);
}
// Autogenerated method: WebSocketSharp.Logger.Debug
void WebSocketSharp::Logger::Debug(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: WebSocketSharp.Logger.Error
void WebSocketSharp::Logger::Error(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: WebSocketSharp.Logger.Fatal
void WebSocketSharp::Logger::Fatal(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Fatal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fatal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: WebSocketSharp.Logger.Info
void WebSocketSharp::Logger::Info(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: WebSocketSharp.Logger.Trace
void WebSocketSharp::Logger::Trace(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: WebSocketSharp.Logger.Warn
void WebSocketSharp::Logger::Warn(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Logger::Warn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Warn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketState
#include "WebSocketSharp/WebSocketState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.WebSocketState Connecting
::WebSocketSharp::WebSocketState WebSocketSharp::WebSocketState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::WebSocketState>("WebSocketSharp", "WebSocketState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.WebSocketState Connecting
void WebSocketSharp::WebSocketState::_set_Connecting(::WebSocketSharp::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocketState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.WebSocketState Open
::WebSocketSharp::WebSocketState WebSocketSharp::WebSocketState::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::WebSocketState>("WebSocketSharp", "WebSocketState", "Open"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.WebSocketState Open
void WebSocketSharp::WebSocketState::_set_Open(::WebSocketSharp::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocketState", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.WebSocketState Closing
::WebSocketSharp::WebSocketState WebSocketSharp::WebSocketState::_get_Closing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_get_Closing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::WebSocketState>("WebSocketSharp", "WebSocketState", "Closing"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.WebSocketState Closing
void WebSocketSharp::WebSocketState::_set_Closing(::WebSocketSharp::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_set_Closing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocketState", "Closing", value));
}
// Autogenerated static field getter
// Get static field: static public WebSocketSharp.WebSocketState Closed
::WebSocketSharp::WebSocketState WebSocketSharp::WebSocketState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::WebSocketSharp::WebSocketState>("WebSocketSharp", "WebSocketState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public WebSocketSharp.WebSocketState Closed
void WebSocketSharp::WebSocketState::_set_Closed(::WebSocketSharp::WebSocketState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocketState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& WebSocketSharp::WebSocketState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.NetworkCredential
#include "WebSocketSharp/Net/NetworkCredential.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _domain
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::NetworkCredential::dyn__domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::dyn__domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _password
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::NetworkCredential::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _roles
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& WebSocketSharp::Net::NetworkCredential::dyn__roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::dyn__roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roles"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::NetworkCredential::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.NetworkCredential.get_Domain
::StringW WebSocketSharp::Net::NetworkCredential::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.NetworkCredential.get_Password
::StringW WebSocketSharp::Net::NetworkCredential::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.NetworkCredential.get_UserName
::StringW WebSocketSharp::Net::NetworkCredential::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::NetworkCredential::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1
#include "WebSocketSharp/WebSocketFrame_-dump-c__AnonStorey1.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<readExtendedPayloadLengthAsync>c__AnonStorey3
#include "WebSocketSharp/WebSocketFrame_-readExtendedPayloadLengthAsync-c__AnonStorey3.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<readHeaderAsync>c__AnonStorey4
#include "WebSocketSharp/WebSocketFrame_-readHeaderAsync-c__AnonStorey4.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<readMaskingKeyAsync>c__AnonStorey5
#include "WebSocketSharp/WebSocketFrame_-readMaskingKeyAsync-c__AnonStorey5.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6
#include "WebSocketSharp/WebSocketFrame_-readPayloadDataAsync-c__AnonStorey6.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7
#include "WebSocketSharp/WebSocketFrame_-ReadFrameAsync-c__AnonStorey7.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0
#include "WebSocketSharp/WebSocketFrame_-GetEnumerator-c__Iterator0.hpp"
// Including type: WebSocketSharp.PayloadData
#include "WebSocketSharp/PayloadData.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] EmptyPingBytes
::ArrayW<uint8_t> WebSocketSharp::WebSocketFrame::_get_EmptyPingBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::_get_EmptyPingBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("WebSocketSharp", "WebSocketFrame", "EmptyPingBytes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] EmptyPingBytes
void WebSocketSharp::WebSocketFrame::_set_EmptyPingBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::_set_EmptyPingBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "WebSocketFrame", "EmptyPingBytes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _extPayloadLength
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::WebSocketFrame::dyn__extPayloadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__extPayloadLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extPayloadLength"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Fin _fin
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Fin& WebSocketSharp::WebSocketFrame::dyn__fin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__fin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fin"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Fin*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Mask _mask
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Mask& WebSocketSharp::WebSocketFrame::dyn__mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mask"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Mask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _maskingKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::WebSocketFrame::dyn__maskingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__maskingKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maskingKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Opcode _opcode
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Opcode& WebSocketSharp::WebSocketFrame::dyn__opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__opcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_opcode"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Opcode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.PayloadData _payloadData
[[deprecated("Use field access instead!")]] ::WebSocketSharp::PayloadData*& WebSocketSharp::WebSocketFrame::dyn__payloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__payloadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_payloadData"))->offset;
  return *reinterpret_cast<::WebSocketSharp::PayloadData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _payloadLength
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::WebSocketFrame::dyn__payloadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__payloadLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_payloadLength"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Rsv _rsv1
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Rsv& WebSocketSharp::WebSocketFrame::dyn__rsv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__rsv1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsv1"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Rsv*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Rsv _rsv2
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Rsv& WebSocketSharp::WebSocketFrame::dyn__rsv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__rsv2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsv2"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Rsv*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Rsv _rsv3
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Rsv& WebSocketSharp::WebSocketFrame::dyn__rsv3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dyn__rsv3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsv3"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Rsv*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame..cctor
void WebSocketSharp::WebSocketFrame::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_ExtendedPayloadLengthCount
int WebSocketSharp::WebSocketFrame::get_ExtendedPayloadLengthCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_ExtendedPayloadLengthCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedPayloadLengthCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_FullPayloadLength
uint64_t WebSocketSharp::WebSocketFrame::get_FullPayloadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_FullPayloadLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullPayloadLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsClose
bool WebSocketSharp::WebSocketFrame::get_IsClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsCompressed
bool WebSocketSharp::WebSocketFrame::get_IsCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsContinuation
bool WebSocketSharp::WebSocketFrame::get_IsContinuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsContinuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContinuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsData
bool WebSocketSharp::WebSocketFrame::get_IsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsFinal
bool WebSocketSharp::WebSocketFrame::get_IsFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsFragment
bool WebSocketSharp::WebSocketFrame::get_IsFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsMasked
bool WebSocketSharp::WebSocketFrame::get_IsMasked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsMasked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMasked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsPing
bool WebSocketSharp::WebSocketFrame::get_IsPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsPong
bool WebSocketSharp::WebSocketFrame::get_IsPong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsPong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_IsText
bool WebSocketSharp::WebSocketFrame::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_Length
uint64_t WebSocketSharp::WebSocketFrame::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_Opcode
::WebSocketSharp::Opcode WebSocketSharp::WebSocketFrame::get_Opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_Opcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Opcode, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_PayloadData
::WebSocketSharp::PayloadData* WebSocketSharp::WebSocketFrame::get_PayloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_PayloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PayloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::PayloadData*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_Rsv2
::WebSocketSharp::Rsv WebSocketSharp::WebSocketFrame::get_Rsv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_Rsv2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rsv2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Rsv, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.get_Rsv3
::WebSocketSharp::Rsv WebSocketSharp::WebSocketFrame::get_Rsv3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::get_Rsv3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rsv3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Rsv, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.createMaskingKey
::ArrayW<uint8_t> WebSocketSharp::WebSocketFrame::createMaskingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::createMaskingKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "createMaskingKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.dump
::StringW WebSocketSharp::WebSocketFrame::dump(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.print
::StringW WebSocketSharp::WebSocketFrame::print(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::print");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "print", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.processHeader
::WebSocketSharp::WebSocketFrame* WebSocketSharp::WebSocketFrame::processHeader(::ArrayW<uint8_t> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::processHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "processHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::WebSocketFrame*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, header);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.readExtendedPayloadLengthAsync
void WebSocketSharp::WebSocketFrame::readExtendedPayloadLengthAsync(::System::IO::Stream* stream, ::WebSocketSharp::WebSocketFrame* frame, ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::readExtendedPayloadLengthAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "readExtendedPayloadLengthAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, frame, completed, error);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.readHeaderAsync
void WebSocketSharp::WebSocketFrame::readHeaderAsync(::System::IO::Stream* stream, ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::readHeaderAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "readHeaderAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, completed, error);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.readMaskingKeyAsync
void WebSocketSharp::WebSocketFrame::readMaskingKeyAsync(::System::IO::Stream* stream, ::WebSocketSharp::WebSocketFrame* frame, ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::readMaskingKeyAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "readMaskingKeyAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, frame, completed, error);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.readPayloadDataAsync
void WebSocketSharp::WebSocketFrame::readPayloadDataAsync(::System::IO::Stream* stream, ::WebSocketSharp::WebSocketFrame* frame, ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::readPayloadDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "readPayloadDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, frame, completed, error);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.CreateCloseFrame
::WebSocketSharp::WebSocketFrame* WebSocketSharp::WebSocketFrame::CreateCloseFrame(::WebSocketSharp::PayloadData* payloadData, bool mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::CreateCloseFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "CreateCloseFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(payloadData), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::WebSocketFrame*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, payloadData, mask);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.CreatePingFrame
::WebSocketSharp::WebSocketFrame* WebSocketSharp::WebSocketFrame::CreatePingFrame(bool mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::CreatePingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "CreatePingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::WebSocketFrame*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.ReadFrameAsync
void WebSocketSharp::WebSocketFrame::ReadFrameAsync(::System::IO::Stream* stream, bool unmask, ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed, ::System::Action_1<::System::Exception*>* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::ReadFrameAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "WebSocketFrame", "ReadFrameAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(unmask), ::il2cpp_utils::ExtractType(completed), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, unmask, completed, error);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.Unmask
void WebSocketSharp::WebSocketFrame::Unmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::Unmask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unmask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.GetEnumerator
::System::Collections::Generic::IEnumerator_1<uint8_t>* WebSocketSharp::WebSocketFrame::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.PrintToString
::StringW WebSocketSharp::WebSocketFrame::PrintToString(bool dumped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::PrintToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dumped)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dumped);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.ToArray
::ArrayW<uint8_t> WebSocketSharp::WebSocketFrame::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* WebSocketSharp::WebSocketFrame::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame.ToString
::StringW WebSocketSharp::WebSocketFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1
#include "WebSocketSharp/WebSocketFrame_-dump-c__AnonStorey1.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2
#include "WebSocketSharp/WebSocketFrame_-dump-c__AnonStorey1_-dump-c__AnonStorey2.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.StringBuilder output
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String lineFmt
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::dyn_lineFmt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::dyn_lineFmt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineFmt"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1.<>m__0
::System::Action_4<::StringW, ::StringW, ::StringW, ::StringW>* WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_4<::StringW, ::StringW, ::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2
#include "WebSocketSharp/WebSocketFrame_-dump-c__AnonStorey1_-dump-c__AnonStorey2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 lineCnt
[[deprecated("Use field access instead!")]] int64_t& WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::dyn_lineCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::dyn_lineCnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineCnt"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1 <>f__ref$1
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*& WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::dyn_$$f__ref$1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::dyn_$$f__ref$1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__ref$1"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2.<>m__0
void WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::$$m__0(::StringW arg1, ::StringW arg2, ::StringW arg3, ::StringW arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg1, arg2, arg3, arg4);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<readExtendedPayloadLengthAsync>c__AnonStorey3
#include "WebSocketSharp/WebSocketFrame_-readExtendedPayloadLengthAsync-c__AnonStorey3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 len
[[deprecated("Use field access instead!")]] int& WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocketFrame frame
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<WebSocketSharp.WebSocketFrame> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::WebSocketFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<readExtendedPayloadLengthAsync>c__AnonStorey3.<>m__0
void WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::$$m__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readExtendedPayloadLengthAsync$c__AnonStorey3::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<readHeaderAsync>c__AnonStorey4
#include "WebSocketSharp/WebSocketFrame_-readHeaderAsync-c__AnonStorey4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Action`1<WebSocketSharp.WebSocketFrame> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& WebSocketSharp::WebSocketFrame::$readHeaderAsync$c__AnonStorey4::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readHeaderAsync$c__AnonStorey4::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::WebSocketFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<readHeaderAsync>c__AnonStorey4.<>m__0
void WebSocketSharp::WebSocketFrame::$readHeaderAsync$c__AnonStorey4::$$m__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readHeaderAsync$c__AnonStorey4::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<readMaskingKeyAsync>c__AnonStorey5
#include "WebSocketSharp/WebSocketFrame_-readMaskingKeyAsync-c__AnonStorey5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 len
[[deprecated("Use field access instead!")]] int& WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocketFrame frame
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<WebSocketSharp.WebSocketFrame> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::WebSocketFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<readMaskingKeyAsync>c__AnonStorey5.<>m__0
void WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::$$m__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readMaskingKeyAsync$c__AnonStorey5::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6
#include "WebSocketSharp/WebSocketFrame_-readPayloadDataAsync-c__AnonStorey6.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 llen
[[deprecated("Use field access instead!")]] int64_t& WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_llen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_llen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "llen"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocketFrame frame
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<WebSocketSharp.WebSocketFrame> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::WebSocketFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6.<>m__0
void WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::$$m__0(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7
#include "WebSocketSharp/WebSocketFrame_-ReadFrameAsync-c__AnonStorey7.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<System.Exception> error
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Exception*>*& WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean unmask
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_unmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_unmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unmask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action`1<WebSocketSharp.WebSocketFrame> completed
[[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<::System::Action_1<::WebSocketSharp::WebSocketFrame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7.<>m__0
void WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::$$m__0(::WebSocketSharp::WebSocketFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7.<>m__1
void WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::$$m__1(::WebSocketSharp::WebSocketFrame* frame1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::<>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame1);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7.<>m__2
void WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::$$m__2(::WebSocketSharp::WebSocketFrame* frame2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::<>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame2);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<ReadFrameAsync>c__AnonStorey7.<>m__3
void WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::$$m__3(::WebSocketSharp::WebSocketFrame* frame3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$ReadFrameAsync$c__AnonStorey7::<>m__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame3);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0
#include "WebSocketSharp/WebSocketFrame_-GetEnumerator-c__Iterator0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] $locvar0
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$locvar0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$locvar0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar0"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $locvar1
[[deprecated("Use field access instead!")]] int& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$locvar1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$locvar1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte <b>__0
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$b$__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$b$__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<b>__0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: WebSocketSharp.WebSocketFrame $this
[[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::WebSocketSharp::WebSocketFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte $current
[[deprecated("Use field access instead!")]] uint8_t& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0.MoveNext
bool WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0.System.Collections.Generic.IEnumerator<byte>.get_Current
uint8_t WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_Generic_IEnumerator$byte$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System.Collections.Generic.IEnumerator<byte>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0.Dispose
void WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0.Reset
void WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.AuthenticationChallenge
#include "WebSocketSharp/Net/AuthenticationChallenge.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: WebSocketSharp.Net.AuthenticationChallenge.Parse
::WebSocketSharp::Net::AuthenticationChallenge* WebSocketSharp::Net::AuthenticationChallenge::Parse(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationChallenge::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationChallenge", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::AuthenticationChallenge*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationChallenge.ToBasicString
::StringW WebSocketSharp::Net::AuthenticationChallenge::ToBasicString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationChallenge::ToBasicString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationChallenge.ToDigestString
::StringW WebSocketSharp::Net::AuthenticationChallenge::ToDigestString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationChallenge::ToDigestString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.AuthenticationResponse
#include "WebSocketSharp/Net/AuthenticationResponse.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: WebSocketSharp.Net.NetworkCredential
#include "WebSocketSharp/Net/NetworkCredential.hpp"
// Including type: WebSocketSharp.Net.AuthenticationChallenge
#include "WebSocketSharp/Net/AuthenticationChallenge.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAC0A7C
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
::System::Func_2<::StringW, bool>* WebSocketSharp::Net::AuthenticationResponse::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("WebSocketSharp.Net", "AuthenticationResponse", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
void WebSocketSharp::Net::AuthenticationResponse::_set_$$f__am$cache0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "AuthenticationResponse", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _nonceCount
[[deprecated("Use field access instead!")]] uint& WebSocketSharp::Net::AuthenticationResponse::dyn__nonceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::dyn__nonceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonceCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.get_NonceCount
uint WebSocketSharp::Net::AuthenticationResponse::get_NonceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::get_NonceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NonceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.createA1
::StringW WebSocketSharp::Net::AuthenticationResponse::createA1(::StringW username, ::StringW password, ::StringW realm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::createA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "createA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(realm)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, username, password, realm);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.createA1
::StringW WebSocketSharp::Net::AuthenticationResponse::createA1(::StringW username, ::StringW password, ::StringW realm, ::StringW nonce, ::StringW cnonce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::createA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "createA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(realm), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(cnonce)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, username, password, realm, nonce, cnonce);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.createA2
::StringW WebSocketSharp::Net::AuthenticationResponse::createA2(::StringW method, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::createA2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "createA2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, uri);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.createA2
::StringW WebSocketSharp::Net::AuthenticationResponse::createA2(::StringW method, ::StringW uri, ::StringW entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::createA2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "createA2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(entity)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, uri, entity);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.hash
::StringW WebSocketSharp::Net::AuthenticationResponse::hash(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.initAsDigest
void WebSocketSharp::Net::AuthenticationResponse::initAsDigest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::initAsDigest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initAsDigest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.CreateRequestDigest
::StringW WebSocketSharp::Net::AuthenticationResponse::CreateRequestDigest(::System::Collections::Specialized::NameValueCollection* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::CreateRequestDigest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "CreateRequestDigest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.<initAsDigest>m__0
bool WebSocketSharp::Net::AuthenticationResponse::$initAsDigest$m__0(::StringW qop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::<initAsDigest>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationResponse", "<initAsDigest>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qop)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qop);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.ToBasicString
::StringW WebSocketSharp::Net::AuthenticationResponse::ToBasicString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::ToBasicString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationResponse.ToDigestString
::StringW WebSocketSharp::Net::AuthenticationResponse::ToDigestString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationResponse::ToDigestString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.AuthenticationBase
#include "WebSocketSharp/Net/AuthenticationBase.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private WebSocketSharp.Net.AuthenticationSchemes _scheme
[[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::AuthenticationSchemes& WebSocketSharp::Net::AuthenticationBase::dyn__scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::dyn__scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheme"))->offset;
  return *reinterpret_cast<::WebSocketSharp::Net::AuthenticationSchemes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Specialized.NameValueCollection Parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& WebSocketSharp::Net::AuthenticationBase::dyn_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::dyn_Parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameValueCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.get_Scheme
::WebSocketSharp::Net::AuthenticationSchemes WebSocketSharp::Net::AuthenticationBase::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::AuthenticationSchemes, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.CreateNonceValue
::StringW WebSocketSharp::Net::AuthenticationBase::CreateNonceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::CreateNonceValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationBase", "CreateNonceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.ParseParameters
::System::Collections::Specialized::NameValueCollection* WebSocketSharp::Net::AuthenticationBase::ParseParameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::ParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "AuthenticationBase", "ParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameValueCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.ToBasicString
::StringW WebSocketSharp::Net::AuthenticationBase::ToBasicString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::ToBasicString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.ToDigestString
::StringW WebSocketSharp::Net::AuthenticationBase::ToDigestString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::ToDigestString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::WebSocketSharp::Net::AuthenticationBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.AuthenticationBase.ToString
::StringW WebSocketSharp::Net::AuthenticationBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.HttpBase
#include "WebSocketSharp/HttpBase.hpp"
// Including type: WebSocketSharp.HttpBase/<readHeaders>c__AnonStorey0
#include "WebSocketSharp/HttpBase_-readHeaders-c__AnonStorey0.hpp"
// Including type: WebSocketSharp.HttpBase/<Read>c__AnonStorey1`1
#include "WebSocketSharp/HttpBase_-Read-c__AnonStorey1_1.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameValueCollection _headers
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& WebSocketSharp::HttpBase::dyn__headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::dyn__headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameValueCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version _version
[[deprecated("Use field access instead!")]] ::System::Version*& WebSocketSharp::HttpBase::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] EntityBodyData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& WebSocketSharp::HttpBase::dyn_EntityBodyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::dyn_EntityBodyData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntityBodyData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.HttpBase.get_EntityBody
::StringW WebSocketSharp::HttpBase::get_EntityBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::get_EntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpBase.get_Headers
::System::Collections::Specialized::NameValueCollection* WebSocketSharp::HttpBase::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameValueCollection*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpBase.get_ProtocolVersion
::System::Version* WebSocketSharp::HttpBase::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpBase.readEntityBody
::ArrayW<uint8_t> WebSocketSharp::HttpBase::readEntityBody(::System::IO::Stream* stream, ::StringW length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::readEntityBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "HttpBase", "readEntityBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, length);
}
// Autogenerated method: WebSocketSharp.HttpBase.readHeaders
::ArrayW<::StringW> WebSocketSharp::HttpBase::readHeaders(::System::IO::Stream* stream, int maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::readHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "HttpBase", "readHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, maxLength);
}
// Autogenerated method: WebSocketSharp.HttpBase.ToByteArray
::ArrayW<uint8_t> WebSocketSharp::HttpBase::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.HttpBase/<readHeaders>c__AnonStorey0
#include "WebSocketSharp/HttpBase_-readHeaders-c__AnonStorey0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Byte> buff
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::dyn_buff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::dyn_buff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 cnt
[[deprecated("Use field access instead!")]] int& WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::dyn_cnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::dyn_cnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.HttpBase/<readHeaders>c__AnonStorey0.<>m__0
void WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::$$m__0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.HttpRequest
#include "WebSocketSharp/HttpRequest.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: WebSocketSharp.HttpResponse
#include "WebSocketSharp/HttpResponse.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: WebSocketSharp.Net.CookieCollection
#include "WebSocketSharp/Net/CookieCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAC0A8C
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.String[],WebSocketSharp.HttpResponse> <>f__mg$cache0
::System::Func_2<::ArrayW<::StringW>, ::WebSocketSharp::HttpResponse*>* WebSocketSharp::HttpRequest::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::ArrayW<::StringW>, ::WebSocketSharp::HttpResponse*>*>("WebSocketSharp", "HttpRequest", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.String[],WebSocketSharp.HttpResponse> <>f__mg$cache0
void WebSocketSharp::HttpRequest::_set_$$f__mg$cache0(::System::Func_2<::ArrayW<::StringW>, ::WebSocketSharp::HttpResponse*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp", "HttpRequest", "<>f__mg$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _method
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::HttpRequest::dyn__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::dyn__method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _uri
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::HttpRequest::dyn__uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::dyn__uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.HttpRequest.CreateConnectRequest
::WebSocketSharp::HttpRequest* WebSocketSharp::HttpRequest::CreateConnectRequest(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::CreateConnectRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "HttpRequest", "CreateConnectRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: WebSocketSharp.HttpRequest.CreateWebSocketRequest
::WebSocketSharp::HttpRequest* WebSocketSharp::HttpRequest::CreateWebSocketRequest(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::CreateWebSocketRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "HttpRequest", "CreateWebSocketRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: WebSocketSharp.HttpRequest.GetResponse
::WebSocketSharp::HttpResponse* WebSocketSharp::HttpRequest::GetResponse(::System::IO::Stream* stream, int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpResponse*, false>(this, ___internal__method, stream, millisecondsTimeout);
}
// Autogenerated method: WebSocketSharp.HttpRequest.SetCookies
void WebSocketSharp::HttpRequest::SetCookies(::WebSocketSharp::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::SetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: WebSocketSharp.HttpRequest.ToString
::StringW WebSocketSharp::HttpRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.HttpResponse
#include "WebSocketSharp/HttpResponse.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: WebSocketSharp.Net.CookieCollection
#include "WebSocketSharp/Net/CookieCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _code
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::HttpResponse::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _reason
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::HttpResponse::dyn__reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::dyn__reason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_Cookies
::WebSocketSharp::Net::CookieCollection* WebSocketSharp::HttpResponse::get_Cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_Cookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::Net::CookieCollection*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_HasConnectionClose
bool WebSocketSharp::HttpResponse::get_HasConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_HasConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_IsProxyAuthenticationRequired
bool WebSocketSharp::HttpResponse::get_IsProxyAuthenticationRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_IsProxyAuthenticationRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsProxyAuthenticationRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_IsRedirect
bool WebSocketSharp::HttpResponse::get_IsRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_IsRedirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRedirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_IsUnauthorized
bool WebSocketSharp::HttpResponse::get_IsUnauthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_IsUnauthorized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnauthorized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_IsWebSocketResponse
bool WebSocketSharp::HttpResponse::get_IsWebSocketResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_IsWebSocketResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWebSocketResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.get_StatusCode
::StringW WebSocketSharp::HttpResponse::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.HttpResponse.Parse
::WebSocketSharp::HttpResponse* WebSocketSharp::HttpResponse::Parse(::ArrayW<::StringW> headerParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp", "HttpResponse", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::WebSocketSharp::HttpResponse*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headerParts);
}
// Autogenerated method: WebSocketSharp.HttpResponse.ToString
::StringW WebSocketSharp::HttpResponse::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpResponse::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WebSocketSharp.Net.ClientSslConfiguration
#include "WebSocketSharp/Net/ClientSslConfiguration.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection _certs
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& WebSocketSharp::Net::ClientSslConfiguration::dyn__certs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::dyn__certs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certs"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
[[deprecated("Use field access instead!")]] ::StringW& WebSocketSharp::Net::ClientSslConfiguration::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.ClientSslConfiguration.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* WebSocketSharp::Net::ClientSslConfiguration::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.ClientSslConfiguration.get_ClientCertificateSelectionCallback
::System::Net::Security::LocalCertificateSelectionCallback* WebSocketSharp::Net::ClientSslConfiguration::get_ClientCertificateSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::get_ClientCertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::LocalCertificateSelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.ClientSslConfiguration.get_ServerCertificateValidationCallback
::System::Net::Security::RemoteCertificateValidationCallback* WebSocketSharp::Net::ClientSslConfiguration::get_ServerCertificateValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::get_ServerCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.ClientSslConfiguration.get_TargetHost
::StringW WebSocketSharp::Net::ClientSslConfiguration::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::ClientSslConfiguration::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WebSocketSharp.Net.SslConfiguration
#include "WebSocketSharp/Net/SslConfiguration.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAC0A9C
// Autogenerated static field getter
// Get static field: static private System.Net.Security.LocalCertificateSelectionCallback <>f__am$cache0
::System::Net::Security::LocalCertificateSelectionCallback* WebSocketSharp::Net::SslConfiguration::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Security::LocalCertificateSelectionCallback*>("WebSocketSharp.Net", "SslConfiguration", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Security.LocalCertificateSelectionCallback <>f__am$cache0
void WebSocketSharp::Net::SslConfiguration::_set_$$f__am$cache0(::System::Net::Security::LocalCertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "SslConfiguration", "<>f__am$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAC0AAC
// Autogenerated static field getter
// Get static field: static private System.Net.Security.RemoteCertificateValidationCallback <>f__am$cache1
::System::Net::Security::RemoteCertificateValidationCallback* WebSocketSharp::Net::SslConfiguration::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Security::RemoteCertificateValidationCallback*>("WebSocketSharp.Net", "SslConfiguration", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Security.RemoteCertificateValidationCallback <>f__am$cache1
void WebSocketSharp::Net::SslConfiguration::_set_$$f__am$cache1(::System::Net::Security::RemoteCertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("WebSocketSharp.Net", "SslConfiguration", "<>f__am$cache1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.LocalCertificateSelectionCallback _certSelectionCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertificateSelectionCallback*& WebSocketSharp::Net::SslConfiguration::dyn__certSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::dyn__certSelectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certSelectionCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.RemoteCertificateValidationCallback _certValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& WebSocketSharp::Net::SslConfiguration::dyn__certValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::dyn__certValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkCertRevocation
[[deprecated("Use field access instead!")]] bool& WebSocketSharp::Net::SslConfiguration::dyn__checkCertRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::dyn__checkCertRevocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkCertRevocation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols _enabledProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& WebSocketSharp::Net::SslConfiguration::dyn__enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::dyn__enabledProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabledProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.get_CertificateSelectionCallback
::System::Net::Security::LocalCertificateSelectionCallback* WebSocketSharp::Net::SslConfiguration::get_CertificateSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::get_CertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::LocalCertificateSelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.get_CertificateValidationCallback
::System::Net::Security::RemoteCertificateValidationCallback* WebSocketSharp::Net::SslConfiguration::get_CertificateValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::get_CertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.get_CheckCertificateRevocation
bool WebSocketSharp::Net::SslConfiguration::get_CheckCertificateRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::get_CheckCertificateRevocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckCertificateRevocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.get_EnabledSslProtocols
::System::Security::Authentication::SslProtocols WebSocketSharp::Net::SslConfiguration::get_EnabledSslProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::get_EnabledSslProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledSslProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.<get_CertificateSelectionCallback>m__0
::System::Security::Cryptography::X509Certificates::X509Certificate* WebSocketSharp::Net::SslConfiguration::$get_CertificateSelectionCallback$m__0(::Il2CppObject* sender, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::<get_CertificateSelectionCallback>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "SslConfiguration", "<get_CertificateSelectionCallback>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: WebSocketSharp.Net.SslConfiguration.<get_CertificateValidationCallback>m__1
bool WebSocketSharp::Net::SslConfiguration::$get_CertificateValidationCallback$m__1(::Il2CppObject* sender, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::SslConfiguration::<get_CertificateValidationCallback>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("WebSocketSharp.Net", "SslConfiguration", "<get_CertificateValidationCallback>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, certificate, chain, sslPolicyErrors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Xefier.Threading.Tasks.ITask
#include "Xefier/Threading/Tasks/ITask.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Xefier.Threading.Tasks.TaskStatus
#include "Xefier/Threading/Tasks/TaskStatus.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_Exception
::System::Exception* Xefier::Threading::Tasks::ITask::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_IsCanceled
bool Xefier::Threading::Tasks::ITask::get_IsCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_IsCanceled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_IsFaulted
bool Xefier::Threading::Tasks::ITask::get_IsFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_IsFaulted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_IsCompleted
bool Xefier::Threading::Tasks::ITask::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_Status
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::ITask::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_Status");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::TaskStatus, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.get_AsyncWaitHandle
::System::Threading::WaitHandle* Xefier::Threading::Tasks::ITask::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.ContinueWith
::Xefier::Threading::Tasks::ITask* Xefier::Threading::Tasks::ITask::ContinueWith(::System::Action_1<::Xefier::Threading::Tasks::ITask*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::ContinueWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::ITask*, false>(this, ___internal__method, action);
}
// Autogenerated method: Xefier.Threading.Tasks.ITask.Wait
void Xefier::Threading::Tasks::ITask::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::ITask::Wait");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::ITask*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Xefier.Threading.Tasks.TaskBase
#include "Xefier/Threading/Tasks/TaskBase.hpp"
// Including type: Xefier.Threading.Tasks.TaskBase/<>c__DisplayClass26_0
#include "Xefier/Threading/Tasks/TaskBase_--c__DisplayClass26_0.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Xefier.Threading.AutoLock`1
#include "Xefier/Threading/AutoLock_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.EventHandler Finished
[[deprecated("Use field access instead!")]] ::System::EventHandler*& Xefier::Threading::Tasks::TaskBase::dyn_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::dyn_Finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Finished"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& Xefier::Threading::Tasks::TaskBase::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Xefier.Threading.AutoLock`1<Xefier.Threading.Tasks.TaskStatus> status
[[deprecated("Use field access instead!")]] ::Xefier::Threading::AutoLock_1<::Xefier::Threading::Tasks::TaskStatus>*& Xefier::Threading::Tasks::TaskBase::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::Xefier::Threading::AutoLock_1<::Xefier::Threading::Tasks::TaskStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Xefier.Threading.AutoLock`1<System.Exception> exception
[[deprecated("Use field access instead!")]] ::Xefier::Threading::AutoLock_1<::System::Exception*>*& Xefier::Threading::Tasks::TaskBase::dyn_exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::dyn_exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exception"))->offset;
  return *reinterpret_cast<::Xefier::Threading::AutoLock_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.add_Finished
void Xefier::Threading::Tasks::TaskBase::add_Finished(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::add_Finished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Finished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.remove_Finished
void Xefier::Threading::Tasks::TaskBase::remove_Finished(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::remove_Finished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Finished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_TaskAction
::System::Action* Xefier::Threading::Tasks::TaskBase::get_TaskAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_TaskAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TaskAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_Exception
::System::Exception* Xefier::Threading::Tasks::TaskBase::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_Exception");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.set_Exception
void Xefier::Threading::Tasks::TaskBase::set_Exception(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::set_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_IsCanceled
bool Xefier::Threading::Tasks::TaskBase::get_IsCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_IsCanceled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_IsFaulted
bool Xefier::Threading::Tasks::TaskBase::get_IsFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_IsFaulted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_IsCompleted
bool Xefier::Threading::Tasks::TaskBase::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_Status
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskBase::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_Status");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::TaskStatus, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.set_Status
void Xefier::Threading::Tasks::TaskBase::set_Status(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::set_Status");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.get_AsyncWaitHandle
::System::Threading::WaitHandle* Xefier::Threading::Tasks::TaskBase::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.Init
void Xefier::Threading::Tasks::TaskBase::Init(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.Start
void Xefier::Threading::Tasks::TaskBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.ContinueWith
::Xefier::Threading::Tasks::ITask* Xefier::Threading::Tasks::TaskBase::ContinueWith(::System::Action_1<::Xefier::Threading::Tasks::ITask*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::ContinueWith");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::ITask*, false>(this, ___internal__method, action);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.Wait
void Xefier::Threading::Tasks::TaskBase::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::Wait");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase.OnFinished
void Xefier::Threading::Tasks::TaskBase::OnFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::OnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Xefier.Threading.Tasks.TaskBase/<>c__DisplayClass26_0
#include "Xefier/Threading/Tasks/TaskBase_--c__DisplayClass26_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Xefier.Threading.Tasks.ITask
#include "Xefier/Threading/Tasks/ITask.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Xefier.Threading.Tasks.ITask> action
[[deprecated("Use field access instead!")]] ::System::Action_1<::Xefier::Threading::Tasks::ITask*>*& Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action_1<::Xefier::Threading::Tasks::ITask*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Xefier.Threading.Tasks.TaskBase <>4__this
[[deprecated("Use field access instead!")]] ::Xefier::Threading::Tasks::TaskBase*& Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Xefier::Threading::Tasks::TaskBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Xefier.Threading.Tasks.TaskBase/<>c__DisplayClass26_0.<ContinueWith>b__0
void Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::$ContinueWith$b__0(::Il2CppObject* s, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskBase::$$c__DisplayClass26_0::<ContinueWith>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContinueWith>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Xefier.Threading.Tasks.TaskStatus
#include "Xefier/Threading/Tasks/TaskStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus Canceled
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus Canceled
void Xefier::Threading::Tasks::TaskStatus::_set_Canceled(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus Created
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "Created"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus Created
void Xefier::Threading::Tasks::TaskStatus::_set_Created(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus Faulted
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_Faulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_Faulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "Faulted"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus Faulted
void Xefier::Threading::Tasks::TaskStatus::_set_Faulted(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_Faulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "Faulted", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus RanToCompletion
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_RanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_RanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "RanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus RanToCompletion
void Xefier::Threading::Tasks::TaskStatus::_set_RanToCompletion(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_RanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "RanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus Running
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "Running"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus Running
void Xefier::Threading::Tasks::TaskStatus::_set_Running(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "Running", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus WaitingForActivation
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_WaitingForActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_WaitingForActivation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "WaitingForActivation"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus WaitingForActivation
void Xefier::Threading::Tasks::TaskStatus::_set_WaitingForActivation(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_WaitingForActivation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "WaitingForActivation", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus WaitingForChildrenToComplete
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_WaitingForChildrenToComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_WaitingForChildrenToComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "WaitingForChildrenToComplete"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus WaitingForChildrenToComplete
void Xefier::Threading::Tasks::TaskStatus::_set_WaitingForChildrenToComplete(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_WaitingForChildrenToComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "WaitingForChildrenToComplete", value));
}
// Autogenerated static field getter
// Get static field: static public Xefier.Threading.Tasks.TaskStatus WaitingToRun
::Xefier::Threading::Tasks::TaskStatus Xefier::Threading::Tasks::TaskStatus::_get_WaitingToRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_get_WaitingToRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Xefier::Threading::Tasks::TaskStatus>("Xefier.Threading.Tasks", "TaskStatus", "WaitingToRun"));
}
// Autogenerated static field setter
// Set static field: static public Xefier.Threading.Tasks.TaskStatus WaitingToRun
void Xefier::Threading::Tasks::TaskStatus::_set_WaitingToRun(::Xefier::Threading::Tasks::TaskStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::_set_WaitingToRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xefier.Threading.Tasks", "TaskStatus", "WaitingToRun", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Xefier::Threading::Tasks::TaskStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::TaskStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Xefier.Threading.Tasks.Task
#include "Xefier/Threading/Tasks/Task.hpp"
// Including type: Xefier.Threading.Tasks.Task/<>c__DisplayClass4_0
#include "Xefier/Threading/Tasks/Task_--c__DisplayClass4_0.hpp"
// Including type: Xefier.Threading.Tasks.Task/<>c__DisplayClass5_0
#include "Xefier/Threading/Tasks/Task_--c__DisplayClass5_0.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Xefier.Threading.Tasks.ITask`1
#include "Xefier/Threading/Tasks/ITask_1.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Xefier::Threading::Tasks::Task::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.Run
::Xefier::Threading::Tasks::ITask* Xefier::Threading::Tasks::Task::Run(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::ITask*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.WhenAll
::Xefier::Threading::Tasks::ITask* Xefier::Threading::Tasks::Task::WhenAll(::System::Collections::Generic::IEnumerable_1<::Xefier::Threading::Tasks::ITask*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::WhenAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "WhenAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::ITask*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.WhenAny
::Xefier::Threading::Tasks::ITask_1<::Xefier::Threading::Tasks::ITask*>* Xefier::Threading::Tasks::Task::WhenAny(::System::Collections::Generic::IEnumerable_1<::Xefier::Threading::Tasks::ITask*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::WhenAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "WhenAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<::Xefier::Threading::Tasks::ITask_1<::Xefier::Threading::Tasks::ITask*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.WaitAll
void Xefier::Threading::Tasks::Task::WaitAll(::System::Collections::Generic::IEnumerable_1<::Xefier::Threading::Tasks::ITask*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::WaitAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "WaitAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.WaitAny
int Xefier::Threading::Tasks::Task::WaitAny(::System::Collections::Generic::IEnumerable_1<::Xefier::Threading::Tasks::ITask*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::WaitAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "WaitAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.ThreadRun
void Xefier::Threading::Tasks::Task::ThreadRun(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::ThreadRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThreadRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.GetWaitHandles
::ArrayW<::System::Threading::WaitHandle*> Xefier::Threading::Tasks::Task::GetWaitHandles(::System::Collections::Generic::IEnumerable_1<::Xefier::Threading::Tasks::ITask*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::GetWaitHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Xefier.Threading.Tasks", "Task", "GetWaitHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Threading::WaitHandle*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.get_AsyncWaitHandle
::System::Threading::WaitHandle* Xefier::Threading::Tasks::Task::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.Start
void Xefier::Threading::Tasks::Task::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Xefier.Threading.Tasks.Task.Wait
void Xefier::Threading::Tasks::Task::Wait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::Wait");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Xefier::Threading::Tasks::TaskBase*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Xefier.Threading.Tasks.Task/<>c__DisplayClass4_0
#include "Xefier/Threading/Tasks/Task_--c__DisplayClass4_0.hpp"
// Including type: Xefier.Threading.Tasks.ITask
#include "Xefier/Threading/Tasks/ITask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Xefier.Threading.Tasks.ITask[] tasksCopy
[[deprecated("Use field access instead!")]] ::ArrayW<::Xefier::Threading::Tasks::ITask*>& Xefier::Threading::Tasks::Task::$$c__DisplayClass4_0::dyn_tasksCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::$$c__DisplayClass4_0::dyn_tasksCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tasksCopy"))->offset;
  return *reinterpret_cast<::ArrayW<::Xefier::Threading::Tasks::ITask*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Xefier.Threading.Tasks.Task/<>c__DisplayClass4_0.<WhenAll>b__0
void Xefier::Threading::Tasks::Task::$$c__DisplayClass4_0::$WhenAll$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Xefier::Threading::Tasks::Task::$$c__DisplayClass4_0::<WhenAll>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenAll>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
