// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: PowerUI.TransformationStack
#include "PowerUI/TransformationStack.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.UIBatch
#include "PowerUI/UIBatch.hpp"
// Including type: PowerUI.BoxRegion
#include "PowerUI/BoxRegion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: PowerUI.Css.ElementStyle
#include "PowerUI/Css/ElementStyle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PowerUI.InputMode
#include "PowerUI/InputMode.hpp"
// Including type: PowerUI.Css.DisplayableProperty
#include "PowerUI/Css/DisplayableProperty.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private PowerUI.RenderMode UIRenderMode
::PowerUI::RenderMode PowerUI::Renderman::_get_UIRenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::_get_UIRenderMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::RenderMode>("PowerUI", "Renderman", "UIRenderMode"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.RenderMode UIRenderMode
void PowerUI::Renderman::_set_UIRenderMode(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::_set_UIRenderMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Renderman", "UIRenderMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PenX
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_PenX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_PenX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PenX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PenY
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_PenY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_PenY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PenY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LineHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_LineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Depth
[[deprecated("Use field access instead!")]] float& PowerUI::Renderman::dyn_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_Depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Depth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxDepth
[[deprecated("Use field access instead!")]] float& PowerUI::Renderman::dyn_MaxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_MaxDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DepthUsed
[[deprecated("Use field access instead!")]] bool& PowerUI::Renderman::dyn_DepthUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_DepthUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DepthUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.TransformationStack Transformations
[[deprecated("Use field access instead!")]] ::PowerUI::TransformationStack*& PowerUI::Renderman::dyn_Transformations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_Transformations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Transformations"))->offset;
  return *reinterpret_cast<::PowerUI::TransformationStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle LastOnLine
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Renderman::dyn_LastOnLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LastOnLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastOnLine"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle FirstOnLine
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Renderman::dyn_FirstOnLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_FirstOnLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstOnLine"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GoingLeftwards
[[deprecated("Use field access instead!")]] bool& PowerUI::Renderman::dyn_GoingLeftwards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_GoingLeftwards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoingLeftwards"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch CurrentBatch
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::Renderman::dyn_CurrentBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_CurrentBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentBatch"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle LastPacked
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Renderman::dyn_LastPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LastPacked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastPacked"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle FirstPacked
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Renderman::dyn_FirstPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_FirstPacked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstPacked"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.BoxRegion ClippingBoundary
[[deprecated("Use field access instead!")]] ::PowerUI::BoxRegion*& PowerUI::Renderman::dyn_ClippingBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_ClippingBoundary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClippingBoundary"))->offset;
  return *reinterpret_cast<::PowerUI::BoxRegion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BatchDepth
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_BatchDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_BatchDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BatchDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LineStart
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_LineStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LineStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PowerUI.Css.ComputedStyle> ActiveFloats
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>*& PowerUI::Renderman::dyn_ActiveFloats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_ActiveFloats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveFloats"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxX
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_MaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_MaxX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Baseline
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_Baseline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Baseline"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LargestLineWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_LargestLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LargestLineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LargestLineWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FontAliasingTop
[[deprecated("Use field access instead!")]] float& PowerUI::Renderman::dyn_FontAliasingTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_FontAliasingTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontAliasingTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FontAliasingBottom
[[deprecated("Use field access instead!")]] float& PowerUI::Renderman::dyn_FontAliasingBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_FontAliasingBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontAliasingBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RenderLayer
[[deprecated("Use field access instead!")]] int& PowerUI::Renderman::dyn_RenderLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_RenderLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RenderLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LayoutOccuring
[[deprecated("Use field access instead!")]] bool& PowerUI::Renderman::dyn_LayoutOccuring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LayoutOccuring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LayoutOccuring"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch LastBatch
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::Renderman::dyn_LastBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_LastBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastBatch"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch FirstBatch
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::Renderman::dyn_FirstBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_FirstBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstBatch"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document RootDocument
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::Renderman::dyn_RootDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_RootDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RootDocument"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DepthResolution
[[deprecated("Use field access instead!")]] float& PowerUI::Renderman::dyn_DepthResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_DepthResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DepthResolution"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DoLayout
[[deprecated("Use field access instead!")]] bool& PowerUI::Renderman::dyn_DoLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_DoLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DoLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader CustomShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& PowerUI::Renderman::dyn_CustomShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_CustomShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ElementStyle StylesToPaint
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ElementStyle*& PowerUI::Renderman::dyn_StylesToPaint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_StylesToPaint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StylesToPaint"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ElementStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ElementStyle StylesToRecompute
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ElementStyle*& PowerUI::Renderman::dyn_StylesToRecompute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_StylesToRecompute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StylesToRecompute"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ElementStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Node
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::Renderman::dyn_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Node"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ScreenClip
[[deprecated("Use field access instead!")]] bool& PowerUI::Renderman::dyn_ScreenClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_ScreenClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScreenClip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.WorldUI InWorldUI
[[deprecated("Use field access instead!")]] ::PowerUI::WorldUI*& PowerUI::Renderman::dyn_InWorldUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_InWorldUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InWorldUI"))->offset;
  return *reinterpret_cast<::PowerUI::WorldUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform PhysicsModeCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& PowerUI::Renderman::dyn_PhysicsModeCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_PhysicsModeCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PhysicsModeCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FilterMode ImageFilterMode
[[deprecated("Use field access instead!")]] ::UnityEngine::FilterMode& PowerUI::Renderman::dyn_ImageFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::dyn_ImageFilterMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageFilterMode"))->offset;
  return *reinterpret_cast<::UnityEngine::FilterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Renderman.get_RenderingInWorld
bool PowerUI::Renderman::get_RenderingInWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_RenderingInWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderingInWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.get_Parent
::UnityEngine::GameObject* PowerUI::Renderman::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.SetInputMode
void PowerUI::Renderman::SetInputMode(::PowerUI::InputMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::SetInputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: PowerUI.Renderman.get_RenderMode
::PowerUI::RenderMode PowerUI::Renderman::get_RenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::RenderMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.set_RenderMode
void PowerUI::Renderman::set_RenderMode(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::set_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Renderman.get_FilterMode
::UnityEngine::FilterMode PowerUI::Renderman::get_FilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.set_FilterMode
void PowerUI::Renderman::set_FilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::set_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Renderman.get_TextFilterMode
::UnityEngine::FilterMode PowerUI::Renderman::get_TextFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.set_TextFilterMode
void PowerUI::Renderman::set_TextFilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::set_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Renderman.RelocateCollider
void PowerUI::Renderman::RelocateCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::RelocateCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelocateCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.IncreaseDepth
void PowerUI::Renderman::IncreaseDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::IncreaseDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.Clear
void PowerUI::Renderman::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.Destroy
void PowerUI::Renderman::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.SetupBatch
void PowerUI::Renderman::SetupBatch(::PowerUI::Css::DisplayableProperty* property, ::Blaze::TextureAtlas* graphics, ::Blaze::TextureAtlas* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::SetupBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(graphics), ::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, graphics, font);
}
// Autogenerated method: PowerUI.Renderman.AddBatch
void PowerUI::Renderman::AddBatch(::PowerUI::UIBatch* batch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::AddBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, batch);
}
// Autogenerated method: PowerUI.Renderman.BeginLinePack
void PowerUI::Renderman::BeginLinePack(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::BeginLinePack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginLinePack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Renderman.HorizontalAlign
void PowerUI::Renderman::HorizontalAlign(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::HorizontalAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorizontalAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Renderman.AlignLine
void PowerUI::Renderman::AlignLine(::PowerUI::Css::ComputedStyle* first, ::PowerUI::Css::ComputedStyle* last, int lineSpace, int elementCount, int lineLength, ::PowerUI::Css::ComputedStyle* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::AlignLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlignLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last), ::il2cpp_utils::ExtractType(lineSpace), ::il2cpp_utils::ExtractType(elementCount), ::il2cpp_utils::ExtractType(lineLength), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first, last, lineSpace, elementCount, lineLength, parent);
}
// Autogenerated method: PowerUI.Renderman.EndLinePack
void PowerUI::Renderman::EndLinePack(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::EndLinePack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndLinePack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Renderman.CompleteLine
void PowerUI::Renderman::CompleteLine(::PowerUI::Css::ComputedStyle* parentStyle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::CompleteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentStyle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentStyle);
}
// Autogenerated method: PowerUI.Renderman.PackOnLine
void PowerUI::Renderman::PackOnLine(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::PackOnLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackOnLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Renderman.AddToLine
void PowerUI::Renderman::AddToLine(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Element* parentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::AddToLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(parentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, parentNode);
}
// Autogenerated method: PowerUI.Renderman.IsInvisible
bool PowerUI::Renderman::IsInvisible(int left, int top, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::IsInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, left, top, width, height);
}
// Autogenerated method: PowerUI.Renderman.SetBoundary
void PowerUI::Renderman::SetBoundary(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::SetBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Renderman.ResetBoundary
void PowerUI::Renderman::ResetBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::ResetBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.Reset
void PowerUI::Renderman::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.set_Layer
void PowerUI::Renderman::set_Layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::set_Layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Renderman.get_Layer
int PowerUI::Renderman::get_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::get_Layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.RenderWithCamera
void PowerUI::Renderman::RenderWithCamera(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::RenderWithCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderWithCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.Renderman.RequestLayout
void PowerUI::Renderman::RequestLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::RequestLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.RequestPaint
void PowerUI::Renderman::RequestPaint(::PowerUI::Css::ElementStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::RequestPaint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPaint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Renderman.Update
void PowerUI::Renderman::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.Layout
void PowerUI::Renderman::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::Layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Renderman.PixelToWorldUnit
::UnityEngine::Vector3 PowerUI::Renderman::PixelToWorldUnit(float px, float py, float depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::PixelToWorldUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PixelToWorldUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px), ::il2cpp_utils::ExtractType(py), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, px, py, depth);
}
// Autogenerated method: PowerUI.Renderman..cctor
void PowerUI::Renderman::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Renderman::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Renderman", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.RenderMode
#include "PowerUI/RenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.RenderMode Atlas
::PowerUI::RenderMode PowerUI::RenderMode::_get_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RenderMode::_get_Atlas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::RenderMode>("PowerUI", "RenderMode", "Atlas"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.RenderMode Atlas
void PowerUI::RenderMode::_set_Atlas(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RenderMode::_set_Atlas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "RenderMode", "Atlas", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.RenderMode NoAtlas
::PowerUI::RenderMode PowerUI::RenderMode::_get_NoAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RenderMode::_get_NoAtlas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::RenderMode>("PowerUI", "RenderMode", "NoAtlas"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.RenderMode NoAtlas
void PowerUI::RenderMode::_set_NoAtlas(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RenderMode::_set_NoAtlas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "RenderMode", "NoAtlas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::RenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ImageResizer
#include "PowerUI/ImageResizer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ImageResizer.Resize
::UnityEngine::Texture2D* PowerUI::ImageResizer::Resize(::UnityEngine::Texture2D* original, float ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageResizer::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageResizer", "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(ratio)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, ratio);
}
// Autogenerated method: PowerUI.ImageResizer.ColorLerpUnclamped
::UnityEngine::Color32 PowerUI::ImageResizer::ColorLerpUnclamped(::UnityEngine::Color32 c1, ::UnityEngine::Color32 c2, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageResizer::ColorLerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageResizer", "ColorLerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResizedImage
#include "PowerUI/ResizedImage.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Width
[[deprecated("Use field access instead!")]] int& PowerUI::ResizedImage::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Height
[[deprecated("Use field access instead!")]] int& PowerUI::ResizedImage::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OriginalWidth
[[deprecated("Use field access instead!")]] int& PowerUI::ResizedImage::dyn_OriginalWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::dyn_OriginalWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OriginalHeight
[[deprecated("Use field access instead!")]] int& PowerUI::ResizedImage::dyn_OriginalHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::dyn_OriginalHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D Image
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& PowerUI::ResizedImage::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResizedImages
#include "PowerUI/ResizedImages.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.ResizedImage
#include "PowerUI/ResizedImage.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ResizedImage> Images
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ResizedImage*>* PowerUI::ResizedImages::_get_Images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImages::_get_Images");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ResizedImage*>*>("PowerUI", "ResizedImages", "Images")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ResizedImage> Images
void PowerUI::ResizedImages::_set_Images(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ResizedImage*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImages::_set_Images");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ResizedImages", "Images", value));
}
// Autogenerated method: PowerUI.ResizedImages.Get
::PowerUI::ResizedImage* PowerUI::ResizedImages::Get(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImages::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ResizedImages", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ResizedImage*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: PowerUI.ResizedImages.Add
::PowerUI::ResizedImage* PowerUI::ResizedImages::Add(::StringW path, ::UnityEngine::Texture2D* originalImage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImages::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ResizedImages", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(originalImage)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ResizedImage*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, originalImage);
}
// Autogenerated method: PowerUI.ResizedImages..cctor
void PowerUI::ResizedImages::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImages::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ResizedImages", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResizeProtocol
#include "PowerUI/ResizeProtocol.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ResizeProtocol.GetNames
::ArrayW<::StringW> PowerUI::ResizeProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizeProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ResourcesProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ResizeProtocol.OnGetGraphic
void PowerUI::ResizeProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizeProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ResourcesProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResolutionInfo
#include "PowerUI/ResolutionInfo.hpp"
// Including type: PowerUI.DesignSize
#include "PowerUI/DesignSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ResolutionInfo::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResolutionInfo::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale
[[deprecated("Use field access instead!")]] float& PowerUI::ResolutionInfo::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResolutionInfo::dyn_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScreenInfo
#include "PowerUI/ScreenInfo.hpp"
// Including type: PowerUI.ResolutionInfo
#include "PowerUI/ResolutionInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ScreenX
int PowerUI::ScreenInfo::_get_ScreenX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_ScreenX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "ScreenInfo", "ScreenX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ScreenX
void PowerUI::ScreenInfo::_set_ScreenX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_ScreenX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "ScreenX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ScreenY
int PowerUI::ScreenInfo::_get_ScreenY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_ScreenY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "ScreenInfo", "ScreenY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ScreenY
void PowerUI::ScreenInfo::_set_ScreenY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_ScreenY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "ScreenY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ScreenYFloat
float PowerUI::ScreenInfo::_get_ScreenYFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_ScreenYFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "ScreenInfo", "ScreenYFloat"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ScreenYFloat
void PowerUI::ScreenInfo::_set_ScreenYFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_ScreenYFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "ScreenYFloat", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ResolutionName
::StringW PowerUI::ScreenInfo::_get_ResolutionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_ResolutionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "ScreenInfo", "ResolutionName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ResolutionName
void PowerUI::ScreenInfo::_set_ResolutionName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_ResolutionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "ResolutionName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single DepthDepreciation
float PowerUI::ScreenInfo::_get_DepthDepreciation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_DepthDepreciation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "ScreenInfo", "DepthDepreciation"));
}
// Autogenerated static field setter
// Set static field: static public System.Single DepthDepreciation
void PowerUI::ScreenInfo::_set_DepthDepreciation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_DepthDepreciation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "DepthDepreciation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ResolutionScale
float PowerUI::ScreenInfo::_get_ResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_ResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "ScreenInfo", "ResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ResolutionScale
void PowerUI::ScreenInfo::_set_ResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_ResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "ResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 WorldSize
::UnityEngine::Vector2 PowerUI::ScreenInfo::_get_WorldSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_WorldSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("PowerUI", "ScreenInfo", "WorldSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 WorldSize
void PowerUI::ScreenInfo::_set_WorldSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_WorldSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "WorldSize", value));
}
// Autogenerated static field getter
// Get static field: static private PowerUI.ResolutionInfo CurrentResolution
::PowerUI::ResolutionInfo* PowerUI::ScreenInfo::_get_CurrentResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_CurrentResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::ResolutionInfo*>("PowerUI", "ScreenInfo", "CurrentResolution"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.ResolutionInfo CurrentResolution
void PowerUI::ScreenInfo::_set_CurrentResolution(::PowerUI::ResolutionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_CurrentResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "CurrentResolution", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 WorldPerPixel
::UnityEngine::Vector2 PowerUI::ScreenInfo::_get_WorldPerPixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_WorldPerPixel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("PowerUI", "ScreenInfo", "WorldPerPixel"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 WorldPerPixel
void PowerUI::ScreenInfo::_set_WorldPerPixel(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_WorldPerPixel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "WorldPerPixel", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector3 WorldScreenOrigin
::UnityEngine::Vector3 PowerUI::ScreenInfo::_get_WorldScreenOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_get_WorldScreenOrigin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("PowerUI", "ScreenInfo", "WorldScreenOrigin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector3 WorldScreenOrigin
void PowerUI::ScreenInfo::_set_WorldScreenOrigin(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::_set_WorldScreenOrigin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ScreenInfo", "WorldScreenOrigin", value));
}
// Autogenerated method: PowerUI.ScreenInfo.Clear
void PowerUI::ScreenInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ScreenInfo", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ScreenInfo.Update
void PowerUI::ScreenInfo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ScreenInfo", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ScreenInfo.get_Resolution
::PowerUI::ResolutionInfo* PowerUI::ScreenInfo::get_Resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::get_Resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ScreenInfo", "get_Resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ResolutionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ScreenInfo.set_Resolution
void PowerUI::ScreenInfo::set_Resolution(::PowerUI::ResolutionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::set_Resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ScreenInfo", "set_Resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.ScreenInfo..cctor
void PowerUI::ScreenInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScreenInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ScreenInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPA
#include "PowerUI/SPA.hpp"
// Including type: PowerUI.SPASprite
#include "PowerUI/SPASprite.hpp"
// Including type: PowerUI.SPAFontMeta
#include "PowerUI/SPAFontMeta.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.SPAMapEntry
#include "PowerUI/SPAMapEntry.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: PowerUI.SPAInstance
#include "PowerUI/SPAInstance.hpp"
// Including type: PowerUI.SPACharacter
#include "PowerUI/SPACharacter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Shader RawIsolationShader
::UnityEngine::Shader* PowerUI::SPA::_get_RawIsolationShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_get_RawIsolationShader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Shader*>("PowerUI", "SPA", "RawIsolationShader"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Shader RawIsolationShader
void PowerUI::SPA::_set_RawIsolationShader(::UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_set_RawIsolationShader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "SPA", "RawIsolationShader", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.SPAInstance LastInstance
::PowerUI::SPAInstance* PowerUI::SPA::_get_LastInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_get_LastInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::SPAInstance*>("PowerUI", "SPA", "LastInstance"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.SPAInstance LastInstance
void PowerUI::SPA::_set_LastInstance(::PowerUI::SPAInstance* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_set_LastInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "SPA", "LastInstance", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.SPAInstance FirstInstance
::PowerUI::SPAInstance* PowerUI::SPA::_get_FirstInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_get_FirstInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::SPAInstance*>("PowerUI", "SPA", "FirstInstance"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.SPAInstance FirstInstance
void PowerUI::SPA::_set_FirstInstance(::PowerUI::SPAInstance* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_set_FirstInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "SPA", "FirstInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,PowerUI.SPA> Instances
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::SPA*>* PowerUI::SPA::_get_Instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_get_Instances");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::SPA*>*>("PowerUI", "SPA", "Instances")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,PowerUI.SPA> Instances
void PowerUI::SPA::_set_Instances(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::SPA*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::_set_Instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "SPA", "Instances", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FrameRate
[[deprecated("Use field access instead!")]] int& PowerUI::SPA::dyn_FrameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_FrameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FrameWidth
[[deprecated("Use field access instead!")]] int& PowerUI::SPA::dyn_FrameWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_FrameWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FrameHeight
[[deprecated("Use field access instead!")]] int& PowerUI::SPA::dyn_FrameHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_FrameHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 FrameCount
[[deprecated("Use field access instead!")]] uint& PowerUI::SPA::dyn_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_FrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPASprite[] Sprites
[[deprecated("Use field access instead!")]] ::ArrayW<::PowerUI::SPASprite*>& PowerUI::SPA::dyn_Sprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_Sprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sprites"))->offset;
  return *reinterpret_cast<::ArrayW<::PowerUI::SPASprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPAFontMeta FontMeta
[[deprecated("Use field access instead!")]] ::PowerUI::SPAFontMeta*& PowerUI::SPA::dyn_FontMeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_FontMeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontMeta"))->offset;
  return *reinterpret_cast<::PowerUI::SPAFontMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,PowerUI.SPAMapEntry> Map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::PowerUI::SPAMapEntry*>*& PowerUI::SPA::dyn_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::dyn_Map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::PowerUI::SPAMapEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SPA.get_IsolationShader
::UnityEngine::Shader* PowerUI::SPA::get_IsolationShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::get_IsolationShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", "get_IsolationShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.SPA.Clear
void PowerUI::SPA::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.SPA.Get
::PowerUI::SPA* PowerUI::SPA::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: PowerUI.SPA.ActiveCount
int PowerUI::SPA::ActiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::ActiveCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", "ActiveCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.SPA.Update
void PowerUI::SPA::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.SPA.ChangeFrameRate
void PowerUI::SPA::ChangeFrameRate(int newRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::ChangeFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRate);
}
// Autogenerated method: PowerUI.SPA.CreateSprites
void PowerUI::SPA::CreateSprites(int spriteCount, uint frameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::CreateSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteCount), ::il2cpp_utils::ExtractType(frameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spriteCount, frameCount);
}
// Autogenerated method: PowerUI.SPA.get_HasMap
bool PowerUI::SPA::get_HasMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::get_HasMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPA.GetCharacter
::PowerUI::SPACharacter* PowerUI::SPA::GetCharacter(int charcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::GetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charcode)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPACharacter*, false>(this, ___internal__method, charcode);
}
// Autogenerated method: PowerUI.SPA.GetFromMap
::PowerUI::SPAMapEntry* PowerUI::SPA::GetFromMap(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::GetFromMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFromMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPAMapEntry*, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.SPA.AddToMap
void PowerUI::SPA::AddToMap(int index, ::PowerUI::SPAMapEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::AddToMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, entry);
}
// Autogenerated method: PowerUI.SPA.GetInstance
::PowerUI::SPAInstance* PowerUI::SPA::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPAInstance*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPA.GetSprite
::PowerUI::SPASprite* PowerUI::SPA::GetSprite(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::GetSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPASprite*, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.SPA.get_Item
::PowerUI::SPASprite* PowerUI::SPA::get_Item(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SPASprite*, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.SPA..cctor
void PowerUI::SPA::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPA::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPA", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPACharacter
#include "PowerUI/SPACharacter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
// Including type: InfiniText.FontFace
#include "InfiniText/FontFace.hpp"
// Including type: PowerUI.SPASprite
#include "PowerUI/SPASprite.hpp"
// Including type: PowerUI.SPAReader
#include "PowerUI/SPAReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 XOffset
[[deprecated("Use field access instead!")]] int& PowerUI::SPACharacter::dyn_XOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::dyn_XOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 YOffset
[[deprecated("Use field access instead!")]] int& PowerUI::SPACharacter::dyn_YOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::dyn_YOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "YOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Advance
[[deprecated("Use field access instead!")]] int& PowerUI::SPACharacter::dyn_Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::dyn_Advance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Advance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> AdditionalCharcodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& PowerUI::SPACharacter::dyn_AdditionalCharcodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::dyn_AdditionalCharcodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdditionalCharcodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<PowerUI.SPACharacter,System.Int32> Kerning
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::PowerUI::SPACharacter*, int>*& PowerUI::SPACharacter::dyn_Kerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::dyn_Kerning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Kerning"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::PowerUI::SPACharacter*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SPACharacter.AddCharcode
void PowerUI::SPACharacter::AddCharcode(int cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::AddCharcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: PowerUI.SPACharacter.get_SpriteSize
int PowerUI::SPACharacter::get_SpriteSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::get_SpriteSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpriteSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPACharacter.get_Charcode
int PowerUI::SPACharacter::get_Charcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::get_Charcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Charcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPACharacter.AddKerningPair
void PowerUI::SPACharacter::AddKerningPair(::PowerUI::SPACharacter* beforeThis, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::AddKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeThis), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beforeThis, value);
}
// Autogenerated method: PowerUI.SPACharacter.ToGlyph
::InfiniText::Glyph* PowerUI::SPACharacter::ToGlyph(::InfiniText::FontFace* face) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPACharacter::ToGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(face)})));
  return ::il2cpp_utils::RunMethodRethrow<::InfiniText::Glyph*, false>(this, ___internal__method, face);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPAFontMeta
#include "PowerUI/SPAFontMeta.hpp"
// Including type: PowerUI.SPAReader
#include "PowerUI/SPAReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Ascender
[[deprecated("Use field access instead!")]] int& PowerUI::SPAFontMeta::dyn_Ascender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Ascender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ascender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Descender
[[deprecated("Use field access instead!")]] int& PowerUI::SPAFontMeta::dyn_Descender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Descender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Descender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Italic
[[deprecated("Use field access instead!")]] bool& PowerUI::SPAFontMeta::dyn_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Italic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Italic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Oblique
[[deprecated("Use field access instead!")]] bool& PowerUI::SPAFontMeta::dyn_Oblique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Oblique");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Oblique"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Regular
[[deprecated("Use field access instead!")]] bool& PowerUI::SPAFontMeta::dyn_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Regular");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Regular"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Weight
[[deprecated("Use field access instead!")]] int& PowerUI::SPAFontMeta::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FamilyName
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::SPAFontMeta::dyn_FamilyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::dyn_FamilyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FamilyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnSPAProgress
#include "PowerUI/OnSPAProgress.hpp"
// Including type: PowerUI.SPAInstance
#include "PowerUI/SPAInstance.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnSPAProgress.Invoke
void PowerUI::OnSPAProgress::Invoke(int frameID, ::PowerUI::SPAInstance* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSPAProgress::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSPAProgress*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frameID, instance);
}
// Autogenerated method: PowerUI.OnSPAProgress.BeginInvoke
::System::IAsyncResult* PowerUI::OnSPAProgress::BeginInvoke(int frameID, ::PowerUI::SPAInstance* instance, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSPAProgress::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSPAProgress*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, frameID, instance, callback, object);
}
// Autogenerated method: PowerUI.OnSPAProgress.EndInvoke
void PowerUI::OnSPAProgress::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSPAProgress::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSPAProgress*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPAInstance
#include "PowerUI/SPAInstance.hpp"
// Including type: PowerUI.SPA
#include "PowerUI/SPA.hpp"
// Including type: PowerUI.SPASprite
#include "PowerUI/SPASprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Done
[[deprecated("Use field access instead!")]] bool& PowerUI::SPAInstance::dyn_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_Done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AtFrame
[[deprecated("Use field access instead!")]] int& PowerUI::SPAInstance::dyn_AtFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_AtFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPA Animation
[[deprecated("Use field access instead!")]] ::PowerUI::SPA*& PowerUI::SPAInstance::dyn_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_Animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animation"))->offset;
  return *reinterpret_cast<::PowerUI::SPA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Loop
[[deprecated("Use field access instead!")]] bool& PowerUI::SPAInstance::dyn_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_Loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OverallFrame
[[deprecated("Use field access instead!")]] int& PowerUI::SPAInstance::dyn_OverallFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_OverallFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverallFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FrameDelay
[[deprecated("Use field access instead!")]] float& PowerUI::SPAInstance::dyn_FrameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_FrameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CurrentDelay
[[deprecated("Use field access instead!")]] float& PowerUI::SPAInstance::dyn_CurrentDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_CurrentDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPASprite CurrentSprite
[[deprecated("Use field access instead!")]] ::PowerUI::SPASprite*& PowerUI::SPAInstance::dyn_CurrentSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_CurrentSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentSprite"))->offset;
  return *reinterpret_cast<::PowerUI::SPASprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material AnimatedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& PowerUI::SPAInstance::dyn_AnimatedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_AnimatedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AnimatedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPAInstance InstanceAfter
[[deprecated("Use field access instead!")]] ::PowerUI::SPAInstance*& PowerUI::SPAInstance::dyn_InstanceAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_InstanceAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceAfter"))->offset;
  return *reinterpret_cast<::PowerUI::SPAInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPAInstance InstanceBefore
[[deprecated("Use field access instead!")]] ::PowerUI::SPAInstance*& PowerUI::SPAInstance::dyn_InstanceBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::dyn_InstanceBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceBefore"))->offset;
  return *reinterpret_cast<::PowerUI::SPAInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SPAInstance.Update
void PowerUI::SPAInstance::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAInstance.SetSprite
void PowerUI::SPAInstance::SetSprite(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::SetSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.SPAInstance.Stop
void PowerUI::SPAInstance::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAInstance::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPAMapEntry
#include "PowerUI/SPAMapEntry.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
// Including type: PowerUI.SPASprite
#include "PowerUI/SPASprite.hpp"
// Including type: PowerUI.SPAReader
#include "PowerUI/SPAReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ID
[[deprecated("Use field access instead!")]] int& PowerUI::SPAMapEntry::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAMapEntry::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation Location
[[deprecated("Use field access instead!")]] ::Blaze::AtlasLocation*& PowerUI::SPAMapEntry::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAMapEntry::dyn_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::Blaze::AtlasLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPAReader
#include "PowerUI/SPAReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Text.Encoding TextEncoding
::System::Text::Encoding* PowerUI::SPAReader::_get_TextEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::_get_TextEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("PowerUI", "SPAReader", "TextEncoding"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Text.Encoding TextEncoding
void PowerUI::SPAReader::_set_TextEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::_set_TextEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "SPAReader", "TextEncoding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PreviousX
[[deprecated("Use field access instead!")]] int& PowerUI::SPAReader::dyn_PreviousX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::dyn_PreviousX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviousX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PreviousY
[[deprecated("Use field access instead!")]] int& PowerUI::SPAReader::dyn_PreviousY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::dyn_PreviousY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviousY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SPAReader.ResetCoordinates
void PowerUI::SPAReader::ResetCoordinates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ResetCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader.ReadString
::StringW PowerUI::SPAReader::ReadString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, length);
}
// Autogenerated method: PowerUI.SPAReader.ReadUInt24
uint PowerUI::SPAReader::ReadUInt24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadUInt24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader.ReadInt24
int PowerUI::SPAReader::ReadInt24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadInt24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader.CompressedSize
int PowerUI::SPAReader::CompressedSize(uint64_t l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPAReader", "CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l);
}
// Autogenerated method: PowerUI.SPAReader.ReadCompressed
uint64_t PowerUI::SPAReader::ReadCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader.ReadCompressedSigned
int64_t PowerUI::SPAReader::ReadCompressedSigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadCompressedSigned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCompressedSigned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader..cctor
void PowerUI::SPAReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "SPAReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.SPAReader.ReadString
::StringW PowerUI::SPAReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAReader::ReadString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::BinaryReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SPASprite
#include "PowerUI/SPASprite.hpp"
// Including type: PowerUI.SPA
#include "PowerUI/SPA.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: PowerUI.SPAReader
#include "PowerUI/SPAReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ID
[[deprecated("Use field access instead!")]] int& PowerUI::SPASprite::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Width
[[deprecated("Use field access instead!")]] int& PowerUI::SPASprite::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Height
[[deprecated("Use field access instead!")]] int& PowerUI::SPASprite::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPA Animation
[[deprecated("Use field access instead!")]] ::PowerUI::SPA*& PowerUI::SPASprite::dyn_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_Animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animation"))->offset;
  return *reinterpret_cast<::PowerUI::SPA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FrameCount
[[deprecated("Use field access instead!")]] int& PowerUI::SPASprite::dyn_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_FrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D Sprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& PowerUI::SPASprite::dyn_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_Sprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 TextureScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& PowerUI::SPASprite::dyn_TextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_TextureScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VerticalFrameCount
[[deprecated("Use field access instead!")]] int& PowerUI::SPASprite::dyn_VerticalFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_VerticalFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerticalFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Blaze.TextureAtlas LoadedAtlas
[[deprecated("Use field access instead!")]] ::Blaze::TextureAtlas*& PowerUI::SPASprite::dyn_LoadedAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::dyn_LoadedAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoadedAtlas"))->offset;
  return *reinterpret_cast<::Blaze::TextureAtlas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SPASprite.get_Atlas
::Blaze::TextureAtlas* PowerUI::SPASprite::get_Atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::get_Atlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Atlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::TextureAtlas*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SPASprite.SetSprite
void PowerUI::SPASprite::SetSprite(::UnityEngine::Texture2D* sprite, int totalFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPASprite::SetSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(totalFrameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sprite, totalFrameCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.StandardUpdater
#include "PowerUI/StandardUpdater.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.StandardUpdater.Update
void PowerUI::StandardUpdater::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StandardUpdater::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.StandardUpdater.OnDisable
void PowerUI::StandardUpdater::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StandardUpdater::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ClickLinkTag
#include "PowerUI/ClickLinkTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Href
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ClickLinkTag::dyn_Href() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ClickLinkTag::dyn_Href");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Href"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ClickLinkTag.GetTags
::ArrayW<::StringW> PowerUI::ClickLinkTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ClickLinkTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ClickLinkTag.GetInstance
::Wrench::TagHandler* PowerUI::ClickLinkTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ClickLinkTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ClickLinkTag.OnAttributeChange
bool PowerUI::ClickLinkTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ClickLinkTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.ClickLinkTag.OnClick
bool PowerUI::ClickLinkTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ClickLinkTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AbbrTag
#include "PowerUI/AbbrTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.AbbrTag.GetTags
::ArrayW<::StringW> PowerUI::AbbrTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AbbrTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AbbrTag.GetInstance
::Wrench::TagHandler* PowerUI::AbbrTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AbbrTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AcronymTag
#include "PowerUI/AcronymTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.AcronymTag.GetTags
::ArrayW<::StringW> PowerUI::AcronymTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AcronymTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AcronymTag.GetInstance
::Wrench::TagHandler* PowerUI::AcronymTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AcronymTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AddressTag
#include "PowerUI/AddressTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.AddressTag.GetTags
::ArrayW<::StringW> PowerUI::AddressTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AddressTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AddressTag.GetInstance
::Wrench::TagHandler* PowerUI::AddressTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AddressTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ArticleTag
#include "PowerUI/ArticleTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ArticleTag.GetTags
::ArrayW<::StringW> PowerUI::ArticleTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ArticleTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ArticleTag.GetInstance
::Wrench::TagHandler* PowerUI::ArticleTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ArticleTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AsideTag
#include "PowerUI/AsideTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.AsideTag.GetTags
::ArrayW<::StringW> PowerUI::AsideTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AsideTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AsideTag.GetInstance
::Wrench::TagHandler* PowerUI::AsideTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AsideTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BoldTag
#include "PowerUI/BoldTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BoldTag.GetTags
::ArrayW<::StringW> PowerUI::BoldTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoldTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BoldTag.GetInstance
::Wrench::TagHandler* PowerUI::BoldTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoldTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BaseTag
#include "PowerUI/BaseTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BaseTag.SelfClosing
bool PowerUI::BaseTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BaseTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BaseTag.GetTags
::ArrayW<::StringW> PowerUI::BaseTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BaseTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BaseTag.GetInstance
::Wrench::TagHandler* PowerUI::BaseTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BaseTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BaseTag.OnAttributeChange
bool PowerUI::BaseTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BaseTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BdiTag
#include "PowerUI/BdiTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BdiTag.GetTags
::ArrayW<::StringW> PowerUI::BdiTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BdiTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BdiTag.GetInstance
::Wrench::TagHandler* PowerUI::BdiTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BdiTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BdoTag
#include "PowerUI/BdoTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BdoTag.GetTags
::ArrayW<::StringW> PowerUI::BdoTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BdoTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BdoTag.GetInstance
::Wrench::TagHandler* PowerUI::BdoTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BdoTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BdoTag.OnAttributeChange
bool PowerUI::BdoTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BdoTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BgSlice
#include "PowerUI/BgSlice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Image
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::BgSlice::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.BgSlice.RecreateCells
void PowerUI::BgSlice::RecreateCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::RecreateCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecreateCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.GetTags
::ArrayW<::StringW> PowerUI::BgSlice::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.GetInstance
::Wrench::TagHandler* PowerUI::BgSlice::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.SelfClosing
bool PowerUI::BgSlice::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.OnAttributeChange
bool PowerUI::BgSlice::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.BgSlice.OnChildrenLoaded
void PowerUI::BgSlice::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.HeightChanged
void PowerUI::BgSlice::HeightChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::HeightChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BgSlice.WidthChanged
void PowerUI::BgSlice::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BgSlice::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BigTag
#include "PowerUI/BigTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BigTag.GetTags
::ArrayW<::StringW> PowerUI::BigTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BigTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BigTag.GetInstance
::Wrench::TagHandler* PowerUI::BigTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BigTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BlockquoteTag
#include "PowerUI/BlockquoteTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BlockquoteTag.GetTags
::ArrayW<::StringW> PowerUI::BlockquoteTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BlockquoteTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BlockquoteTag.GetInstance
::Wrench::TagHandler* PowerUI::BlockquoteTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BlockquoteTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BodyTag
#include "PowerUI/BodyTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BodyTag.GetTags
::ArrayW<::StringW> PowerUI::BodyTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BodyTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BodyTag.GetInstance
::Wrench::TagHandler* PowerUI::BodyTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BodyTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BodyTag.OnTagLoaded
void PowerUI::BodyTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BodyTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.BrTag
#include "PowerUI/BrTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.BrTag.GetTags
::ArrayW<::StringW> PowerUI::BrTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BrTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BrTag.SelfClosing
bool PowerUI::BrTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BrTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BrTag.GetInstance
::Wrench::TagHandler* PowerUI::BrTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BrTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.BrTag.OnTagLoaded
void PowerUI::BrTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BrTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ButtonTag
#include "PowerUI/ButtonTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Value
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ButtonTag::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ButtonTag.SetValue
void PowerUI::ButtonTag::SetValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.ButtonTag.SetValue
void PowerUI::ButtonTag::SetValue(::StringW value, bool html) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(html)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, html);
}
// Autogenerated method: PowerUI.ButtonTag.GetTags
::ArrayW<::StringW> PowerUI::ButtonTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ButtonTag.GetInstance
::Wrench::TagHandler* PowerUI::ButtonTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ButtonTag.SelfClosing
bool PowerUI::ButtonTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ButtonTag.OnAttributeChange
bool PowerUI::ButtonTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.ButtonTag.OnClick
bool PowerUI::ButtonTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ButtonTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CameraTag
#include "PowerUI/CameraTag.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: PowerUI.CameraPool
#include "PowerUI/CameraPool.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera Camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& PowerUI::CameraTag::dyn_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::dyn_Camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Mask
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& PowerUI::CameraTag::dyn_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::dyn_Mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mask"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DepthFactor
[[deprecated("Use field access instead!")]] float& PowerUI::CameraTag::dyn_DepthFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::dyn_DepthFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DepthFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FieldOfView
[[deprecated("Use field access instead!")]] float& PowerUI::CameraTag::dyn_FieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::dyn_FieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.CameraTag.ImageReady
void PowerUI::CameraTag::ImageReady(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::ImageReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImageReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.CameraTag.ParentMask
void PowerUI::CameraTag::ParentMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::ParentMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.SetMask
void PowerUI::CameraTag::SetMask(::UnityEngine::Texture* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, image);
}
// Autogenerated method: PowerUI.CameraTag.get_MainCameraPool
::PowerUI::CameraPool* PowerUI::CameraTag::get_MainCameraPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::get_MainCameraPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MainCameraPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CameraPool*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.ComputeDepth
void PowerUI::CameraTag::ComputeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::ComputeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.get_MaskShader
::UnityEngine::Shader* PowerUI::CameraTag::get_MaskShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::get_MaskShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.GetTags
::ArrayW<::StringW> PowerUI::CameraTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.GetInstance
::Wrench::TagHandler* PowerUI::CameraTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.SelfClosing
bool PowerUI::CameraTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraTag.OnAttributeChange
bool PowerUI::CameraTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.CameraTag.OnLayout
void PowerUI::CameraTag::OnLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraTag::OnLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CanvasTag
#include "PowerUI/CanvasTag.hpp"
// Including type: PowerUI.CanvasContext2D
#include "PowerUI/CanvasContext2D.hpp"
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PowerUI.CanvasContext2D Context2D
[[deprecated("Use field access instead!")]] ::PowerUI::CanvasContext2D*& PowerUI::CanvasTag::dyn_Context2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::dyn_Context2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Context2D"))->offset;
  return *reinterpret_cast<::PowerUI::CanvasContext2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.CanvasTag.getContext
::PowerUI::CanvasContext* PowerUI::CanvasTag::getContext(::StringW contextName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::getContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CanvasContext*, false>(this, ___internal__method, contextName);
}
// Autogenerated method: PowerUI.CanvasTag.get_context2D
::PowerUI::CanvasContext2D* PowerUI::CanvasTag::get_context2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::get_context2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CanvasContext2D*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasTag.GetTags
::ArrayW<::StringW> PowerUI::CanvasTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasTag.GetInstance
::Wrench::TagHandler* PowerUI::CanvasTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasTag.WidthChanged
void PowerUI::CanvasTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasTag.HeightChanged
void PowerUI::CanvasTag::HeightChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasTag::HeightChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CanvasArcLinePoint
#include "PowerUI/CanvasArcLinePoint.hpp"
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CanvasArcLinePoint.RenderLine
void PowerUI::CanvasArcLinePoint::RenderLine(::PowerUI::CanvasContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasArcLinePoint::RenderLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::CanvasArcLinePoint*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
// Including type: Blaze.Scanner
#include "Blaze/Scanner.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: PowerUI.CanvasTag
#include "PowerUI/CanvasTag.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.DynamicTexture
#include "PowerUI/DynamicTexture.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Blaze.Scanner Rasteriser
[[deprecated("Use field access instead!")]] ::Blaze::Scanner*& PowerUI::CanvasContext::dyn_Rasteriser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_Rasteriser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rasteriser"))->offset;
  return *reinterpret_cast<::Blaze::Scanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPath Path
[[deprecated("Use field access instead!")]] ::Blaze::VectorPath*& PowerUI::CanvasContext::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::Blaze::VectorPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.CanvasTag Canvas
[[deprecated("Use field access instead!")]] ::PowerUI::CanvasTag*& PowerUI::CanvasContext::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::PowerUI::CanvasTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ImagePackage Package
[[deprecated("Use field access instead!")]] ::PowerUI::ImagePackage*& PowerUI::CanvasContext::dyn_Package() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_Package");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Package"))->offset;
  return *reinterpret_cast<::PowerUI::ImagePackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicTexture ImageData
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicTexture*& PowerUI::CanvasContext::dyn_ImageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_ImageData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageData"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 FillColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& PowerUI::CanvasContext::dyn_FillColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_FillColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FillColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 StrokeColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& PowerUI::CanvasContext::dyn_StrokeColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::dyn_StrokeColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrokeColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.CanvasContext.ToGlyph
::InfiniText::Glyph* PowerUI::CanvasContext::ToGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::ToGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::InfiniText::Glyph*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.beginPath
void PowerUI::CanvasContext::beginPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::beginPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "beginPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.closePath
void PowerUI::CanvasContext::closePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::closePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "closePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.get_PathNodeCount
int PowerUI::CanvasContext::get_PathNodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_PathNodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathNodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.lineTo
void PowerUI::CanvasContext::lineTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::lineTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "lineTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.CanvasContext.arc
void PowerUI::CanvasContext::arc(float centerX, float centerY, float radius, float sAngle, float eAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::arc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "arc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerX), ::il2cpp_utils::ExtractType(centerY), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(sAngle), ::il2cpp_utils::ExtractType(eAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, centerX, centerY, radius, sAngle, eAngle);
}
// Autogenerated method: PowerUI.CanvasContext.arc
void PowerUI::CanvasContext::arc(float centerX, float centerY, float radius, float sAngle, float eAngle, bool counterClockwise) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::arc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "arc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(centerX), ::il2cpp_utils::ExtractType(centerY), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(sAngle), ::il2cpp_utils::ExtractType(eAngle), ::il2cpp_utils::ExtractType(counterClockwise)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, centerX, centerY, radius, sAngle, eAngle, counterClockwise);
}
// Autogenerated method: PowerUI.CanvasContext.isPointInPath
bool PowerUI::CanvasContext::isPointInPath(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::isPointInPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "isPointInPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.CanvasContext.curveTo
void PowerUI::CanvasContext::curveTo(float c1x, float c1y, float c2x, float c2y, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::curveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "curveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1x), ::il2cpp_utils::ExtractType(c1y), ::il2cpp_utils::ExtractType(c2x), ::il2cpp_utils::ExtractType(c2y), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c1x, c1y, c2x, c2y, x, y);
}
// Autogenerated method: PowerUI.CanvasContext.quadraticCurveTo
void PowerUI::CanvasContext::quadraticCurveTo(float cx, float cy, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::quadraticCurveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "quadraticCurveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cx), ::il2cpp_utils::ExtractType(cy), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cx, cy, x, y);
}
// Autogenerated method: PowerUI.CanvasContext.arcTo
void PowerUI::CanvasContext::arcTo(float x1, float y1, float x2, float y2, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::arcTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "arcTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x1), ::il2cpp_utils::ExtractType(y1), ::il2cpp_utils::ExtractType(x2), ::il2cpp_utils::ExtractType(y2), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x1, y1, x2, y2, radius);
}
// Autogenerated method: PowerUI.CanvasContext.Angle
float PowerUI::CanvasContext::Angle(float x0, float y0, float x1, float y1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x0), ::il2cpp_utils::ExtractType(y0), ::il2cpp_utils::ExtractType(x1), ::il2cpp_utils::ExtractType(y1)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x0, y0, x1, y1);
}
// Autogenerated method: PowerUI.CanvasContext.stroke
void PowerUI::CanvasContext::stroke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::stroke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "stroke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.fill
void PowerUI::CanvasContext::fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.moveTo
void PowerUI::CanvasContext::moveTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::moveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "moveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.CanvasContext.ApplyImageData
void PowerUI::CanvasContext::ApplyImageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::ApplyImageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyImageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.apply
void PowerUI::CanvasContext::apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.get_canvas
::PowerUI::Element* PowerUI::CanvasContext::get_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.set_fillStyle
void PowerUI::CanvasContext::set_fillStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::set_fillStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.CanvasContext.get_fillStyle
::StringW PowerUI::CanvasContext::get_fillStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_fillStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.set_strokeStyle
void PowerUI::CanvasContext::set_strokeStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::set_strokeStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_strokeStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.CanvasContext.get_strokeStyle
::StringW PowerUI::CanvasContext::get_strokeStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_strokeStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_strokeStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.Resized
void PowerUI::CanvasContext::Resized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::Resized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.get_width
int PowerUI::CanvasContext::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.set_width
void PowerUI::CanvasContext::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.CanvasContext.get_height
int PowerUI::CanvasContext::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.set_height
void PowerUI::CanvasContext::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.CanvasContext.clear
void PowerUI::CanvasContext::clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CanvasContext.clearRect
void PowerUI::CanvasContext::clearRect(int xStart, int yStart, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::clearRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clearRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xStart), ::il2cpp_utils::ExtractType(yStart), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xStart, yStart, width, height);
}
// Autogenerated method: PowerUI.CanvasContext.fillRect
void PowerUI::CanvasContext::fillRect(int xStart, int yStart, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xStart), ::il2cpp_utils::ExtractType(yStart), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xStart, yStart, width, height);
}
// Autogenerated method: PowerUI.CanvasContext.fillRect
void PowerUI::CanvasContext::fillRect(int xStart, int yStart, int rectWidth, int rectHeight, ::UnityEngine::Color32 colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CanvasContext::fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xStart), ::il2cpp_utils::ExtractType(yStart), ::il2cpp_utils::ExtractType(rectWidth), ::il2cpp_utils::ExtractType(rectHeight), ::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xStart, yStart, rectWidth, rectHeight, colour);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CanvasContext2D
#include "PowerUI/CanvasContext2D.hpp"
// Including type: PowerUI.CanvasTag
#include "PowerUI/CanvasTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ICanvasPoint
#include "PowerUI/ICanvasPoint.hpp"
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ICanvasPoint.RenderLine
void PowerUI::ICanvasPoint::RenderLine(::PowerUI::CanvasContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ICanvasPoint::RenderLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ICanvasPoint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CenterTag
#include "PowerUI/CenterTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CenterTag.GetTags
::ArrayW<::StringW> PowerUI::CenterTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CenterTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CenterTag.GetInstance
::Wrench::TagHandler* PowerUI::CenterTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CenterTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CiteTag
#include "PowerUI/CiteTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CiteTag.GetTags
::ArrayW<::StringW> PowerUI::CiteTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CiteTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CiteTag.GetInstance
::Wrench::TagHandler* PowerUI::CiteTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CiteTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CodeTag
#include "PowerUI/CodeTag.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CodeTag.GetTags
::ArrayW<::StringW> PowerUI::CodeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CodeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CodeTag.GetInstance
::Wrench::TagHandler* PowerUI::CodeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CodeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CodeTag.AtEnd
bool PowerUI::CodeTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CodeTag::AtEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CommentTag
#include "PowerUI/CommentTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CommentTag.Junk
bool PowerUI::CommentTag::Junk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CommentTag::Junk");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CommentTag.SelfClosing
bool PowerUI::CommentTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CommentTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CommentTag.GetTags
::ArrayW<::StringW> PowerUI::CommentTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CommentTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CommentTag.GetInstance
::Wrench::TagHandler* PowerUI::CommentTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CommentTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DescriptionDTag
#include "PowerUI/DescriptionDTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DescriptionDTag.GetTags
::ArrayW<::StringW> PowerUI::DescriptionDTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionDTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DescriptionDTag.GetInstance
::Wrench::TagHandler* PowerUI::DescriptionDTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionDTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DDBoxTag
#include "PowerUI/DDBoxTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DDBoxTag.GetTags
::ArrayW<::StringW> PowerUI::DDBoxTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDBoxTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDBoxTag.GetInstance
::Wrench::TagHandler* PowerUI::DDBoxTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDBoxTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDBoxTag.OnTagLoaded
void PowerUI::DDBoxTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDBoxTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDBoxTag.OnClick
bool PowerUI::DDBoxTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDBoxTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DDButtonTag
#include "PowerUI/DDButtonTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DDButtonTag.GetTags
::ArrayW<::StringW> PowerUI::DDButtonTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDButtonTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDButtonTag.SelfClosing
bool PowerUI::DDButtonTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDButtonTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDButtonTag.GetInstance
::Wrench::TagHandler* PowerUI::DDButtonTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDButtonTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DDButtonTag.OnTagLoaded
void PowerUI::DDButtonTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DDButtonTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DelTag
#include "PowerUI/DelTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DelTag.GetTags
::ArrayW<::StringW> PowerUI::DelTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DelTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DelTag.GetInstance
::Wrench::TagHandler* PowerUI::DelTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DelTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DetailsTag
#include "PowerUI/DetailsTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DetailsTag.GetTags
::ArrayW<::StringW> PowerUI::DetailsTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DetailsTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DetailsTag.GetInstance
::Wrench::TagHandler* PowerUI::DetailsTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DetailsTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DetailsTag.OnChildrenLoaded
void PowerUI::DetailsTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DetailsTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DefinitionTag
#include "PowerUI/DefinitionTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DefinitionTag.GetTags
::ArrayW<::StringW> PowerUI::DefinitionTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DefinitionTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DefinitionTag.GetInstance
::Wrench::TagHandler* PowerUI::DefinitionTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DefinitionTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DirTag
#include "PowerUI/DirTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DirTag.GetTags
::ArrayW<::StringW> PowerUI::DirTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DirTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DirTag.GetInstance
::Wrench::TagHandler* PowerUI::DirTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DirTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DivTag
#include "PowerUI/DivTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DivTag.GetTags
::ArrayW<::StringW> PowerUI::DivTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DivTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DivTag.GetInstance
::Wrench::TagHandler* PowerUI::DivTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DivTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DescriptionLTag
#include "PowerUI/DescriptionLTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DescriptionLTag.GetTags
::ArrayW<::StringW> PowerUI::DescriptionLTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionLTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DescriptionLTag.GetInstance
::Wrench::TagHandler* PowerUI::DescriptionLTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionLTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DoctypeTag
#include "PowerUI/DoctypeTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DoctypeTag.SelfClosing
bool PowerUI::DoctypeTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DoctypeTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DoctypeTag.GetTags
::ArrayW<::StringW> PowerUI::DoctypeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DoctypeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DoctypeTag.GetInstance
::Wrench::TagHandler* PowerUI::DoctypeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DoctypeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DescriptionTTag
#include "PowerUI/DescriptionTTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DescriptionTTag.GetTags
::ArrayW<::StringW> PowerUI::DescriptionTTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionTTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DescriptionTTag.GetInstance
::Wrench::TagHandler* PowerUI::DescriptionTTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DescriptionTTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.EmTag
#include "PowerUI/EmTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.EmTag.GetTags
::ArrayW<::StringW> PowerUI::EmTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::EmTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.EmTag.GetInstance
::Wrench::TagHandler* PowerUI::EmTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::EmTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FigCaptionTag
#include "PowerUI/FigCaptionTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.FigCaptionTag.GetTags
::ArrayW<::StringW> PowerUI::FigCaptionTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FigCaptionTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FigCaptionTag.GetInstance
::Wrench::TagHandler* PowerUI::FigCaptionTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FigCaptionTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FigureTag
#include "PowerUI/FigureTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.FigureTag.GetTags
::ArrayW<::StringW> PowerUI::FigureTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FigureTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FigureTag.GetInstance
::Wrench::TagHandler* PowerUI::FigureTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FigureTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FontTag
#include "PowerUI/FontTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.FontTag.GetTags
::ArrayW<::StringW> PowerUI::FontTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FontTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FontTag.GetInstance
::Wrench::TagHandler* PowerUI::FontTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FontTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FontTag.OnAttributeChange
bool PowerUI::FontTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FontTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FooterTag
#include "PowerUI/FooterTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.FooterTag.GetTags
::ArrayW<::StringW> PowerUI::FooterTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FooterTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FooterTag.GetInstance
::Wrench::TagHandler* PowerUI::FooterTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FooterTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FormTag
#include "PowerUI/FormTag.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Action
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FormTag::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FormTag.GetAllInputs
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::FormTag::GetAllInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::GetAllInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormTag.GetAllInputs
void PowerUI::FormTag::GetAllInputs(::System::Collections::Generic::List_1<::PowerUI::Element*>* results, ::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::GetAllInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results, element);
}
// Autogenerated method: PowerUI.FormTag.get_Item
::PowerUI::Element* PowerUI::FormTag::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.FormTag.get_HasSubmitButton
bool PowerUI::FormTag::get_HasSubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::get_HasSubmitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSubmitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormTag.submit
void PowerUI::FormTag::submit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormTag.GetTags
::ArrayW<::StringW> PowerUI::FormTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormTag.GetInstance
::Wrench::TagHandler* PowerUI::FormTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormTag.OnAttributeChange
bool PowerUI::FormTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H1Tag
#include "PowerUI/H1Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H1Tag.GetTags
::ArrayW<::StringW> PowerUI::H1Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H1Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H1Tag.GetInstance
::Wrench::TagHandler* PowerUI::H1Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H1Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H2Tag
#include "PowerUI/H2Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H2Tag.GetTags
::ArrayW<::StringW> PowerUI::H2Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H2Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H2Tag.GetInstance
::Wrench::TagHandler* PowerUI::H2Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H2Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H3Tag
#include "PowerUI/H3Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H3Tag.GetTags
::ArrayW<::StringW> PowerUI::H3Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H3Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H3Tag.GetInstance
::Wrench::TagHandler* PowerUI::H3Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H3Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H4Tag
#include "PowerUI/H4Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H4Tag.GetTags
::ArrayW<::StringW> PowerUI::H4Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H4Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H4Tag.GetInstance
::Wrench::TagHandler* PowerUI::H4Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H4Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H5Tag
#include "PowerUI/H5Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H5Tag.GetTags
::ArrayW<::StringW> PowerUI::H5Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H5Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H5Tag.GetInstance
::Wrench::TagHandler* PowerUI::H5Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H5Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.H6Tag
#include "PowerUI/H6Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.H6Tag.GetTags
::ArrayW<::StringW> PowerUI::H6Tag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H6Tag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.H6Tag.GetInstance
::Wrench::TagHandler* PowerUI::H6Tag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::H6Tag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HeadTag
#include "PowerUI/HeadTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.HeadTag.GetTags
::ArrayW<::StringW> PowerUI::HeadTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HeadTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HeadTag.GetInstance
::Wrench::TagHandler* PowerUI::HeadTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HeadTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HeaderTag
#include "PowerUI/HeaderTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.HeaderTag.GetTags
::ArrayW<::StringW> PowerUI::HeaderTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HeaderTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HeaderTag.GetInstance
::Wrench::TagHandler* PowerUI::HeaderTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HeaderTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HRTag
#include "PowerUI/HRTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.HRTag.GetTags
::ArrayW<::StringW> PowerUI::HRTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HRTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HRTag.GetInstance
::Wrench::TagHandler* PowerUI::HRTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HRTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HScrollTabTag
#include "PowerUI/HScrollTabTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MouseX
[[deprecated("Use field access instead!")]] int& PowerUI::HScrollTabTag::dyn_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::dyn_MouseX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouseX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StartX
[[deprecated("Use field access instead!")]] int& PowerUI::HScrollTabTag::dyn_StartX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::dyn_StartX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.HScrollTabTag.GetTags
::ArrayW<::StringW> PowerUI::HScrollTabTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.SelfClosing
bool PowerUI::HScrollTabTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.GetInstance
::Wrench::TagHandler* PowerUI::HScrollTabTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.Clicked
void PowerUI::HScrollTabTag::Clicked(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::Clicked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.HScrollTabTag.UseX
bool PowerUI::HScrollTabTag::UseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::UseX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.SetTabSize
void PowerUI::HScrollTabTag::SetTabSize(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::SetTabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: PowerUI.HScrollTabTag.BarSize
int PowerUI::HScrollTabTag::BarSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::BarSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.TabSize
int PowerUI::HScrollTabTag::TabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::TabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.StyleSize
int PowerUI::HScrollTabTag::StyleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::StyleSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.SizeBefore
int PowerUI::HScrollTabTag::SizeBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::SizeBefore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.SizeAfter
int PowerUI::HScrollTabTag::SizeAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::SizeAfter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.TabPosition
int PowerUI::HScrollTabTag::TabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::TabPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HScrollTabTag.OnMouseMove
void PowerUI::HScrollTabTag::OnMouseMove(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::OnMouseMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.HScrollTabTag.ScrollTo
void PowerUI::HScrollTabTag::ScrollTo(int location, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::ScrollTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location, scrollTarget);
}
// Autogenerated method: PowerUI.HScrollTabTag.ScrollBy
void PowerUI::HScrollTabTag::ScrollBy(int deltaX, bool fromCurrent, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HScrollTabTag::ScrollBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaX, fromCurrent, scrollTarget);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HtmlTag
#include "PowerUI/HtmlTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.HtmlTag.Resized
void PowerUI::HtmlTag::Resized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::Resized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTag.GetTags
::ArrayW<::StringW> PowerUI::HtmlTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTag.GetInstance
::Wrench::TagHandler* PowerUI::HtmlTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTag.OnTagLoaded
void PowerUI::HtmlTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTag.HeightChanged
void PowerUI::HtmlTag::HeightChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::HeightChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTag.WidthChanged
void PowerUI::HtmlTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ItalicTag
#include "PowerUI/ItalicTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ItalicTag.GetTags
::ArrayW<::StringW> PowerUI::ItalicTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ItalicTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ItalicTag.GetInstance
::Wrench::TagHandler* PowerUI::ItalicTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ItalicTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.IframeTag
#include "PowerUI/IframeTag.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Src
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::IframeTag::dyn_Src() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::dyn_Src");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Src"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Loaded
[[deprecated("Use field access instead!")]] bool& PowerUI::IframeTag::dyn_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::dyn_Loaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Loaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document ContentDocument
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::IframeTag::dyn_ContentDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::dyn_ContentDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContentDocument"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.IframeTag.LoadContent
void PowerUI::IframeTag::LoadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::LoadContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.IframeTag.OnTextReady
void PowerUI::IframeTag::OnTextReady(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::OnTextReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTextReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.IframeTag.SetContent
void PowerUI::IframeTag::SetContent(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.IframeTag.GetTags
::ArrayW<::StringW> PowerUI::IframeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.IframeTag.GetInstance
::Wrench::TagHandler* PowerUI::IframeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.IframeTag.OnAttributeChange
bool PowerUI::IframeTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.IframeTag.OnTagLoaded
void PowerUI::IframeTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::IframeTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ImgTag
#include "PowerUI/ImgTag.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single AspectRatio
[[deprecated("Use field access instead!")]] float& PowerUI::ImgTag::dyn_AspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::dyn_AspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ImagePackage Image
[[deprecated("Use field access instead!")]] ::PowerUI::ImagePackage*& PowerUI::ImgTag::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::PowerUI::ImagePackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value TagWidth
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::ImgTag::dyn_TagWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::dyn_TagWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagWidth"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value TagHeight
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::ImgTag::dyn_TagHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::dyn_TagHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagHeight"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InverseAspectRatio
[[deprecated("Use field access instead!")]] float& PowerUI::ImgTag::dyn_InverseAspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::dyn_InverseAspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseAspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ImgTag.GetTags
::ArrayW<::StringW> PowerUI::ImgTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImgTag.GetInstance
::Wrench::TagHandler* PowerUI::ImgTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImgTag.SelfClosing
bool PowerUI::ImgTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImgTag.OnAttributeChange
bool PowerUI::ImgTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.ImgTag.HeightChanged
void PowerUI::ImgTag::HeightChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::HeightChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImgTag.WidthChanged
void PowerUI::ImgTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImgTag.OnLoaded
void PowerUI::ImgTag::OnLoaded(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImgTag::OnLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.InputTag
#include "PowerUI/InputTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.ScrollTabTag
#include "PowerUI/ScrollTabTag.hpp"
// Including type: PowerUI.KeyboardMode
#include "PowerUI/KeyboardMode.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Hidden
[[deprecated("Use field access instead!")]] bool& PowerUI::InputTag::dyn_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Hidden");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hidden"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Value
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::InputTag::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Checked
[[deprecated("Use field access instead!")]] bool& PowerUI::InputTag::dyn_Checked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Checked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Checked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Cursor
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::InputTag::dyn_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cursor"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.InputType Type
[[deprecated("Use field access instead!")]] ::PowerUI::InputType& PowerUI::InputTag::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::PowerUI::InputType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CursorIndex
[[deprecated("Use field access instead!")]] int& PowerUI::InputTag::dyn_CursorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_CursorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CursorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LocateCursor
[[deprecated("Use field access instead!")]] bool& PowerUI::InputTag::dyn_LocateCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_LocateCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocateCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TargetName
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::InputTag::dyn_TargetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_TargetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element TargetElement
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::InputTag::dyn_TargetElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_TargetElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetElement"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ScrollTabTag ScrollTab
[[deprecated("Use field access instead!")]] ::PowerUI::ScrollTabTag*& PowerUI::InputTag::dyn_ScrollTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_ScrollTab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollTab"))->offset;
  return *reinterpret_cast<::PowerUI::ScrollTabTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxLength
[[deprecated("Use field access instead!")]] int& PowerUI::InputTag::dyn_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_MaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DivertOutput
[[deprecated("Use field access instead!")]] bool& PowerUI::InputTag::dyn_DivertOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_DivertOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DivertOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Placeholder
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::InputTag::dyn_Placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::dyn_Placeholder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Placeholder"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.InputTag.OnScrolled
void PowerUI::InputTag::OnScrolled(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnScrolled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::InputTag*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: PowerUI.InputTag.Unselect
void PowerUI::InputTag::Unselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::Unselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.Select
void PowerUI::InputTag::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.ScrollBy
void PowerUI::InputTag::ScrollBy(int pixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::ScrollBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixels);
}
// Autogenerated method: PowerUI.InputTag.ScrollTo
void PowerUI::InputTag::ScrollTo(int location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::ScrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location);
}
// Autogenerated method: PowerUI.InputTag.ScrollTo
void PowerUI::InputTag::ScrollTo(float position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::ScrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: PowerUI.InputTag.ElementScrolled
void PowerUI::InputTag::ElementScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::ElementScrolled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementScrolled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.RecalculateTab
void PowerUI::InputTag::RecalculateTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::RecalculateTab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::InputTag*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.NoTarget
bool PowerUI::InputTag::NoTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::NoTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.SetValue
void PowerUI::InputTag::SetValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.InputTag.SetValue
void PowerUI::InputTag::SetValue(::StringW value, bool html) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(html)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, html);
}
// Autogenerated method: PowerUI.InputTag.GetTarget
::PowerUI::Element* PowerUI::InputTag::GetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.IsScrollInput
bool PowerUI::InputTag::IsScrollInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::IsScrollInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsScrollInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.IsBoolInput
bool PowerUI::InputTag::IsBoolInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::IsBoolInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBoolInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.IsTextInput
bool PowerUI::InputTag::IsTextInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::IsTextInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTextInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.MoveCursor
void PowerUI::InputTag::MoveCursor(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::MoveCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.InputTag.MoveCursor
void PowerUI::InputTag::MoveCursor(int index, bool immediate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::MoveCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(immediate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, immediate);
}
// Autogenerated method: PowerUI.InputTag.LocateCursorNow
void PowerUI::InputTag::LocateCursorNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::LocateCursorNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateCursorNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.GetTags
::ArrayW<::StringW> PowerUI::InputTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.GetInstance
::Wrench::TagHandler* PowerUI::InputTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.SelfClosing
bool PowerUI::InputTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnAttributeChange
bool PowerUI::InputTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.InputTag.OnShowMobileKeyboard
::PowerUI::KeyboardMode* PowerUI::InputTag::OnShowMobileKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnShowMobileKeyboard");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::KeyboardMode*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnTagLoaded
void PowerUI::InputTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnKeyPress
void PowerUI::InputTag::OnKeyPress(::PowerUI::UIEvent* pressEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnKeyPress");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressEvent);
}
// Autogenerated method: PowerUI.InputTag.OnRenderPass
void PowerUI::InputTag::OnRenderPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnRenderPass");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnFocus
void PowerUI::InputTag::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnBlur
void PowerUI::InputTag::OnBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnBlur");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InputTag.OnClick
bool PowerUI::InputTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.InputType
#include "PowerUI/InputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Text
::PowerUI::InputType PowerUI::InputType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Text
void PowerUI::InputType::_set_Text(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Radio
::PowerUI::InputType PowerUI::InputType::_get_Radio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Radio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Radio"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Radio
void PowerUI::InputType::_set_Radio(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Radio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Radio", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Checkbox
::PowerUI::InputType PowerUI::InputType::_get_Checkbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Checkbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Checkbox"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Checkbox
void PowerUI::InputType::_set_Checkbox(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Checkbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Checkbox", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType VScroll
::PowerUI::InputType PowerUI::InputType::_get_VScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_VScroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "VScroll"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType VScroll
void PowerUI::InputType::_set_VScroll(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_VScroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "VScroll", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType HScroll
::PowerUI::InputType PowerUI::InputType::_get_HScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_HScroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "HScroll"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType HScroll
void PowerUI::InputType::_set_HScroll(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_HScroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "HScroll", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Submit
::PowerUI::InputType PowerUI::InputType::_get_Submit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Submit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Submit"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Submit
void PowerUI::InputType::_set_Submit(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Submit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Submit", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Button
::PowerUI::InputType PowerUI::InputType::_get_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Button");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Button"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Button
void PowerUI::InputType::_set_Button(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Button");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Button", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Hidden
::PowerUI::InputType PowerUI::InputType::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Hidden
void PowerUI::InputType::_set_Hidden(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Number
::PowerUI::InputType PowerUI::InputType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Number
void PowerUI::InputType::_set_Number(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Email
::PowerUI::InputType PowerUI::InputType::_get_Email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Email"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Email
void PowerUI::InputType::_set_Email(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Email", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputType Url
::PowerUI::InputType PowerUI::InputType::_get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_get_Url");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputType>("PowerUI", "InputType", "Url"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputType Url
void PowerUI::InputType::_set_Url(::PowerUI::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::_set_Url");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputType", "Url", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::InputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.InsTag
#include "PowerUI/InsTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.InsTag.GetTags
::ArrayW<::StringW> PowerUI::InsTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InsTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.InsTag.GetInstance
::Wrench::TagHandler* PowerUI::InsTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InsTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.LabelTag
#include "PowerUI/LabelTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ForElement
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::LabelTag::dyn_ForElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::dyn_ForElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForElement"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.LabelTag.GetFor
::PowerUI::Element* PowerUI::LabelTag::GetFor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::GetFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LabelTag.GetTags
::ArrayW<::StringW> PowerUI::LabelTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LabelTag.GetInstance
::Wrench::TagHandler* PowerUI::LabelTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LabelTag.OnAttributeChange
bool PowerUI::LabelTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.LabelTag.OnClick
bool PowerUI::LabelTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LabelTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.LegendTag
#include "PowerUI/LegendTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.LegendTag.GetTags
::ArrayW<::StringW> PowerUI::LegendTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LegendTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LegendTag.GetInstance
::Wrench::TagHandler* PowerUI::LegendTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LegendTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.LiTag
#include "PowerUI/LiTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.LiTag.GetTags
::ArrayW<::StringW> PowerUI::LiTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LiTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LiTag.GetInstance
::Wrench::TagHandler* PowerUI::LiTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LiTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.LinkTag
#include "PowerUI/LinkTag.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsCSS
[[deprecated("Use field access instead!")]] bool& PowerUI::LinkTag::dyn_IsCSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::dyn_IsCSS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsCSS"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Href
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::LinkTag::dyn_Href() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::dyn_Href");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Href"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StyleIndex
[[deprecated("Use field access instead!")]] int& PowerUI::LinkTag::dyn_StyleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::dyn_StyleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StyleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.LinkTag.LoadContent
void PowerUI::LinkTag::LoadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::LoadContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LinkTag.OnTextReady
void PowerUI::LinkTag::OnTextReady(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::OnTextReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTextReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.LinkTag.SelfClosing
bool PowerUI::LinkTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LinkTag.GetTags
::ArrayW<::StringW> PowerUI::LinkTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LinkTag.GetInstance
::Wrench::TagHandler* PowerUI::LinkTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.LinkTag.OnAttributeChange
bool PowerUI::LinkTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::LinkTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MainTag
#include "PowerUI/MainTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.MainTag.GetTags
::ArrayW<::StringW> PowerUI::MainTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MainTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MainTag.GetInstance
::Wrench::TagHandler* PowerUI::MainTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MainTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MarkTag
#include "PowerUI/MarkTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.MarkTag.GetTags
::ArrayW<::StringW> PowerUI::MarkTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarkTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarkTag.GetInstance
::Wrench::TagHandler* PowerUI::MarkTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarkTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MarqueeTag
#include "PowerUI/MarqueeTag.hpp"
// Including type: PowerUI.UITimer
#include "PowerUI/UITimer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Active
[[deprecated("Use field access instead!")]] bool& PowerUI::MarqueeTag::dyn_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Loop
[[deprecated("Use field access instead!")]] int& PowerUI::MarqueeTag::dyn_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_Loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Loop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.UITimer Timer
[[deprecated("Use field access instead!")]] ::PowerUI::UITimer*& PowerUI::MarqueeTag::dyn_Timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_Timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timer"))->offset;
  return *reinterpret_cast<::PowerUI::UITimer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ScrollAmount
[[deprecated("Use field access instead!")]] int& PowerUI::MarqueeTag::dyn_ScrollAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_ScrollAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ScrollDelay
[[deprecated("Use field access instead!")]] int& PowerUI::MarqueeTag::dyn_ScrollDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_ScrollDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MarqueeBehaviour Behaviour
[[deprecated("Use field access instead!")]] ::PowerUI::MarqueeBehaviour& PowerUI::MarqueeTag::dyn_Behaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_Behaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Behaviour"))->offset;
  return *reinterpret_cast<::PowerUI::MarqueeBehaviour*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MarqueeDirection Direction
[[deprecated("Use field access instead!")]] ::PowerUI::MarqueeDirection& PowerUI::MarqueeTag::dyn_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::dyn_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Direction"))->offset;
  return *reinterpret_cast<::PowerUI::MarqueeDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.MarqueeTag.Start
void PowerUI::MarqueeTag::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.Stop
void PowerUI::MarqueeTag::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.OnTick
void PowerUI::MarqueeTag::OnTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::OnTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.Bounced
void PowerUI::MarqueeTag::Bounced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::Bounced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bounced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.Wrapped
void PowerUI::MarqueeTag::Wrapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::Wrapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Wrapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.ApplyBehaviour
void PowerUI::MarqueeTag::ApplyBehaviour(::StringW behaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::ApplyBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, behaviour);
}
// Autogenerated method: PowerUI.MarqueeTag.OnAttributeChange
bool PowerUI::MarqueeTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.MarqueeTag.GetTags
::ArrayW<::StringW> PowerUI::MarqueeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.OnChildrenLoaded
void PowerUI::MarqueeTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MarqueeTag.GetInstance
::Wrench::TagHandler* PowerUI::MarqueeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MarqueeBehaviour
#include "PowerUI/MarqueeBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeBehaviour Scroll
::PowerUI::MarqueeBehaviour PowerUI::MarqueeBehaviour::_get_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_get_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeBehaviour>("PowerUI", "MarqueeBehaviour", "Scroll"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeBehaviour Scroll
void PowerUI::MarqueeBehaviour::_set_Scroll(::PowerUI::MarqueeBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_set_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeBehaviour", "Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeBehaviour Slide
::PowerUI::MarqueeBehaviour PowerUI::MarqueeBehaviour::_get_Slide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_get_Slide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeBehaviour>("PowerUI", "MarqueeBehaviour", "Slide"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeBehaviour Slide
void PowerUI::MarqueeBehaviour::_set_Slide(::PowerUI::MarqueeBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_set_Slide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeBehaviour", "Slide", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeBehaviour Alternate
::PowerUI::MarqueeBehaviour PowerUI::MarqueeBehaviour::_get_Alternate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_get_Alternate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeBehaviour>("PowerUI", "MarqueeBehaviour", "Alternate"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeBehaviour Alternate
void PowerUI::MarqueeBehaviour::_set_Alternate(::PowerUI::MarqueeBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::_set_Alternate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeBehaviour", "Alternate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::MarqueeBehaviour::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeBehaviour::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MarqueeDirection
#include "PowerUI/MarqueeDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeDirection Down
::PowerUI::MarqueeDirection PowerUI::MarqueeDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeDirection>("PowerUI", "MarqueeDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeDirection Down
void PowerUI::MarqueeDirection::_set_Down(::PowerUI::MarqueeDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeDirection Up
::PowerUI::MarqueeDirection PowerUI::MarqueeDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeDirection>("PowerUI", "MarqueeDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeDirection Up
void PowerUI::MarqueeDirection::_set_Up(::PowerUI::MarqueeDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeDirection Right
::PowerUI::MarqueeDirection PowerUI::MarqueeDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeDirection>("PowerUI", "MarqueeDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeDirection Right
void PowerUI::MarqueeDirection::_set_Right(::PowerUI::MarqueeDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MarqueeDirection Left
::PowerUI::MarqueeDirection PowerUI::MarqueeDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MarqueeDirection>("PowerUI", "MarqueeDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MarqueeDirection Left
void PowerUI::MarqueeDirection::_set_Left(::PowerUI::MarqueeDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MarqueeDirection", "Left", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::MarqueeDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MarqueeDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MetaTag
#include "PowerUI/MetaTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.MetaTag.SelfClosing
bool PowerUI::MetaTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MetaTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MetaTag.GetTags
::ArrayW<::StringW> PowerUI::MetaTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MetaTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MetaTag.GetInstance
::Wrench::TagHandler* PowerUI::MetaTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MetaTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.NavTag
#include "PowerUI/NavTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.NavTag.GetTags
::ArrayW<::StringW> PowerUI::NavTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::NavTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.NavTag.GetInstance
::Wrench::TagHandler* PowerUI::NavTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::NavTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.OlTag
#include "PowerUI/OlTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OlTag.GetTags
::ArrayW<::StringW> PowerUI::OlTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OlTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OlTag.GetInstance
::Wrench::TagHandler* PowerUI::OlTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OlTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.OptionTag
#include "PowerUI/OptionTag.hpp"
// Including type: PowerUI.SelectTag
#include "PowerUI/SelectTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Selected
[[deprecated("Use field access instead!")]] bool& PowerUI::OptionTag::dyn_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::dyn_Selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean FullyLoaded
[[deprecated("Use field access instead!")]] bool& PowerUI::OptionTag::dyn_FullyLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::dyn_FullyLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullyLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SelectTag Dropdown
[[deprecated("Use field access instead!")]] ::PowerUI::SelectTag*& PowerUI::OptionTag::dyn_Dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::dyn_Dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dropdown"))->offset;
  return *reinterpret_cast<::PowerUI::SelectTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.OptionTag.GetSelect
::PowerUI::SelectTag* PowerUI::OptionTag::GetSelect(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::GetSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::SelectTag*, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.OptionTag.GetTags
::ArrayW<::StringW> PowerUI::OptionTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OptionTag.GetInstance
::Wrench::TagHandler* PowerUI::OptionTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OptionTag.OnAttributeChange
bool PowerUI::OptionTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.OptionTag.OnTagLoaded
void PowerUI::OptionTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OptionTag.OnClick
bool PowerUI::OptionTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OptionTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ParagraphTag
#include "PowerUI/ParagraphTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ParagraphTag.GetTags
::ArrayW<::StringW> PowerUI::ParagraphTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ParagraphTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ParagraphTag.GetInstance
::Wrench::TagHandler* PowerUI::ParagraphTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ParagraphTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ParamTag
#include "PowerUI/ParamTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ParamTag.GetTags
::ArrayW<::StringW> PowerUI::ParamTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ParamTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ParamTag.SelfClosing
bool PowerUI::ParamTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ParamTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ParamTag.GetInstance
::Wrench::TagHandler* PowerUI::ParamTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ParamTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.PreTag
#include "PowerUI/PreTag.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.PreTag.AtEnd
bool PowerUI::PreTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PreTag::AtEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.PreTag.GetTags
::ArrayW<::StringW> PowerUI::PreTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PreTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PreTag.GetInstance
::Wrench::TagHandler* PowerUI::PreTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PreTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PreTag.OnParseContent
void PowerUI::PreTag::OnParseContent(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PreTag::OnParseContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lexer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.RPTag
#include "PowerUI/RPTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.RPTag.GetTags
::ArrayW<::StringW> PowerUI::RPTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RPTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.RPTag.GetInstance
::Wrench::TagHandler* PowerUI::RPTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RPTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.RTTag
#include "PowerUI/RTTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.RTTag.GetTags
::ArrayW<::StringW> PowerUI::RTTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RTTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.RTTag.GetInstance
::Wrench::TagHandler* PowerUI::RTTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RTTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.RubyTag
#include "PowerUI/RubyTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.RubyTag.GetTags
::ArrayW<::StringW> PowerUI::RubyTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RubyTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.RubyTag.GetInstance
::Wrench::TagHandler* PowerUI::RubyTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::RubyTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.STag
#include "PowerUI/STag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.STag.GetTags
::ArrayW<::StringW> PowerUI::STag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::STag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.STag.GetInstance
::Wrench::TagHandler* PowerUI::STag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::STag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SampTag
#include "PowerUI/SampTag.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SampTag.GetTags
::ArrayW<::StringW> PowerUI::SampTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SampTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SampTag.GetInstance
::Wrench::TagHandler* PowerUI::SampTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SampTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SampTag.AtEnd
bool PowerUI::SampTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SampTag::AtEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::PreTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScriptTag
#include "PowerUI/ScriptTag.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Dump
[[deprecated("Use field access instead!")]] bool& PowerUI::ScriptTag::dyn_Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::dyn_Dump");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dump"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Src
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ScriptTag::dyn_Src() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::dyn_Src");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Src"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Loaded
[[deprecated("Use field access instead!")]] bool& PowerUI::ScriptTag::dyn_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::dyn_Loaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Loaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CodeIndex
[[deprecated("Use field access instead!")]] int& PowerUI::ScriptTag::dyn_CodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::dyn_CodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ScriptTag.LoadContent
void PowerUI::ScriptTag::LoadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::LoadContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScriptTag.OnTextReady
void PowerUI::ScriptTag::OnTextReady(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::OnTextReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTextReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.ScriptTag.AtEnd
bool PowerUI::ScriptTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::AtEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AtEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.ScriptTag.GetTags
::ArrayW<::StringW> PowerUI::ScriptTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScriptTag.GetInstance
::Wrench::TagHandler* PowerUI::ScriptTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScriptTag.OnParseContent
void PowerUI::ScriptTag::OnParseContent(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::OnParseContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.ScriptTag.OnAttributeChange
bool PowerUI::ScriptTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.ScriptTag.OnTagLoaded
void PowerUI::ScriptTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScriptTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScrollDownTag
#include "PowerUI/ScrollDownTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ScrollDownTag.GetTags
::ArrayW<::StringW> PowerUI::ScrollDownTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollDownTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollDownTag.SelfClosing
bool PowerUI::ScrollDownTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollDownTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollDownTag.GetInstance
::Wrench::TagHandler* PowerUI::ScrollDownTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollDownTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollDownTag.OnClick
bool PowerUI::ScrollDownTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollDownTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
