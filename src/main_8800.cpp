// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystemCurveMode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystemCurveMode& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystemCurveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurveMultiplier
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_CurveMin
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMin"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_CurveMax
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMax"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ConstantMin
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstantMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ConstantMax
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstantMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve..ctor
UnityEngine::ParticleSystem::MinMaxCurve::MinMaxCurve(float constant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constant);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.get_mode
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystem::MinMaxCurve::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystemCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.Evaluate
float UnityEngine::ParticleSystem::MinMaxCurve::Evaluate(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.Evaluate
float UnityEngine::ParticleSystem::MinMaxCurve::Evaluate(float time, float lerpFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lerpFactor)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time, lerpFactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystemGradientMode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystemGradientMode& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystemGradientMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_GradientMin
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GradientMin"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_GradientMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GradientMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_ColorMin
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorMin"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_ColorMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxGradient..ctor
UnityEngine::ParticleSystem::MinMaxGradient::MinMaxGradient(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxGradient..ctor
UnityEngine::ParticleSystem::MinMaxGradient::MinMaxGradient(::UnityEngine::Gradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gradient);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxGradient.get_gradient
::UnityEngine::Gradient* UnityEngine::ParticleSystem::MinMaxGradient::get_gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::get_gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/ColorOverLifetimeModule
#include "UnityEngine/ParticleSystem_ColorOverLifetimeModule.hpp"
// Including type: UnityEngine.ParticleSystem/MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem m_ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::ParticleSystem::ColorOverLifetimeModule::dyn_m_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ColorOverLifetimeModule::dyn_m_ParticleSystem");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/ColorOverLifetimeModule..ctor
// ABORTED elsewhere.  UnityEngine::ParticleSystem::ColorOverLifetimeModule::ColorOverLifetimeModule(::UnityEngine::ParticleSystem* particleSystem)
// Autogenerated method: UnityEngine.ParticleSystem/ColorOverLifetimeModule.set_color
void UnityEngine::ParticleSystem::ColorOverLifetimeModule::set_color(::UnityEngine::ParticleSystem::MinMaxGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ColorOverLifetimeModule::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/ColorOverLifetimeModule.get_color
::UnityEngine::ParticleSystem::MinMaxGradient UnityEngine::ParticleSystem::ColorOverLifetimeModule::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ColorOverLifetimeModule::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxGradient, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/ColorOverLifetimeModule.SetColor
void UnityEngine::ParticleSystem::ColorOverLifetimeModule::SetColor(::UnityEngine::ParticleSystem* system, ByRef<::UnityEngine::ParticleSystem::MinMaxGradient> gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ColorOverLifetimeModule::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/ColorOverLifetimeModule", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(system), ::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, system, byref(gradient));
}
// Autogenerated method: UnityEngine.ParticleSystem/ColorOverLifetimeModule.GetColor
void UnityEngine::ParticleSystem::ColorOverLifetimeModule::GetColor(::UnityEngine::ParticleSystem* system, ByRef<::UnityEngine::ParticleSystem::MinMaxGradient> gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ColorOverLifetimeModule::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/ColorOverLifetimeModule", "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(system), ::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, system, byref(gradient));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemRenderer
#include "UnityEngine/ParticleSystemRenderer.hpp"
// Including type: UnityEngine.ParticleSystemRenderMode
#include "UnityEngine/ParticleSystemRenderMode.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_renderMode
void UnityEngine::ParticleSystemRenderer::set_renderMode(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.set_mesh
void UnityEngine::ParticleSystemRenderer::set_mesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystemRenderer.Internal_GetMeshCount
int UnityEngine::ParticleSystemRenderer::Internal_GetMeshCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::Internal_GetMeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetMeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemRenderMode
#include "UnityEngine/ParticleSystemRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode Billboard
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_Billboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_Billboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "Billboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode Billboard
void UnityEngine::ParticleSystemRenderMode::_set_Billboard(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_Billboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "Billboard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode Stretch
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_Stretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_Stretch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "Stretch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode Stretch
void UnityEngine::ParticleSystemRenderMode::_set_Stretch(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_Stretch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "Stretch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode HorizontalBillboard
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_HorizontalBillboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_HorizontalBillboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "HorizontalBillboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode HorizontalBillboard
void UnityEngine::ParticleSystemRenderMode::_set_HorizontalBillboard(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_HorizontalBillboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "HorizontalBillboard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode VerticalBillboard
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_VerticalBillboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_VerticalBillboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "VerticalBillboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode VerticalBillboard
void UnityEngine::ParticleSystemRenderMode::_set_VerticalBillboard(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_VerticalBillboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "VerticalBillboard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode Mesh
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode Mesh
void UnityEngine::ParticleSystemRenderMode::_set_Mesh(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemRenderMode None
::UnityEngine::ParticleSystemRenderMode UnityEngine::ParticleSystemRenderMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemRenderMode>("UnityEngine", "ParticleSystemRenderMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemRenderMode None
void UnityEngine::ParticleSystemRenderMode::_set_None(::UnityEngine::ParticleSystemRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemRenderMode", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemRenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemCurveMode
#include "UnityEngine/ParticleSystemCurveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode Constant
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_Constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_Constant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "Constant"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode Constant
void UnityEngine::ParticleSystemCurveMode::_set_Constant(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_Constant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "Constant", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode Curve
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_Curve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "Curve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode Curve
void UnityEngine::ParticleSystemCurveMode::_set_Curve(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_Curve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "Curve", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode TwoCurves
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_TwoCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_TwoCurves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "TwoCurves"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode TwoCurves
void UnityEngine::ParticleSystemCurveMode::_set_TwoCurves(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_TwoCurves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "TwoCurves", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode TwoConstants
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_TwoConstants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_TwoConstants");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "TwoConstants"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode TwoConstants
void UnityEngine::ParticleSystemCurveMode::_set_TwoConstants(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_TwoConstants");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "TwoConstants", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemCurveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemGradientMode
#include "UnityEngine/ParticleSystemGradientMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode Color
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode Color
void UnityEngine::ParticleSystemGradientMode::_set_Color(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode Gradient
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_Gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_Gradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "Gradient"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode Gradient
void UnityEngine::ParticleSystemGradientMode::_set_Gradient(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_Gradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "Gradient", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode TwoColors
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_TwoColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_TwoColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "TwoColors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode TwoColors
void UnityEngine::ParticleSystemGradientMode::_set_TwoColors(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_TwoColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "TwoColors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode TwoGradients
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_TwoGradients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_TwoGradients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "TwoGradients"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode TwoGradients
void UnityEngine::ParticleSystemGradientMode::_set_TwoGradients(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_TwoGradients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "TwoGradients", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode RandomColor
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_RandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_RandomColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "RandomColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode RandomColor
void UnityEngine::ParticleSystemGradientMode::_set_RandomColor(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_RandomColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "RandomColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemGradientMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemSimulationSpace
#include "UnityEngine/ParticleSystemSimulationSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemSimulationSpace Local
::UnityEngine::ParticleSystemSimulationSpace UnityEngine::ParticleSystemSimulationSpace::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemSimulationSpace>("UnityEngine", "ParticleSystemSimulationSpace", "Local"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemSimulationSpace Local
void UnityEngine::ParticleSystemSimulationSpace::_set_Local(::UnityEngine::ParticleSystemSimulationSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemSimulationSpace", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemSimulationSpace World
::UnityEngine::ParticleSystemSimulationSpace UnityEngine::ParticleSystemSimulationSpace::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemSimulationSpace>("UnityEngine", "ParticleSystemSimulationSpace", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemSimulationSpace World
void UnityEngine::ParticleSystemSimulationSpace::_set_World(::UnityEngine::ParticleSystemSimulationSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemSimulationSpace", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemSimulationSpace Custom
::UnityEngine::ParticleSystemSimulationSpace UnityEngine::ParticleSystemSimulationSpace::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemSimulationSpace>("UnityEngine", "ParticleSystemSimulationSpace", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemSimulationSpace Custom
void UnityEngine::ParticleSystemSimulationSpace::_set_Custom(::UnityEngine::ParticleSystemSimulationSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemSimulationSpace", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemSimulationSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemSimulationSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemStopBehavior
#include "UnityEngine/ParticleSystemStopBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemStopBehavior StopEmittingAndClear
::UnityEngine::ParticleSystemStopBehavior UnityEngine::ParticleSystemStopBehavior::_get_StopEmittingAndClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_get_StopEmittingAndClear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemStopBehavior>("UnityEngine", "ParticleSystemStopBehavior", "StopEmittingAndClear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemStopBehavior StopEmittingAndClear
void UnityEngine::ParticleSystemStopBehavior::_set_StopEmittingAndClear(::UnityEngine::ParticleSystemStopBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_set_StopEmittingAndClear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemStopBehavior", "StopEmittingAndClear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemStopBehavior StopEmitting
::UnityEngine::ParticleSystemStopBehavior UnityEngine::ParticleSystemStopBehavior::_get_StopEmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_get_StopEmitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemStopBehavior>("UnityEngine", "ParticleSystemStopBehavior", "StopEmitting"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemStopBehavior StopEmitting
void UnityEngine::ParticleSystemStopBehavior::_set_StopEmitting(::UnityEngine::ParticleSystemStopBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_set_StopEmitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemStopBehavior", "StopEmitting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemStopBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene2D::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::UnityEngine::PhysicsScene2D other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::PhysicsScene2D), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Linecast(::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, start, end, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Linecast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Linecast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
int UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastNonAlloc_Internal
int UnityEngine::PhysicsScene2D::RaycastNonAlloc_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ByRef<::ArrayW<::UnityEngine::RaycastHit2D>> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::RaycastHit2D>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter, byref(results));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::CircleCast(::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CircleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, radius, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::CircleCast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "CircleCast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection
int UnityEngine::PhysicsScene2D::GetRayIntersection(::UnityEngine::Ray ray, float distance, ::ArrayW<::UnityEngine::RaycastHit2D> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ray, distance, results, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionNonAlloc_Internal
int UnityEngine::PhysicsScene2D::GetRayIntersectionNonAlloc_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask, ByRef<::ArrayW<::UnityEngine::RaycastHit2D>> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::RaycastHit2D>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask, byref(results));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPoint
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapPoint(::UnityEngine::Vector2 point, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method, point, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPoint_Internal
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapPoint_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 point, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPoint_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapPoint_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircle
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapCircle(::UnityEngine::Vector2 point, float radius, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method, point, radius, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircle_Internal
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapCircle_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 point, float radius, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircle_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapCircle_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point, radius, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Linecast_Internal_Injected
void UnityEngine::PhysicsScene2D::Linecast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> start, ByRef<::UnityEngine::Vector2> end, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Linecast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Linecast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal_Injected
void UnityEngine::PhysicsScene2D::Raycast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene2D::RaycastNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::ArrayW<::UnityEngine::RaycastHit2D>> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::RaycastHit2D>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), byref(results));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.CircleCast_Internal_Injected
void UnityEngine::PhysicsScene2D::CircleCast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, float radius, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::CircleCast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "CircleCast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), distance, byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene2D::GetRayIntersectionNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask, ByRef<::ArrayW<::UnityEngine::RaycastHit2D>> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::RaycastHit2D>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask, byref(results));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapPoint_Internal_Injected
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapPoint_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> point, ByRef<::UnityEngine::ContactFilter2D> contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapPoint_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapPoint_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point), byref(contactFilter));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.OverlapCircle_Internal_Injected
::UnityEngine::Collider2D* UnityEngine::PhysicsScene2D::OverlapCircle_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> point, float radius, ByRef<::UnityEngine::ContactFilter2D> contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::OverlapCircle_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "OverlapCircle_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point), radius, byref(contactFilter));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.ToString
::StringW UnityEngine::PhysicsScene2D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetHashCode
int UnityEngine::PhysicsScene2D::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics2D
#include "UnityEngine/Physics2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>*>("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
void UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D", value));
}
// Autogenerated method: UnityEngine.Physics2D.get_defaultPhysicsScene
::UnityEngine::PhysicsScene2D UnityEngine::Physics2D::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_queriesHitTriggers
bool UnityEngine::Physics2D::get_queriesHitTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_queriesHitTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_queriesHitTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.Linecast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Linecast(::UnityEngine::Vector2 start, ::UnityEngine::Vector2 end, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.CircleCast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::CircleCast(::UnityEngine::Vector2 origin, float radius, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::CircleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "CircleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.OverlapPoint
::UnityEngine::Collider2D* UnityEngine::Physics2D::OverlapPoint(::UnityEngine::Vector2 point, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::OverlapPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "OverlapPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.OverlapCircle
::UnityEngine::Collider2D* UnityEngine::Physics2D::OverlapCircle(::UnityEngine::Vector2 point, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::OverlapCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "OverlapCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D..cctor
void UnityEngine::Physics2D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_defaultPhysicsScene_Injected
void UnityEngine::Physics2D::get_defaultPhysicsScene_Injected(ByRef<::UnityEngine::PhysicsScene2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal_Injected
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyType2D
#include "UnityEngine/RigidbodyType2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Dynamic
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Dynamic
void UnityEngine::RigidbodyType2D::_set_Dynamic(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Kinematic
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Kinematic
void UnityEngine::RigidbodyType2D::_set_Kinematic(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyType2D Static
::UnityEngine::RigidbodyType2D UnityEngine::RigidbodyType2D::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyType2D>("UnityEngine", "RigidbodyType2D", "Static"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyType2D Static
void UnityEngine::RigidbodyType2D::_set_Static(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyType2D", "Static", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyType2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyType2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean useTriggers
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useTriggers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTriggers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useLayerMask
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useLayerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useLayerMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::ContactFilter2D::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_layerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CheckConsistency
void UnityEngine::ContactFilter2D::CheckConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CheckConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetLayerMask
void UnityEngine::ContactFilter2D::SetLayerMask(::UnityEngine::LayerMask layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerMask);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetDepth
void UnityEngine::ContactFilter2D::SetDepth(float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CreateLegacyFilter
::UnityEngine::ContactFilter2D UnityEngine::ContactFilter2D::CreateLegacyFilter(int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CreateLegacyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactFilter2D", "CreateLegacyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactFilter2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerMask, minDepth, maxDepth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Centroid
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Centroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Centroid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Centroid"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Fraction
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Fraction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit2D::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_point
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_normal
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_distance
float UnityEngine::RaycastHit2D::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_fraction
float UnityEngine::RaycastHit2D::get_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_collider
::UnityEngine::Collider2D* UnityEngine::RaycastHit2D::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.RigidbodyType2D
#include "UnityEngine/RigidbodyType2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity
::UnityEngine::Vector2 UnityEngine::Rigidbody2D::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_gravityScale
void UnityEngine::Rigidbody2D::set_gravityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_gravityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_bodyType
void UnityEngine::Rigidbody2D::set_bodyType(::UnityEngine::RigidbodyType2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_bodyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bodyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_isKinematic
void UnityEngine::Rigidbody2D::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity_Injected
void UnityEngine::Rigidbody2D::get_velocity_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider2D.set_isTrigger
void UnityEngine::Collider2D::set_isTrigger(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::set_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider2D.get_offset
::UnityEngine::Vector2 UnityEngine::Collider2D::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider2D.get_offset_Injected
void UnityEngine::Collider2D::get_offset_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider2D::get_offset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CircleCollider2D
#include "UnityEngine/CircleCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CircleCollider2D.set_radius
void UnityEngine::CircleCollider2D::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CircleCollider2D::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EdgeCollider2D
#include "UnityEngine/EdgeCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EdgeCollider2D.set_points
void UnityEngine::EdgeCollider2D::set_points(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EdgeCollider2D::set_points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BoxCollider2D
#include "UnityEngine/BoxCollider2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoxCollider2D.get_size
::UnityEngine::Vector2 UnityEngine::BoxCollider2D::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider2D::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider2D.get_size_Injected
void UnityEngine::BoxCollider2D::get_size_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider2D::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PolygonCollider2D
#include "UnityEngine/PolygonCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PolygonCollider2D.set_pathCount
void UnityEngine::PolygonCollider2D::set_pathCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::set_pathCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pathCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.SetPath
void UnityEngine::PolygonCollider2D::SetPath(int index, ::ArrayW<::UnityEngine::Vector2> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, points);
}
// Autogenerated method: UnityEngine.PolygonCollider2D.SetPath_Internal
void UnityEngine::PolygonCollider2D::SetPath_Internal(int index, ::ArrayW<::UnityEngine::Vector2> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PolygonCollider2D::SetPath_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Force
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Force
void UnityEngine::ForceMode::_set_Force(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Force", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Acceleration
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Acceleration
void UnityEngine::ForceMode::_set_Acceleration(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Impulse
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Impulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Impulse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Impulse
void UnityEngine::ForceMode::_set_Impulse(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Impulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Impulse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode VelocityChange
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_VelocityChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_VelocityChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "VelocityChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode VelocityChange
void UnityEngine::ForceMode::_set_VelocityChange(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_VelocityChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "VelocityChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ForceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SoftJointLimit
#include "UnityEngine/SoftJointLimit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Limit
[[deprecated("Use field access instead!")]] float& UnityEngine::SoftJointLimit::dyn_m_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SoftJointLimit::dyn_m_Limit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Limit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Bounciness
[[deprecated("Use field access instead!")]] float& UnityEngine::SoftJointLimit::dyn_m_Bounciness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SoftJointLimit::dyn_m_Bounciness");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bounciness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ContactDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::SoftJointLimit::dyn_m_ContactDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SoftJointLimit::dyn_m_ContactDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContactDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SoftJointLimit.set_limit
void UnityEngine::SoftJointLimit::set_limit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SoftJointLimit::set_limit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RigidbodyInterpolation
#include "UnityEngine/RigidbodyInterpolation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation None
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation None
void UnityEngine::RigidbodyInterpolation::_set_None(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation Interpolate
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation Interpolate
void UnityEngine::RigidbodyInterpolation::_set_Interpolate(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RigidbodyInterpolation Extrapolate
::UnityEngine::RigidbodyInterpolation UnityEngine::RigidbodyInterpolation::_get_Extrapolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_get_Extrapolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RigidbodyInterpolation>("UnityEngine", "RigidbodyInterpolation", "Extrapolate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RigidbodyInterpolation Extrapolate
void UnityEngine::RigidbodyInterpolation::_set_Extrapolate(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::_set_Extrapolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RigidbodyInterpolation", "Extrapolate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RigidbodyInterpolation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RigidbodyInterpolation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Impulse
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Collision::dyn_m_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Impulse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Impulse"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_RelativeVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Collision::dyn_m_RelativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_RelativeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RelativeVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Rigidbody m_Rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& UnityEngine::Collision::dyn_m_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Collider m_Collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& UnityEngine::Collision::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ContactCount
[[deprecated("Use field access instead!")]] int& UnityEngine::Collision::dyn_m_ContactCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_ContactCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContactCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint[] m_RecycledContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint>& UnityEngine::Collision::dyn_m_RecycledContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_RecycledContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RecycledContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ContactPoint[] m_LegacyContacts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ContactPoint>& UnityEngine::Collision::dyn_m_LegacyContacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::dyn_m_LegacyContacts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LegacyContacts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ContactPoint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Collision.get_relativeVelocity
::UnityEngine::Vector3 UnityEngine::Collision::get_relativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_relativeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_collider
::UnityEngine::Collider* UnityEngine::Collision::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_gameObject
::UnityEngine::GameObject* UnityEngine::Collision::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collision.get_contacts
::ArrayW<::UnityEngine::ContactPoint> UnityEngine::Collision::get_contacts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collision::get_contacts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contacts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::ContactPoint>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags None
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags None
void UnityEngine::CollisionFlags::_set_None(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Sides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Sides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Sides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Sides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Sides
void UnityEngine::CollisionFlags::_set_Sides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Sides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Sides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Above
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Above() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Above");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Above"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Above
void UnityEngine::CollisionFlags::_set_Above(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Above");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Above", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Below
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Below() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Below");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Below"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Below
void UnityEngine::CollisionFlags::_set_Below(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Below");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Below", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedSides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedSides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedSides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedSides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedSides
void UnityEngine::CollisionFlags::_set_CollidedSides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedSides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedSides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedAbove
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedAbove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedAbove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedAbove
void UnityEngine::CollisionFlags::_set_CollidedAbove(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedAbove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedAbove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedBelow
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedBelow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedBelow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedBelow
void UnityEngine::CollisionFlags::_set_CollidedBelow(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedBelow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedBelow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_UseGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_UseGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "UseGlobal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
void UnityEngine::QueryTriggerInteraction::_set_UseGlobal(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_UseGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "UseGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Ignore
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Ignore
void UnityEngine::QueryTriggerInteraction::_set_Ignore(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Collide
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Collide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Collide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Collide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Collide
void UnityEngine::QueryTriggerInteraction::_set_Collide(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Collide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Collide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::QueryTriggerInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Discrete
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Discrete
void UnityEngine::CollisionDetectionMode::_set_Discrete(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Continuous
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Continuous
void UnityEngine::CollisionDetectionMode::_set_Continuous(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
void UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
void UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionDetectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PhysicMaterial
#include "UnityEngine/PhysicMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PhysicMaterial.Internal_CreateDynamicsMaterial
void UnityEngine::PhysicMaterial::Internal_CreateDynamicsMaterial(::UnityEngine::PhysicMaterial* mat, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicMaterial::Internal_CreateDynamicsMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicMaterial", "Internal_CreateDynamicsMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mat, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_FaceID
[[deprecated("Use field access instead!")]] uint& UnityEngine::RaycastHit::dyn_m_FaceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_FaceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 m_UV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit::dyn_m_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_UV");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit.get_collider
::UnityEngine::Collider* UnityEngine::RaycastHit::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_point
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_point
void UnityEngine::RaycastHit::set_point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_normal
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_normal
void UnityEngine::RaycastHit::set_normal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_distance
float UnityEngine::RaycastHit::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_distance
void UnityEngine::RaycastHit::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_transform
::UnityEngine::Transform* UnityEngine::RaycastHit::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_rigidbody
::UnityEngine::Rigidbody* UnityEngine::RaycastHit::get_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_rigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.RigidbodyInterpolation
#include "UnityEngine/RigidbodyInterpolation.hpp"
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody.get_velocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity
void UnityEngine::Rigidbody::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity
void UnityEngine::Rigidbody::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_drag
float UnityEngine::Rigidbody::get_drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_drag
void UnityEngine::Rigidbody::set_drag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_drag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_mass
float UnityEngine::Rigidbody::get_mass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_mass
void UnityEngine::Rigidbody::set_mass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_useGravity
bool UnityEngine::Rigidbody::get_useGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_useGravity
void UnityEngine::Rigidbody::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_isKinematic
bool UnityEngine::Rigidbody::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_isKinematic
void UnityEngine::Rigidbody::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_freezeRotation
void UnityEngine::Rigidbody::set_freezeRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_freezeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_freezeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_collisionDetectionMode
void UnityEngine::Rigidbody::set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_centerOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_centerOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_worldCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_detectCollisions
void UnityEngine::Rigidbody::set_detectCollisions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_detectCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_detectCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_position
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_position
void UnityEngine::Rigidbody::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation
void UnityEngine::Rigidbody::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_interpolation
void UnityEngine::Rigidbody::set_interpolation(::UnityEngine::RigidbodyInterpolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_interpolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interpolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxAngularVelocity
float UnityEngine::Rigidbody::get_maxAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_maxAngularVelocity
void UnityEngine::Rigidbody::set_maxAngularVelocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition
void UnityEngine::Rigidbody::MovePosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation
void UnityEngine::Rigidbody::MoveRotation(::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rot);
}
// Autogenerated method: UnityEngine.Rigidbody.Sleep
void UnityEngine::Rigidbody::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.WakeUp
void UnityEngine::Rigidbody::WakeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::WakeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WakeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.GetPointVelocity
::UnityEngine::Vector3 UnityEngine::Rigidbody::GetPointVelocity(::UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetPointVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, worldPoint);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(::UnityEngine::Vector3 force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(::UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(::UnityEngine::Vector3 torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(::UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition
void UnityEngine::Rigidbody::AddForceAtPosition(::UnityEngine::Vector3 force, ::UnityEngine::Vector3 position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, position, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius, upwardsModifier, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce
void UnityEngine::Rigidbody::AddExplosionForce(float explosionForce, ::UnityEngine::Vector3 explosionPosition, float explosionRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, explosionPosition, explosionRadius);
}
// Autogenerated method: UnityEngine.Rigidbody.get_velocity_Injected
void UnityEngine::Rigidbody::get_velocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity_Injected
void UnityEngine::Rigidbody::set_velocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_angularVelocity_Injected
void UnityEngine::Rigidbody::get_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity_Injected
void UnityEngine::Rigidbody::set_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_centerOfMass_Injected
void UnityEngine::Rigidbody::get_centerOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_centerOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass_Injected
void UnityEngine::Rigidbody::get_worldCenterOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position_Injected
void UnityEngine::Rigidbody::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position_Injected
void UnityEngine::Rigidbody::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation_Injected
void UnityEngine::Rigidbody::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition_Injected
void UnityEngine::Rigidbody::MovePosition_Injected(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation_Injected
void UnityEngine::Rigidbody::MoveRotation_Injected(ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rot));
}
// Autogenerated method: UnityEngine.Rigidbody.GetPointVelocity_Injected
void UnityEngine::Rigidbody::GetPointVelocity_Injected(ByRef<::UnityEngine::Vector3> worldPoint, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::GetPointVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPoint), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(worldPoint), byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce_Injected
void UnityEngine::Rigidbody::AddForce_Injected(ByRef<::UnityEngine::Vector3> force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque_Injected
void UnityEngine::Rigidbody::AddTorque_Injected(ByRef<::UnityEngine::Vector3> torque, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddTorque_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTorque_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(torque), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(torque), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition_Injected
void UnityEngine::Rigidbody::AddForceAtPosition_Injected(ByRef<::UnityEngine::Vector3> force, ByRef<::UnityEngine::Vector3> position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), byref(position), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddExplosionForce_Injected
void UnityEngine::Rigidbody::AddExplosionForce_Injected(float explosionForce, ByRef<::UnityEngine::Vector3> explosionPosition, float explosionRadius, float upwardsModifier, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddExplosionForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddExplosionForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(explosionForce), ::il2cpp_utils::ExtractType(explosionPosition), ::il2cpp_utils::ExtractType(explosionRadius), ::il2cpp_utils::ExtractType(upwardsModifier), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, explosionForce, byref(explosionPosition), explosionRadius, upwardsModifier, mode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.PhysicMaterial
#include "UnityEngine/PhysicMaterial.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider.get_enabled
bool UnityEngine::Collider::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_enabled
void UnityEngine::Collider::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_attachedRigidbody
::UnityEngine::Rigidbody* UnityEngine::Collider::get_attachedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_attachedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.get_isTrigger
bool UnityEngine::Collider::get_isTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_isTrigger
void UnityEngine::Collider::set_isTrigger(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_bounds
::UnityEngine::Bounds UnityEngine::Collider::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.get_sharedMaterial
::UnityEngine::PhysicMaterial* UnityEngine::Collider::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicMaterial*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.Raycast
::UnityEngine::RaycastHit UnityEngine::Collider::Raycast(::UnityEngine::Ray ray, float maxDistance, ByRef<bool> hasHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hasHit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, ray, maxDistance, byref(hasHit));
}
// Autogenerated method: UnityEngine.Collider.Raycast
bool UnityEngine::Collider::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds
void UnityEngine::Collider::Internal_ClosestPointOnBounds(::UnityEngine::Vector3 point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Collider.ClosestPointOnBounds
::UnityEngine::Vector3 UnityEngine::Collider::ClosestPointOnBounds(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Collider.get_bounds_Injected
void UnityEngine::Collider::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Collider.Raycast_Injected
void UnityEngine::Collider::Raycast_Injected(ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<bool> hasHit, ByRef<::UnityEngine::RaycastHit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hasHit), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ray), maxDistance, byref(hasHit), byref(ret));
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds_Injected
void UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(outPos), byref(distance));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CharacterController.SimpleMove
bool UnityEngine::CharacterController::SimpleMove(::UnityEngine::Vector3 speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::SimpleMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.CharacterController.Move
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move(::UnityEngine::Vector3 motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, motion);
}
// Autogenerated method: UnityEngine.CharacterController.get_velocity
::UnityEngine::Vector3 UnityEngine::CharacterController::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_isGrounded
bool UnityEngine::CharacterController::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_radius
float UnityEngine::CharacterController::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_height
float UnityEngine::CharacterController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_center
::UnityEngine::Vector3 UnityEngine::CharacterController::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_stepOffset
float UnityEngine::CharacterController::get_stepOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_stepOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.SimpleMove_Injected
bool UnityEngine::CharacterController::SimpleMove_Injected(ByRef<::UnityEngine::Vector3> speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::SimpleMove_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleMove_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(speed));
}
// Autogenerated method: UnityEngine.CharacterController.Move_Injected
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move_Injected(ByRef<::UnityEngine::Vector3> motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, byref(motion));
}
// Autogenerated method: UnityEngine.CharacterController.get_velocity_Injected
void UnityEngine::CharacterController::get_velocity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CharacterController.get_center_Injected
void UnityEngine::CharacterController::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshCollider.get_sharedMesh
::UnityEngine::Mesh* UnityEngine::MeshCollider::get_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_sharedMesh
void UnityEngine::MeshCollider::set_sharedMesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CapsuleCollider.get_center
::UnityEngine::Vector3 UnityEngine::CapsuleCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center
void UnityEngine::CapsuleCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_radius
float UnityEngine::CapsuleCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_radius
void UnityEngine::CapsuleCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_height
float UnityEngine::CapsuleCollider::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_height
void UnityEngine::CapsuleCollider::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_direction
void UnityEngine::CapsuleCollider::set_direction(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_center_Injected
void UnityEngine::CapsuleCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center_Injected
void UnityEngine::CapsuleCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoxCollider.get_center
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_center
void UnityEngine::BoxCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_size
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_size
void UnityEngine::BoxCollider::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_extents
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_extents
void UnityEngine::BoxCollider::set_extents(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_center_Injected
void UnityEngine::BoxCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_center_Injected
void UnityEngine::BoxCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.BoxCollider.get_size_Injected
void UnityEngine::BoxCollider::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_size_Injected
void UnityEngine::BoxCollider::set_size_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SphereCollider.get_center
::UnityEngine::Vector3 UnityEngine::SphereCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SphereCollider.get_radius
float UnityEngine::SphereCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SphereCollider.set_radius
void UnityEngine::SphereCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SphereCollider.get_center_Injected
void UnityEngine::SphereCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Joint.get_connectedBody
::UnityEngine::Rigidbody* UnityEngine::Joint::get_connectedBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedBody
void UnityEngine::Joint::set_connectedBody(::UnityEngine::Rigidbody* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_anchor
void UnityEngine::Joint::set_anchor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_anchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor
void UnityEngine::Joint::set_connectedAnchor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_autoConfigureConnectedAnchor
void UnityEngine::Joint::set_autoConfigureConnectedAnchor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_autoConfigureConnectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoConfigureConnectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_breakForce
void UnityEngine::Joint::set_breakForce(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_breakForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_breakForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_breakTorque
void UnityEngine::Joint::set_breakTorque(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_breakTorque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_breakTorque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_enableCollision
void UnityEngine::Joint::set_enableCollision(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_enableCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_enablePreprocessing
void UnityEngine::Joint::set_enablePreprocessing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_enablePreprocessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enablePreprocessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_anchor_Injected
void UnityEngine::Joint::set_anchor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_anchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor_Injected
void UnityEngine::Joint::set_connectedAnchor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpringJoint
#include "UnityEngine/SpringJoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SpringJoint.set_spring
void UnityEngine::SpringJoint::set_spring(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpringJoint::set_spring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpringJoint.set_minDistance
void UnityEngine::SpringJoint::set_minDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpringJoint::set_minDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpringJoint.set_maxDistance
void UnityEngine::SpringJoint::set_maxDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpringJoint::set_maxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CharacterJoint
#include "UnityEngine/CharacterJoint.hpp"
// Including type: UnityEngine.SoftJointLimit
#include "UnityEngine/SoftJointLimit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::CharacterJoint::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 targetAngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::CharacterJoint::dyn_targetAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::dyn_targetAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetAngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.JointDrive rotationDrive
[[deprecated("Use field access instead!")]] ::UnityEngine::JointDrive& UnityEngine::CharacterJoint::dyn_rotationDrive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::dyn_rotationDrive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDrive"))->offset;
  return *reinterpret_cast<::UnityEngine::JointDrive*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CharacterJoint.set_swingAxis
void UnityEngine::CharacterJoint::set_swingAxis(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_swingAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_swingAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterJoint.get_lowTwistLimit
::UnityEngine::SoftJointLimit UnityEngine::CharacterJoint::get_lowTwistLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_lowTwistLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowTwistLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterJoint.set_lowTwistLimit
void UnityEngine::CharacterJoint::set_lowTwistLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_lowTwistLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowTwistLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterJoint.get_highTwistLimit
::UnityEngine::SoftJointLimit UnityEngine::CharacterJoint::get_highTwistLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_highTwistLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highTwistLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterJoint.set_highTwistLimit
void UnityEngine::CharacterJoint::set_highTwistLimit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_highTwistLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highTwistLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterJoint.get_swing1Limit
::UnityEngine::SoftJointLimit UnityEngine::CharacterJoint::get_swing1Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_swing1Limit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_swing1Limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SoftJointLimit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterJoint.set_swing1Limit
void UnityEngine::CharacterJoint::set_swing1Limit(::UnityEngine::SoftJointLimit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_swing1Limit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_swing1Limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CharacterJoint.set_swingAxis_Injected
void UnityEngine::CharacterJoint::set_swingAxis_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_swingAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_swingAxis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.CharacterJoint.get_lowTwistLimit_Injected
void UnityEngine::CharacterJoint::get_lowTwistLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_lowTwistLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowTwistLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CharacterJoint.set_lowTwistLimit_Injected
void UnityEngine::CharacterJoint::set_lowTwistLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_lowTwistLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowTwistLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.CharacterJoint.get_highTwistLimit_Injected
void UnityEngine::CharacterJoint::get_highTwistLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_highTwistLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highTwistLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CharacterJoint.set_highTwistLimit_Injected
void UnityEngine::CharacterJoint::set_highTwistLimit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_highTwistLimit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highTwistLimit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.CharacterJoint.get_swing1Limit_Injected
void UnityEngine::CharacterJoint::get_swing1Limit_Injected(ByRef<::UnityEngine::SoftJointLimit> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::get_swing1Limit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_swing1Limit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SoftJointLimit&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CharacterJoint.set_swing1Limit_Injected
void UnityEngine::CharacterJoint::set_swing1Limit_Injected(ByRef<::UnityEngine::SoftJointLimit> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterJoint::set_swing1Limit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_swing1Limit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactPoint
#include "UnityEngine/ContactPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPoint::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ContactPoint::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ThisColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPoint::dyn_m_ThisColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_ThisColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThisColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_OtherColliderInstanceID
[[deprecated("Use field access instead!")]] int& UnityEngine::ContactPoint::dyn_m_OtherColliderInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_OtherColliderInstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OtherColliderInstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Separation
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactPoint::dyn_m_Separation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::dyn_m_Separation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Separation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactPoint.get_point
::UnityEngine::Vector3 UnityEngine::ContactPoint::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactPoint.get_normal
::UnityEngine::Vector3 UnityEngine::ContactPoint::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactPoint::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::UnityEngine::PhysicsScene other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::PhysicsScene), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest
bool UnityEngine::PhysicsScene::Internal_RaycastTest(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast
bool UnityEngine::PhysicsScene::Internal_Raycast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
int UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, raycastHits, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest_Injected
bool UnityEngine::PhysicsScene::Internal_RaycastTest_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast_Injected
bool UnityEngine::PhysicsScene::Internal_Raycast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.ToString
::StringW UnityEngine::PhysicsScene::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.GetHashCode
int UnityEngine::PhysicsScene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics
#include "UnityEngine/Physics.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Physics.get_gravity
::UnityEngine::Vector3 UnityEngine::Physics::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_defaultSolverIterations
void UnityEngine::Physics::set_defaultSolverIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_defaultSolverIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_defaultSolverIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene
::UnityEngine::PhysicsScene UnityEngine::Physics::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2);
}
// Autogenerated method: UnityEngine.Physics.IgnoreLayerCollision
void UnityEngine::Physics::IgnoreLayerCollision(int layer1, int layer2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreLayerCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreLayerCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer1), ::il2cpp_utils::ExtractType(layer2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer1, layer2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreLayerCollision
void UnityEngine::Physics::IgnoreLayerCollision(int layer1, int layer2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreLayerCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreLayerCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer1), ::il2cpp_utils::ExtractType(layer2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer1, layer2);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Linecast
bool UnityEngine::Physics::Linecast(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Linecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Linecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, byref(hitInfo), layerMask);
}
// Autogenerated method: UnityEngine.Physics.Query_CapsuleCast
bool UnityEngine::Physics::Query_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Internal_CapsuleCast
bool UnityEngine::Physics::Internal_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCast
bool UnityEngine::Physics::Query_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Internal_SphereCast
bool UnityEngine::Physics::Internal_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Ray ray, float radius, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Query_BoxCast
bool UnityEngine::Physics::Query_BoxCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Vector3 direction, ::UnityEngine::Quaternion orientation, float maxDistance, ByRef<::UnityEngine::RaycastHit> outHit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_BoxCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_BoxCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(outHit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, direction, orientation, maxDistance, byref(outHit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Internal_BoxCast
bool UnityEngine::Physics::Internal_BoxCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_BoxCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_BoxCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, orientation, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.BoxCast
bool UnityEngine::Physics::BoxCast(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, ::UnityEngine::Quaternion orientation, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::BoxCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "BoxCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, direction, byref(hitInfo), orientation, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.BoxCast
bool UnityEngine::Physics::BoxCast(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, ::UnityEngine::Quaternion orientation, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::BoxCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "BoxCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, direction, byref(hitInfo), orientation, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere_Internal
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere(::UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere(::UnityEngine::Vector3 position, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius);
}
// Autogenerated method: UnityEngine.Physics.SyncTransforms
void UnityEngine::Physics::SyncTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.set_autoSyncTransforms
void UnityEngine::Physics::set_autoSyncTransforms(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::set_autoSyncTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "set_autoSyncTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc_Internal
int UnityEngine::Physics::OverlapSphereNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc
int UnityEngine::Physics::OverlapSphereNonAlloc(::UnityEngine::Vector3 position, float radius, ::ArrayW<::UnityEngine::Collider*> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, results);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal
bool UnityEngine::Physics::CheckSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_SphereCastNonAlloc
int UnityEngine::Physics::Internal_SphereCastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastNonAlloc
int UnityEngine::Physics::SphereCastNonAlloc(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastNonAlloc
int UnityEngine::Physics::SphereCastNonAlloc(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal
bool UnityEngine::Physics::CheckCapsule_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapBox_Internal
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapBox_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBox_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBox_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBox
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBox
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::UnityEngine::Quaternion orientation, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, orientation, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc_Internal
int UnityEngine::Physics::OverlapBoxNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation);
}
// Autogenerated method: UnityEngine.Physics.get_gravity_Injected
void UnityEngine::Physics::get_gravity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene_Injected
void UnityEngine::Physics::get_defaultPhysicsScene_Injected(ByRef<::UnityEngine::PhysicsScene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.Query_CapsuleCast_Injected
bool UnityEngine::Physics::Query_CapsuleCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> point1, ByRef<::UnityEngine::Vector3> point2, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_CapsuleCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point1), byref(point2), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCast_Injected
bool UnityEngine::Physics::Query_SphereCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_BoxCast_Injected
bool UnityEngine::Physics::Query_BoxCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ByRef<::UnityEngine::Vector3> direction, ByRef<::UnityEngine::Quaternion> orientation, float maxDistance, ByRef<::UnityEngine::RaycastHit> outHit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_BoxCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_BoxCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(outHit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), byref(direction), byref(orientation), maxDistance, byref(outHit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphere_Internal_Injected
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapSphereNonAlloc_Internal_Injected
int UnityEngine::Physics::OverlapSphereNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, ::ArrayW<::UnityEngine::Collider*> results, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapSphereNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapSphereNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, results, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal_Injected
bool UnityEngine::Physics::CheckSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Internal_SphereCastNonAlloc_Injected
int UnityEngine::Physics::Internal_SphereCastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_SphereCastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_SphereCastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal_Injected
bool UnityEngine::Physics::CheckCapsule_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBox_Internal_Injected
::ArrayW<::UnityEngine::Collider*> UnityEngine::Physics::OverlapBox_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ByRef<::UnityEngine::Quaternion> orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBox_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBox_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Collider*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), byref(orientation), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc_Internal_Injected
int UnityEngine::Physics::OverlapBoxNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ByRef<::UnityEngine::Quaternion> orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), results, byref(orientation), mask, queryTriggerInteraction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScreenCapture
#include "UnityEngine/ScreenCapture.hpp"
// Including type: UnityEngine.ScreenCapture/StereoScreenCaptureMode
#include "UnityEngine/ScreenCapture_StereoScreenCaptureMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScreenCapture.CaptureScreenshot
void UnityEngine::ScreenCapture::CaptureScreenshot(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::CaptureScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScreenCapture", "CaptureScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: UnityEngine.ScreenCapture.CaptureScreenshot
void UnityEngine::ScreenCapture::CaptureScreenshot(::StringW filename, int superSize, ::UnityEngine::ScreenCapture::StereoScreenCaptureMode CaptureMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::CaptureScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScreenCapture", "CaptureScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(superSize), ::il2cpp_utils::ExtractType(CaptureMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, superSize, CaptureMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScreenCapture/StereoScreenCaptureMode
#include "UnityEngine/ScreenCapture_StereoScreenCaptureMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode LeftEye
::UnityEngine::ScreenCapture::StereoScreenCaptureMode UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ScreenCapture::StereoScreenCaptureMode>("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode LeftEye
void UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_LeftEye(::UnityEngine::ScreenCapture::StereoScreenCaptureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode RightEye
::UnityEngine::ScreenCapture::StereoScreenCaptureMode UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ScreenCapture::StereoScreenCaptureMode>("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode RightEye
void UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_RightEye(::UnityEngine::ScreenCapture::StereoScreenCaptureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode BothEyes
::UnityEngine::ScreenCapture::StereoScreenCaptureMode UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_BothEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_get_BothEyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ScreenCapture::StereoScreenCaptureMode>("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "BothEyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ScreenCapture/StereoScreenCaptureMode BothEyes
void UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_BothEyes(::UnityEngine::ScreenCapture::StereoScreenCaptureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::_set_BothEyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ScreenCapture/StereoScreenCaptureMode", "BothEyes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ScreenCapture::StereoScreenCaptureMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScreenCapture::StereoScreenCaptureMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.UsedByNativeCodeAttribute
#include "UnityEngine/Scripting/UsedByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.UsedByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.RequiredByNativeCodeAttribute
#include "UnityEngine/Scripting/RequiredByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Optional>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Optional>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <GenerateProxy>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GenerateProxy>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Optional
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_GenerateProxy
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GenerateProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GeneratedByOldBindingsGeneratorAttribute
#include "UnityEngine/Scripting/GeneratedByOldBindingsGeneratorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetFileNameExtensionAttribute
#include "UnityEngine/AssetFileNameExtensionAttribute.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <preferredExtension>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<preferredExtension>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.String> <otherExtensions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<otherExtensions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ThreadAndSerializationSafeAttribute
#include "UnityEngine/ThreadAndSerializationSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WritableAttribute
#include "UnityEngine/WritableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityEngineModuleAssembly
#include "UnityEngine/UnityEngineModuleAssembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.NativeClassAttribute
#include "UnityEngine/NativeClassAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <QualifiedNativeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QualifiedNativeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_QualifiedNativeName
void UnityEngine::NativeClassAttribute::set_QualifiedNativeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_QualifiedNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_Declaration
void UnityEngine::NativeClassAttribute::set_Declaration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.VisibleToOtherModulesAttribute
#include "UnityEngine/Bindings/VisibleToOtherModulesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeConditionalAttribute
#include "UnityEngine/Bindings/NativeConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Condition>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Condition>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <StubReturnStatement>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$StubReturnStatement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$StubReturnStatement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StubReturnStatement>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Enabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Enabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Condition
void UnityEngine::Bindings::NativeConditionalAttribute::set_Condition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_StubReturnStatement
void UnityEngine::Bindings::NativeConditionalAttribute::set_StubReturnStatement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_StubReturnStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StubReturnStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Enabled
void UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeHeaderAttribute
#include "UnityEngine/Bindings/NativeHeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeHeaderAttribute.set_Header
void UnityEngine::Bindings::NativeHeaderAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeHeaderAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeNameAttribute
#include "UnityEngine/Bindings/NativeNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeNameAttribute.set_Name
void UnityEngine::Bindings::NativeNameAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeNameAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeWritableSelfAttribute
#include "UnityEngine/Bindings/NativeWritableSelfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WritableSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WritableSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeWritableSelfAttribute.set_WritableSelf
void UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeWritableSelfAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeMethodAttribute
#include "UnityEngine/Bindings/NativeMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsThreadSafe>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsThreadSafe>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsFreeFunction>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsFreeFunction>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasExplicitThis>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasExplicitThis>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_Name
void UnityEngine::Bindings::NativeMethodAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsThreadSafe
void UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsFreeFunction
void UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_HasExplicitThis
void UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeMethodAttribute*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.TargetType
#include "UnityEngine/Bindings/TargetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Function
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Function
void UnityEngine::Bindings::TargetType::_set_Function(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Field
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Field"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Field
void UnityEngine::Bindings::TargetType::_set_Field(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Field", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::TargetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativePropertyAttribute
#include "UnityEngine/Bindings/NativePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.TargetType <TargetType>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::TargetType& UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetType>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::TargetType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativePropertyAttribute.set_TargetType
void UnityEngine::Bindings::NativePropertyAttribute::set_TargetType(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::set_TargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.CodegenOptions
#include "UnityEngine/Bindings/CodegenOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Auto
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Auto
void UnityEngine::Bindings::CodegenOptions::_set_Auto(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Custom
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Custom
void UnityEngine::Bindings::CodegenOptions::_set_Custom(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Force
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Force
void UnityEngine::Bindings::CodegenOptions::_set_Force(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Force", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::CodegenOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeTypeAttribute
#include "UnityEngine/Bindings/NativeTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <IntermediateScriptingStructName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IntermediateScriptingStructName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.CodegenOptions <CodegenOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::CodegenOptions& UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CodegenOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::CodegenOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_Header
void UnityEngine::Bindings::NativeTypeAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeTypeAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_IntermediateScriptingStructName
void UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IntermediateScriptingStructName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_CodegenOptions
void UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeTypeAttribute*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NotNullAttribute
#include "UnityEngine/Bindings/NotNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.UnmarshalledAttribute
#include "UnityEngine/Bindings/UnmarshalledAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.FreeFunctionAttribute
#include "UnityEngine/Bindings/FreeFunctionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.ThreadSafeAttribute
#include "UnityEngine/Bindings/ThreadSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorType
#include "UnityEngine/Bindings/StaticAccessorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Dot
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Dot
void UnityEngine::Bindings::StaticAccessorType::_set_Dot(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Arrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Arrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Arrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
void UnityEngine::Bindings::StaticAccessorType::_set_Arrow(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Arrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Arrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
void UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
void UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::StaticAccessorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorAttribute
#include "UnityEngine/Bindings/StaticAccessorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.StaticAccessorType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::StaticAccessorType& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::StaticAccessorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Name
void UnityEngine::Bindings::StaticAccessorAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Type
void UnityEngine::Bindings::StaticAccessorAttribute::set_Type(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeThrowsAttribute
#include "UnityEngine/Bindings/NativeThrowsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeThrowsAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Bindings::NativeThrowsAttribute*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.IgnoreAttribute
#include "UnityEngine/Bindings/IgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DoesNotContributeToSize>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DoesNotContributeToSize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.IgnoreAttribute.set_DoesNotContributeToSize
void UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoesNotContributeToSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnityString
#include "UnityEngine/UnityString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityString.Format
::StringW UnityEngine::UnityString::Format(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityString::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityString", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.Terrain/MaterialType
#include "UnityEngine/Terrain_MaterialType.hpp"
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Terrain.get_terrainData
::UnityEngine::TerrainData* UnityEngine::Terrain::get_terrainData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_terrainData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TerrainData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_materialType
::UnityEngine::Terrain::MaterialType UnityEngine::Terrain::get_materialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_materialType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain::MaterialType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_materialTemplate
::UnityEngine::Material* UnityEngine::Terrain::get_materialTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_materialTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_allowAutoConnect
bool UnityEngine::Terrain::get_allowAutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_allowAutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowAutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_groupingID
int UnityEngine::Terrain::get_groupingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_groupingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_groupingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.SampleHeight
float UnityEngine::Terrain::SampleHeight(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::SampleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.Terrain.SetNeighbors
void UnityEngine::Terrain::SetNeighbors(::UnityEngine::Terrain* left, ::UnityEngine::Terrain* top, ::UnityEngine::Terrain* right, ::UnityEngine::Terrain* bottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::SetNeighbors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNeighbors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, right, bottom);
}
// Autogenerated method: UnityEngine.Terrain.GetPosition
::UnityEngine::Vector3 UnityEngine::Terrain::GetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_activeTerrain
::UnityEngine::Terrain* UnityEngine::Terrain::get_activeTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_activeTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Terrain", "get_activeTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.get_activeTerrains
::ArrayW<::UnityEngine::Terrain*> UnityEngine::Terrain::get_activeTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_activeTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Terrain", "get_activeTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Terrain*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.SampleHeight_Injected
float UnityEngine::Terrain::SampleHeight_Injected(ByRef<::UnityEngine::Vector3> worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::SampleHeight_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleHeight_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(worldPosition));
}
// Autogenerated method: UnityEngine.Terrain.GetPosition_Injected
void UnityEngine::Terrain::GetPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::GetPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Terrain/MaterialType
#include "UnityEngine/Terrain_MaterialType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Terrain/MaterialType BuiltInStandard
::UnityEngine::Terrain::MaterialType UnityEngine::Terrain::MaterialType::_get_BuiltInStandard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_get_BuiltInStandard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Terrain::MaterialType>("UnityEngine", "Terrain/MaterialType", "BuiltInStandard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Terrain/MaterialType BuiltInStandard
void UnityEngine::Terrain::MaterialType::_set_BuiltInStandard(::UnityEngine::Terrain::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_set_BuiltInStandard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Terrain/MaterialType", "BuiltInStandard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Terrain/MaterialType BuiltInLegacyDiffuse
::UnityEngine::Terrain::MaterialType UnityEngine::Terrain::MaterialType::_get_BuiltInLegacyDiffuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_get_BuiltInLegacyDiffuse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Terrain::MaterialType>("UnityEngine", "Terrain/MaterialType", "BuiltInLegacyDiffuse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Terrain/MaterialType BuiltInLegacyDiffuse
void UnityEngine::Terrain::MaterialType::_set_BuiltInLegacyDiffuse(::UnityEngine::Terrain::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_set_BuiltInLegacyDiffuse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Terrain/MaterialType", "BuiltInLegacyDiffuse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Terrain/MaterialType BuiltInLegacySpecular
::UnityEngine::Terrain::MaterialType UnityEngine::Terrain::MaterialType::_get_BuiltInLegacySpecular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_get_BuiltInLegacySpecular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Terrain::MaterialType>("UnityEngine", "Terrain/MaterialType", "BuiltInLegacySpecular"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Terrain/MaterialType BuiltInLegacySpecular
void UnityEngine::Terrain::MaterialType::_set_BuiltInLegacySpecular(::UnityEngine::Terrain::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_set_BuiltInLegacySpecular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Terrain/MaterialType", "BuiltInLegacySpecular", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Terrain/MaterialType Custom
::UnityEngine::Terrain::MaterialType UnityEngine::Terrain::MaterialType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Terrain::MaterialType>("UnityEngine", "Terrain/MaterialType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Terrain/MaterialType Custom
void UnityEngine::Terrain::MaterialType::_set_Custom(::UnityEngine::Terrain::MaterialType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Terrain/MaterialType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Terrain::MaterialType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::MaterialType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.GameObject m_Prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::TreePrototype::dyn_m_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_BendFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::TreePrototype::dyn_m_BendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_BendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TreePrototype.get_prefab
::UnityEngine::GameObject* UnityEngine::TreePrototype::get_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.get_bendFactor
float UnityEngine::TreePrototype::get_bendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::UnityEngine::TreePrototype* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.TreePrototype.GetHashCode
int UnityEngine::TreePrototype::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.TerrainData/BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.TerrainLayer
#include "UnityEngine/TerrainLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaximumResolution
int UnityEngine::TerrainData::_get_k_MaximumResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaximumResolution
void UnityEngine::TerrainData::_set_k_MaximumResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumResolution", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MinimumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MinimumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaximumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaximumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaximumDetailPatchCount
int UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaximumDetailPatchCount
void UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MinimumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MinimumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaximumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaximumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MinimumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MinimumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_MaximumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_MaximumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution", value));
}
// Autogenerated method: UnityEngine.TerrainData.GetBoundaryValue
int UnityEngine::TerrainData::GetBoundaryValue(::UnityEngine::TerrainData::BoundaryValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetBoundaryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "GetBoundaryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_Create
void UnityEngine::TerrainData::Internal_Create(::UnityEngine::TerrainData* terrainData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData);
}
// Autogenerated method: UnityEngine.TerrainData.get_heightmapWidth
int UnityEngine::TerrainData::get_heightmapWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_heightmapWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightmapWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_heightmapHeight
int UnityEngine::TerrainData::get_heightmapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_heightmapHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightmapHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_heightmapResolution
int UnityEngine::TerrainData::get_heightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_heightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_internalHeightmapResolution
int UnityEngine::TerrainData::get_internalHeightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_internalHeightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_internalHeightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_size
::UnityEngine::Vector3 UnityEngine::TerrainData::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetHeights
::ArrayW<float> UnityEngine::TerrainData::GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetHeights
::ArrayW<float> UnityEngine::TerrainData::Internal_GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.GetInterpolatedNormal
::UnityEngine::Vector3 UnityEngine::TerrainData::GetInterpolatedNormal(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetInterpolatedNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterpolatedNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.TerrainData.get_treeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::get_treeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetTreeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::Internal_GetTreeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetTreeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetTreeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_treePrototypes
::ArrayW<::UnityEngine::TreePrototype*> UnityEngine::TerrainData::get_treePrototypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treePrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treePrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreePrototype*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetAlphamapResolutionInternal
float UnityEngine::TerrainData::GetAlphamapResolutionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetAlphamapResolutionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlphamapResolutionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetAlphamapTexture
::UnityEngine::Texture2D* UnityEngine::TerrainData::GetAlphamapTexture(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetAlphamapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlphamapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapTextureCount
int UnityEngine::TerrainData::get_alphamapTextureCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapTextureCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapTextureCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapTextures
::ArrayW<::UnityEngine::Texture2D*> UnityEngine::TerrainData::get_alphamapTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Texture2D*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_terrainLayers
::ArrayW<::UnityEngine::TerrainLayer*> UnityEngine::TerrainData::get_terrainLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_terrainLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TerrainLayer*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData..cctor
void UnityEngine::TerrainData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_size_Injected
void UnityEngine::TerrainData::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainData.GetInterpolatedNormal_Injected
void UnityEngine::TerrainData::GetInterpolatedNormal_Injected(float x, float y, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetInterpolatedNormal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterpolatedNormal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData/BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MaxHeightmapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MaxHeightmapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MinDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MinDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MaxDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MaxDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MaxDetailPatchCount
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MaxDetailPatchCount
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MinAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MinAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MaxAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MaxAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MinBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MinBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/BoundaryValueType MaxBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/BoundaryValueType MaxBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TerrainData::BoundaryValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainLayer
#include "UnityEngine/TerrainLayer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TerrainLayer.Internal_Create
void UnityEngine::TerrainLayer::Internal_Create(::UnityEngine::TerrainLayer* layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainLayer", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_diffuseTexture
::UnityEngine::Texture2D* UnityEngine::TerrainLayer::get_diffuseTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_diffuseTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_diffuseTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_normalMapTexture
::UnityEngine::Texture2D* UnityEngine::TerrainLayer::get_normalMapTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_normalMapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalMapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileSize
::UnityEngine::Vector2 UnityEngine::TerrainLayer::get_tileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileOffset
::UnityEngine::Vector2 UnityEngine::TerrainLayer::get_tileOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_metallic
float UnityEngine::TerrainLayer::get_metallic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_metallic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_metallic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_smoothness
float UnityEngine::TerrainLayer::get_smoothness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_smoothness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_normalScale
float UnityEngine::TerrainLayer::get_normalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_normalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileSize_Injected
void UnityEngine::TerrainLayer::get_tileSize_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileSize_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileSize_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileOffset_Injected
void UnityEngine::TerrainLayer::get_tileOffset_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainGroups
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainGroups.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/<CollectTerrains>c__AnonStorey1
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_-CollectTerrains-c__AnonStorey1.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/<CollectTerrains>c__AnonStorey0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_-CollectTerrains-c__AnonStorey0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.HasValidTerrains
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "HasValidTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.ClearConnectivity
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "ClearConnectivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.CollectTerrains
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups* UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains(bool onlyAutoConnectedTerrains) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "CollectTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyAutoConnectedTerrains)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onlyAutoConnectedTerrains);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.AutoConnect
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "AutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TerrainFilter
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_TerrainFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/<CreateFromPlacement>c__AnonStorey0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_-CreateFromPlacement-c__AnonStorey0.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_patchSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_patchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_patchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_patchSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode m_errorCode
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_errorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_errorCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_errorCode"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord,UnityEngine.Terrain> m_terrainTiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord, ::UnityEngine::Terrain*>*& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_terrainTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::dyn_m_terrainTiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_terrainTiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord, ::UnityEngine::Terrain*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.GetTerrain
::UnityEngine::Terrain* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::GetTerrain(int tileX, int tileZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::GetTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain*, false>(this, ___internal__method, tileX, tileZ);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.CreateFromPlacement
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement(::UnityEngine::Terrain* originTerrain, ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter* filter, bool fullValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap", "CreateFromPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originTerrain), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(fullValidation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originTerrain, filter, fullValidation);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.CreateFromPlacement
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement(::UnityEngine::Vector2 gridOrigin, ::UnityEngine::Vector2 gridSize, ::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter* filter, bool fullValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::CreateFromPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap", "CreateFromPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridOrigin), ::il2cpp_utils::ExtractType(gridSize), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(fullValidation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gridOrigin, gridSize, filter, fullValidation);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.AddTerrainInternal
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::AddTerrainInternal(int x, int z, ::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::AddTerrainInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTerrainInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(terrain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.TryToAddTerrain
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TryToAddTerrain(int tileX, int tileZ, ::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TryToAddTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToAddTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ), ::il2cpp_utils::ExtractType(terrain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tileX, tileZ, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.ValidateTerrain
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ValidateTerrain(int tileX, int tileZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ValidateTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tileX), ::il2cpp_utils::ExtractType(tileZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileX, tileZ);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap.Validate
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TerrainFilter
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_TerrainFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TerrainFilter.Invoke
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::Invoke(::UnityEngine::Terrain* terrain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, terrain);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TerrainFilter.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::BeginInvoke(::UnityEngine::Terrain* terrain, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TerrainFilter.EndInvoke
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TerrainFilter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 tileX
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileX");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 tileZ
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::dyn_tileZ");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tileZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/TileCoord..ctor
// ABORTED elsewhere.  UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::TileCoord::TileCoord(int tileX, int tileZ)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode OK
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "OK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode OK
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_OK(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode Overlapping
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_Overlapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_Overlapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "Overlapping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode Overlapping
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_Overlapping(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_Overlapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "Overlapping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode SizeMismatch
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_SizeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_SizeMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "SizeMismatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode SizeMismatch
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_SizeMismatch(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_SizeMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "SizeMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode EdgeAlignmentMismatch
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_EdgeAlignmentMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_get_EdgeAlignmentMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode>("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "EdgeAlignmentMismatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/ErrorCode EdgeAlignmentMismatch
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_EdgeAlignmentMismatch(::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::_set_EdgeAlignmentMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainUtility/TerrainMap/ErrorCode", "EdgeAlignmentMismatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::ErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/<CreateFromPlacement>c__AnonStorey0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap_-CreateFromPlacement-c__AnonStorey0.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 groupID
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$CreateFromPlacement$c__AnonStorey0::dyn_groupID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$CreateFromPlacement$c__AnonStorey0::dyn_groupID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap/<CreateFromPlacement>c__AnonStorey0.<>m__0
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$CreateFromPlacement$c__AnonStorey0::$$m__0(::UnityEngine::Terrain* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainMap::$CreateFromPlacement$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainGroups
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainGroups.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
