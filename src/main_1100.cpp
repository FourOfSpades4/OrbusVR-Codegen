// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _updateOrientationAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateOrientationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateOrientationAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportOrientationHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler.UpdateAimData
void GlobalNamespace::TeleportOrientationHandler::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: TeleportOrientationHandler.UpdateOrientationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateOrientationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOrientationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.GetLandingOrientation
::UnityEngine::Quaternion GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation(::GlobalNamespace::TeleportOrientationHandler::OrientationModes mode, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::GetLandingOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLandingOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, mode, rotation);
}
// Autogenerated method: TeleportOrientationHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportOrientationHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.AddEventHandlers
void GlobalNamespace::TeleportOrientationHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler.RemoveEventHandlers
void GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler/OrientationModes
#include "GlobalNamespace/TeleportOrientationHandler_OrientationModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_HeadRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "HeadRelative"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes HeadRelative
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_HeadRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "HeadRelative", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
::GlobalNamespace::TeleportOrientationHandler::OrientationModes GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_get_ForwardFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportOrientationHandler::OrientationModes>("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing"));
}
// Autogenerated static field setter
// Set static field: static public TeleportOrientationHandler/OrientationModes ForwardFacing
void GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing(::GlobalNamespace::TeleportOrientationHandler::OrientationModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::_set_ForwardFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportOrientationHandler/OrientationModes", "ForwardFacing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::OrientationModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7
#include "GlobalNamespace/TeleportOrientationHandler_-UpdateOrientationCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler*& GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler/<UpdateOrientationCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler::$UpdateOrientationCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandler360
#include "GlobalNamespace/TeleportOrientationHandler360.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportOrientationHandler360.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandler360.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandler360::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerHMD
#include "GlobalNamespace/TeleportOrientationHandlerHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UpdateOrientationDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_UpdateOrientationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateOrientationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimDistanceMaxRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn_AimDistanceMaxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimDistanceMaxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerHMD.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerHMD.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerHMD::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportOrientationHandlerThumbstick
#include "GlobalNamespace/TeleportOrientationHandlerThumbstick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TeleportOrientationHandler/OrientationModes OrientationMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportOrientationHandler::OrientationModes& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_OrientationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportOrientationHandler::OrientationModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller Thumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_Thumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotateStickThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn_RotateStickThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotateStickThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _initialRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__initialRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _currentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _lastValidDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::dyn__lastValidDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValidDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.InitializeTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::InitializeTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportOrientationHandlerThumbstick.UpdateTeleportDestination
void GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportOrientationHandlerThumbstick::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportOrientationHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportPoint
#include "GlobalNamespace/TeleportPoint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single dimmingSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_dimmingSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_dimmingSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dimmingSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fullIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_fullIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_fullIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lowIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lowIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lowIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform destTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportPoint::dyn_destTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_destTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastLookAtTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportPoint::dyn_lastLookAtTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::dyn_lastLookAtTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLookAtTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportPoint.Start
void GlobalNamespace::TeleportPoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.GetDestTransform
::UnityEngine::Transform* GlobalNamespace::TeleportPoint::GetDestTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::GetDestTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.Update
void GlobalNamespace::TeleportPoint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportPoint.OnLookAt
void GlobalNamespace::TeleportPoint::OnLookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportPoint::OnLookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportSupport
#include "GlobalNamespace/TeleportSupport.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport <LocomotionTeleport>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn_$LocomotionTeleport$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionTeleport>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportSupport::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportSupport.get_LocomotionTeleport
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::TeleportSupport::get_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::get_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.set_LocomotionTeleport
void GlobalNamespace::TeleportSupport::set_LocomotionTeleport(::GlobalNamespace::LocomotionTeleport* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::set_LocomotionTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportSupport.OnEnable
void GlobalNamespace::TeleportSupport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.OnDisable
void GlobalNamespace::TeleportSupport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.LogEventHandler
void GlobalNamespace::TeleportSupport::LogEventHandler(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::LogEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: TeleportSupport.AddEventHandlers
void GlobalNamespace::TeleportSupport::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportSupport.RemoveEventHandlers
void GlobalNamespace::TeleportSupport::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportSupport::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ERROR_MARGIN
float GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_get_ERROR_MARGIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TeleportTargetHandler", "ERROR_MARGIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ERROR_MARGIN
void GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::_set_ERROR_MARGIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportTargetHandler", "ERROR_MARGIN", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask AimCollisionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimCollisionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LocomotionTeleport/AimData AimData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimData*& GlobalNamespace::TeleportTargetHandler::dyn_AimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn_AimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportTargetHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _aimPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::TeleportTargetHandler::dyn__aimPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::dyn__aimPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aimPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler.TargetAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::TargetAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TargetAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ResetAimData
void GlobalNamespace::TeleportTargetHandler::ResetAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ResetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandler::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandler.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandler::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated method: TeleportTargetHandler.<.ctor>b__3_0
void GlobalNamespace::TeleportTargetHandler::$_ctor$b__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.AddEventHandlers
void GlobalNamespace::TeleportTargetHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler.RemoveEventHandlers
void GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTargetHandler/<TargetAimCoroutine>d__7
#include "GlobalNamespace/TeleportTargetHandler_-TargetAimCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTargetHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTargetHandler*& GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTargetHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.MoveNext
bool GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandler/<TargetAimCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler::$TargetAimCoroutine$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNavMesh
#include "GlobalNamespace/TeleportTargetHandlerNavMesh.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NavMeshAreaMask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn_NavMeshAreaMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NavMeshAreaMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath _path
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshPath*& GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.Awake
void GlobalNamespace::TeleportTargetHandlerNavMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.OnDrawGizmos
void GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated method: TeleportTargetHandlerNavMesh.ConsiderDestination
::System::Nullable_1<::UnityEngine::Vector3> GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNavMesh::ConsiderDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method, location);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerNode
#include "GlobalNamespace/TeleportTargetHandlerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single LOSOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_LOSOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOSOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask TeleportLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::dyn_TeleportLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTargetHandlerNode.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerNode::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTargetHandlerPhysical
#include "GlobalNamespace/TeleportTargetHandlerPhysical.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTargetHandlerPhysical.ConsiderTeleport
bool GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport(::UnityEngine::Vector3 start, ByRef<::UnityEngine::Vector3> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTargetHandlerPhysical::ConsiderTeleport");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTargetHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(end));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransition.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.AddEventHandlers
void GlobalNamespace::TeleportTransition::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransition.RemoveEventHandlers
void GlobalNamespace::TeleportTransition::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransition::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionBlink
#include "GlobalNamespace/TeleportTransitionBlink.hpp"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_TeleportDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve FadeLevels
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::dyn_FadeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadeLevels"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink.BlinkCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::BlinkCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionBlink/<BlinkCoroutine>d__4
#include "GlobalNamespace/TeleportTransitionBlink_-BlinkCoroutine-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionBlink <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionBlink*& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionBlink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <teleportTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleportTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleportTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <teleported>5__4
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::dyn_$teleported$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<teleported>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.MoveNext
bool GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionBlink/<BlinkCoroutine>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionBlink::$BlinkCoroutine$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionInstant
#include "GlobalNamespace/TeleportTransitionInstant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportTransitionInstant.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionInstant::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportTransitionWarp
#include "GlobalNamespace/TeleportTransitionWarp.hpp"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single TransitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_TransitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve PositionLerp
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::dyn_PositionLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionLerp"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp.DoWarp
::System::Collections::IEnumerator* GlobalNamespace::TeleportTransitionWarp::DoWarp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp.LocomotionTeleportOnEnterStateTeleporting
void GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::LocomotionTeleportOnEnterStateTeleporting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransition*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportTransitionWarp/<DoWarp>d__3
#include "GlobalNamespace/TeleportTransitionWarp_-DoWarp-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportTransitionWarp <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportTransitionWarp*& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportTransitionWarp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <startPosition>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$startPosition$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPosition>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.IDisposable.Dispose
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.MoveNext
bool GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportTransitionWarp/<DoWarp>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportTransitionWarp::$DoWarp$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer
#include "GlobalNamespace/NativeVideoPlayer.hpp"
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _Activity
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__Activity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_Activity"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _Activity
void GlobalNamespace::NativeVideoPlayer::_set__Activity(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__Activity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_Activity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
::System::Nullable_1<::System::IntPtr> GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get__VideoPlayerClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::System::IntPtr>>("", "NativeVideoPlayer", "_VideoPlayerClass"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
void GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass(::System::Nullable_1<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set__VideoPlayerClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "_VideoPlayerClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.jvalue[] EmptyParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_EmptyParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_EmptyParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "EmptyParams"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.jvalue[] EmptyParams
void GlobalNamespace::NativeVideoPlayer::_set_EmptyParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_EmptyParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "EmptyParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getIsPlayingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getIsPlayingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getIsPlayingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getIsPlayingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getIsPlayingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getIsPlayingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getCurrentPlaybackStateMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getCurrentPlaybackStateMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getCurrentPlaybackStateMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getCurrentPlaybackStateMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getCurrentPlaybackStateMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getDurationMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getDurationMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getDurationMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getDurationMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getDurationMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getDurationMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr getPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_getPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "getPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr getPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_getPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "getPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackPositionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackPositionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackPositionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackPositionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackPositionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackPositionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackPositionParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr playVideoMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "playVideoMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr playVideoMethodId
void GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] playVideoParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_playVideoParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_playVideoParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "playVideoParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] playVideoParams
void GlobalNamespace::NativeVideoPlayer::_set_playVideoParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_playVideoParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "playVideoParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr stopMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_stopMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_stopMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "stopMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr stopMethodId
void GlobalNamespace::NativeVideoPlayer::_set_stopMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_stopMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "stopMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr resumeMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_resumeMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "resumeMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr resumeMethodId
void GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_resumeMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "resumeMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr pauseMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_pauseMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "pauseMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr pauseMethodId
void GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_pauseMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "pauseMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setPlaybackSpeedMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setPlaybackSpeedMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setPlaybackSpeedMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setPlaybackSpeedParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setPlaybackSpeedParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
void GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setPlaybackSpeedParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setPlaybackSpeedParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setLoopingMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setLoopingMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setLoopingMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setLoopingParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setLoopingParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setLoopingParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setLoopingParams
void GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setLoopingParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setLoopingParams", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr setListenerRotationQuaternionMethodId
::System::IntPtr GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionMethodId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr setListenerRotationQuaternionMethodId
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionMethodId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionMethodId", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
::ArrayW<::UnityEngine::jvalue> GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_get_setListenerRotationQuaternionParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::jvalue>>("", "NativeVideoPlayer", "setListenerRotationQuaternionParams"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
void GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams(::ArrayW<::UnityEngine::jvalue> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::_set_setListenerRotationQuaternionParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer", "setListenerRotationQuaternionParams", value));
}
// Autogenerated method: NativeVideoPlayer.get_VideoPlayerClass
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_VideoPlayerClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Activity
::System::IntPtr GlobalNamespace::NativeVideoPlayer::get_Activity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Activity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Activity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsAvailable
bool GlobalNamespace::NativeVideoPlayer::get_IsAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_IsPlaying
bool GlobalNamespace::NativeVideoPlayer::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_CurrentPlaybackState
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_CurrentPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NativeVideoPlayer::PlabackState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_Duration
int64_t GlobalNamespace::NativeVideoPlayer::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.get_PlaybackPosition
int64_t GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.set_PlaybackPosition
void GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: NativeVideoPlayer.PlayVideo
void GlobalNamespace::NativeVideoPlayer::PlayVideo(::StringW path, ::StringW drmLicenseUrl, ::System::IntPtr surfaceObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlayVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "PlayVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(drmLicenseUrl), ::il2cpp_utils::ExtractType(surfaceObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, drmLicenseUrl, surfaceObj);
}
// Autogenerated method: NativeVideoPlayer.Stop
void GlobalNamespace::NativeVideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Play
void GlobalNamespace::NativeVideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.Pause
void GlobalNamespace::NativeVideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NativeVideoPlayer.SetPlaybackSpeed
void GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, speed);
}
// Autogenerated method: NativeVideoPlayer.SetLooping
void GlobalNamespace::NativeVideoPlayer::SetLooping(bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(looping)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, looping);
}
// Autogenerated method: NativeVideoPlayer.SetListenerRotation
void GlobalNamespace::NativeVideoPlayer::SetListenerRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::SetListenerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", "SetListenerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: NativeVideoPlayer..cctor
void GlobalNamespace::NativeVideoPlayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NativeVideoPlayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NativeVideoPlayer/PlabackState
#include "GlobalNamespace/NativeVideoPlayer_PlabackState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Idle
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Idle
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Preparing
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Preparing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Preparing"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Preparing
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Preparing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Preparing", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Buffering
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Buffering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Buffering"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Buffering
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Buffering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Buffering", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ready
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ready
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public NativeVideoPlayer/PlabackState Ended
::GlobalNamespace::NativeVideoPlayer::PlabackState GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_get_Ended");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NativeVideoPlayer::PlabackState>("", "NativeVideoPlayer/PlabackState", "Ended"));
}
// Autogenerated static field setter
// Set static field: static public NativeVideoPlayer/PlabackState Ended
void GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended(::GlobalNamespace::NativeVideoPlayer::PlabackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::_set_Ended");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NativeVideoPlayer/PlabackState", "Ended", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NativeVideoPlayer::PlabackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action onButtonDown
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ButtonDownListener::dyn_onButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::dyn_onButtonDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onButtonDown"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ButtonDownListener.add_onButtonDown
void GlobalNamespace::ButtonDownListener::add_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::add_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.remove_onButtonDown
void GlobalNamespace::ButtonDownListener::remove_onButtonDown(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::remove_onButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ButtonDownListener.OnPointerDown
void GlobalNamespace::ButtonDownListener::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ButtonDownListener::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ButtonDownListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MediaPlayerImage/ButtonType m_ButtonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage::ButtonType& GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::dyn_m_ButtonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaPlayerImage.get_buttonType
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::get_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::get_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MediaPlayerImage::ButtonType, false>(this, ___internal__method);
}
// Autogenerated method: MediaPlayerImage.set_buttonType
void GlobalNamespace::MediaPlayerImage::set_buttonType(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::set_buttonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MediaPlayerImage.OnPopulateMesh
void GlobalNamespace::MediaPlayerImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Image*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaPlayerImage/ButtonType
#include "GlobalNamespace/MediaPlayerImage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Play
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Play");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Play"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Play
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Play");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Play", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Pause
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Pause");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Pause"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Pause
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Pause");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Pause", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType FastForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_FastForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "FastForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType FastForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_FastForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "FastForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Rewind
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Rewind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Rewind"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Rewind
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Rewind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Rewind", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipForward
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipForward"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipForward
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipForward", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType SkipBack
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_SkipBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "SkipBack"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType SkipBack
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_SkipBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "SkipBack", value));
}
// Autogenerated static field getter
// Get static field: static public MediaPlayerImage/ButtonType Stop
::GlobalNamespace::MediaPlayerImage::ButtonType GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MediaPlayerImage::ButtonType>("", "MediaPlayerImage/ButtonType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public MediaPlayerImage/ButtonType Stop
void GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop(::GlobalNamespace::MediaPlayerImage::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MediaPlayerImage/ButtonType", "Stop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaPlayerImage::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean videoPausedBeforeAppPause
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPausedBeforeAppPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPausedBeforeAppPause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer videoPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer*& GlobalNamespace::MoviePlayerSample::dyn_videoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_videoPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "videoPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::MoviePlayerSample::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer mediaRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_mediaRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlaying>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$IsPlaying$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlaying>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <Duration>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$Duration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Duration>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <PlaybackPosition>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_$PlaybackPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture copyTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MoviePlayerSample::dyn_copyTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_copyTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material externalTex2DMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_externalTex2DMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalTex2DMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MovieName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_MovieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_MovieName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MovieName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DrmLicenseUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DrmLicenseUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrmLicenseUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LoopVideo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_LoopVideo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_LoopVideo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopVideo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoShape Shape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn_Shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Shape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample/VideoStereo Stereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_Stereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn_DisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn_DisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoShape _LastShape
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoShape& GlobalNamespace::MoviePlayerSample::dyn__LastShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastShape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSample/VideoStereo _LastStereo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample::VideoStereo& GlobalNamespace::MoviePlayerSample::dyn__LastStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastStereo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastStereo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample::VideoStereo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LastDisplayMono
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::dyn__LastDisplayMono");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LastDisplayMono"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample.get_IsPlaying
bool GlobalNamespace::MoviePlayerSample::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_IsPlaying
void GlobalNamespace::MoviePlayerSample::set_IsPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_Duration
int64_t GlobalNamespace::MoviePlayerSample::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_Duration
void GlobalNamespace::MoviePlayerSample::set_Duration(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.get_PlaybackPosition
int64_t GlobalNamespace::MoviePlayerSample::get_PlaybackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::get_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.set_PlaybackPosition
void GlobalNamespace::MoviePlayerSample::set_PlaybackPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::set_PlaybackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSample.Awake
void GlobalNamespace::MoviePlayerSample::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.IsLocalVideo
bool GlobalNamespace::MoviePlayerSample::IsLocalVideo(::StringW movieName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::IsLocalVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(movieName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, movieName);
}
// Autogenerated method: MoviePlayerSample.UpdateShapeAndStereo
void GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::UpdateShapeAndStereo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShapeAndStereo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Start
::System::Collections::IEnumerator* GlobalNamespace::MoviePlayerSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play(::StringW moviePath, ::StringW drmLicencesUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moviePath), ::il2cpp_utils::ExtractType(drmLicencesUrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moviePath, drmLicencesUrl);
}
// Autogenerated method: MoviePlayerSample.Play
void GlobalNamespace::MoviePlayerSample::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.Pause
void GlobalNamespace::MoviePlayerSample::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SeekTo
void GlobalNamespace::MoviePlayerSample::SeekTo(int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SeekTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: MoviePlayerSample.Update
void GlobalNamespace::MoviePlayerSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.SetPlaybackSpeed
void GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::SetPlaybackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: MoviePlayerSample.Stop
void GlobalNamespace::MoviePlayerSample::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample.OnApplicationPause
void GlobalNamespace::MoviePlayerSample::OnApplicationPause(bool appWasPaused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appWasPaused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appWasPaused);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoShape
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _360
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_360"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _360
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__360(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_360", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape _180
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get__180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get__180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "_180"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape _180
void GlobalNamespace::MoviePlayerSample::VideoShape::_set__180(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set__180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "_180", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoShape Quad
::GlobalNamespace::MoviePlayerSample::VideoShape GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoShape>("", "MoviePlayerSample/VideoShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoShape Quad
void GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad(::GlobalNamespace::MoviePlayerSample::VideoShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoShape", "Quad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/VideoStereo
#include "GlobalNamespace/MoviePlayerSample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo Mono
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo Mono
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo TopBottom
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_TopBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "TopBottom"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo TopBottom
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_TopBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "TopBottom", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo LeftRight
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo LeftRight
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSample/VideoStereo BottomTop
::GlobalNamespace::MoviePlayerSample::VideoStereo GlobalNamespace::MoviePlayerSample::VideoStereo::_get_BottomTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_get_BottomTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSample::VideoStereo>("", "MoviePlayerSample/VideoStereo", "BottomTop"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSample/VideoStereo BottomTop
void GlobalNamespace::MoviePlayerSample::VideoStereo::_set_BottomTop(::GlobalNamespace::MoviePlayerSample::VideoStereo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::_set_BottomTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSample/VideoStereo", "BottomTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::VideoStereo::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MoviePlayerSample/<Start>d__32
#include "GlobalNamespace/MoviePlayerSample_-Start-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.IDisposable.Dispose
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.MoveNext
bool GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSample/<Start>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MoviePlayerSample::$Start$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$Start$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MoviePlayerSample::$Start$d__32*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSample/<>c__DisplayClass33_0
#include "GlobalNamespace/MoviePlayerSample_--c__DisplayClass33_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String moviePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_moviePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moviePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String drmLicencesUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_drmLicencesUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drmLicencesUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSample/<>c__DisplayClass33_0.<Play>b__0
void GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::$Play$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSample::$$c__DisplayClass33_0::<Play>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Play>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
// Including type: MoviePlayerSample
#include "GlobalNamespace/MoviePlayerSample.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: ButtonDownListener
#include "GlobalNamespace/ButtonDownListener.hpp"
// Including type: MediaPlayerImage
#include "GlobalNamespace/MediaPlayerImage.hpp"
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MoviePlayerSample Player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSample*& GlobalNamespace::MoviePlayerSampleControls::dyn_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSample**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.OVRInputModule InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRGazePointer GazePointer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGazePointer*& GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_GazePointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazePointer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGazePointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Canvas Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener PlayPause
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage PlayPauseImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_PlayPauseImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayPauseImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Slider ProgressBar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_ProgressBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressBar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener FastForward
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForward"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage FastForwardImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_FastForwardImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastForwardImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ButtonDownListener Rewind
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ButtonDownListener*& GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_Rewind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rewind"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ButtonDownListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MediaPlayerImage RewindImage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MediaPlayerImage*& GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_RewindImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RewindImage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MediaPlayerImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeoutTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn_TimeoutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeoutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastButtonTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__lastButtonTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastButtonTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didSeek
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__didSeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didSeek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _seekPreviousPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__seekPreviousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seekPreviousPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _rewindStartPosition
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rewindStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__rewindStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rewindStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MoviePlayerSampleControls/PlaybackState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MoviePlayerSampleControls::PlaybackState& GlobalNamespace::MoviePlayerSampleControls::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoviePlayerSampleControls.Start
void GlobalNamespace::MoviePlayerSampleControls::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnPlayPauseClicked
void GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnPlayPauseClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayPauseClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnFastForwardClicked
void GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnFastForwardClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFastForwardClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnRewindClicked
void GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnRewindClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRewindClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.OnSeekBarMoved
void GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::OnSeekBarMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSeekBarMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MoviePlayerSampleControls.Seek
void GlobalNamespace::MoviePlayerSampleControls::Seek(int64_t pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: MoviePlayerSampleControls.Update
void GlobalNamespace::MoviePlayerSampleControls::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoviePlayerSampleControls.SetVisible
void GlobalNamespace::MoviePlayerSampleControls::SetVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoviePlayerSampleControls/PlaybackState
#include "GlobalNamespace/MoviePlayerSampleControls.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Playing
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Playing
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Paused
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Paused
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_Rewinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "Rewinding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState Rewinding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_Rewinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "Rewinding", value));
}
// Autogenerated static field getter
// Get static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
::GlobalNamespace::MoviePlayerSampleControls::PlaybackState GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_get_FastForwarding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MoviePlayerSampleControls::PlaybackState>("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding"));
}
// Autogenerated static field setter
// Set static field: static public MoviePlayerSampleControls/PlaybackState FastForwarding
void GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding(::GlobalNamespace::MoviePlayerSampleControls::PlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::_set_FastForwarding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MoviePlayerSampleControls/PlaybackState", "FastForwarding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoviePlayerSampleControls::PlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VectorUtil
#include "GlobalNamespace/VectorUtil.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VectorUtil.ToVector
::UnityEngine::Vector4 GlobalNamespace::VectorUtil::ToVector(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VectorUtil::ToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VectorUtil", "ToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUISample
#include "GlobalNamespace/DebugUISample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DebugUISample::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text sliderText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::DebugUISample::dyn_sliderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::dyn_sliderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUISample.Start
void GlobalNamespace::DebugUISample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.TogglePressed
void GlobalNamespace::DebugUISample::TogglePressed(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::TogglePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TogglePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.RadioPressed
void GlobalNamespace::DebugUISample::RadioPressed(::StringW radioLabel, ::StringW group, ::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::RadioPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RadioPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radioLabel), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, radioLabel, group, t);
}
// Autogenerated method: DebugUISample.SliderPressed
void GlobalNamespace::DebugUISample::SliderPressed(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::SliderPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: DebugUISample.Update
void GlobalNamespace::DebugUISample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.LogButtonPressed
void GlobalNamespace::DebugUISample::LogButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::LogButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUISample.<Start>b__2_0
void GlobalNamespace::DebugUISample::$Start$b__2_0(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_1
void GlobalNamespace::DebugUISample::$Start$b__2_1(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_2
void GlobalNamespace::DebugUISample::$Start$b__2_2(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUISample.<Start>b__2_3
void GlobalNamespace::DebugUISample::$Start$b__2_3(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUISample::<Start>b__2_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__2_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandsActiveChecker
#include "GlobalNamespace/HandsActiveChecker.hpp"
// Including type: HandsActiveChecker/<GetCenterEye>d__6
#include "GlobalNamespace/HandsActiveChecker_-GetCenterEye-d__6.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _notificationPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HandsActiveChecker::dyn__notificationPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__notificationPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notificationPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _notification
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HandsActiveChecker::dyn__notification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__notification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notification"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig _cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::HandsActiveChecker::dyn__cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerEye
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HandsActiveChecker::dyn__centerEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::dyn__centerEye");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEye"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandsActiveChecker.Awake
void GlobalNamespace::HandsActiveChecker::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker.Update
void GlobalNamespace::HandsActiveChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker.GetCenterEye
::System::Collections::IEnumerator* GlobalNamespace::HandsActiveChecker::GetCenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::GetCenterEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCenterEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HandsActiveChecker/<GetCenterEye>d__6
#include "GlobalNamespace/HandsActiveChecker_-GetCenterEye-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HandsActiveChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HandsActiveChecker*& GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HandsActiveChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.IDisposable.Dispose
void GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.MoveNext
bool GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandsActiveChecker/<GetCenterEye>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HandsActiveChecker::$GetCenterEye$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CharacterCapsule
#include "GlobalNamespace/CharacterCapsule.hpp"
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CharacterController _character
[[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& GlobalNamespace::CharacterCapsule::dyn__character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_character"))->offset;
  return *reinterpret_cast<::UnityEngine::CharacterController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::CharacterCapsule::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _height
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCapsule::dyn__height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCapsule::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SubdivisionsU
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn_SubdivisionsU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn_SubdivisionsU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubdivisionsU"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SubdivisionsV
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn_SubdivisionsV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn_SubdivisionsV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubdivisionsV"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subdivisionU
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn__subdivisionU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__subdivisionU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subdivisionU"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _subdivisionV
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CharacterCapsule::dyn__subdivisionV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__subdivisionV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subdivisionV"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CharacterCapsule::dyn__vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::CharacterCapsule::dyn__triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::dyn__triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CharacterCapsule.Update
void GlobalNamespace::CharacterCapsule::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCapsule::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionSampleSupport
#include "GlobalNamespace/LocomotionSampleSupport.hpp"
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: TeleportTargetHandler
#include "GlobalNamespace/TeleportTargetHandler.hpp"
// Including type: TeleportOrientationHandler
#include "GlobalNamespace/TeleportOrientationHandler.hpp"
// Including type: TeleportTransition
#include "GlobalNamespace/TeleportTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocomotionController lc
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionController*& GlobalNamespace::LocomotionSampleSupport::dyn_lc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::dyn_lc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lc"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inMenu
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionSampleSupport::dyn_inMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::dyn_inMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inMenu"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionSampleSupport.get_TeleportController
::GlobalNamespace::LocomotionTeleport* GlobalNamespace::LocomotionSampleSupport::get_TeleportController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::get_TeleportController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TeleportController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Start
void GlobalNamespace::LocomotionSampleSupport::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Update
void GlobalNamespace::LocomotionSampleSupport::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.Log
void GlobalNamespace::LocomotionSampleSupport::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocomotionSampleSupport", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: LocomotionSampleSupport.UpdateToggle
void GlobalNamespace::LocomotionSampleSupport::UpdateToggle(::UnityEngine::UI::Toggle* toggle, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::UpdateToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle, enabled);
}
// Autogenerated method: LocomotionSampleSupport.SetupNonCap
void GlobalNamespace::LocomotionSampleSupport::SetupNonCap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupNonCap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNonCap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupTeleportDefaults
void GlobalNamespace::LocomotionSampleSupport::SetupTeleportDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupTeleportDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTeleportDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.AddInstance
::UnityEngine::GameObject* GlobalNamespace::LocomotionSampleSupport::AddInstance(::UnityEngine::GameObject* _template, ::StringW label) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::AddInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_template), ::il2cpp_utils::ExtractType(label)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, _template, label);
}
// Autogenerated method: LocomotionSampleSupport.SetupNodeTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupNodeTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupNodeTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupTwoStickTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupTwoStickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupTwoStickTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTwoStickTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupWalkOnly
void GlobalNamespace::LocomotionSampleSupport::SetupWalkOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupWalkOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupWalkOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionSampleSupport.SetupLeftStrafeRightTeleport
void GlobalNamespace::LocomotionSampleSupport::SetupLeftStrafeRightTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionSampleSupport::SetupLeftStrafeRightTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLeftStrafeRightTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayCanvas
#include "GlobalNamespace/OVROverlayCanvas.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Plane[] _FrustumPlanes
::ArrayW<::UnityEngine::Plane> GlobalNamespace::OVROverlayCanvas::_get__FrustumPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::_get__FrustumPlanes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Plane>>("", "OVROverlayCanvas", "_FrustumPlanes"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Plane[] _FrustumPlanes
void GlobalNamespace::OVROverlayCanvas::_set__FrustumPlanes(::ArrayW<::UnityEngine::Plane> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::_set__FrustumPlanes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas", "_FrustumPlanes", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _transparentShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVROverlayCanvas::dyn__transparentShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__transparentShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transparentShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _opaqueShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVROverlayCanvas::dyn__opaqueShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__opaqueShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_opaqueShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::OVROverlayCanvas::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::OVROverlayCanvas::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVROverlayCanvas::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVROverlay _overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::OVROverlayCanvas::dyn__overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _renderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::OVROverlayCanvas::dyn__renderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__renderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::OVROverlayCanvas::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _quad
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OVROverlayCanvas::dyn__quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__quad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quad"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVROverlayCanvas::dyn__defaultMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn__defaultMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_MaxTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_MaxTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_MinTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_MinTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PixelsPerUnit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVROverlayCanvas::dyn_PixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_PixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DrawRate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_DrawRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_DrawRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DrawFrameOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_DrawFrameOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_DrawFrameOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawFrameOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Expensive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlayCanvas::dyn_Expensive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Expensive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expensive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Layer
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::dyn_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Layer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlayCanvas/DrawMode Opacity
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlayCanvas::DrawMode& GlobalNamespace::OVROverlayCanvas::dyn_Opacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_Opacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Opacity"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlayCanvas::DrawMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ScaleViewport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVROverlayCanvas::dyn_ScaleViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::dyn_ScaleViewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleViewport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVROverlayCanvas.Start
void GlobalNamespace::OVROverlayCanvas::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnDestroy
void GlobalNamespace::OVROverlayCanvas::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnEnable
void GlobalNamespace::OVROverlayCanvas::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.OnDisable
void GlobalNamespace::OVROverlayCanvas::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.ShouldRender
bool GlobalNamespace::OVROverlayCanvas::ShouldRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::ShouldRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVROverlayCanvas*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.Update
void GlobalNamespace::OVROverlayCanvas::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.get_overlayEnabled
bool GlobalNamespace::OVROverlayCanvas::get_overlayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::get_overlayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overlayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVROverlayCanvas.set_overlayEnabled
void GlobalNamespace::OVROverlayCanvas::set_overlayEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::set_overlayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overlayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVROverlayCanvas..cctor
void GlobalNamespace::OVROverlayCanvas::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVROverlayCanvas", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVROverlayCanvas/DrawMode
#include "GlobalNamespace/OVROverlayCanvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode Opaque
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_Opaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "Opaque"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode Opaque
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_Opaque(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_Opaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "Opaque", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode OpaqueWithClip
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_OpaqueWithClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_OpaqueWithClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "OpaqueWithClip"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode OpaqueWithClip
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_OpaqueWithClip(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_OpaqueWithClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "OpaqueWithClip", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode TransparentDefaultAlpha
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentDefaultAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentDefaultAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "TransparentDefaultAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode TransparentDefaultAlpha
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentDefaultAlpha(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentDefaultAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "TransparentDefaultAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public OVROverlayCanvas/DrawMode TransparentCorrectAlpha
::GlobalNamespace::OVROverlayCanvas::DrawMode GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentCorrectAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_get_TransparentCorrectAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVROverlayCanvas::DrawMode>("", "OVROverlayCanvas/DrawMode", "TransparentCorrectAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVROverlayCanvas/DrawMode TransparentCorrectAlpha
void GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentCorrectAlpha(::GlobalNamespace::OVROverlayCanvas::DrawMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::_set_TransparentCorrectAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVROverlayCanvas/DrawMode", "TransparentCorrectAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVROverlayCanvas::DrawMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVROverlayCanvas::DrawMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMenu
#include "GlobalNamespace/StartMenu.hpp"
// Including type: StartMenu/<>c__DisplayClass3_0
#include "GlobalNamespace/StartMenu_--c__DisplayClass3_0.hpp"
// Including type: OVROverlay
#include "GlobalNamespace/OVROverlay.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVROverlay overlay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::StartMenu::dyn_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_overlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVROverlay text
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVROverlay*& GlobalNamespace::StartMenu::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig vrRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::StartMenu::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMenu.Start
void GlobalNamespace::StartMenu::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StartMenu.LoadScene
void GlobalNamespace::StartMenu::LoadScene(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMenu/<>c__DisplayClass3_0
#include "GlobalNamespace/StartMenu_--c__DisplayClass3_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_sceneIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_sceneIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StartMenu <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StartMenu*& GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StartMenu**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMenu/<>c__DisplayClass3_0.<Start>b__0
void GlobalNamespace::StartMenu::$$c__DisplayClass3_0::$Start$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::<Start>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MouseLook/RotationAxes axes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouseLook::RotationAxes& GlobalNamespace::MouseLook::dyn_axes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_axes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook::RotationAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Update
void GlobalNamespace::MouseLook::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.Start
void GlobalNamespace::MouseLook::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook/RotationAxes
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseXAndY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseXAndY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseXAndY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseXAndY", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseX
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseX"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseX
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseX(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseX", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MouseLook::RotationAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPReflectionZone
#include "GlobalNamespace/ONSPReflectionZone.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* GlobalNamespace::ONSPReflectionZone::_get_snapshotList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_snapshotList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>*>("", "ONSPReflectionZone", "snapshotList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
void GlobalNamespace::ONSPReflectionZone::_set_snapshotList(::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_snapshotList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "snapshotList", value));
}
// Autogenerated static field getter
// Get static field: static private ReflectionSnapshot currentSnapshot
::GlobalNamespace::ReflectionSnapshot GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionSnapshot>("", "ONSPReflectionZone", "currentSnapshot"));
}
// Autogenerated static field setter
// Set static field: static private ReflectionSnapshot currentSnapshot
void GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot(::GlobalNamespace::ReflectionSnapshot value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "currentSnapshot", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot mixerSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPReflectionZone::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPReflectionZone.Start
void GlobalNamespace::ONSPReflectionZone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.Update
void GlobalNamespace::ONSPReflectionZone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerEnter
void GlobalNamespace::ONSPReflectionZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerExit
void GlobalNamespace::ONSPReflectionZone::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.CheckForAudioListener
bool GlobalNamespace::ONSPReflectionZone::CheckForAudioListener(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::CheckForAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: ONSPReflectionZone.PushCurrentMixerShapshot
void GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurrentMixerShapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.PopCurrentMixerSnapshot
void GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurrentMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues(ByRef<::GlobalNamespace::ReflectionSnapshot> mss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(mss));
}
// Autogenerated method: ONSPReflectionZone..cctor
void GlobalNamespace::ONSPReflectionZone::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPReflectionZone", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSpatializerUnity
#include "GlobalNamespace/OculusSpatializerUnity.hpp"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HIT_COUNT
int GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusSpatializerUnity", "HIT_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIT_COUNT
void GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "HIT_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.LayerMask gLayerMask
::UnityEngine::LayerMask GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LayerMask>("", "OculusSpatializerUnity", "gLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.LayerMask gLayerMask
void GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "gLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String strOSP
::StringW GlobalNamespace::OculusSpatializerUnity::_get_strOSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_strOSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusSpatializerUnity", "strOSP"));
}
// Autogenerated static field setter
// Set static field: static private System.String strOSP
void GlobalNamespace::OculusSpatializerUnity::_set_strOSP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_strOSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "strOSP", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OculusSpatializerUnity::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean roomVisualizationInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomVisualizationInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raysPerSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raysPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomInterpSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomInterpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxWallDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxWallDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rayCacheSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCacheSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicReflectionsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicReflectionsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject room
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OculusSpatializerUnity::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer[] wallRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Renderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] dims
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_dims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dims"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] coefs
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_coefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_coefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coefs"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] normals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem sys
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::OculusSpatializerUnity::dyn_sys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_sys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sys"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/Particle[] particles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::OculusSpatializerUnity::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSpatializerUnity.swapHandedness
::UnityEngine::Vector3 GlobalNamespace::OculusSpatializerUnity::swapHandedness(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::swapHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "swapHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: OculusSpatializerUnity.AudioRaycast
void GlobalNamespace::OculusSpatializerUnity::AudioRaycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "AudioRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity.Start
void GlobalNamespace::OculusSpatializerUnity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OnDestroy
void GlobalNamespace::OculusSpatializerUnity::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.Update
void GlobalNamespace::OculusSpatializerUnity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.inititalizeRoomVisualization
void GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inititalizeRoomVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback* callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::System::IntPtr callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysPerSecond
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RaysPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RaysPerSecond);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomInterpSpeed
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomInterpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InterpSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InterpSpeed);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomMaxWallDistance
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomMaxWallDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MaxWallDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, MaxWallDistance);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysRayCacheSize
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysRayCacheSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RayCacheSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RayCacheSize);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_UpdateRoomModel
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel(float wetLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_UpdateRoomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wetLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wetLevel);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRoomDimensions
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions(::ArrayW<float> roomDimensions, ::ArrayW<float> reflectionsCoefs, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRoomDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomDimensions), ::il2cpp_utils::ExtractType(reflectionsCoefs), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomDimensions, reflectionsCoefs, byref(position));
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRaycastHits
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits(::ArrayW<::UnityEngine::Vector3> points, ::ArrayW<::UnityEngine::Vector3> normals, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, normals, length);
}
// Autogenerated method: OculusSpatializerUnity..cctor
void GlobalNamespace::OculusSpatializerUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.Invoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data, callback, object);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.EndInvoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(normal), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 numFOAChannels
int GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "numFOAChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numFOAChannels
void GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "numFOAChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 paramVSpeakerMode
int GlobalNamespace::ONSPAmbisonicsNative::_get_paramVSpeakerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_paramVSpeakerMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "paramVSpeakerMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 paramVSpeakerMode
void GlobalNamespace::ONSPAmbisonicsNative::_set_paramVSpeakerMode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_paramVSpeakerMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "paramVSpeakerMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 paramAmbiStat
int GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "paramAmbiStat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 paramAmbiStat
void GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "paramAmbiStat", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource source
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ONSPAmbisonicsNative::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus currentStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus& GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useVirtualSpeakers
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAmbisonicsNative::dyn_useVirtualSpeakers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_useVirtualSpeakers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useVirtualSpeakers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAmbisonicsNative.get_UseVirtualSpeakers
bool GlobalNamespace::ONSPAmbisonicsNative::get_UseVirtualSpeakers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::get_UseVirtualSpeakers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseVirtualSpeakers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.set_UseVirtualSpeakers
void GlobalNamespace::ONSPAmbisonicsNative::set_UseVirtualSpeakers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::set_UseVirtualSpeakers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseVirtualSpeakers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAmbisonicsNative.OnEnable
void GlobalNamespace::ONSPAmbisonicsNative::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.Update
void GlobalNamespace::ONSPAmbisonicsNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative..cctor
void GlobalNamespace::ONSPAmbisonicsNative::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAmbisonicsNative", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPAudioSource::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPAudioSource", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPAudioSource::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "strONSPS", value));
}
// Autogenerated static field getter
// Get static field: static private ONSPAudioSource RoomReflectionGizmoAS
::GlobalNamespace::ONSPAudioSource* GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource*>("", "ONSPAudioSource", "RoomReflectionGizmoAS"));
}
// Autogenerated static field setter
// Set static field: static private ONSPAudioSource RoomReflectionGizmoAS
void GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS(::GlobalNamespace::ONSPAudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "RoomReflectionGizmoAS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useInvSqr
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_useInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_useInvSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInvSqr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single near
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_near");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "near"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single far
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_far");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "far"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumetricRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetricRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reverbSend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_reverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_reverbSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbSend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableRfl
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableRfl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRfl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAudioSource.OnBeforeSceneLoadRuntimeMethod
void GlobalNamespace::ONSPAudioSource::OnBeforeSceneLoadRuntimeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnBeforeSceneLoadRuntimeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "OnBeforeSceneLoadRuntimeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPAudioSource.ONSP_GetGlobalRoomReflectionValues
void GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues(ByRef<bool> reflOn, ByRef<bool> reverbOn, ByRef<float> width, ByRef<float> height, ByRef<float> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "ONSP_GetGlobalRoomReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflOn), ::il2cpp_utils::ExtractType(reverbOn), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(reflOn), byref(reverbOn), byref(width), byref(height), byref(length));
}
// Autogenerated method: ONSPAudioSource.get_EnableSpatialization
bool GlobalNamespace::ONSPAudioSource::get_EnableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableSpatialization
void GlobalNamespace::ONSPAudioSource::set_EnableSpatialization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Gain
float GlobalNamespace::ONSPAudioSource::get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Gain
void GlobalNamespace::ONSPAudioSource::set_Gain(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_UseInvSqr
bool GlobalNamespace::ONSPAudioSource::get_UseInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_UseInvSqr
void GlobalNamespace::ONSPAudioSource::set_UseInvSqr(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Near
float GlobalNamespace::ONSPAudioSource::get_Near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Near
void GlobalNamespace::ONSPAudioSource::set_Near(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Far
float GlobalNamespace::ONSPAudioSource::get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Far
void GlobalNamespace::ONSPAudioSource::set_Far(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_VolumetricRadius
float GlobalNamespace::ONSPAudioSource::get_VolumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_VolumetricRadius
void GlobalNamespace::ONSPAudioSource::set_VolumetricRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_ReverbSend
float GlobalNamespace::ONSPAudioSource::get_ReverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_ReverbSend
void GlobalNamespace::ONSPAudioSource::set_ReverbSend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_EnableRfl
bool GlobalNamespace::ONSPAudioSource::get_EnableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableRfl
void GlobalNamespace::ONSPAudioSource::set_EnableRfl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.Awake
void GlobalNamespace::ONSPAudioSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Start
void GlobalNamespace::ONSPAudioSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Update
void GlobalNamespace::ONSPAudioSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.SetParameters
void GlobalNamespace::ONSPAudioSource::SetParameters(ByRef<::UnityEngine::AudioSource*> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::SetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source));
}
// Autogenerated method: ONSPAudioSource.OnDrawGizmos
void GlobalNamespace::ONSPAudioSource::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OnDestroy
void GlobalNamespace::ONSPAudioSource::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OSP_SetGlobalVoiceLimit
int GlobalNamespace::ONSPAudioSource::OSP_SetGlobalVoiceLimit(int VoiceLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OSP_SetGlobalVoiceLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "OSP_SetGlobalVoiceLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(VoiceLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, VoiceLimit);
}
// Autogenerated method: ONSPAudioSource..cctor
void GlobalNamespace::ONSPAudioSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_GAIN
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_GAIN
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_USEINVSQR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_USEINVSQR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_USEINVSQR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_USEINVSQR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NEAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NEAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NEAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NEAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_FAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_FAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_FAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_FAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_RADIUS
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_RADIUS
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_VSPEAKERMODE
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_VSPEAKERMODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_VSPEAKERMODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_VSPEAKERMODE"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_VSPEAKERMODE
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_VSPEAKERMODE(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_VSPEAKERMODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_VSPEAKERMODE", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_AMBISTAT
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_AMBISTAT"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_AMBISTAT
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_AMBISTAT", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_SENDLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_SENDLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NUM
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NUM"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NUM
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NUM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPProfiler
#include "GlobalNamespace/ONSPProfiler.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_PORT
int GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPProfiler", "DEFAULT_PORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_PORT
void GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "DEFAULT_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPProfiler::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPProfiler", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPProfiler::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "strONSPS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean profilerEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPProfiler::dyn_profilerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_profilerEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilerEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPProfiler::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPProfiler.Start
void GlobalNamespace::ONSPProfiler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.Update
void GlobalNamespace::ONSPProfiler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerEnabled
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerPort
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationGeometry
#include "GlobalNamespace/ONSPPropagationGeometry.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String GeometryAssetDirectory
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GeometryAssetDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.String GeometryAssetDirectory
void GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GeometryAssetDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OSPSuccess
int GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "OSPSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OSPSuccess
void GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "OSPSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GEOMETRY_FILE_EXTENSION
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String GEOMETRY_FILE_EXTENSION
void GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 terrainDecimation
int GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "terrainDecimation"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 terrainDecimation
void GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "terrainDecimation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String filePathRelative
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePathRelative"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fileEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeChildMeshes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeChildMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr geometryHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "geometryHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationGeometry.get_GeometryAssetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "get_GeometryAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.get_filePath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.GetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::GetPath(::UnityEngine::Transform* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: ONSPPropagationGeometry.Awake
void GlobalNamespace::ONSPPropagationGeometry::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.CreatePropagationGeometry
void GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePropagationGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.Update
void GlobalNamespace::ONSPPropagationGeometry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.OnDestroy
void GlobalNamespace::ONSPPropagationGeometry::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.traverseMeshHierarchy
void GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy(::UnityEngine::GameObject* obj, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> currentMaterials, bool includeChildren, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::MeshMaterial>* meshMaterials, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::TerrainMaterial>* terrainMaterials, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "traverseMeshHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(currentMaterials), ::il2cpp_utils::ExtractType(includeChildren), ::il2cpp_utils::ExtractType(meshMaterials), ::il2cpp_utils::ExtractType(terrainMaterials), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, currentMaterials, includeChildren, meshMaterials, terrainMaterials, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal);
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMeshFilter
void GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* tempVertices, ::System::Collections::Generic::List_1<int>* tempIndices, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::ArrayW<float> vertices, ::ArrayW<int> indices, ByRef<int> vertexOffset, ByRef<int> indexOffset, ByRef<int> groupOffset, ::UnityEngine::Mesh* mesh, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> materials, ::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "uploadMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempVertices), ::il2cpp_utils::ExtractType(tempIndices), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(vertexOffset), ::il2cpp_utils::ExtractType(indexOffset), ::il2cpp_utils::ExtractType(groupOffset), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tempVertices, tempIndices, groups, vertices, indices, byref(vertexOffset), byref(indexOffset), byref(groupOffset), mesh, materials, matrix);
}
// Autogenerated method: ONSPPropagationGeometry.updateCountsForMesh
void GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh(ByRef<int> totalVertexCount, ByRef<uint> totalIndexCount, ByRef<int> totalFaceCount, ByRef<int> totalMaterialCount, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "updateCountsForMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalVertexCount), ::il2cpp_utils::ExtractType(totalIndexCount), ::il2cpp_utils::ExtractType(totalFaceCount), ::il2cpp_utils::ExtractType(totalMaterialCount), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(totalVertexCount), byref(totalIndexCount), byref(totalFaceCount), byref(totalMaterialCount), mesh);
}
// Autogenerated method: ONSPPropagationGeometry.UploadGeometry
void GlobalNamespace::ONSPPropagationGeometry::UploadGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::UploadGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.ReadFile
bool GlobalNamespace::ONSPPropagationGeometry::ReadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::ReadFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.WriteToObj
bool GlobalNamespace::ONSPPropagationGeometry::WriteToObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::WriteToObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry..cctor
void GlobalNamespace::ONSPPropagationGeometry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPPropagation/PropagationInterface CachedInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::_get_CachedInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_get_CachedInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::PropagationInterface*>("", "ONSPPropagation", "CachedInterface"));
}
// Autogenerated static field setter
// Set static field: static private ONSPPropagation/PropagationInterface CachedInterface
void GlobalNamespace::ONSPPropagation::_set_CachedInterface(::GlobalNamespace::ONSPPropagation::PropagationInterface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_set_CachedInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation", "CachedInterface", value));
}
// Autogenerated method: ONSPPropagation.get_Interface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::get_Interface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "get_Interface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagation.FindInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::FindInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FindInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "FindInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/UnityNativeInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/UnityNativeInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/WwisePluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/WwisePluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/FMODPluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/FMODPluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr materialHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum absorption
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_absorption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_absorption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absorption"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum transmission
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_transmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_transmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmission"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum scattering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_scattering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_scattering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scattering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPPropagationMaterial/Preset preset_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Preset& GlobalNamespace::ONSPPropagationMaterial::dyn_preset_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_preset_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preset_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Preset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial.get_preset
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::get_preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::get_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagationMaterial::Preset, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.set_preset
void GlobalNamespace::ONSPPropagationMaterial::set_preset(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::set_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPPropagationMaterial.Start
void GlobalNamespace::ONSPPropagationMaterial::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.StartInternal
void GlobalNamespace::ONSPPropagationMaterial::StartInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::StartInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.OnDestroy
void GlobalNamespace::ONSPPropagationMaterial::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.DestroyInternal
void GlobalNamespace::ONSPPropagationMaterial::DestroyInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::DestroyInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.UploadMaterial
void GlobalNamespace::ONSPPropagationMaterial::UploadMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::UploadMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.SetPreset
void GlobalNamespace::ONSPPropagationMaterial::SetPreset(::GlobalNamespace::ONSPPropagationMaterial::Preset preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SetPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: ONSPPropagationMaterial.AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::AcousticTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::AcousticTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "AcousticTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Brick
void GlobalNamespace::ONSPPropagationMaterial::Brick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Brick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Brick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::BrickPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::BrickPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "BrickPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Carpet
void GlobalNamespace::ONSPPropagationMaterial::Carpet(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Carpet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Carpet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavyPadded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::CeramicTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CeramicTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CeramicTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Concrete
void GlobalNamespace::ONSPPropagationMaterial::Concrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Concrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Concrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::ConcreteRough(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteRough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteRough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlockPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Curtain
void GlobalNamespace::ONSPPropagationMaterial::Curtain(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Curtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Curtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Foliage
void GlobalNamespace::ONSPPropagationMaterial::Foliage(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Foliage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Foliage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Glass
void GlobalNamespace::ONSPPropagationMaterial::Glass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Glass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Glass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::GlassHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GlassHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GlassHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Grass
void GlobalNamespace::ONSPPropagationMaterial::Grass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Grass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Grass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Gravel
void GlobalNamespace::ONSPPropagationMaterial::Gravel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Gravel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Gravel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::GypsumBoard(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GypsumBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GypsumBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Soil
void GlobalNamespace::ONSPPropagationMaterial::Soil(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Soil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Soil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.SoundProof
void GlobalNamespace::ONSPPropagationMaterial::SoundProof(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SoundProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "SoundProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Snow
void GlobalNamespace::ONSPPropagationMaterial::Snow(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Snow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Snow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Steel
void GlobalNamespace::ONSPPropagationMaterial::Steel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Steel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Steel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Water
void GlobalNamespace::ONSPPropagationMaterial::Water(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Water");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Water", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThin
void GlobalNamespace::ONSPPropagationMaterial::WoodThin(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThick
void GlobalNamespace::ONSPPropagationMaterial::WoodThick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::WoodFloor(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodOnConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Preset
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Custom
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Custom
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset AcousticTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "AcousticTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "AcousticTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Brick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Brick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Brick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Brick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset BrickPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "BrickPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "BrickPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Carpet
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Carpet"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Carpet
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Carpet", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CeramicTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CeramicTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CeramicTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Concrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Concrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Concrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Concrete", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteRough
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteRough"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteRough", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Curtain
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Curtain"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Curtain
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Curtain", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Foliage
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Foliage"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Foliage
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Foliage", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Glass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Glass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Glass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Glass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GlassHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GlassHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GlassHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Grass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Grass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Grass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Gravel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Gravel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Gravel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Gravel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GypsumBoard
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GypsumBoard"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GypsumBoard", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Soil
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Soil"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Soil
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Soil", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset SoundProof
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "SoundProof"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset SoundProof
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "SoundProof", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Snow
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Snow"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Snow
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Snow", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Steel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Steel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Steel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Steel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Water
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Water"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Water
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Water", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThin
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThin"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThin
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThin", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodFloor
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodFloor"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodFloor", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single data
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 selection
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ONSPPropagationMaterial/Point> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>*& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum.get_Item
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9(::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1", value)));
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c..cctor
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial/Spectrum/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_0
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_0(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_1
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_1(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationSettings
#include "GlobalNamespace/ONSPPropagationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single quality
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationSettings::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationSettings.Update
void GlobalNamespace::ONSPPropagationSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPSettings
#include "GlobalNamespace/ONSPSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPSettings instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPSettings*>("", "ONSPSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private ONSPSettings instance
void GlobalNamespace::ONSPSettings::_set_instance(::GlobalNamespace::ONSPSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 voiceLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPSettings::dyn_voiceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::dyn_voiceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPSettings.get_Instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPVersion
#include "GlobalNamespace/ONSPVersion.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPVersion::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPVersion", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPVersion::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPVersion", "strONSPS", value));
}
// Autogenerated method: ONSPVersion.ONSP_GetVersion
void GlobalNamespace::ONSPVersion::ONSP_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::ONSP_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPVersion", "ONSP_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: ONSPVersion.Awake
void GlobalNamespace::ONSPVersion::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Start
void GlobalNamespace::ONSPVersion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Update
void GlobalNamespace::ONSPVersion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CameraOrbit
#include "GlobalNamespace/CameraOrbit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CameraOrbit::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CameraOrbit::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CameraOrbit.Update
void GlobalNamespace::CameraOrbit::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CameraOrbit::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DemoController
#include "GlobalNamespace/DemoController.hpp"
// Including type: PageCurl
#include "GlobalNamespace/PageCurl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean automatic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DemoController::dyn_automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::dyn_automatic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automatic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canFlip
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DemoController::dyn_canFlip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::dyn_canFlip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canFlip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PageCurl curler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PageCurl*& GlobalNamespace::DemoController::dyn_curler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::dyn_curler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PageCurl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DemoController.Awake
void GlobalNamespace::DemoController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DemoController.Update
void GlobalNamespace::DemoController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DemoController.OnPageFlip
void GlobalNamespace::DemoController::OnPageFlip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DemoController::OnPageFlip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPageFlip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PageCurl
#include "GlobalNamespace/PageCurl.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single initRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_initRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_initRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_endRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_endRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotRatio
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_rotRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_rotRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single theta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_theta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_theta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "theta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single apex
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_apex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_apex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean invertDirection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PageCurl::dyn_invertDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_invertDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invertDirection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single initTheta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_initTheta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_initTheta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initTheta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single initApex
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_initApex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_initApex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initApex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] materialRefs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::PageCurl::dyn_materialRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_materialRefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialRefs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 localScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::PageCurl::dyn_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_localScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCopy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PageCurl::dyn_isCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_isCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCopy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pageNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PageCurl::dyn__pageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn__pageNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single prevTheta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_prevTheta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_prevTheta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevTheta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single prevRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_prevRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single prevInitRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_prevInitRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_prevInitRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevInitRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single prevEndRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageCurl::dyn_prevEndRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::dyn_prevEndRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevEndRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PageCurl.get_pageNumber
int GlobalNamespace::PageCurl::get_pageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::get_pageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.set_pageNumber
void GlobalNamespace::PageCurl::set_pageNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::set_pageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PageCurl.Start
void GlobalNamespace::PageCurl::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.Update
void GlobalNamespace::PageCurl::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.Flip
float GlobalNamespace::PageCurl::Flip(bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::Flip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backwards)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, backwards);
}
// Autogenerated method: PageCurl.FlipPartial
float GlobalNamespace::PageCurl::FlipPartial(bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::FlipPartial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlipPartial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backwards)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, backwards);
}
// Autogenerated method: PageCurl.FlipFast
float GlobalNamespace::PageCurl::FlipFast(bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::FlipFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlipFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backwards)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, backwards);
}
// Autogenerated method: PageCurl.Reset
void GlobalNamespace::PageCurl::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.get_FrontTexture
::UnityEngine::Texture* GlobalNamespace::PageCurl::get_FrontTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::get_FrontTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrontTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.set_FrontTexture
void GlobalNamespace::PageCurl::set_FrontTexture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::set_FrontTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FrontTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PageCurl.get_BackTexture
::UnityEngine::Texture* GlobalNamespace::PageCurl::get_BackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::get_BackTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BackTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.set_BackTexture
void GlobalNamespace::PageCurl::set_BackTexture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::set_BackTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BackTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PageCurl.OnPageFlip
void GlobalNamespace::PageCurl::OnPageFlip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::OnPageFlip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPageFlip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PageCurl.GetMaterials
::ArrayW<::UnityEngine::Material*> GlobalNamespace::PageCurl::GetMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageCurl::GetMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Material*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VillageWellEffect
#include "GlobalNamespace/VillageWellEffect.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform rope
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VillageWellEffect::dyn_rope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::dyn_rope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rope"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform bucket
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VillageWellEffect::dyn_bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::dyn_bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucket"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform bucketParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VillageWellEffect::dyn_bucketParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::dyn_bucketParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucketParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VillageWellEffect::dyn_effectAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::dyn_effectAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAmt
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VillageWellEffect::dyn_lastAmt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::dyn_lastAmt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAmt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VillageWellEffect.Start
void GlobalNamespace::VillageWellEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VillageWellEffect.Update
void GlobalNamespace::VillageWellEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VillageWellEffect.UpdateRope
void GlobalNamespace::VillageWellEffect::UpdateRope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VillageWellEffect::UpdateRope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GotoWaypoint
#include "GlobalNamespace/GotoWaypoint.hpp"
// Including type: Jacovone.PathMagic
#include "Jacovone/PathMagic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 requestedWaypoint
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GotoWaypoint::dyn_requestedWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::dyn_requestedWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedWaypoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Jacovone.PathMagic pathMagic
[[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& GlobalNamespace::GotoWaypoint::dyn_pathMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::dyn_pathMagic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathMagic"))->offset;
  return *reinterpret_cast<::Jacovone::PathMagic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastRequestedWaypoint
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GotoWaypoint::dyn_lastRequestedWaypoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::dyn_lastRequestedWaypoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRequestedWaypoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastRequestedPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GotoWaypoint::dyn_lastRequestedPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::dyn_lastRequestedPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRequestedPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GotoWaypoint.Start
void GlobalNamespace::GotoWaypoint::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GotoWaypoint.Update
void GlobalNamespace::GotoWaypoint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GotoWaypoint.CalcPosForWaypointIndex
float GlobalNamespace::GotoWaypoint::CalcPosForWaypointIndex(::Jacovone::PathMagic* pm, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::CalcPosForWaypointIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcPosForWaypointIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pm), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pm, index);
}
// Autogenerated method: GotoWaypoint.ComputePosForWaypoint
float GlobalNamespace::GotoWaypoint::ComputePosForWaypoint(::Jacovone::PathMagic* pm, int waypoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GotoWaypoint::ComputePosForWaypoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePosForWaypoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pm), ::il2cpp_utils::ExtractType(waypoint)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pm, waypoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Demo
#include "GlobalNamespace/Demo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PDollarGestureRecognizer.Gesture
#include "PDollarGestureRecognizer/Gesture.hpp"
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform gestureOnScreenPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Demo::dyn_gestureOnScreenPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_gestureOnScreenPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gestureOnScreenPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Gesture> trainingSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>*& GlobalNamespace::Demo::dyn_trainingSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_trainingSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trainingSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Point> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>*& GlobalNamespace::Demo::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 strokeId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Demo::dyn_strokeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_strokeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strokeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 virtualKeyPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Demo::dyn_virtualKeyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_virtualKeyPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "virtualKeyPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect drawArea
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::Demo::dyn_drawArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_drawArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawArea"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RuntimePlatform platform
[[deprecated("Use field access instead!")]] ::UnityEngine::RuntimePlatform& GlobalNamespace::Demo::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::UnityEngine::RuntimePlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 vertexCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Demo::dyn_vertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_vertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.LineRenderer> gestureLinesRenderer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>*& GlobalNamespace::Demo::dyn_gestureLinesRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_gestureLinesRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gestureLinesRenderer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::LineRenderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer currentGestureLineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::Demo::dyn_currentGestureLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_currentGestureLineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGestureLineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Demo::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recognized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Demo::dyn_recognized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_recognized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recognized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String newGestureName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Demo::dyn_newGestureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::dyn_newGestureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newGestureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Demo.Start
void GlobalNamespace::Demo::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Demo.Update
void GlobalNamespace::Demo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Demo.OnGUI
void GlobalNamespace::Demo::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Demo::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoweruiManager
#include "GlobalNamespace/PoweruiManager.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset HtmlFile
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::PoweruiManager::dyn_HtmlFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManager::dyn_HtmlFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HtmlFile"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SimpleResolution
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoweruiManager::dyn_SimpleResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManager::dyn_SimpleResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SimpleResolution"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoweruiManager.OnEnable
void GlobalNamespace::PoweruiManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoweruiManager.OnDisable
void GlobalNamespace::PoweruiManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoweruiManagerLiveFile
#include "GlobalNamespace/PoweruiManagerLiveFile.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset HtmlFile
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::PoweruiManagerLiveFile::dyn_HtmlFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveFile::dyn_HtmlFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HtmlFile"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SimpleResolution
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PoweruiManagerLiveFile::dyn_SimpleResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveFile::dyn_SimpleResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SimpleResolution"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoweruiManagerLiveFile.OnEnable
void GlobalNamespace::PoweruiManagerLiveFile::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveFile::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoweruiManagerLiveFile.OnHtmlChanged
void GlobalNamespace::PoweruiManagerLiveFile::OnHtmlChanged(::StringW path, ::StringW html) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveFile::OnHtmlChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHtmlChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(html)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, html);
}
// Autogenerated method: PoweruiManagerLiveFile.OnDisable
void GlobalNamespace::PoweruiManagerLiveFile::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveFile::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoweruiManagerLiveText
#include "GlobalNamespace/PoweruiManagerLiveText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Html
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PoweruiManagerLiveText::dyn_Html() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveText::dyn_Html");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Html"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String CachedHtml
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PoweruiManagerLiveText::dyn_CachedHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveText::dyn_CachedHtml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CachedHtml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoweruiManagerLiveText.Update
void GlobalNamespace::PoweruiManagerLiveText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerLiveText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoweruiManagerMinimal
#include "GlobalNamespace/PoweruiManagerMinimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PoweruiManagerMinimal.Start
void GlobalNamespace::PoweruiManagerMinimal::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoweruiManagerMinimal::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: qb_Group
#include "GlobalNamespace/qb_Group.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String groupName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::qb_Group::dyn_groupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::dyn_groupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean visible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::qb_Group::dyn_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::dyn_visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frozen
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::qb_Group::dyn_frozen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::dyn_frozen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frozen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: qb_Group.AddObject
void GlobalNamespace::qb_Group::AddObject(::UnityEngine::GameObject* newObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::AddObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newObject);
}
// Autogenerated method: qb_Group.Hide
void GlobalNamespace::qb_Group::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: qb_Group.Show
void GlobalNamespace::qb_Group::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: qb_Group.Freeze
void GlobalNamespace::qb_Group::Freeze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::Freeze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Freeze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: qb_Group.UnFreeze
void GlobalNamespace::qb_Group::UnFreeze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::UnFreeze");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnFreeze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: qb_Group.CleanUp
void GlobalNamespace::qb_Group::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::qb_Group::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: qb_Object
#include "GlobalNamespace/qb_Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProgressBarPro
#include "GlobalNamespace/ProgressBarPro.hpp"
// Including type: PlayfulSystems.ProgressBar.ProgressBarProView
#include "PlayfulSystems/ProgressBar/ProgressBarProView.hpp"
// Including type: ProgressBarPro/<DoBarSizeAnim>d__20
#include "GlobalNamespace/ProgressBarPro_-DoBarSizeAnim-d__20.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_value
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single displayValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::dyn_displayValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_displayValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean animateBar
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ProgressBarPro::dyn_animateBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_animateBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animateBar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ProgressBarPro/AnimationType animationType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro::AnimationType& GlobalNamespace::ProgressBarPro::dyn_animationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProgressBarPro::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single animTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::dyn_animTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_animTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayfulSystems.ProgressBar.ProgressBarProView[] views
[[deprecated("Use field access instead!")]] ::ArrayW<::PlayfulSystems::ProgressBar::ProgressBarProView*>& GlobalNamespace::ProgressBarPro::dyn_views() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_views");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "views"))->offset;
  return *reinterpret_cast<::ArrayW<::PlayfulSystems::ProgressBar::ProgressBarProView*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine sizeAnim
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::ProgressBarPro::dyn_sizeAnim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::dyn_sizeAnim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeAnim"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProgressBarPro.Start
void GlobalNamespace::ProgressBarPro::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.OnEnable
void GlobalNamespace::ProgressBarPro::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.get_Value
float GlobalNamespace::ProgressBarPro::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.set_Value
void GlobalNamespace::ProgressBarPro::set_Value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ProgressBarPro.SetValue
void GlobalNamespace::ProgressBarPro::SetValue(float value, float maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, maxValue);
}
// Autogenerated method: ProgressBarPro.SetValue
void GlobalNamespace::ProgressBarPro::SetValue(int value, int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(maxValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, maxValue);
}
// Autogenerated method: ProgressBarPro.SetValue
void GlobalNamespace::ProgressBarPro::SetValue(float percentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percentage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percentage);
}
// Autogenerated method: ProgressBarPro.IsAnimating
bool GlobalNamespace::ProgressBarPro::IsAnimating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::IsAnimating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAnimating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.SetBarColor
void GlobalNamespace::ProgressBarPro::SetBarColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::SetBarColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBarColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: ProgressBarPro.ForceColorUpdate
void GlobalNamespace::ProgressBarPro::ForceColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::ForceColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.StartSizeAnim
void GlobalNamespace::ProgressBarPro::StartSizeAnim(float percentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::StartSizeAnim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSizeAnim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percentage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percentage);
}
// Autogenerated method: ProgressBarPro.DoBarSizeAnim
::System::Collections::IEnumerator* GlobalNamespace::ProgressBarPro::DoBarSizeAnim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::DoBarSizeAnim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoBarSizeAnim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.ForceValueRefresh
void GlobalNamespace::ProgressBarPro::ForceValueRefresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::ForceValueRefresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceValueRefresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro.SetDisplayValue
void GlobalNamespace::ProgressBarPro::SetDisplayValue(float value, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::SetDisplayValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(forceUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, forceUpdate);
}
// Autogenerated method: ProgressBarPro.UpdateBarViews
void GlobalNamespace::ProgressBarPro::UpdateBarViews(float currentValue, float targetValue, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::UpdateBarViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBarViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(forceUpdate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentValue, targetValue, forceUpdate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProgressBarPro/AnimationType
#include "GlobalNamespace/ProgressBarPro.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ProgressBarPro/AnimationType FixedTimeForChange
::GlobalNamespace::ProgressBarPro::AnimationType GlobalNamespace::ProgressBarPro::AnimationType::_get_FixedTimeForChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::AnimationType::_get_FixedTimeForChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ProgressBarPro::AnimationType>("", "ProgressBarPro/AnimationType", "FixedTimeForChange"));
}
// Autogenerated static field setter
// Set static field: static public ProgressBarPro/AnimationType FixedTimeForChange
void GlobalNamespace::ProgressBarPro::AnimationType::_set_FixedTimeForChange(::GlobalNamespace::ProgressBarPro::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::AnimationType::_set_FixedTimeForChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ProgressBarPro/AnimationType", "FixedTimeForChange", value));
}
// Autogenerated static field getter
// Get static field: static public ProgressBarPro/AnimationType ChangeSpeed
::GlobalNamespace::ProgressBarPro::AnimationType GlobalNamespace::ProgressBarPro::AnimationType::_get_ChangeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::AnimationType::_get_ChangeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ProgressBarPro::AnimationType>("", "ProgressBarPro/AnimationType", "ChangeSpeed"));
}
// Autogenerated static field setter
// Set static field: static public ProgressBarPro/AnimationType ChangeSpeed
void GlobalNamespace::ProgressBarPro::AnimationType::_set_ChangeSpeed(::GlobalNamespace::ProgressBarPro::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::AnimationType::_set_ChangeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ProgressBarPro/AnimationType", "ChangeSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProgressBarPro::AnimationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::AnimationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProgressBarPro/<DoBarSizeAnim>d__20
#include "GlobalNamespace/ProgressBarPro_-DoBarSizeAnim-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ProgressBarPro <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro*& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProgressBarPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startValue>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$startValue$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$startValue$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startValue>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$time$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$time$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <change>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$change$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$change$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<change>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>5__5
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$duration$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::dyn_$duration$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProgressBarPro/<DoBarSizeAnim>d__20.System.IDisposable.Dispose
void GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro/<DoBarSizeAnim>d__20.MoveNext
bool GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro/<DoBarSizeAnim>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro/<DoBarSizeAnim>d__20.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProgressBarPro/<DoBarSizeAnim>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ProgressBarPro::$DoBarSizeAnim$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageSlicedMirror
#include "GlobalNamespace/ImageSlicedMirror.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::ArrayW<::UnityEngine::Vector2> GlobalNamespace::ImageSlicedMirror::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("", "ImageSlicedMirror", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void GlobalNamespace::ImageSlicedMirror::_set_s_VertScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ImageSlicedMirror", "s_VertScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::ArrayW<::UnityEngine::Vector2> GlobalNamespace::ImageSlicedMirror::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("", "ImageSlicedMirror", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void GlobalNamespace::ImageSlicedMirror::_set_s_UVScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ImageSlicedMirror", "s_UVScratch", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] s_UVMultiplierScratch
::ArrayW<float> GlobalNamespace::ImageSlicedMirror::_get_s_UVMultiplierScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_get_s_UVMultiplierScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "ImageSlicedMirror", "s_UVMultiplierScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] s_UVMultiplierScratch
void GlobalNamespace::ImageSlicedMirror::_set_s_UVMultiplierScratch(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::_set_s_UVMultiplierScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ImageSlicedMirror", "s_UVMultiplierScratch", value));
}
// Autogenerated method: ImageSlicedMirror.GenerateSlicedFilledSprite
void GlobalNamespace::ImageSlicedMirror::GenerateSlicedFilledSprite(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::GenerateSlicedFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: ImageSlicedMirror.SetSlicedVerts
void GlobalNamespace::ImageSlicedMirror::SetSlicedVerts(::UnityEngine::Rect rect, ::UnityEngine::Vector4 border, ::UnityEngine::Vector4 padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::SetSlicedVerts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSlicedVerts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(padding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect, border, padding);
}
// Autogenerated method: ImageSlicedMirror.SetSlicedUVs
void GlobalNamespace::ImageSlicedMirror::SetSlicedUVs(::UnityEngine::Vector4 outer, ::UnityEngine::Vector4 inner, ::UnityEngine::Vector4 border) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::SetSlicedUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSlicedUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outer), ::il2cpp_utils::ExtractType(inner), ::il2cpp_utils::ExtractType(border)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outer, inner, border);
}
// Autogenerated method: ImageSlicedMirror.AddQuad
void GlobalNamespace::ImageSlicedMirror::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uvMin, ::UnityEngine::Vector2 uvMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ImageSlicedMirror", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax);
}
// Autogenerated method: ImageSlicedMirror.GetAdjustedBorders
::UnityEngine::Vector4 GlobalNamespace::ImageSlicedMirror::GetAdjustedBorders(::UnityEngine::Vector4 border, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, border, rect);
}
// Autogenerated method: ImageSlicedMirror..cctor
void GlobalNamespace::ImageSlicedMirror::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ImageSlicedMirror", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ImageSlicedMirror.OnPopulateMesh
void GlobalNamespace::ImageSlicedMirror::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ImageSlicedMirror::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Image*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RadialSlider
#include "GlobalNamespace/RadialSlider.hpp"
// Including type: RadialSlider/<TrackPointer>d__5
#include "GlobalNamespace/RadialSlider_-TrackPointer-d__5.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPointerDown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RadialSlider::dyn_isPointerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::dyn_isPointerDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPointerDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RadialSlider.OnPointerEnter
void GlobalNamespace::RadialSlider::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: RadialSlider.OnPointerExit
void GlobalNamespace::RadialSlider::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: RadialSlider.OnPointerDown
void GlobalNamespace::RadialSlider::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: RadialSlider.OnPointerUp
void GlobalNamespace::RadialSlider::OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: RadialSlider.TrackPointer
::System::Collections::IEnumerator* GlobalNamespace::RadialSlider::TrackPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::TrackPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RadialSlider/<TrackPointer>d__5
#include "GlobalNamespace/RadialSlider_-TrackPointer-d__5.hpp"
// Including type: UnityEngine.UI.GraphicRaycaster
#include "UnityEngine/UI/GraphicRaycaster.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RadialSlider <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RadialSlider*& GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RadialSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.GraphicRaycaster <ray>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::GraphicRaycaster*& GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$ray$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$ray$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ray>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::GraphicRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text <text>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$text$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::dyn_$text$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<text>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RadialSlider/<TrackPointer>d__5.System.IDisposable.Dispose
void GlobalNamespace::RadialSlider::$TrackPointer$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider::$TrackPointer$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RadialSlider/<TrackPointer>d__5.MoveNext
bool GlobalNamespace::RadialSlider::$TrackPointer$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider::$TrackPointer$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RadialSlider/<TrackPointer>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RadialSlider::$TrackPointer$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider::$TrackPointer$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RadialSlider/<TrackPointer>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::RadialSlider::$TrackPointer$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider::$TrackPointer$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RadialSlider/<TrackPointer>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RadialSlider::$TrackPointer$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RadialSlider::$TrackPointer$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::RadialSlider::$TrackPointer$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FmodResonanceAudio
#include "GlobalNamespace/FmodResonanceAudio.hpp"
// Including type: FmodResonanceAudio/RoomProperties
#include "GlobalNamespace/FmodResonanceAudio_RoomProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: FmodResonanceAudioRoom
#include "GlobalNamespace/FmodResonanceAudioRoom.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single maxGainDb
float GlobalNamespace::FmodResonanceAudio::_get_maxGainDb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_maxGainDb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "maxGainDb"));
}
// Autogenerated static field setter
// Set static field: static public System.Single maxGainDb
void GlobalNamespace::FmodResonanceAudio::_set_maxGainDb(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_maxGainDb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "maxGainDb", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single minGainDb
float GlobalNamespace::FmodResonanceAudio::_get_minGainDb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_minGainDb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "minGainDb"));
}
// Autogenerated static field setter
// Set static field: static public System.Single minGainDb
void GlobalNamespace::FmodResonanceAudio::_set_minGainDb(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_minGainDb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "minGainDb", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single maxReverbBrightness
float GlobalNamespace::FmodResonanceAudio::_get_maxReverbBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_maxReverbBrightness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "maxReverbBrightness"));
}
// Autogenerated static field setter
// Set static field: static public System.Single maxReverbBrightness
void GlobalNamespace::FmodResonanceAudio::_set_maxReverbBrightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_maxReverbBrightness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "maxReverbBrightness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single minReverbBrightness
float GlobalNamespace::FmodResonanceAudio::_get_minReverbBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_minReverbBrightness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "minReverbBrightness"));
}
// Autogenerated static field setter
// Set static field: static public System.Single minReverbBrightness
void GlobalNamespace::FmodResonanceAudio::_set_minReverbBrightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_minReverbBrightness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "minReverbBrightness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single maxReverbTime
float GlobalNamespace::FmodResonanceAudio::_get_maxReverbTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_maxReverbTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "maxReverbTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Single maxReverbTime
void GlobalNamespace::FmodResonanceAudio::_set_maxReverbTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_maxReverbTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "maxReverbTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single maxReflectivity
float GlobalNamespace::FmodResonanceAudio::_get_maxReflectivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_maxReflectivity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "FmodResonanceAudio", "maxReflectivity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single maxReflectivity
void GlobalNamespace::FmodResonanceAudio::_set_maxReflectivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_maxReflectivity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "maxReflectivity", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Matrix4x4 flipZ
::UnityEngine::Matrix4x4 GlobalNamespace::FmodResonanceAudio::_get_flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_flipZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Matrix4x4>("", "FmodResonanceAudio", "flipZ"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Matrix4x4 flipZ
void GlobalNamespace::FmodResonanceAudio::_set_flipZ(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_flipZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "flipZ", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String listenerPluginName
::StringW GlobalNamespace::FmodResonanceAudio::_get_listenerPluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_listenerPluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FmodResonanceAudio", "listenerPluginName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String listenerPluginName
void GlobalNamespace::FmodResonanceAudio::_set_listenerPluginName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_listenerPluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "listenerPluginName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 roomPropertiesSize
int GlobalNamespace::FmodResonanceAudio::_get_roomPropertiesSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_roomPropertiesSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FmodResonanceAudio", "roomPropertiesSize"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 roomPropertiesSize
void GlobalNamespace::FmodResonanceAudio::_set_roomPropertiesSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_roomPropertiesSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "roomPropertiesSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 roomPropertiesIndex
int GlobalNamespace::FmodResonanceAudio::_get_roomPropertiesIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_roomPropertiesIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FmodResonanceAudio", "roomPropertiesIndex"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 roomPropertiesIndex
void GlobalNamespace::FmodResonanceAudio::_set_roomPropertiesIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_roomPropertiesIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "roomPropertiesIndex", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Bounds bounds
::UnityEngine::Bounds GlobalNamespace::FmodResonanceAudio::_get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_bounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bounds>("", "FmodResonanceAudio", "bounds"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Bounds bounds
void GlobalNamespace::FmodResonanceAudio::_set_bounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_bounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "bounds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<FmodResonanceAudioRoom> enabledRooms
::System::Collections::Generic::List_1<::GlobalNamespace::FmodResonanceAudioRoom*>* GlobalNamespace::FmodResonanceAudio::_get_enabledRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_enabledRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::FmodResonanceAudioRoom*>*>("", "FmodResonanceAudio", "enabledRooms"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<FmodResonanceAudioRoom> enabledRooms
void GlobalNamespace::FmodResonanceAudio::_set_enabledRooms(::System::Collections::Generic::List_1<::GlobalNamespace::FmodResonanceAudioRoom*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_enabledRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "enabledRooms", value));
}
// Autogenerated static field getter
// Get static field: static private FMOD.VECTOR listenerPositionFmod
::FMOD::VECTOR GlobalNamespace::FmodResonanceAudio::_get_listenerPositionFmod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_listenerPositionFmod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::VECTOR>("", "FmodResonanceAudio", "listenerPositionFmod"));
}
// Autogenerated static field setter
// Set static field: static private FMOD.VECTOR listenerPositionFmod
void GlobalNamespace::FmodResonanceAudio::_set_listenerPositionFmod(::FMOD::VECTOR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_listenerPositionFmod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "listenerPositionFmod", value));
}
// Autogenerated static field getter
// Get static field: static private FMOD.DSP listenerPlugin
::FMOD::DSP GlobalNamespace::FmodResonanceAudio::_get_listenerPlugin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_get_listenerPlugin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::FMOD::DSP>("", "FmodResonanceAudio", "listenerPlugin"));
}
// Autogenerated static field setter
// Set static field: static private FMOD.DSP listenerPlugin
void GlobalNamespace::FmodResonanceAudio::_set_listenerPlugin(::FMOD::DSP value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::_set_listenerPlugin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudio", "listenerPlugin", value));
}
// Autogenerated method: FmodResonanceAudio.UpdateAudioRoom
void GlobalNamespace::FmodResonanceAudio::UpdateAudioRoom(::GlobalNamespace::FmodResonanceAudioRoom* room, bool roomEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::UpdateAudioRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "UpdateAudioRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(roomEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room, roomEnabled);
}
// Autogenerated method: FmodResonanceAudio.IsListenerInsideRoom
bool GlobalNamespace::FmodResonanceAudio::IsListenerInsideRoom(::GlobalNamespace::FmodResonanceAudioRoom* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::IsListenerInsideRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "IsListenerInsideRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: FmodResonanceAudio.get_ListenerPlugin
::FMOD::DSP GlobalNamespace::FmodResonanceAudio::get_ListenerPlugin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::get_ListenerPlugin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "get_ListenerPlugin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::DSP, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FmodResonanceAudio.ConvertAmplitudeFromDb
float GlobalNamespace::FmodResonanceAudio::ConvertAmplitudeFromDb(float db) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::ConvertAmplitudeFromDb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "ConvertAmplitudeFromDb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(db)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, db);
}
// Autogenerated method: FmodResonanceAudio.ConvertAudioTransformFromUnity
void GlobalNamespace::FmodResonanceAudio::ConvertAudioTransformFromUnity(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::ConvertAudioTransformFromUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "ConvertAudioTransformFromUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(position), byref(rotation));
}
// Autogenerated method: FmodResonanceAudio.GetBytes
::ArrayW<uint8_t> GlobalNamespace::FmodResonanceAudio::GetBytes(::System::IntPtr ptr, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, length);
}
// Autogenerated method: FmodResonanceAudio.GetRoomProperties
::GlobalNamespace::FmodResonanceAudio::RoomProperties GlobalNamespace::FmodResonanceAudio::GetRoomProperties(::GlobalNamespace::FmodResonanceAudioRoom* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::GetRoomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "GetRoomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FmodResonanceAudio::RoomProperties, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: FmodResonanceAudio.Initialize
::FMOD::DSP GlobalNamespace::FmodResonanceAudio::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::FMOD::DSP, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FmodResonanceAudio..cctor
void GlobalNamespace::FmodResonanceAudio::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudio::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FmodResonanceAudio", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FmodResonanceAudioRoom
#include "GlobalNamespace/FmodResonanceAudioRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial leftWall
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_leftWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_leftWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftWall"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial rightWall
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_rightWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_rightWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightWall"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial floor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_floor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_floor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial ceiling
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_ceiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_ceiling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ceiling"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial backWall
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_backWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_backWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backWall"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FmodResonanceAudioRoom/SurfaceMaterial frontWall
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial& GlobalNamespace::FmodResonanceAudioRoom::dyn_frontWall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_frontWall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frontWall"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reflectivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FmodResonanceAudioRoom::dyn_reflectivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_reflectivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reflectivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverbGainDb
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbGainDb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbGainDb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbGainDb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverbBrightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reverbTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_reverbTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FmodResonanceAudioRoom::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FmodResonanceAudioRoom.OnEnable
void GlobalNamespace::FmodResonanceAudioRoom::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FmodResonanceAudioRoom.OnDisable
void GlobalNamespace::FmodResonanceAudioRoom::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FmodResonanceAudioRoom.Update
void GlobalNamespace::FmodResonanceAudioRoom::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FmodResonanceAudioRoom.OnDrawGizmosSelected
void GlobalNamespace::FmodResonanceAudioRoom::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FmodResonanceAudioRoom/SurfaceMaterial
#include "GlobalNamespace/FmodResonanceAudioRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial Transparent
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Transparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Transparent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "Transparent"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial Transparent
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Transparent(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Transparent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "Transparent", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial AcousticCeilingTiles
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_AcousticCeilingTiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_AcousticCeilingTiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "AcousticCeilingTiles"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial AcousticCeilingTiles
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_AcousticCeilingTiles(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_AcousticCeilingTiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "AcousticCeilingTiles", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial BrickBare
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_BrickBare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_BrickBare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "BrickBare"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial BrickBare
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_BrickBare(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_BrickBare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "BrickBare", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial BrickPainted
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_BrickPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_BrickPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "BrickPainted"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial BrickPainted
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_BrickPainted(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_BrickPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "BrickPainted", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial ConcreteBlockCoarse
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ConcreteBlockCoarse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ConcreteBlockCoarse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "ConcreteBlockCoarse"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial ConcreteBlockCoarse
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ConcreteBlockCoarse(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ConcreteBlockCoarse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "ConcreteBlockCoarse", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial ConcreteBlockPainted
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ConcreteBlockPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ConcreteBlockPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "ConcreteBlockPainted"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial ConcreteBlockPainted
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ConcreteBlockPainted(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ConcreteBlockPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "ConcreteBlockPainted", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial CurtainHeavy
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_CurtainHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_CurtainHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "CurtainHeavy"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial CurtainHeavy
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_CurtainHeavy(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_CurtainHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "CurtainHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial FiberglassInsulation
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_FiberglassInsulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_FiberglassInsulation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "FiberglassInsulation"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial FiberglassInsulation
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_FiberglassInsulation(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_FiberglassInsulation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "FiberglassInsulation", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial GlassThin
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_GlassThin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_GlassThin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "GlassThin"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial GlassThin
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_GlassThin(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_GlassThin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "GlassThin", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial GlassThick
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_GlassThick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_GlassThick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "GlassThick"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial GlassThick
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_GlassThick(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_GlassThick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "GlassThick", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial Grass
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial Grass
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Grass(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "Grass", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial LinoleumOnConcrete
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_LinoleumOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_LinoleumOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "LinoleumOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial LinoleumOnConcrete
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_LinoleumOnConcrete(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_LinoleumOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "LinoleumOnConcrete", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial Marble
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Marble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Marble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "Marble"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial Marble
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Marble(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Marble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "Marble", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial Metal
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Metal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial Metal
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Metal(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "Metal", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial ParquetOnConcrete
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ParquetOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_ParquetOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "ParquetOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial ParquetOnConcrete
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ParquetOnConcrete(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_ParquetOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "ParquetOnConcrete", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlasterRough
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlasterRough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlasterRough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlasterRough"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlasterRough
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlasterRough(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlasterRough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlasterRough", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlasterSmooth
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlasterSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlasterSmooth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlasterSmooth"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlasterSmooth
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlasterSmooth(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlasterSmooth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlasterSmooth", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlywoodPanel
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlywoodPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PlywoodPanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlywoodPanel"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial PlywoodPanel
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlywoodPanel(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PlywoodPanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "PlywoodPanel", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial PolishedConcreteOrTile
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PolishedConcreteOrTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_PolishedConcreteOrTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "PolishedConcreteOrTile"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial PolishedConcreteOrTile
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PolishedConcreteOrTile(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_PolishedConcreteOrTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "PolishedConcreteOrTile", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial Sheetrock
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Sheetrock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_Sheetrock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "Sheetrock"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial Sheetrock
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Sheetrock(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_Sheetrock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "Sheetrock", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial WaterOrIceSurface
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WaterOrIceSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WaterOrIceSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "WaterOrIceSurface"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial WaterOrIceSurface
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WaterOrIceSurface(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WaterOrIceSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "WaterOrIceSurface", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial WoodCeiling
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WoodCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WoodCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "WoodCeiling"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial WoodCeiling
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WoodCeiling(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WoodCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "WoodCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public FmodResonanceAudioRoom/SurfaceMaterial WoodPanel
::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WoodPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_get_WoodPanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial>("", "FmodResonanceAudioRoom/SurfaceMaterial", "WoodPanel"));
}
// Autogenerated static field setter
// Set static field: static public FmodResonanceAudioRoom/SurfaceMaterial WoodPanel
void GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WoodPanel(::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::_set_WoodPanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FmodResonanceAudioRoom/SurfaceMaterial", "WoodPanel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FmodResonanceAudioRoom::SurfaceMaterial::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GazeEventHandler
#include "GlobalNamespace/GazeEventHandler.hpp"
// Including type: GazeEventArgs
#include "GlobalNamespace/GazeEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GazeEventHandler.Invoke
void GlobalNamespace::GazeEventHandler::Invoke(::Il2CppObject* sender, ::GlobalNamespace::GazeEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GazeEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: GazeEventHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GazeEventHandler::BeginInvoke(::Il2CppObject* sender, ::GlobalNamespace::GazeEventArgs e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GazeEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: GazeEventHandler.EndInvoke
void GlobalNamespace::GazeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GazeEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_GazeTracker
#include "GlobalNamespace/SteamVR_GazeTracker.hpp"
// Including type: GazeEventHandler
#include "GlobalNamespace/GazeEventHandler.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GazeEventArgs
#include "GlobalNamespace/GazeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isInGaze
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_GazeTracker::dyn_isInGaze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_isInGaze");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isInGaze"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GazeEventHandler GazeOn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GazeEventHandler*& GlobalNamespace::SteamVR_GazeTracker::dyn_GazeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_GazeOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazeOn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GazeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GazeEventHandler GazeOff
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GazeEventHandler*& GlobalNamespace::SteamVR_GazeTracker::dyn_GazeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_GazeOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazeOff"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GazeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gazeInCutoff
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR_GazeTracker::dyn_gazeInCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_gazeInCutoff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeInCutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gazeOutCutoff
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR_GazeTracker::dyn_gazeOutCutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_gazeOutCutoff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeOutCutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform hmdTrackedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SteamVR_GazeTracker::dyn_hmdTrackedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::dyn_hmdTrackedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdTrackedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamVR_GazeTracker.add_GazeOn
void GlobalNamespace::SteamVR_GazeTracker::add_GazeOn(::GlobalNamespace::GazeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::add_GazeOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_GazeOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_GazeTracker.remove_GazeOn
void GlobalNamespace::SteamVR_GazeTracker::remove_GazeOn(::GlobalNamespace::GazeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::remove_GazeOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_GazeOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_GazeTracker.add_GazeOff
void GlobalNamespace::SteamVR_GazeTracker::add_GazeOff(::GlobalNamespace::GazeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::add_GazeOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_GazeOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_GazeTracker.remove_GazeOff
void GlobalNamespace::SteamVR_GazeTracker::remove_GazeOff(::GlobalNamespace::GazeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::remove_GazeOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_GazeOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_GazeTracker.Start
void GlobalNamespace::SteamVR_GazeTracker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_GazeTracker.OnGazeOn
void GlobalNamespace::SteamVR_GazeTracker::OnGazeOn(::GlobalNamespace::GazeEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::OnGazeOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SteamVR_GazeTracker*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: SteamVR_GazeTracker.OnGazeOff
void GlobalNamespace::SteamVR_GazeTracker::OnGazeOff(::GlobalNamespace::GazeEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::OnGazeOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SteamVR_GazeTracker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: SteamVR_GazeTracker.Update
void GlobalNamespace::SteamVR_GazeTracker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_GazeTracker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PointerEventHandler
#include "GlobalNamespace/PointerEventHandler.hpp"
// Including type: PointerEventArgs
#include "GlobalNamespace/PointerEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PointerEventHandler.Invoke
void GlobalNamespace::PointerEventHandler::Invoke(::Il2CppObject* sender, ::GlobalNamespace::PointerEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PointerEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PointerEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: PointerEventHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PointerEventHandler::BeginInvoke(::Il2CppObject* sender, ::GlobalNamespace::PointerEventArgs e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PointerEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PointerEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: PointerEventHandler.EndInvoke
void GlobalNamespace::PointerEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PointerEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PointerEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_LaserPointer
#include "GlobalNamespace/SteamVR_LaserPointer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PointerEventHandler
#include "GlobalNamespace/PointerEventHandler.hpp"
// Including type: PointerEventArgs
#include "GlobalNamespace/PointerEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean active
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_LaserPointer::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SteamVR_LaserPointer::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR_LaserPointer::dyn_thickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_thickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject holder
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SteamVR_LaserPointer::dyn_holder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_holder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "holder"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject pointer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SteamVR_LaserPointer::dyn_pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_pointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_LaserPointer::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addRigidBody
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_LaserPointer::dyn_addRigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_addRigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addRigidBody"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform reference
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SteamVR_LaserPointer::dyn_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reference"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PointerEventHandler PointerIn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PointerEventHandler*& GlobalNamespace::SteamVR_LaserPointer::dyn_PointerIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_PointerIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerIn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PointerEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PointerEventHandler PointerOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PointerEventHandler*& GlobalNamespace::SteamVR_LaserPointer::dyn_PointerOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_PointerOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointerOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PointerEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform previousContact
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SteamVR_LaserPointer::dyn_previousContact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::dyn_previousContact");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousContact"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamVR_LaserPointer.add_PointerIn
void GlobalNamespace::SteamVR_LaserPointer::add_PointerIn(::GlobalNamespace::PointerEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::add_PointerIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PointerIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_LaserPointer.remove_PointerIn
void GlobalNamespace::SteamVR_LaserPointer::remove_PointerIn(::GlobalNamespace::PointerEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::remove_PointerIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PointerIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_LaserPointer.add_PointerOut
void GlobalNamespace::SteamVR_LaserPointer::add_PointerOut(::GlobalNamespace::PointerEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::add_PointerOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PointerOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_LaserPointer.remove_PointerOut
void GlobalNamespace::SteamVR_LaserPointer::remove_PointerOut(::GlobalNamespace::PointerEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::remove_PointerOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PointerOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_LaserPointer.Start
void GlobalNamespace::SteamVR_LaserPointer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LaserPointer.OnPointerIn
void GlobalNamespace::SteamVR_LaserPointer::OnPointerIn(::GlobalNamespace::PointerEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::OnPointerIn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SteamVR_LaserPointer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: SteamVR_LaserPointer.OnPointerOut
void GlobalNamespace::SteamVR_LaserPointer::OnPointerOut(::GlobalNamespace::PointerEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::OnPointerOut");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SteamVR_LaserPointer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: SteamVR_LaserPointer.Update
void GlobalNamespace::SteamVR_LaserPointer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_LaserPointer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_Teleporter
#include "GlobalNamespace/SteamVR_Teleporter.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: ClickedEventArgs
#include "GlobalNamespace/ClickedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean teleportOnClick
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_Teleporter::dyn_teleportOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::dyn_teleportOnClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportOnClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamVR_Teleporter/TeleportType teleportType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamVR_Teleporter::TeleportType& GlobalNamespace::SteamVR_Teleporter::dyn_teleportType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::dyn_teleportType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamVR_Teleporter::TeleportType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamVR_Teleporter.get_reference
::UnityEngine::Transform* GlobalNamespace::SteamVR_Teleporter::get_reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::get_reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Teleporter.Start
void GlobalNamespace::SteamVR_Teleporter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Teleporter.DoClick
void GlobalNamespace::SteamVR_Teleporter::DoClick(::Il2CppObject* sender, ::GlobalNamespace::ClickedEventArgs e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::DoClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_Teleporter/TeleportType
#include "GlobalNamespace/SteamVR_Teleporter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseTerrain
::GlobalNamespace::SteamVR_Teleporter::TeleportType GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseTerrain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SteamVR_Teleporter::TeleportType>("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseTerrain"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseTerrain
void GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseTerrain(::GlobalNamespace::SteamVR_Teleporter::TeleportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseTerrain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseTerrain", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseCollider
::GlobalNamespace::SteamVR_Teleporter::TeleportType GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseCollider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SteamVR_Teleporter::TeleportType>("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseCollider"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseCollider
void GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseCollider(::GlobalNamespace::SteamVR_Teleporter::TeleportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseCollider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseCollider", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseZeroY
::GlobalNamespace::SteamVR_Teleporter::TeleportType GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseZeroY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_get_TeleportTypeUseZeroY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SteamVR_Teleporter::TeleportType>("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseZeroY"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Teleporter/TeleportType TeleportTypeUseZeroY
void GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseZeroY(::GlobalNamespace::SteamVR_Teleporter::TeleportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::_set_TeleportTypeUseZeroY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Teleporter/TeleportType", "TeleportTypeUseZeroY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamVR_Teleporter::TeleportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Teleporter::TeleportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
