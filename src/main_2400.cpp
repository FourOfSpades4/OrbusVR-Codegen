// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScrollLeftTag
#include "PowerUI/ScrollLeftTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ScrollLeftTag.GetTags
::ArrayW<::StringW> PowerUI::ScrollLeftTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollLeftTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollLeftTag.SelfClosing
bool PowerUI::ScrollLeftTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollLeftTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollLeftTag.GetInstance
::Wrench::TagHandler* PowerUI::ScrollLeftTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollLeftTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollLeftTag.OnClick
bool PowerUI::ScrollLeftTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollLeftTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScrollRightTag
#include "PowerUI/ScrollRightTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ScrollRightTag.GetTags
::ArrayW<::StringW> PowerUI::ScrollRightTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollRightTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollRightTag.SelfClosing
bool PowerUI::ScrollRightTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollRightTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollRightTag.GetInstance
::Wrench::TagHandler* PowerUI::ScrollRightTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollRightTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollRightTag.OnClick
bool PowerUI::ScrollRightTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollRightTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScrollTabTag
#include "PowerUI/ScrollTabTag.hpp"
// Including type: PowerUI.InputTag
#include "PowerUI/InputTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.InputTag ScrollBar
[[deprecated("Use field access instead!")]] ::PowerUI::InputTag*& PowerUI::ScrollTabTag::dyn_ScrollBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::dyn_ScrollBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollBar"))->offset;
  return *reinterpret_cast<::PowerUI::InputTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ScrollTabTag.SizeBefore
int PowerUI::ScrollTabTag::SizeBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::SizeBefore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.SizeAfter
int PowerUI::ScrollTabTag::SizeAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::SizeAfter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.StyleSize
int PowerUI::ScrollTabTag::StyleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::StyleSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.ElementScrolled
void PowerUI::ScrollTabTag::ElementScrolled(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ElementScrolled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementScrolled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: PowerUI.ScrollTabTag.GetScrollBar
void PowerUI::ScrollTabTag::GetScrollBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::GetScrollBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScrollBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.UseX
bool PowerUI::ScrollTabTag::UseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::UseX");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.BarSize
int PowerUI::ScrollTabTag::BarSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::BarSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.TabPosition
int PowerUI::ScrollTabTag::TabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::TabPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.TabProgress
float PowerUI::ScrollTabTag::TabProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::TabProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TabProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.ScrollBy
void PowerUI::ScrollTabTag::ScrollBy(int pixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ScrollBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixels);
}
// Autogenerated method: PowerUI.ScrollTabTag.ScrollBy
void PowerUI::ScrollTabTag::ScrollBy(int pixels, bool fromCurrent, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ScrollBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixels, fromCurrent, scrollTarget);
}
// Autogenerated method: PowerUI.ScrollTabTag.Clicked
void PowerUI::ScrollTabTag::Clicked(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::Clicked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.ScrollTabTag.ApplyTabSize
void PowerUI::ScrollTabTag::ApplyTabSize(float percentSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ApplyTabSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTabSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percentSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percentSize);
}
// Autogenerated method: PowerUI.ScrollTabTag.ScrollTo
void PowerUI::ScrollTabTag::ScrollTo(float percent, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ScrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent), ::il2cpp_utils::ExtractType(scrollTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percent, scrollTarget);
}
// Autogenerated method: PowerUI.ScrollTabTag.ScrollTo
void PowerUI::ScrollTabTag::ScrollTo(int location, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::ScrollTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location, scrollTarget);
}
// Autogenerated method: PowerUI.ScrollTabTag.SetTabSize
void PowerUI::ScrollTabTag::SetTabSize(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::SetTabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: PowerUI.ScrollTabTag.TabSize
int PowerUI::ScrollTabTag::TabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::TabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.SelfClosing
bool PowerUI::ScrollTabTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollTabTag.OnClick
bool PowerUI::ScrollTabTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ScrollUpTag
#include "PowerUI/ScrollUpTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ScrollUpTag.GetTags
::ArrayW<::StringW> PowerUI::ScrollUpTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollUpTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollUpTag.SelfClosing
bool PowerUI::ScrollUpTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollUpTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollUpTag.GetInstance
::Wrench::TagHandler* PowerUI::ScrollUpTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollUpTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ScrollUpTag.OnClick
bool PowerUI::ScrollUpTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollUpTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SectionTag
#include "PowerUI/SectionTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SectionTag.GetTags
::ArrayW<::StringW> PowerUI::SectionTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SectionTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SectionTag.GetInstance
::Wrench::TagHandler* PowerUI::SectionTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SectionTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SelectTag
#include "PowerUI/SelectTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Dropped
[[deprecated("Use field access instead!")]] bool& PowerUI::SelectTag::dyn_Dropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::dyn_Dropped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dropped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SelectedIndex
[[deprecated("Use field access instead!")]] int& PowerUI::SelectTag::dyn_SelectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::dyn_SelectedIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectedIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.Element DisplayText
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::SelectTag::dyn_DisplayText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::dyn_DisplayText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayText"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PowerUI.Element> Options
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Element*>*& PowerUI::SelectTag::dyn_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::dyn_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Options"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SelectTag.GetSelectID
int PowerUI::SelectTag::GetSelectID(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::GetSelectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.SelectTag.AddOption
void PowerUI::SelectTag::AddOption(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::AddOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.SelectTag.Drop
void PowerUI::SelectTag::Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::Drop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Drop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.Hide
void PowerUI::SelectTag::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.GetDropdownBox
::PowerUI::Element* PowerUI::SelectTag::GetDropdownBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::GetDropdownBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDropdownBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.GetValue
::StringW PowerUI::SelectTag::GetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.SetSelected
void PowerUI::SelectTag::SetSelected(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.SelectTag.SetSelected
void PowerUI::SelectTag::SetSelected(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.SelectTag.SetSelected
void PowerUI::SelectTag::SetSelected(int index, ::PowerUI::Element* element, bool runOnChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(runOnChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, element, runOnChange);
}
// Autogenerated method: PowerUI.SelectTag.GetTags
::ArrayW<::StringW> PowerUI::SelectTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.GetInstance
::Wrench::TagHandler* PowerUI::SelectTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.OnResetVariable
void PowerUI::SelectTag::OnResetVariable(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnResetVariable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.SelectTag.OnResetAllVariables
void PowerUI::SelectTag::OnResetAllVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnResetAllVariables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.OnTagLoaded
void PowerUI::SelectTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.OnBlur
void PowerUI::SelectTag::OnBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnBlur");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SelectTag.OnClick
bool PowerUI::SelectTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.SelectTag.OnMouseMove
void PowerUI::SelectTag::OnMouseMove(::PowerUI::UIEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SelectTag::OnMouseMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SmallTag
#include "PowerUI/SmallTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SmallTag.GetTags
::ArrayW<::StringW> PowerUI::SmallTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SmallTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SmallTag.GetInstance
::Wrench::TagHandler* PowerUI::SmallTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SmallTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SourceTag
#include "PowerUI/SourceTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SourceTag.GetTags
::ArrayW<::StringW> PowerUI::SourceTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SourceTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SourceTag.SelfClosing
bool PowerUI::SourceTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SourceTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SourceTag.GetInstance
::Wrench::TagHandler* PowerUI::SourceTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SourceTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SpanTag
#include "PowerUI/SpanTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SpanTag.GetTags
::ArrayW<::StringW> PowerUI::SpanTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpanTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpanTag.GetInstance
::Wrench::TagHandler* PowerUI::SpanTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpanTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.StrikeTag
#include "PowerUI/StrikeTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.StrikeTag.GetTags
::ArrayW<::StringW> PowerUI::StrikeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StrikeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.StrikeTag.GetInstance
::Wrench::TagHandler* PowerUI::StrikeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StrikeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.StrongTag
#include "PowerUI/StrongTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.StrongTag.GetTags
::ArrayW<::StringW> PowerUI::StrongTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StrongTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.StrongTag.GetInstance
::Wrench::TagHandler* PowerUI::StrongTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StrongTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.StyleTag
#include "PowerUI/StyleTag.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.StyleTag.AtEnd
bool PowerUI::StyleTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StyleTag::AtEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AtEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.StyleTag.GetTags
::ArrayW<::StringW> PowerUI::StyleTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StyleTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.StyleTag.GetInstance
::Wrench::TagHandler* PowerUI::StyleTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StyleTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.StyleTag.OnParseContent
void PowerUI::StyleTag::OnParseContent(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StyleTag::OnParseContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lexer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SubTag
#include "PowerUI/SubTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SubTag.GetTags
::ArrayW<::StringW> PowerUI::SubTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SubTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SubTag.GetInstance
::Wrench::TagHandler* PowerUI::SubTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SubTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SummaryTag
#include "PowerUI/SummaryTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Details
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::SummaryTag::dyn_Details() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SummaryTag::dyn_Details");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Details"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SummaryTag.GetTags
::ArrayW<::StringW> PowerUI::SummaryTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SummaryTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SummaryTag.GetInstance
::Wrench::TagHandler* PowerUI::SummaryTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SummaryTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SummaryTag.OnClick
bool PowerUI::SummaryTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SummaryTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SupTag
#include "PowerUI/SupTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SupTag.GetTags
::ArrayW<::StringW> PowerUI::SupTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SupTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SupTag.GetInstance
::Wrench::TagHandler* PowerUI::SupTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SupTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TableTag
#include "PowerUI/TableTag.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 NoWidthPixels
[[deprecated("Use field access instead!")]] int& PowerUI::TableTag::dyn_NoWidthPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::dyn_NoWidthPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NoWidthPixels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PowerUI.Css.ComputedStyle> ColumnWidths
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>*& PowerUI::TableTag::dyn_ColumnWidths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::dyn_ColumnWidths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColumnWidths"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TableTag.GetTags
::ArrayW<::StringW> PowerUI::TableTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableTag.GetInstance
::Wrench::TagHandler* PowerUI::TableTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableTag.OnChildrenLoaded
void PowerUI::TableTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableTag.WidthChanged
void PowerUI::TableTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TableBodyTag
#include "PowerUI/TableBodyTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TableBodyTag.GetTags
::ArrayW<::StringW> PowerUI::TableBodyTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableBodyTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableBodyTag.GetInstance
::Wrench::TagHandler* PowerUI::TableBodyTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableBodyTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TdTag
#include "PowerUI/TdTag.hpp"
// Including type: PowerUI.TableTag
#include "PowerUI/TableTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 Column
[[deprecated("Use field access instead!")]] int& PowerUI::TdTag::dyn_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::dyn_Column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.TableTag Table
[[deprecated("Use field access instead!")]] ::PowerUI::TableTag*& PowerUI::TdTag::dyn_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::dyn_Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Table"))->offset;
  return *reinterpret_cast<::PowerUI::TableTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TdTag.GetTags
::ArrayW<::StringW> PowerUI::TdTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TdTag.GetInstance
::Wrench::TagHandler* PowerUI::TdTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TdTag.OnChildrenLoaded
void PowerUI::TdTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TdTag.OnAttributeChange
bool PowerUI::TdTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.TdTag.WidthChanged
void PowerUI::TdTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TdTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TextareaTag
#include "PowerUI/TextareaTag.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
// Including type: PowerUI.KeyboardMode
#include "PowerUI/KeyboardMode.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Value
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextareaTag::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Cursor
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::TextareaTag::dyn_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Cursor"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CursorIndex
[[deprecated("Use field access instead!")]] int& PowerUI::TextareaTag::dyn_CursorIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_CursorIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CursorIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LocateCursor
[[deprecated("Use field access instead!")]] bool& PowerUI::TextareaTag::dyn_LocateCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_LocateCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocateCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxLength
[[deprecated("Use field access instead!")]] int& PowerUI::TextareaTag::dyn_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_MaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Placeholder
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextareaTag::dyn_Placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::dyn_Placeholder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Placeholder"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TextareaTag.SetValue
void PowerUI::TextareaTag::SetValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.TextareaTag.SetValue
void PowerUI::TextareaTag::SetValue(::StringW value, bool html) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(html)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, html);
}
// Autogenerated method: PowerUI.TextareaTag.MoveCursor
void PowerUI::TextareaTag::MoveCursor(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::MoveCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.TextareaTag.MoveCursor
void PowerUI::TextareaTag::MoveCursor(int index, bool immediate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::MoveCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(immediate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, immediate);
}
// Autogenerated method: PowerUI.TextareaTag.LocateCursorNow
void PowerUI::TextareaTag::LocateCursorNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::LocateCursorNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateCursorNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.AtEnd
bool PowerUI::TextareaTag::AtEnd(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::AtEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AtEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.TextareaTag.GetTags
::ArrayW<::StringW> PowerUI::TextareaTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.GetInstance
::Wrench::TagHandler* PowerUI::TextareaTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.OnAttributeChange
bool PowerUI::TextareaTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.TextareaTag.OnShowMobileKeyboard
::PowerUI::KeyboardMode* PowerUI::TextareaTag::OnShowMobileKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnShowMobileKeyboard");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::KeyboardMode*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.OnParseContent
void PowerUI::TextareaTag::OnParseContent(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnParseContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.TextareaTag.OnKeyPress
void PowerUI::TextareaTag::OnKeyPress(::PowerUI::UIEvent* pressEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnKeyPress");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressEvent);
}
// Autogenerated method: PowerUI.TextareaTag.OnRenderPass
void PowerUI::TextareaTag::OnRenderPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnRenderPass");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.OnFocus
void PowerUI::TextareaTag::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.OnBlur
void PowerUI::TextareaTag::OnBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnBlur");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextareaTag.OnClick
bool PowerUI::TextareaTag::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextareaTag::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TableFooterTag
#include "PowerUI/TableFooterTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TableFooterTag.GetTags
::ArrayW<::StringW> PowerUI::TableFooterTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableFooterTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableFooterTag.GetInstance
::Wrench::TagHandler* PowerUI::TableFooterTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableFooterTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ThTag
#include "PowerUI/ThTag.hpp"
// Including type: PowerUI.TableTag
#include "PowerUI/TableTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 Column
[[deprecated("Use field access instead!")]] int& PowerUI::ThTag::dyn_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::dyn_Column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.TableTag Table
[[deprecated("Use field access instead!")]] ::PowerUI::TableTag*& PowerUI::ThTag::dyn_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::dyn_Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Table"))->offset;
  return *reinterpret_cast<::PowerUI::TableTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ThTag.GetTags
::ArrayW<::StringW> PowerUI::ThTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ThTag.GetInstance
::Wrench::TagHandler* PowerUI::ThTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ThTag.OnChildrenLoaded
void PowerUI::ThTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ThTag.OnAttributeChange
bool PowerUI::ThTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.ThTag.WidthChanged
void PowerUI::ThTag::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ThTag::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TableHeaderTag
#include "PowerUI/TableHeaderTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TableHeaderTag.GetTags
::ArrayW<::StringW> PowerUI::TableHeaderTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableHeaderTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TableHeaderTag.GetInstance
::Wrench::TagHandler* PowerUI::TableHeaderTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableHeaderTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TimeTag
#include "PowerUI/TimeTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TimeTag.GetTags
::ArrayW<::StringW> PowerUI::TimeTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TimeTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TimeTag.GetInstance
::Wrench::TagHandler* PowerUI::TimeTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TimeTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TitleTag
#include "PowerUI/TitleTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TitleTag.GetTags
::ArrayW<::StringW> PowerUI::TitleTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TitleTag.GetInstance
::Wrench::TagHandler* PowerUI::TitleTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TitleTag.OnTagLoaded
void PowerUI::TitleTag::OnTagLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleTag::OnTagLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TrTag
#include "PowerUI/TrTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TrTag.GetTags
::ArrayW<::StringW> PowerUI::TrTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TrTag.GetInstance
::Wrench::TagHandler* PowerUI::TrTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TrTag.OnChildrenLoaded
void PowerUI::TrTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TrackTag
#include "PowerUI/TrackTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TrackTag.GetTags
::ArrayW<::StringW> PowerUI::TrackTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrackTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TrackTag.SelfClosing
bool PowerUI::TrackTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrackTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TrackTag.GetInstance
::Wrench::TagHandler* PowerUI::TrackTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TrackTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UlTag
#include "PowerUI/UlTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.UlTag.GetTags
::ArrayW<::StringW> PowerUI::UlTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UlTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UlTag.GetInstance
::Wrench::TagHandler* PowerUI::UlTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UlTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.VideoTag
#include "PowerUI/VideoTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.VideoTag.GetTags
::ArrayW<::StringW> PowerUI::VideoTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VideoTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VideoTag.GetInstance
::Wrench::TagHandler* PowerUI::VideoTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VideoTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VideoTag.OnAttributeChange
bool PowerUI::VideoTag::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VideoTag::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.VideoTag.OnChildrenLoaded
void PowerUI::VideoTag::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VideoTag::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.VScrollTabTag
#include "PowerUI/VScrollTabTag.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MouseY
[[deprecated("Use field access instead!")]] int& PowerUI::VScrollTabTag::dyn_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::dyn_MouseY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouseY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StartY
[[deprecated("Use field access instead!")]] int& PowerUI::VScrollTabTag::dyn_StartY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::dyn_StartY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.VScrollTabTag.GetTags
::ArrayW<::StringW> PowerUI::VScrollTabTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.SelfClosing
bool PowerUI::VScrollTabTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.GetInstance
::Wrench::TagHandler* PowerUI::VScrollTabTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.Clicked
void PowerUI::VScrollTabTag::Clicked(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::Clicked");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.VScrollTabTag.SetTabSize
void PowerUI::VScrollTabTag::SetTabSize(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::SetTabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: PowerUI.VScrollTabTag.BarSize
int PowerUI::VScrollTabTag::BarSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::BarSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.TabSize
int PowerUI::VScrollTabTag::TabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::TabSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 35));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.StyleSize
int PowerUI::VScrollTabTag::StyleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::StyleSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.SizeBefore
int PowerUI::VScrollTabTag::SizeBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::SizeBefore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.SizeAfter
int PowerUI::VScrollTabTag::SizeAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::SizeAfter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.TabPosition
int PowerUI::VScrollTabTag::TabPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::TabPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VScrollTabTag.OnMouseMove
void PowerUI::VScrollTabTag::OnMouseMove(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::OnMouseMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.VScrollTabTag.ScrollTo
void PowerUI::VScrollTabTag::ScrollTo(int location, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::ScrollTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location, scrollTarget);
}
// Autogenerated method: PowerUI.VScrollTabTag.ScrollBy
void PowerUI::VScrollTabTag::ScrollBy(int deltaY, bool fromCurrent, bool scrollTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VScrollTabTag::ScrollBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ScrollTabTag*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaY, fromCurrent, scrollTarget);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.WbrTag
#include "PowerUI/WbrTag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.WbrTag.GetTags
::ArrayW<::StringW> PowerUI::WbrTag::GetTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WbrTag::GetTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WbrTag.SelfClosing
bool PowerUI::WbrTag::SelfClosing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WbrTag::SelfClosing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WbrTag.GetInstance
::Wrench::TagHandler* PowerUI::WbrTag::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WbrTag::GetInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Text3D
#include "PowerUI/Text3D.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] UVs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& PowerUI::Text3D::dyn_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::dyn_UVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UVs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] Triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& PowerUI::Text3D::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::dyn_Triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] Colours
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& PowerUI::Text3D::dyn_Colours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::dyn_Colours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colours"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] Normals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& PowerUI::Text3D::dyn_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::dyn_Normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] Vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& PowerUI::Text3D::dyn_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::dyn_Vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Text3D.CreateMesh
::UnityEngine::Mesh* PowerUI::Text3D::CreateMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::CreateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Text3D.CreateGameObject
void PowerUI::Text3D::CreateGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Text3D::CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TextElement
#include "PowerUI/TextElement.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: PowerUI.WordElement
#include "PowerUI/WordElement.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String Text
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextElement::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TextElement.AddCharacter
void PowerUI::TextElement::AddCharacter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::AddCharacter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::TextElement*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character);
}
// Autogenerated method: PowerUI.TextElement.LetterIndex
int PowerUI::TextElement::LetterIndex(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::LetterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LetterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.TextElement.LetterIndex
int PowerUI::TextElement::LetterIndex(int x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::LetterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LetterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: PowerUI.TextElement.DoneWord
void PowerUI::TextElement::DoneWord(bool lastOne) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::DoneWord");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::TextElement*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lastOne);
}
// Autogenerated method: PowerUI.TextElement.GetPosition
::UnityEngine::Vector2 PowerUI::TextElement::GetPosition(ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, byref(index));
}
// Autogenerated method: PowerUI.TextElement.GetWordWithLetter
::PowerUI::WordElement* PowerUI::TextElement::GetWordWithLetter(int index, ByRef<int> localOffset, ByRef<int> globalOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::GetWordWithLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWordWithLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::WordElement*, false>(this, ___internal__method, index, byref(localOffset), byref(globalOffset));
}
// Autogenerated method: PowerUI.TextElement.GetWordWithLetter
::PowerUI::WordElement* PowerUI::TextElement::GetWordWithLetter(int index, ByRef<int> localOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::GetWordWithLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWordWithLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::WordElement*, false>(this, ___internal__method, index, byref(localOffset));
}
// Autogenerated method: PowerUI.TextElement.ToTextString
::StringW PowerUI::TextElement::ToTextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::ToTextString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextElement.ToString
::StringW PowerUI::TextElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextElement.ToString
void PowerUI::TextElement::ToString(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnTextReady
#include "PowerUI/OnTextReady.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnTextReady.Invoke
void PowerUI::OnTextReady::Invoke(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnTextReady::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnTextReady*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.OnTextReady.BeginInvoke
::System::IAsyncResult* PowerUI::OnTextReady::BeginInvoke(::PowerUI::TextPackage* package, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnTextReady::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnTextReady*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, package, callback, object);
}
// Autogenerated method: PowerUI.OnTextReady.EndInvoke
void PowerUI::OnTextReady::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnTextReady::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnTextReady*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.OnTextReady
#include "PowerUI/OnTextReady.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Text
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextPackage::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Error
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextPackage::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath File
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::TextPackage::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileType
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::TextPackage::dyn_FileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_FileType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object ExtraData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PowerUI::TextPackage::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnTextReady TextReady
[[deprecated("Use field access instead!")]] ::PowerUI::OnTextReady*& PowerUI::TextPackage::dyn_TextReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::dyn_TextReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextReady"))->offset;
  return *reinterpret_cast<::PowerUI::OnTextReady**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TextPackage.add_TextReady
void PowerUI::TextPackage::add_TextReady(::PowerUI::OnTextReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::add_TextReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_TextReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.TextPackage.remove_TextReady
void PowerUI::TextPackage::remove_TextReady(::PowerUI::OnTextReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::remove_TextReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_TextReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.TextPackage.Get
void PowerUI::TextPackage::Get(::PowerUI::OnTextReady* textReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textReady);
}
// Autogenerated method: PowerUI.TextPackage.get_Url
::StringW PowerUI::TextPackage::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextPackage.SetPath
void PowerUI::TextPackage::SetPath(::StringW src, ::StringW relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, relativeTo);
}
// Autogenerated method: PowerUI.TextPackage.GotText
void PowerUI::TextPackage::GotText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::GotText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.TextPackage.GotText
void PowerUI::TextPackage::GotText(::StringW text, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::GotText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, error);
}
// Autogenerated method: PowerUI.TextPackage.get_Ok
bool PowerUI::TextPackage::get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::get_Ok");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ok", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TextPackage.get_Errored
bool PowerUI::TextPackage::get_Errored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TextPackage::get_Errored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Errored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AtlasStacks
#include "PowerUI/AtlasStacks.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Blaze.AtlasStack
#include "Blaze/AtlasStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 RawTextSpacing
int PowerUI::AtlasStacks::_get_RawTextSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_RawTextSpacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "RawTextSpacing"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RawTextSpacing
void PowerUI::AtlasStacks::_set_RawTextSpacing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_RawTextSpacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "RawTextSpacing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RawGraphicsSpacing
int PowerUI::AtlasStacks::_get_RawGraphicsSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_RawGraphicsSpacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "RawGraphicsSpacing"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RawGraphicsSpacing
void PowerUI::AtlasStacks::_set_RawGraphicsSpacing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_RawGraphicsSpacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "RawGraphicsSpacing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OptimiseFrequency
int PowerUI::AtlasStacks::_get_OptimiseFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_OptimiseFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "OptimiseFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OptimiseFrequency
void PowerUI::AtlasStacks::_set_OptimiseFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_OptimiseFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "OptimiseFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OptimiseCount
int PowerUI::AtlasStacks::_get_OptimiseCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_OptimiseCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "OptimiseCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OptimiseCount
void PowerUI::AtlasStacks::_set_OptimiseCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_OptimiseCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "OptimiseCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OptimiseFrameCount
int PowerUI::AtlasStacks::_get_OptimiseFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_OptimiseFrameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "OptimiseFrameCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OptimiseFrameCount
void PowerUI::AtlasStacks::_set_OptimiseFrameCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_OptimiseFrameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "OptimiseFrameCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RawMaxSize
int PowerUI::AtlasStacks::_get_RawMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_RawMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "RawMaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RawMaxSize
void PowerUI::AtlasStacks::_set_RawMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_RawMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "RawMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InitialSize
int PowerUI::AtlasStacks::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "AtlasStacks", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InitialSize
void PowerUI::AtlasStacks::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "InitialSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Material GlobalMaterial
::UnityEngine::Material* PowerUI::AtlasStacks::_get_GlobalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_GlobalMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("PowerUI", "AtlasStacks", "GlobalMaterial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Material GlobalMaterial
void PowerUI::AtlasStacks::_set_GlobalMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_GlobalMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "GlobalMaterial", value));
}
// Autogenerated static field getter
// Get static field: static public Blaze.AtlasStack Text
::Blaze::AtlasStack* PowerUI::AtlasStacks::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Blaze::AtlasStack*>("PowerUI", "AtlasStacks", "Text"));
}
// Autogenerated static field setter
// Set static field: static public Blaze.AtlasStack Text
void PowerUI::AtlasStacks::_set_Text(::Blaze::AtlasStack* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public Blaze.AtlasStack Graphics
::Blaze::AtlasStack* PowerUI::AtlasStacks::_get_Graphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_get_Graphics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Blaze::AtlasStack*>("PowerUI", "AtlasStacks", "Graphics"));
}
// Autogenerated static field setter
// Set static field: static public Blaze.AtlasStack Graphics
void PowerUI::AtlasStacks::_set_Graphics(::Blaze::AtlasStack* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::_set_Graphics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "AtlasStacks", "Graphics", value));
}
// Autogenerated method: PowerUI.AtlasStacks.get_TextSpacing
int PowerUI::AtlasStacks::get_TextSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::get_TextSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "get_TextSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.set_TextSpacing
void PowerUI::AtlasStacks::set_TextSpacing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::set_TextSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "set_TextSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.AtlasStacks.get_GraphicsSpacing
int PowerUI::AtlasStacks::get_GraphicsSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::get_GraphicsSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "get_GraphicsSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.set_GraphicsSpacing
void PowerUI::AtlasStacks::set_GraphicsSpacing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::set_GraphicsSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "set_GraphicsSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.AtlasStacks.SetRate
void PowerUI::AtlasStacks::SetRate(int rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::SetRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "SetRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: PowerUI.AtlasStacks.Start
void PowerUI::AtlasStacks::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.UpdateGlobal
void PowerUI::AtlasStacks::UpdateGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::UpdateGlobal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "UpdateGlobal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.Update
void PowerUI::AtlasStacks::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.Optimise
void PowerUI::AtlasStacks::Optimise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::Optimise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "Optimise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.Clear
void PowerUI::AtlasStacks::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.Flush
void PowerUI::AtlasStacks::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.get_MaxSize
int PowerUI::AtlasStacks::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.get_AtlasSize
int PowerUI::AtlasStacks::get_AtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::get_AtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "get_AtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.AtlasStacks.set_AtlasSize
void PowerUI::AtlasStacks::set_AtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::set_AtlasSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", "set_AtlasSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.AtlasStacks..cctor
void PowerUI::AtlasStacks::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AtlasStacks::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "AtlasStacks", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Callback
#include "PowerUI/Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Callback NextCallback
[[deprecated("Use field access instead!")]] ::PowerUI::Callback*& PowerUI::Callback::dyn_NextCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callback::dyn_NextCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextCallback"))->offset;
  return *reinterpret_cast<::PowerUI::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Callback.Go
void PowerUI::Callback::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callback::Go");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Callback.get_WillRunImmediately
bool PowerUI::Callback::get_WillRunImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callback::get_WillRunImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Callback", "get_WillRunImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Callback.get_WillDelay
bool PowerUI::Callback::get_WillDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callback::get_WillDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Callback", "get_WillDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Callback.OnRun
void PowerUI::Callback::OnRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callback::OnRun");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Callback*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Callbacks
#include "PowerUI/Callbacks.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: PowerUI.Callback
#include "PowerUI/Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Thread MainThread
::System::Threading::Thread* PowerUI::Callbacks::_get_MainThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_get_MainThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Thread*>("PowerUI", "Callbacks", "MainThread"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Thread MainThread
void PowerUI::Callbacks::_set_MainThread(::System::Threading::Thread* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_set_MainThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Callbacks", "MainThread", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Callback LastToRun
::PowerUI::Callback* PowerUI::Callbacks::_get_LastToRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_get_LastToRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Callback*>("PowerUI", "Callbacks", "LastToRun"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Callback LastToRun
void PowerUI::Callbacks::_set_LastToRun(::PowerUI::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_set_LastToRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Callbacks", "LastToRun", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Callback FirstToRun
::PowerUI::Callback* PowerUI::Callbacks::_get_FirstToRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_get_FirstToRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Callback*>("PowerUI", "Callbacks", "FirstToRun"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Callback FirstToRun
void PowerUI::Callbacks::_set_FirstToRun(::PowerUI::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::_set_FirstToRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Callbacks", "FirstToRun", value));
}
// Autogenerated method: PowerUI.Callbacks.Start
void PowerUI::Callbacks::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Callbacks", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Callbacks.RunAll
void PowerUI::Callbacks::RunAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::RunAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Callbacks", "RunAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Callbacks.Add
void PowerUI::Callbacks::Add(::PowerUI::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Callbacks::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Callbacks", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean HasSkew
[[deprecated("Use field access instead!")]] bool& PowerUI::Transformation::dyn_HasSkew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn_HasSkew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasSkew"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _Changed
[[deprecated("Use field access instead!")]] bool& PowerUI::Transformation::dyn__Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 _Skew
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& PowerUI::Transformation::dyn__Skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Skew"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _Origin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::Transformation::dyn__Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Origin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 _Matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& PowerUI::Transformation::dyn__Matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _Translate
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::Transformation::dyn__Translate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Translate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Translate"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& PowerUI::Transformation::dyn__Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Transformation Parent
[[deprecated("Use field access instead!")]] ::PowerUI::Transformation*& PowerUI::Transformation::dyn_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parent"))->offset;
  return *reinterpret_cast<::PowerUI::Transformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _OriginOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::Transformation::dyn__OriginOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__OriginOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OriginOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 _LocalMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& PowerUI::Transformation::dyn__LocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__LocalMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LocalMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _Scale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::Transformation::dyn__Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Scale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.Css.PositionType _OriginPosition
[[deprecated("Use field access instead!")]] ::PowerUI::Css::PositionType& PowerUI::Transformation::dyn__OriginPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__OriginPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OriginPosition"))->offset;
  return *reinterpret_cast<::PowerUI::Css::PositionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _OriginOffsetPercX
[[deprecated("Use field access instead!")]] bool& PowerUI::Transformation::dyn__OriginOffsetPercX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__OriginOffsetPercX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OriginOffsetPercX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _OriginOffsetPercY
[[deprecated("Use field access instead!")]] bool& PowerUI::Transformation::dyn__OriginOffsetPercY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::dyn__OriginOffsetPercY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OriginOffsetPercY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Transformation.get_Matrix
::UnityEngine::Matrix4x4 PowerUI::Transformation::get_Matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Matrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Matrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.get_LocalMatrix
::UnityEngine::Matrix4x4 PowerUI::Transformation::get_LocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_LocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.CalculateOrigin
void PowerUI::Transformation::CalculateOrigin(::PowerUI::Css::ComputedStyle* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::CalculateOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo);
}
// Autogenerated method: PowerUI.Transformation.RecalculateMatrix
void PowerUI::Transformation::RecalculateMatrix(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::RecalculateMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Transformation.get_Changed
bool PowerUI::Transformation::get_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.get_OriginPosition
::PowerUI::Css::PositionType PowerUI::Transformation::get_OriginPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_OriginPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::PositionType, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.set_OriginPosition
void PowerUI::Transformation::set_OriginPosition(::PowerUI::Css::PositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_OriginPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OriginPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.set_OriginOffset
void PowerUI::Transformation::set_OriginOffset(::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_OriginOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OriginOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.get_Scale
::UnityEngine::Vector3 PowerUI::Transformation::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.set_Scale
void PowerUI::Transformation::set_Scale(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.get_Translate
::UnityEngine::Vector3 PowerUI::Transformation::get_Translate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.set_Translate
void PowerUI::Transformation::set_Translate(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.get_Rotation
::UnityEngine::Quaternion PowerUI::Transformation::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.set_Rotation
void PowerUI::Transformation::set_Rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.get_Skew
::UnityEngine::Matrix4x4 PowerUI::Transformation::get_Skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::get_Skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Transformation.set_Skew
void PowerUI::Transformation::set_Skew(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::set_Skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Transformation.Apply
::UnityEngine::Vector3 PowerUI::Transformation::Apply(::UnityEngine::Vector4 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: PowerUI.Transformation.ApplyInverse
::UnityEngine::Vector3 PowerUI::Transformation::ApplyInverse(::UnityEngine::Vector4 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Transformation::ApplyInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TransformationStack
#include "PowerUI/TransformationStack.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Transformation Last
[[deprecated("Use field access instead!")]] ::PowerUI::Transformation*& PowerUI::TransformationStack::dyn_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TransformationStack::dyn_Last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Last"))->offset;
  return *reinterpret_cast<::PowerUI::Transformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Transformation First
[[deprecated("Use field access instead!")]] ::PowerUI::Transformation*& PowerUI::TransformationStack::dyn_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TransformationStack::dyn_First");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "First"))->offset;
  return *reinterpret_cast<::PowerUI::Transformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.TransformationStack.Push
void PowerUI::TransformationStack::Push(::PowerUI::Transformation* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TransformationStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: PowerUI.TransformationStack.Pop
void PowerUI::TransformationStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TransformationStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.TransformationStack.Clear
void PowerUI::TransformationStack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TransformationStack::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UI
#include "PowerUI/UI.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Wrench.FullVariableSet
#include "Wrench/FullVariableSet.hpp"
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
// Including type: PowerUI.CameraPool
#include "PowerUI/CameraPool.hpp"
// Including type: PowerUI.StandardUpdater
#include "PowerUI/StandardUpdater.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: PowerUI.CameraCreated
#include "PowerUI/CameraCreated.hpp"
// Including type: Wrench.UnityLanguageLoader
#include "Wrench/UnityLanguageLoader.hpp"
// Including type: PowerUI.GetSecurityDomain
#include "PowerUI/GetSecurityDomain.hpp"
// Including type: PowerUI.ResolutionInfo
#include "PowerUI/ResolutionInfo.hpp"
// Including type: PowerUI.RenderMode
#include "PowerUI/RenderMode.hpp"
// Including type: PowerUI.InputMode
#include "PowerUI/InputMode.hpp"
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
// Including type: Wrench.GroupResolve
#include "Wrench/GroupResolve.hpp"
// Including type: Wrench.LanguageSet
#include "Wrench/LanguageSet.hpp"
// Including type: Nitro.NitroDomainManager
#include "Nitro/NitroDomainManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultRate
int PowerUI::UI::_get_DefaultRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_DefaultRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "UI", "DefaultRate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultRate
void PowerUI::UI::_set_DefaultRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_DefaultRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "DefaultRate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Layer
int PowerUI::UI::_get_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_Layer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "UI", "Layer"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Layer
void PowerUI::UI::_set_Layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_Layer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "Layer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean Started
bool PowerUI::UI::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "UI", "Started"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean Started
void PowerUI::UI::_set_Started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Element content
::PowerUI::Element* PowerUI::UI::_get_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Element*>("PowerUI", "UI", "content"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Element content
void PowerUI::UI::_set_content(::PowerUI::Element* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single RedrawRate
float PowerUI::UI::_get_RedrawRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_RedrawRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "UI", "RedrawRate"));
}
// Autogenerated static field setter
// Set static field: static public System.Single RedrawRate
void PowerUI::UI::_set_RedrawRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_RedrawRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "RedrawRate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera GUICamera
::UnityEngine::Camera* PowerUI::UI::_get_GUICamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_GUICamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera*>("PowerUI", "UI", "GUICamera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera GUICamera
void PowerUI::UI::_set_GUICamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_GUICamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "GUICamera", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Document document
::PowerUI::Document* PowerUI::UI::_get_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Document*>("PowerUI", "UI", "document"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Document document
void PowerUI::UI::_set_document(::PowerUI::Document* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean HandledInput
bool PowerUI::UI::_get_HandledInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_HandledInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "UI", "HandledInput"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean HandledInput
void PowerUI::UI::_set_HandledInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_HandledInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "HandledInput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single FieldOfView
float PowerUI::UI::_get_FieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_FieldOfView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "UI", "FieldOfView"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FieldOfView
void PowerUI::UI::_set_FieldOfView(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_FieldOfView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "FieldOfView", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single RedrawTimer
float PowerUI::UI::_get_RedrawTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_RedrawTimer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "UI", "RedrawTimer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RedrawTimer
void PowerUI::UI::_set_RedrawTimer(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_RedrawTimer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "RedrawTimer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.GameObject GUINode
::UnityEngine::GameObject* PowerUI::UI::_get_GUINode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_GUINode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("PowerUI", "UI", "GUINode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.GameObject GUINode
void PowerUI::UI::_set_GUINode(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_GUINode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "GUINode", value));
}
// Autogenerated static field getter
// Get static field: static private PowerUI.Renderman Renderer
::PowerUI::Renderman* PowerUI::UI::_get_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_Renderer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Renderman*>("PowerUI", "UI", "Renderer"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.Renderman Renderer
void PowerUI::UI::_set_Renderer(::PowerUI::Renderman* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_Renderer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "Renderer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single CameraDistance
float PowerUI::UI::_get_CameraDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_CameraDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "UI", "CameraDistance"));
}
// Autogenerated static field setter
// Set static field: static public System.Single CameraDistance
void PowerUI::UI::_set_CameraDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_CameraDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "CameraDistance", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.GameObject CameraNode
::UnityEngine::GameObject* PowerUI::UI::_get_CameraNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_CameraNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("PowerUI", "UI", "CameraNode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.GameObject CameraNode
void PowerUI::UI::_set_CameraNode(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_CameraNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "CameraNode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Transform CameraTransform
::UnityEngine::Transform* PowerUI::UI::_get_CameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_CameraTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("PowerUI", "UI", "CameraTransform"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Transform CameraTransform
void PowerUI::UI::_set_CameraTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_CameraTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "CameraTransform", value));
}
// Autogenerated static field getter
// Get static field: static public Wrench.FullVariableSet Variables
::Wrench::FullVariableSet* PowerUI::UI::_get_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_Variables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Wrench::FullVariableSet*>("PowerUI", "UI", "Variables"));
}
// Autogenerated static field setter
// Set static field: static public Wrench.FullVariableSet Variables
void PowerUI::UI::_set_Variables(::Wrench::FullVariableSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_Variables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "Variables", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.WorldUI LastWorldUI
::PowerUI::WorldUI* PowerUI::UI::_get_LastWorldUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_LastWorldUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::WorldUI*>("PowerUI", "UI", "LastWorldUI"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.WorldUI LastWorldUI
void PowerUI::UI::_set_LastWorldUI(::PowerUI::WorldUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_LastWorldUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "LastWorldUI", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.WorldUI FirstWorldUI
::PowerUI::WorldUI* PowerUI::UI::_get_FirstWorldUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_FirstWorldUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::WorldUI*>("PowerUI", "UI", "FirstWorldUI"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.WorldUI FirstWorldUI
void PowerUI::UI::_set_FirstWorldUI(::PowerUI::WorldUI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_FirstWorldUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "FirstWorldUI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CameraDepth
int PowerUI::UI::_get_CameraDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_CameraDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "UI", "CameraDepth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CameraDepth
void PowerUI::UI::_set_CameraDepth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_CameraDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "CameraDepth", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.CameraPool MainCameraPool
::PowerUI::CameraPool* PowerUI::UI::_get_MainCameraPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_MainCameraPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::CameraPool*>("PowerUI", "UI", "MainCameraPool"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.CameraPool MainCameraPool
void PowerUI::UI::_set_MainCameraPool(::PowerUI::CameraPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_MainCameraPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "MainCameraPool", value));
}
// Autogenerated static field getter
// Get static field: static private PowerUI.StandardUpdater GlobalUpdater
::PowerUI::StandardUpdater* PowerUI::UI::_get_GlobalUpdater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_GlobalUpdater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::StandardUpdater*>("PowerUI", "UI", "GlobalUpdater"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.StandardUpdater GlobalUpdater
void PowerUI::UI::_set_GlobalUpdater(::PowerUI::StandardUpdater* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_GlobalUpdater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "GlobalUpdater", value));
}
// Autogenerated static field getter
// Get static field: static public System.Type BaseCodeType
::System::Type* PowerUI::UI::_get_BaseCodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_BaseCodeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("PowerUI", "UI", "BaseCodeType"));
}
// Autogenerated static field setter
// Set static field: static public System.Type BaseCodeType
void PowerUI::UI::_set_BaseCodeType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_BaseCodeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "BaseCodeType", value));
}
// [CompilerGeneratedAttribute] Offset: 0xADEE14
// Autogenerated static field getter
// Get static field: static private PowerUI.CameraCreated OnCameraCreated
::PowerUI::CameraCreated* PowerUI::UI::_get_OnCameraCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_OnCameraCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::CameraCreated*>("PowerUI", "UI", "OnCameraCreated"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.CameraCreated OnCameraCreated
void PowerUI::UI::_set_OnCameraCreated(::PowerUI::CameraCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_OnCameraCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "OnCameraCreated", value));
}
// Autogenerated static field getter
// Get static field: static private Wrench.UnityLanguageLoader LanguageLoader
::Wrench::UnityLanguageLoader* PowerUI::UI::_get_LanguageLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_LanguageLoader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Wrench::UnityLanguageLoader*>("PowerUI", "UI", "LanguageLoader"));
}
// Autogenerated static field setter
// Set static field: static private Wrench.UnityLanguageLoader LanguageLoader
void PowerUI::UI::_set_LanguageLoader(::Wrench::UnityLanguageLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_LanguageLoader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "LanguageLoader", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.GetSecurityDomain OnGetSecurityDomain
::PowerUI::GetSecurityDomain* PowerUI::UI::_get_OnGetSecurityDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_OnGetSecurityDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::GetSecurityDomain*>("PowerUI", "UI", "OnGetSecurityDomain"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.GetSecurityDomain OnGetSecurityDomain
void PowerUI::UI::_set_OnGetSecurityDomain(::PowerUI::GetSecurityDomain* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_OnGetSecurityDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "OnGetSecurityDomain", value));
}
// Autogenerated static field getter
// Get static field: static private PowerUI.CameraMode CurrentCameraMode
::PowerUI::CameraMode PowerUI::UI::_get_CurrentCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_CurrentCameraMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::CameraMode>("PowerUI", "UI", "CurrentCameraMode"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.CameraMode CurrentCameraMode
void PowerUI::UI::_set_CurrentCameraMode(::PowerUI::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_CurrentCameraMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "CurrentCameraMode", value));
}
// [ObsoleteAttribute] Offset: 0xADEE24
// Autogenerated static field getter
// Get static field: static public System.Int32 AtlasSize
int PowerUI::UI::_get_AtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_get_AtlasSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "UI", "AtlasSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AtlasSize
void PowerUI::UI::_set_AtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::_set_AtlasSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UI", "AtlasSize", value));
}
// Autogenerated method: PowerUI.UI.add_OnCameraCreated
void PowerUI::UI::add_OnCameraCreated(::PowerUI::CameraCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::add_OnCameraCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "add_OnCameraCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.remove_OnCameraCreated
void PowerUI::UI::remove_OnCameraCreated(::PowerUI::CameraCreated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::remove_OnCameraCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "remove_OnCameraCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.LoadHTML
::StringW PowerUI::UI::LoadHTML(::StringW resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::LoadHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "LoadHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: PowerUI.UI.CameraGotCreated
void PowerUI::UI::CameraGotCreated(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::CameraGotCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "CameraGotCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera);
}
// Autogenerated method: PowerUI.UI.Start
void PowerUI::UI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.Start
void PowerUI::UI::Start(bool nitroAot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nitroAot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nitroAot);
}
// Autogenerated method: PowerUI.UI.HideFromCamera
void PowerUI::UI::HideFromCamera(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::HideFromCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "HideFromCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera);
}
// Autogenerated method: PowerUI.UI.get_Resolution
::PowerUI::ResolutionInfo* PowerUI::UI::get_Resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_Resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_Resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ResolutionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_Resolution
void PowerUI::UI::set_Resolution(::PowerUI::ResolutionInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_Resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_Resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_CameraMode
::PowerUI::CameraMode PowerUI::UI::get_CameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_CameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_CameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CameraMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_CameraMode
void PowerUI::UI::set_CameraMode(::PowerUI::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_CameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_CameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_RenderMode
::PowerUI::RenderMode PowerUI::UI::get_RenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::RenderMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_RenderMode
void PowerUI::UI::set_RenderMode(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.SetDepthResolution
void PowerUI::UI::SetDepthResolution(float gaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::SetDepthResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "SetDepthResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gaps);
}
// Autogenerated method: PowerUI.UI.GetRenderer
::PowerUI::Renderman* PowerUI::UI::GetRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::GetRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "GetRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Renderman*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.get_InputMode
::PowerUI::InputMode PowerUI::UI::get_InputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_InputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_InputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::InputMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_InputMode
void PowerUI::UI::set_InputMode(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_InputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_InputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_WorldInputMode
::PowerUI::InputMode PowerUI::UI::get_WorldInputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_WorldInputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_WorldInputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::InputMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_WorldInputMode
void PowerUI::UI::set_WorldInputMode(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_WorldInputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_WorldInputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_FilterMode
::UnityEngine::FilterMode PowerUI::UI::get_FilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_FilterMode
void PowerUI::UI::set_FilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_TextFilterMode
::UnityEngine::FilterMode PowerUI::UI::get_TextFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_TextFilterMode
void PowerUI::UI::set_TextFilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.OnLogMessage
void PowerUI::UI::OnLogMessage(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::OnLogMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "OnLogMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PowerUI.UI.SetGroupResolver
void PowerUI::UI::SetGroupResolver(::Wrench::GroupResolve* resolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::SetGroupResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "SetGroupResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resolver);
}
// Autogenerated method: PowerUI.UI.SetCameraDistance
void PowerUI::UI::SetCameraDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::SetCameraDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "SetCameraDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, distance);
}
// Autogenerated method: PowerUI.UI.GetCameraDistance
float PowerUI::UI::GetCameraDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::GetCameraDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "GetCameraDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.SetFieldOfView
void PowerUI::UI::SetFieldOfView(float fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::SetFieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "SetFieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fov);
}
// Autogenerated method: PowerUI.UI.GetFieldOfView
float PowerUI::UI::GetFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::GetFieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "GetFieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.ClearAll
void PowerUI::UI::ClearAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::ClearAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "ClearAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.Destroy
void PowerUI::UI::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.GetLanguageLoader
::Wrench::UnityLanguageLoader* PowerUI::UI::GetLanguageLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::GetLanguageLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "GetLanguageLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::UnityLanguageLoader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.OnLanguageChange
void PowerUI::UI::OnLanguageChange(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::OnLanguageChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "OnLanguageChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: PowerUI.UI.AddTextGroup
void PowerUI::UI::AddTextGroup(::StringW text, ::StringW groupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::AddTextGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "AddTextGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(groupName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, groupName);
}
// Autogenerated method: PowerUI.UI.UpdateTextDirection
void PowerUI::UI::UpdateTextDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::UpdateTextDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "UpdateTextDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.UpdateTextDirection
void PowerUI::UI::UpdateTextDirection(bool goesLeftwards, ::PowerUI::Document* htmlDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::UpdateTextDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "UpdateTextDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goesLeftwards), ::il2cpp_utils::ExtractType(htmlDocument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, goesLeftwards, htmlDocument);
}
// Autogenerated method: PowerUI.UI.OnVariableChange
void PowerUI::UI::OnVariableChange(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::OnVariableChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "OnVariableChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: PowerUI.UI.ResolveVariable
void PowerUI::UI::ResolveVariable(::PowerUI::Document* htmlDocument, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::ResolveVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "ResolveVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(htmlDocument), ::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, htmlDocument, code);
}
// Autogenerated method: PowerUI.UI.ResolveAllVariables
void PowerUI::UI::ResolveAllVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::ResolveAllVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "ResolveAllVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.ResolveAllVariables
void PowerUI::UI::ResolveAllVariables(::PowerUI::Document* htmlDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::ResolveAllVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "ResolveAllVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(htmlDocument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, htmlDocument);
}
// Autogenerated method: PowerUI.UI.get_Language
::StringW PowerUI::UI::get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_Language
void PowerUI::UI::set_Language(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_Language");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_Language", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_Gender
::StringW PowerUI::UI::get_Gender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_Gender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_Gender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_Gender
void PowerUI::UI::set_Gender(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_Gender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_Gender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.GetAllLanguages
::ArrayW<::Wrench::LanguageSet*> PowerUI::UI::GetAllLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::GetAllLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "GetAllLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Wrench::LanguageSet*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.RequestLayout
void PowerUI::UI::RequestLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::RequestLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "RequestLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.SetRate
void PowerUI::UI::SetRate(int fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::SetRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "SetRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fps);
}
// Autogenerated method: PowerUI.UI.MouseOver
bool PowerUI::UI::MouseOver(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::MouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "MouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: PowerUI.UI.HandleInput
bool PowerUI::UI::HandleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::HandleInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "HandleInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.InternalHandleInput
bool PowerUI::UI::InternalHandleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::InternalHandleInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "InternalHandleInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.get_DefaultSecurityDomain
::Nitro::NitroDomainManager* PowerUI::UI::get_DefaultSecurityDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_DefaultSecurityDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_DefaultSecurityDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Nitro::NitroDomainManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.get_Log
bool PowerUI::UI::get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_Log
void PowerUI::UI::set_Log(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_Html
::StringW PowerUI::UI::get_Html() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_Html");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_Html", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_Html
void PowerUI::UI::set_Html(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_Html");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_Html", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.get_innerHTML
::StringW PowerUI::UI::get_innerHTML() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::get_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "get_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.set_innerHTML
void PowerUI::UI::set_innerHTML(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::set_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "set_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.UI.RedrawNextUpdate
void PowerUI::UI::RedrawNextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::RedrawNextUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "RedrawNextUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.RedrawNow
void PowerUI::UI::RedrawNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::RedrawNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "RedrawNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.RequestFullLayout
void PowerUI::UI::RequestFullLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::RequestFullLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "RequestFullLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI.InternalUpdate
void PowerUI::UI::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::InternalUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UI..cctor
void PowerUI::UI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.CameraCreated
#include "PowerUI/CameraCreated.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CameraCreated.Invoke
void PowerUI::CameraCreated::Invoke(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraCreated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::CameraCreated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: PowerUI.CameraCreated.BeginInvoke
::System::IAsyncResult* PowerUI::CameraCreated::BeginInvoke(::UnityEngine::Camera* camera, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraCreated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::CameraCreated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, camera, callback, object);
}
// Autogenerated method: PowerUI.CameraCreated.EndInvoke
void PowerUI::CameraCreated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraCreated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::CameraCreated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UICamera
#include "PowerUI/UICamera.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Renderman Renderer
[[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& PowerUI::UICamera::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::PowerUI::Renderman**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera SourceCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& PowerUI::UICamera::dyn_SourceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_SourceCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera CameraAfter
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::UICamera::dyn_CameraAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_CameraAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraAfter"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CameraDistance
[[deprecated("Use field access instead!")]] float& PowerUI::UICamera::dyn_CameraDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_CameraDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera CameraBefore
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::UICamera::dyn_CameraBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_CameraBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraBefore"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Gameobject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::UICamera::dyn_Gameobject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_Gameobject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Gameobject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject CameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::UICamera::dyn_CameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::dyn_CameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UICamera.SetDepth
void PowerUI::UICamera::SetDepth(int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, depth);
}
// Autogenerated method: PowerUI.UICamera.SetCameraDistance
void PowerUI::UICamera::SetCameraDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::SetCameraDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: PowerUI.UICamera.SetFieldOfView
void PowerUI::UICamera::SetFieldOfView(float fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::SetFieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fov);
}
// Autogenerated method: PowerUI.UICamera.Destroy
void PowerUI::UICamera::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICamera::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.UICode
#include "PowerUI/UICode.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Window
#include "PowerUI/Window.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: Nitro.NitroCode
#include "Nitro/NitroCode.hpp"
// Including type: PowerUI.UITimer
#include "PowerUI/UITimer.hpp"
// Including type: Nitro.DynamicMethod`1
#include "Nitro/DynamicMethod_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element This
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::UICode::dyn_This() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::dyn_This");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "This"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Window window
[[deprecated("Use field access instead!")]] ::PowerUI::Window*& PowerUI::UICode::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::PowerUI::Window**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::UICode::dyn_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::dyn_document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.NitroCode BaseScript
[[deprecated("Use field access instead!")]] ::Nitro::NitroCode*& PowerUI::UICode::dyn_BaseScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::dyn_BaseScript");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseScript"))->offset;
  return *reinterpret_cast<::Nitro::NitroCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UICode.OnWindowLoaded
void PowerUI::UICode::OnWindowLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::OnWindowLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::UICode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UICode.Start
void PowerUI::UICode::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::UICode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UICode.OnWindowClose
void PowerUI::UICode::OnWindowClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::OnWindowClose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::UICode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UICode.ContainsMethod
bool PowerUI::UICode::ContainsMethod(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::ContainsMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName);
}
// Autogenerated method: PowerUI.UICode.ContainsField
bool PowerUI::UICode::ContainsField(::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::ContainsField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fieldName);
}
// Autogenerated method: PowerUI.UICode.alert
void PowerUI::UICode::alert(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::alert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "alert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.UICode.eval
void PowerUI::UICode::eval(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::eval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "eval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.UICode.escapeHTML
::StringW PowerUI::UICode::escapeHTML(::StringW html) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::escapeHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "escapeHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(html)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, html);
}
// Autogenerated method: PowerUI.UICode.parseInt
int PowerUI::UICode::parseInt(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::parseInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "parseInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.UICode.setInterval
::PowerUI::UITimer* PowerUI::UICode::setInterval(::Nitro::DynamicMethod_1<::Nitro::Void>* method, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::setInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UITimer*, false>(this, ___internal__method, method, ms);
}
// Autogenerated method: PowerUI.UICode.setTimeout
::PowerUI::UITimer* PowerUI::UICode::setTimeout(::Nitro::DynamicMethod_1<::Nitro::Void>* method, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::setTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(ms)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UITimer*, false>(this, ___internal__method, method, ms);
}
// Autogenerated method: PowerUI.UICode.clearInterval
void PowerUI::UICode::clearInterval(::PowerUI::UITimer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UICode::clearInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clearInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnUITimer
#include "PowerUI/OnUITimer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnUITimer.Invoke
void PowerUI::OnUITimer::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnUITimer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnUITimer*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OnUITimer.BeginInvoke
::System::IAsyncResult* PowerUI::OnUITimer::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnUITimer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnUITimer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: PowerUI.OnUITimer.EndInvoke
void PowerUI::OnUITimer::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnUITimer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnUITimer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.UITimer
#include "PowerUI/UITimer.hpp"
// Including type: System.Timers.Timer
#include "System/Timers/Timer.hpp"
// Including type: PowerUI.OnUITimer
#include "PowerUI/OnUITimer.hpp"
// Including type: Nitro.DynamicMethod`1
#include "Nitro/DynamicMethod_1.hpp"
// Including type: System.Timers.ElapsedEventArgs
#include "System/Timers/ElapsedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean OneOff
[[deprecated("Use field access instead!")]] bool& PowerUI::UITimer::dyn_OneOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::dyn_OneOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OneOff"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Timers.Timer InternalTimer
[[deprecated("Use field access instead!")]] ::System::Timers::Timer*& PowerUI::UITimer::dyn_InternalTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::dyn_InternalTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalTimer"))->offset;
  return *reinterpret_cast<::System::Timers::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnUITimer OnComplete
[[deprecated("Use field access instead!")]] ::PowerUI::OnUITimer*& PowerUI::UITimer::dyn_OnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::dyn_OnComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnComplete"))->offset;
  return *reinterpret_cast<::PowerUI::OnUITimer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> Callback
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::UITimer::dyn_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::dyn_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callback"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UITimer.add_OnComplete
void PowerUI::UITimer::add_OnComplete(::PowerUI::OnUITimer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::add_OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.UITimer.remove_OnComplete
void PowerUI::UITimer::remove_OnComplete(::PowerUI::OnUITimer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::remove_OnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.UITimer.Setup
void PowerUI::UITimer::Setup(bool oneOff, int interval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oneOff), ::il2cpp_utils::ExtractType(interval)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oneOff, interval);
}
// Autogenerated method: PowerUI.UITimer.Stop
void PowerUI::UITimer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UITimer.Elapsed
void PowerUI::UITimer::Elapsed(::Il2CppObject* sender, ::System::Timers::ElapsedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UITimer::Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.VariableElement
#include "PowerUI/VariableElement.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::VariableElement::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] Arguments
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& PowerUI::VariableElement::dyn_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::dyn_Arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Arguments"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.VariableElement.SetVariableName
void PowerUI::VariableElement::SetVariableName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::SetVariableName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::VariableElement*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.VariableElement.LoadNow
void PowerUI::VariableElement::LoadNow(bool innerElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::LoadNow");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::VariableElement*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerElement);
}
// Autogenerated method: PowerUI.VariableElement.GetArgument
::StringW PowerUI::VariableElement::GetArgument(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::GetArgument");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::VariableElement*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.VariableElement.SetArguments
void PowerUI::VariableElement::SetArguments(::ArrayW<::StringW> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::SetArguments");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::VariableElement*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arguments);
}
// Autogenerated method: PowerUI.VariableElement.ResetVariable
void PowerUI::VariableElement::ResetVariable(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::ResetVariable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.VariableElement.ResetAllVariables
void PowerUI::VariableElement::ResetAllVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::ResetAllVariables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VariableElement.ToTextString
::StringW PowerUI::VariableElement::ToTextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::ToTextString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VariableElement.ToString
::StringW PowerUI::VariableElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.VariableElement.ToString
void PowerUI::VariableElement::ToString(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::VariableElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Window
#include "PowerUI/Window.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Window top
[[deprecated("Use field access instead!")]] ::PowerUI::Window*& PowerUI::Window::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<::PowerUI::Window**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Window self
[[deprecated("Use field access instead!")]] ::PowerUI::Window*& PowerUI::Window::dyn_self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_self");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "self"))->offset;
  return *reinterpret_cast<::PowerUI::Window**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIEvent Event
[[deprecated("Use field access instead!")]] ::PowerUI::UIEvent*& PowerUI::Window::dyn_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Event"))->offset;
  return *reinterpret_cast<::PowerUI::UIEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Window parent
[[deprecated("Use field access instead!")]] ::PowerUI::Window*& PowerUI::Window::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::PowerUI::Window**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element iframe
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Window::dyn_iframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_iframe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iframe"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::Window::dyn_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Window::dyn_document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.WordElement
#include "PowerUI/WordElement.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.WordElement.LetterCount
int PowerUI::WordElement::LetterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WordElement::LetterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LetterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WordElement.ToString
::StringW PowerUI::WordElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WordElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WordElement.ToString
void PowerUI::WordElement::ToString(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WordElement::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: PowerUI.WorldUIExpiryEvent
#include "PowerUI/WorldUIExpiryEvent.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.RenderMode
#include "PowerUI/RenderMode.hpp"
// Including type: PowerUI.InputMode
#include "PowerUI/InputMode.hpp"
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<UnityEngine.Transform,PowerUI.WorldUI> PhysicsLookup
::System::Collections::Generic::Dictionary_2<::UnityEngine::Transform*, ::PowerUI::WorldUI*>* PowerUI::WorldUI::_get_PhysicsLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::_get_PhysicsLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Transform*, ::PowerUI::WorldUI*>*>("PowerUI", "WorldUI", "PhysicsLookup")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<UnityEngine.Transform,PowerUI.WorldUI> PhysicsLookup
void PowerUI::WorldUI::_set_PhysicsLookup(::System::Collections::Generic::Dictionary_2<::UnityEngine::Transform*, ::PowerUI::WorldUI*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::_set_PhysicsLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "WorldUI", "PhysicsLookup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LiveUpdatablesAvailable
bool PowerUI::WorldUI::_get_LiveUpdatablesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::_get_LiveUpdatablesAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "WorldUI", "LiveUpdatablesAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LiveUpdatablesAvailable
void PowerUI::WorldUI::_set_LiveUpdatablesAvailable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::_set_LiveUpdatablesAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "WorldUI", "LiveUpdatablesAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Flat
[[deprecated("Use field access instead!")]] bool& PowerUI::WorldUI::dyn_Flat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_Flat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Ratio
[[deprecated("Use field access instead!")]] float& PowerUI::WorldUI::dyn_Ratio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_Ratio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ratio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pixelWidth
[[deprecated("Use field access instead!")]] int& PowerUI::WorldUI::dyn_pixelWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_pixelWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pixelHeight
[[deprecated("Use field access instead!")]] int& PowerUI::WorldUI::dyn_pixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_pixelHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::WorldUI::dyn_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& PowerUI::WorldUI::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::WorldUI::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::WorldUI::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Expires
[[deprecated("Use field access instead!")]] bool& PowerUI::WorldUI::dyn_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_Expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expires"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExpiresIn
[[deprecated("Use field access instead!")]] float& PowerUI::WorldUI::dyn_ExpiresIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_ExpiresIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpiresIn"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.WorldUI UIAfter
[[deprecated("Use field access instead!")]] ::PowerUI::WorldUI*& PowerUI::WorldUI::dyn_UIAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_UIAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UIAfter"))->offset;
  return *reinterpret_cast<::PowerUI::WorldUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.WorldUI UIBefore
[[deprecated("Use field access instead!")]] ::PowerUI::WorldUI*& PowerUI::WorldUI::dyn_UIBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_UIBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UIBefore"))->offset;
  return *reinterpret_cast<::PowerUI::WorldUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PixelHeightF
[[deprecated("Use field access instead!")]] float& PowerUI::WorldUI::dyn_PixelHeightF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_PixelHeightF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelHeightF"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Renderman Renderer
[[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& PowerUI::WorldUI::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::PowerUI::Renderman**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera CameraToFace
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& PowerUI::WorldUI::dyn_CameraToFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_CameraToFace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraToFace"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean IsPixelPerfect
[[deprecated("Use field access instead!")]] bool& PowerUI::WorldUI::dyn_IsPixelPerfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_IsPixelPerfect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPixelPerfect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AlwaysFaceCamera
[[deprecated("Use field access instead!")]] bool& PowerUI::WorldUI::dyn_AlwaysFaceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_AlwaysFaceCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AlwaysFaceCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.WorldUIExpiryEvent OnExpire
[[deprecated("Use field access instead!")]] ::PowerUI::WorldUIExpiryEvent*& PowerUI::WorldUI::dyn_OnExpire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_OnExpire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnExpire"))->offset;
  return *reinterpret_cast<::PowerUI::WorldUIExpiryEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single ScreenSpaceProportion
[[deprecated("Use field access instead!")]] float& PowerUI::WorldUI::dyn_ScreenSpaceProportion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_ScreenSpaceProportion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScreenSpaceProportion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 WorldScreenOrigin
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& PowerUI::WorldUI::dyn_WorldScreenOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_WorldScreenOrigin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WorldScreenOrigin"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 OriginLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& PowerUI::WorldUI::dyn_OriginLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_OriginLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AtlasSize
[[deprecated("Use field access instead!")]] int& PowerUI::WorldUI::dyn_AtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::dyn_AtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.WorldUI.UpdateAll
void PowerUI::WorldUI::UpdateAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::UpdateAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "WorldUI", "UpdateAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.Find
::PowerUI::WorldUI* PowerUI::WorldUI::Find(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "WorldUI", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::WorldUI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: PowerUI.WorldUI.get_PixelPerfect
bool PowerUI::WorldUI::get_PixelPerfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_PixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.set_PixelPerfect
void PowerUI::WorldUI::set_PixelPerfect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::set_PixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.WorldUI.CameraChanged
void PowerUI::WorldUI::CameraChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::CameraChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.MainScreenSizeChanged
void PowerUI::WorldUI::MainScreenSizeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::MainScreenSizeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainScreenSizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.get_RenderMode
::PowerUI::RenderMode PowerUI::WorldUI::get_RenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::RenderMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.set_RenderMode
void PowerUI::WorldUI::set_RenderMode(::PowerUI::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::set_RenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.WorldUI.UpdateResolution
void PowerUI::WorldUI::UpdateResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::UpdateResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.SetInputMode
void PowerUI::WorldUI::SetInputMode(::PowerUI::InputMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetInputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: PowerUI.WorldUI.set_Layer
void PowerUI::WorldUI::set_Layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::set_Layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.WorldUI.get_Layer
int PowerUI::WorldUI::get_Layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_Layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.RenderWithCamera
void PowerUI::WorldUI::RenderWithCamera(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::RenderWithCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.WorldUI.get_PhysicsModeCollider
::UnityEngine::Transform* PowerUI::WorldUI::get_PhysicsModeCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_PhysicsModeCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PhysicsModeCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.SetDepthResolution
void PowerUI::WorldUI::SetDepthResolution(float gaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetDepthResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDepthResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gaps);
}
// Autogenerated method: PowerUI.WorldUI.SetResolution
void PowerUI::WorldUI::SetResolution(int ppw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ppw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ppw);
}
// Autogenerated method: PowerUI.WorldUI.SetResolution
void PowerUI::WorldUI::SetResolution(float ppw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetResolution");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ppw);
}
// Autogenerated method: PowerUI.WorldUI.SetResolution
void PowerUI::WorldUI::SetResolution(int ppwW, int ppwH) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetResolution");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ppwW, ppwH);
}
// Autogenerated method: PowerUI.WorldUI.get_WorldPerPixel
::UnityEngine::Vector2 PowerUI::WorldUI::get_WorldPerPixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_WorldPerPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorldPerPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.get_WorldScreenSize
::UnityEngine::Vector2 PowerUI::WorldUI::get_WorldScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_WorldScreenSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorldScreenSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.SetDimensions
void PowerUI::WorldUI::SetDimensions(int widthPX, int heightPX) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetDimensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, widthPX, heightPX);
}
// Autogenerated method: PowerUI.WorldUI.get_TextFilterMode
::UnityEngine::FilterMode PowerUI::WorldUI::get_TextFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::get_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.set_TextFilterMode
void PowerUI::WorldUI::set_TextFilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::set_TextFilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextFilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.WorldUI.SetOrigin
void PowerUI::WorldUI::SetOrigin(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.WorldUI.CameraToFaceChanged
void PowerUI::WorldUI::CameraToFaceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::CameraToFaceChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraToFaceChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.FaceCamera
void PowerUI::WorldUI::FaceCamera(::UnityEngine::Camera* cameraToFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::FaceCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FaceCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraToFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cameraToFace);
}
// Autogenerated method: PowerUI.WorldUI.FaceCamera
void PowerUI::WorldUI::FaceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::FaceCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FaceCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.StopFacingCamera
void PowerUI::WorldUI::StopFacingCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::StopFacingCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopFacingCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.Update
void PowerUI::WorldUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.ParentToOrigin
void PowerUI::WorldUI::ParentToOrigin(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::ParentToOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentToOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: PowerUI.WorldUI.ParentToOrigin
void PowerUI::WorldUI::ParentToOrigin(::UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::ParentToOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentToOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: PowerUI.WorldUI.GotoLocalOrigin
void PowerUI::WorldUI::GotoLocalOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::GotoLocalOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotoLocalOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.Expire
void PowerUI::WorldUI::Expire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::Expire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.CancelExpiry
void PowerUI::WorldUI::CancelExpiry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::CancelExpiry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelExpiry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.WorldUI.SetExpiry
void PowerUI::WorldUI::SetExpiry(float expiry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::SetExpiry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpiry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expiry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expiry);
}
// Autogenerated method: PowerUI.WorldUI.Destroy
void PowerUI::WorldUI::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUI::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.WorldUIExpiryEvent
#include "PowerUI/WorldUIExpiryEvent.hpp"
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.WorldUIExpiryEvent.Invoke
bool PowerUI::WorldUIExpiryEvent::Invoke(::PowerUI::WorldUI* ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUIExpiryEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUIExpiryEvent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ui);
}
// Autogenerated method: PowerUI.WorldUIExpiryEvent.BeginInvoke
::System::IAsyncResult* PowerUI::WorldUIExpiryEvent::BeginInvoke(::PowerUI::WorldUI* ui, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUIExpiryEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUIExpiryEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ui, callback, object);
}
// Autogenerated method: PowerUI.WorldUIExpiryEvent.EndInvoke
bool PowerUI::WorldUIExpiryEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::WorldUIExpiryEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUIExpiryEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.GetSecurityDomain
#include "PowerUI/GetSecurityDomain.hpp"
// Including type: Nitro.NitroDomainManager
#include "Nitro/NitroDomainManager.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.GetSecurityDomain.Invoke
::Nitro::NitroDomainManager* PowerUI::GetSecurityDomain::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::GetSecurityDomain::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::GetSecurityDomain*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Nitro::NitroDomainManager*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.GetSecurityDomain.BeginInvoke
::System::IAsyncResult* PowerUI::GetSecurityDomain::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::GetSecurityDomain::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::GetSecurityDomain*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: PowerUI.GetSecurityDomain.EndInvoke
::Nitro::NitroDomainManager* PowerUI::GetSecurityDomain::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::GetSecurityDomain::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::GetSecurityDomain*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Nitro::NitroDomainManager*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UIScriptDomainManager
#include "PowerUI/UIScriptDomainManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BorderStyle
#include "PowerUI/Css/BorderStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BorderStyle Solid
::PowerUI::Css::BorderStyle PowerUI::Css::BorderStyle::_get_Solid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderStyle::_get_Solid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BorderStyle>("PowerUI.Css", "BorderStyle", "Solid"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BorderStyle Solid
void PowerUI::Css::BorderStyle::_set_Solid(::PowerUI::Css::BorderStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderStyle::_set_Solid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BorderStyle", "Solid", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BorderStyle Dashed
::PowerUI::Css::BorderStyle PowerUI::Css::BorderStyle::_get_Dashed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderStyle::_get_Dashed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BorderStyle>("PowerUI.Css", "BorderStyle", "Dashed"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BorderStyle Dashed
void PowerUI::Css::BorderStyle::_set_Dashed(::PowerUI::Css::BorderStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderStyle::_set_Dashed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BorderStyle", "Dashed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BorderStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Css.Calculation
#include "PowerUI/Css/Calculation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Calculation.Run
int PowerUI::Css::Calculation::Run(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Calculation::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, size);
}
// Autogenerated method: PowerUI.Css.Calculation.ToString
::StringW PowerUI::Css::Calculation::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Calculation::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
// Including type: PowerUI.Css.BorderProperty
#include "PowerUI/Css/BorderProperty.hpp"
// Including type: PowerUI.Css.BackgroundImage
#include "PowerUI/Css/BackgroundImage.hpp"
// Including type: PowerUI.Css.BackgroundColour
#include "PowerUI/Css/BackgroundColour.hpp"
// Including type: PowerUI.Css.TextRenderingProperty
#include "PowerUI/Css/TextRenderingProperty.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.Css.ShaderData
#include "PowerUI/Css/ShaderData.hpp"
// Including type: PowerUI.Css.SelectorType
#include "PowerUI/Css/SelectorType.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.InputTag
#include "PowerUI/InputTag.hpp"
// Including type: PowerUI.Css.ShadowData
#include "PowerUI/Css/ShadowData.hpp"
// Including type: PowerUI.Css.StrokeData
#include "PowerUI/Css/StrokeData.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Clip
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Clip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ZIndex
[[deprecated("Use field access instead!")]] float& PowerUI::Css::ComputedStyle::dyn_ZIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ZIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZIndex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FixedZIndex
[[deprecated("Use field access instead!")]] float& PowerUI::Css::ComputedStyle::dyn_FixedZIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FixedZIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedZIndex"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OffsetTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_OffsetTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_OffsetTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OffsetLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_OffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_OffsetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PixelWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PixelWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PixelWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PixelHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PixelHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InnerWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_InnerWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_InnerWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InnerHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_InnerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_InnerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FixedDepth
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_FixedDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FixedDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FixedWidth
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_FixedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FixedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FixedHeight
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_FixedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FixedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ParentOffsetTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ParentOffsetTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ParentOffsetTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParentOffsetTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ParentOffsetLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ParentOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ParentOffsetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParentOffsetLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ContentWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ContentWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ContentWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContentWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ContentHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ContentHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ContentHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContentHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BorderTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_BorderTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_BorderTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BorderTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BorderLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_BorderLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_BorderLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BorderLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Transformation Transform
[[deprecated("Use field access instead!")]] ::PowerUI::Transformation*& PowerUI::Css::ComputedStyle::dyn_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Transform"))->offset;
  return *reinterpret_cast<::PowerUI::Transformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color ColorOverlay
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::ComputedStyle::dyn_ColorOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ColorOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColorOverlay"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddedWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddedWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddedHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddedHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ScrollTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ScrollTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ScrollTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ScrollLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_ScrollLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ScrollLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScrollLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StyleOffsetTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_StyleOffsetTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_StyleOffsetTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StyleOffsetTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StyleOffsetLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_StyleOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_StyleOffsetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StyleOffsetLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MarginTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MarginTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MarginTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarginTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MarginLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MarginLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MarginLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarginLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MarginRight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MarginRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MarginRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarginRight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MarginBottom
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MarginBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MarginBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarginBottom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddingTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddingTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddingTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddingLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddingLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddingLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddingRight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddingRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddingRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingRight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PaddingBottom
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PaddingBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PaddingBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PaddingBottom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoMarginX
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_AutoMarginX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_AutoMarginX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoMarginX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoMarginY
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_AutoMarginY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_AutoMarginY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoMarginY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Baseline
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Baseline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Baseline"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PositionTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PositionTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PositionTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PositionLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PositionLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PositionLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PositionRight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PositionRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PositionRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionRight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PositionBottom
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_PositionBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_PositionBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionBottom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RightPositioned
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_RightPositioned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_RightPositioned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightPositioned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean BottomPositioned
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ComputedStyle::dyn_BottomPositioned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_BottomPositioned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomPositioned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle NextPacked
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Css::ComputedStyle::dyn_NextPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_NextPacked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextPacked"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle NextOnLine
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Css::ComputedStyle::dyn_NextOnLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_NextOnLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextOnLine"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.DisplayType Display
[[deprecated("Use field access instead!")]] ::PowerUI::Css::DisplayType& PowerUI::Css::ComputedStyle::dyn_Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Display");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Display"))->offset;
  return *reinterpret_cast<::PowerUI::Css::DisplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.PositionType Position
[[deprecated("Use field access instead!")]] ::PowerUI::Css::PositionType& PowerUI::Css::ComputedStyle::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::PowerUI::Css::PositionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.WhiteSpaceType WhiteSpace
[[deprecated("Use field access instead!")]] ::PowerUI::Css::WhiteSpaceType& PowerUI::Css::ComputedStyle::dyn_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_WhiteSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WhiteSpace"))->offset;
  return *reinterpret_cast<::PowerUI::Css::WhiteSpaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.VisibilityType Visibility
[[deprecated("Use field access instead!")]] ::PowerUI::Css::VisibilityType& PowerUI::Css::ComputedStyle::dyn_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visibility"))->offset;
  return *reinterpret_cast<::PowerUI::Css::VisibilityType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.VerticalAlignType VerticalAlign
[[deprecated("Use field access instead!")]] ::PowerUI::Css::VerticalAlignType& PowerUI::Css::ComputedStyle::dyn_VerticalAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_VerticalAlign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerticalAlign"))->offset;
  return *reinterpret_cast<::PowerUI::Css::VerticalAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.HorizontalAlignType HorizontalAlign
[[deprecated("Use field access instead!")]] ::PowerUI::Css::HorizontalAlignType& PowerUI::Css::ComputedStyle::dyn_HorizontalAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_HorizontalAlign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HorizontalAlign"))->offset;
  return *reinterpret_cast<::PowerUI::Css::HorizontalAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.HorizontalAlignType HorizontalAlignLast
[[deprecated("Use field access instead!")]] ::PowerUI::Css::HorizontalAlignType& PowerUI::Css::ComputedStyle::dyn_HorizontalAlignLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_HorizontalAlignLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HorizontalAlignLast"))->offset;
  return *reinterpret_cast<::PowerUI::Css::HorizontalAlignType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BorderProperty Border
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BorderProperty*& PowerUI::Css::ComputedStyle::dyn_Border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Border");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Border"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BorderProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BackgroundImage BGImage
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BackgroundImage*& PowerUI::Css::ComputedStyle::dyn_BGImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_BGImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BGImage"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BackgroundImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BackgroundColour BGColour
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BackgroundColour*& PowerUI::Css::ComputedStyle::dyn_BGColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_BGColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BGColour"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BackgroundColour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.TextRenderingProperty Text
[[deprecated("Use field access instead!")]] ::PowerUI::Css::TextRenderingProperty*& PowerUI::Css::ComputedStyle::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::PowerUI::Css::TextRenderingProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FullHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_FullHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FullHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FullWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_FullWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_FullWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String IDSelector
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::ComputedStyle::dyn_IDSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_IDSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IDSelector"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TagSelector
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::ComputedStyle::dyn_TagSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_TagSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagSelector"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ClassSelector
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::ComputedStyle::dyn_ClassSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ClassSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClassSelector"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] ExtraClassSelectors
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& PowerUI::Css::ComputedStyle::dyn_ExtraClassSelectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ExtraClassSelectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraClassSelectors"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaximumWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MaximumWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MaximumWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaximumWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaximumHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MaximumHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MaximumHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaximumHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinimumWidth
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MinimumWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MinimumWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinimumHeight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ComputedStyle::dyn_MinimumHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_MinimumHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.OverflowType OverflowX
[[deprecated("Use field access instead!")]] ::PowerUI::Css::OverflowType& PowerUI::Css::ComputedStyle::dyn_OverflowX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_OverflowX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverflowX"))->offset;
  return *reinterpret_cast<::PowerUI::Css::OverflowType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.OverflowType OverflowY
[[deprecated("Use field access instead!")]] ::PowerUI::Css::OverflowType& PowerUI::Css::ComputedStyle::dyn_OverflowY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_OverflowY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverflowY"))->offset;
  return *reinterpret_cast<::PowerUI::Css::OverflowType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.DirectionType DrawDirection
[[deprecated("Use field access instead!")]] ::PowerUI::Css::DirectionType& PowerUI::Css::ComputedStyle::dyn_DrawDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_DrawDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawDirection"))->offset;
  return *reinterpret_cast<::PowerUI::Css::DirectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.FloatType Float
[[deprecated("Use field access instead!")]] ::PowerUI::Css::FloatType& PowerUI::Css::ComputedStyle::dyn_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Float");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Float"))->offset;
  return *reinterpret_cast<::PowerUI::Css::FloatType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::Css::ComputedStyle::dyn_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_ParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ShaderData Shading
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ShaderData*& PowerUI::Css::ComputedStyle::dyn_Shading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::dyn_Shading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shading"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ShaderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.Contains
bool PowerUI::Css::ComputedStyle::Contains(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.TransformedOverlap
bool PowerUI::Css::ComputedStyle::TransformedOverlap(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::TransformedOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformedOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.VisibilityNone
void PowerUI::Css::ComputedStyle::VisibilityNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::VisibilityNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisibilityNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.DisplayNone
void PowerUI::Css::ComputedStyle::DisplayNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::DisplayNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.BoxOverlap
bool PowerUI::Css::ComputedStyle::BoxOverlap(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::BoxOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BoxOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetMidpointX
float PowerUI::Css::ComputedStyle::GetMidpointX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetMidpointX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMidpointX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetMidpointY
float PowerUI::Css::ComputedStyle::GetMidpointY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetMidpointY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMidpointY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ParentChanged
void PowerUI::Css::ComputedStyle::ParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ParentChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.get_EndSpaceSize
int PowerUI::Css::ComputedStyle::get_EndSpaceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::get_EndSpaceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndSpaceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.get_HasBackground
bool PowerUI::Css::ComputedStyle::get_HasBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::get_HasBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.IsOffset
bool PowerUI::Css::ComputedStyle::IsOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::IsOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.VisiblePercentageX
float PowerUI::Css::ComputedStyle::VisiblePercentageX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::VisiblePercentageX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisiblePercentageX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.VisiblePercentageY
float PowerUI::Css::ComputedStyle::VisiblePercentageY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::VisiblePercentageY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisiblePercentageY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.Hover
bool PowerUI::Css::ComputedStyle::Hover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::Hover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.Unhover
void PowerUI::Css::ComputedStyle::Unhover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::Unhover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unhover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetModifier
bool PowerUI::Css::ComputedStyle::SetModifier(::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetModifier
bool PowerUI::Css::ComputedStyle::SetModifier(::PowerUI::Css::SelectorType type, ::StringW selector, ::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, selector, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetModifier
bool PowerUI::Css::ComputedStyle::SetModifier(::PowerUI::Css::SelectorType type, ::StringW selector, ::StringW modifier, int innerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(modifier), ::il2cpp_utils::ExtractType(innerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, selector, modifier, innerIndex);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.UnsetModifier
void PowerUI::Css::ComputedStyle::UnsetModifier(::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::UnsetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.UnsetClassModifier
void PowerUI::Css::ComputedStyle::UnsetClassModifier(::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::UnsetClassModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetClassModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.UnsetModifier
void PowerUI::Css::ComputedStyle::UnsetModifier(::PowerUI::Css::SelectorType type, ::StringW selector, ::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::UnsetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(modifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, selector, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.HasModifier
bool PowerUI::Css::ComputedStyle::HasModifier(::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::HasModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, modifier);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.RefreshSelector
void PowerUI::Css::ComputedStyle::RefreshSelector(::PowerUI::Css::SelectorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::RefreshSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.RemoveStyle
bool PowerUI::Css::ComputedStyle::RemoveStyle(::StringW selector, ::PowerUI::Css::SelectorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::RemoveStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, selector, type);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.AddStyle
bool PowerUI::Css::ComputedStyle::AddStyle(::StringW selector, ::PowerUI::Css::SelectorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::AddStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, selector, type);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetSelector
void PowerUI::Css::ComputedStyle::SetSelector(::PowerUI::Css::SelectorType type, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, value);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeParentProperty
void PowerUI::Css::ComputedStyle::ChangeParentProperty(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeParentProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeParentProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetLocalStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetLocalStyle(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetLocalStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetLocalStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetLocalStyle(::PowerUI::Css::CssProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetLocalStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeProperty
void PowerUI::Css::ComputedStyle::ChangeProperty(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.EnforceNoInline
void PowerUI::Css::ComputedStyle::EnforceNoInline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::EnforceNoInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnforceNoInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetupTransform
bool PowerUI::Css::ComputedStyle::SetupTransform(::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetupTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.NeedsScrollbar
bool PowerUI::Css::ComputedStyle::NeedsScrollbar(::PowerUI::Css::OverflowType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::NeedsScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.MakeScrollbar
::PowerUI::InputTag* PowerUI::Css::ComputedStyle::MakeScrollbar(bool horizontal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::MakeScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(horizontal)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::InputTag*, false>(this, ___internal__method, horizontal);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ResetScrollbars
void PowerUI::Css::ComputedStyle::ResetScrollbars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ResetScrollbars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetScrollbars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetPixelWidth
void PowerUI::Css::ComputedStyle::SetPixelWidth(bool tellHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetPixelWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tellHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tellHandler);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetPixelHeight
void PowerUI::Css::ComputedStyle::SetPixelHeight(bool tellHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetPixelHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixelHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tellHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tellHandler);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetSize
void PowerUI::Css::ComputedStyle::SetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.RequestTransform
void PowerUI::Css::ComputedStyle::RequestTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::RequestTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.RequestLayout
void PowerUI::Css::ComputedStyle::RequestLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::RequestLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.SetParentDimension
void PowerUI::Css::ComputedStyle::SetParentDimension(int dimension, bool isWidth, ::PowerUI::Css::ComputedStyle* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::SetParentDimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentDimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension), ::il2cpp_utils::ExtractType(isWidth), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dimension, isWidth, parent);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.Repaint
void PowerUI::Css::ComputedStyle::Repaint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::Repaint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Repaint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ApplyTransform
void PowerUI::Css::ComputedStyle::ApplyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ApplyTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.WentOffScreen
void PowerUI::Css::ComputedStyle::WentOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::WentOffScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WentOffScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.Render
void PowerUI::Css::ComputedStyle::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeClassProperty
void PowerUI::Css::ComputedStyle::ChangeClassProperty(::StringW cssProperty, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeClassProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeClassProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cssProperty, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeClassProperty
void PowerUI::Css::ComputedStyle::ChangeClassProperty(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeClassProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeClassProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetClassStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetClassStyle(::PowerUI::Css::CssProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetClassStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClassStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetClassStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetClassStyle(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetClassStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClassStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeIDProperty
void PowerUI::Css::ComputedStyle::ChangeIDProperty(::StringW cssProperty, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeIDProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeIDProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cssProperty, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeIDProperty
void PowerUI::Css::ComputedStyle::ChangeIDProperty(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeIDProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeIDProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetIDStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetIDStyle(::PowerUI::Css::CssProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetIDStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIDStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.GetIDStyle
::PowerUI::Css::Value* PowerUI::Css::ComputedStyle::GetIDStyle(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::GetIDStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIDStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeTagProperty
void PowerUI::Css::ComputedStyle::ChangeTagProperty(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeTagProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTagProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.ChangeTagProperty
void PowerUI::Css::ComputedStyle::ChangeTagProperty(::StringW cssProperty, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::ChangeTagProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTagProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cssProperty, newValue);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.RequireShading
::PowerUI::Css::ShaderData* PowerUI::Css::ComputedStyle::RequireShading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::RequireShading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireShading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ShaderData*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.get_TextShadow
::PowerUI::Css::ShadowData* PowerUI::Css::ComputedStyle::get_TextShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::get_TextShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ShadowData*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.set_TextShadow
void PowerUI::Css::ComputedStyle::set_TextShadow(::PowerUI::Css::ShadowData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::set_TextShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.get_TextStroke
::PowerUI::Css::StrokeData* PowerUI::Css::ComputedStyle::get_TextStroke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::get_TextStroke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextStroke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::StrokeData*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ComputedStyle.set_TextStroke
void PowerUI::Css::ComputedStyle::set_TextStroke(::PowerUI::Css::StrokeData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ComputedStyle::set_TextStroke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextStroke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.CssFunction
#include "PowerUI/Css/CssFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::CssFunction::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunction::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.CssFunction.GetNames
::ArrayW<::StringW> PowerUI::Css::CssFunction::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunction::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssFunction*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.CssFunctions
#include "PowerUI/Css/CssFunctions.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.Css.CssFunction
#include "PowerUI/Css/CssFunction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssFunction> Functions
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssFunction*>* PowerUI::Css::CssFunctions::_get_Functions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunctions::_get_Functions");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssFunction*>*>("PowerUI.Css", "CssFunctions", "Functions")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssFunction> Functions
void PowerUI::Css::CssFunctions::_set_Functions(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssFunction*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunctions::_set_Functions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "CssFunctions", "Functions", value));
}
// Autogenerated method: PowerUI.Css.CssFunctions.Setup
void PowerUI::Css::CssFunctions::Setup(::ArrayW<::System::Type*> allTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunctions::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssFunctions", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allTypes);
}
// Autogenerated method: PowerUI.Css.CssFunctions.Add
bool PowerUI::Css::CssFunctions::Add(::PowerUI::Css::CssFunction* cssFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunctions::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssFunctions", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssFunction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cssFunction);
}
// Autogenerated method: PowerUI.Css.CssFunctions.Get
::PowerUI::Css::CssFunction* PowerUI::Css::CssFunctions::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunctions::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssFunctions", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::CssFunction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.CssProperties
#include "PowerUI/Css/CssProperties.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssProperty> Properties
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>* PowerUI::Css::CssProperties::_get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::_get_Properties");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>*>("PowerUI.Css", "CssProperties", "Properties")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssProperty> Properties
void PowerUI::Css::CssProperties::_set_Properties(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::_set_Properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "CssProperties", "Properties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssProperty> TextProperties
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>* PowerUI::Css::CssProperties::_get_TextProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::_get_TextProperties");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>*>("PowerUI.Css", "CssProperties", "TextProperties")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.CssProperty> TextProperties
void PowerUI::Css::CssProperties::_set_TextProperties(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::CssProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::_set_TextProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "CssProperties", "TextProperties", value));
}
// Autogenerated method: PowerUI.Css.CssProperties.Setup
void PowerUI::Css::CssProperties::Setup(::ArrayW<::System::Type*> allTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allTypes);
}
// Autogenerated method: PowerUI.Css.CssProperties.Default
::PowerUI::Css::CssProperty* PowerUI::Css::CssProperties::Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::CssProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Css.CssProperties.Add
bool PowerUI::Css::CssProperties::Add(::PowerUI::Css::CssProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.CssProperties.Get
::PowerUI::Css::CssProperty* PowerUI::Css::CssProperties::Get(::StringW property, ::StringW defaultProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(defaultProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::CssProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property, defaultProperty);
}
// Autogenerated method: PowerUI.Css.CssProperties.Get
::PowerUI::Css::CssProperty* PowerUI::Css::CssProperties::Get(::StringW property, ByRef<int> innerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::CssProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property, byref(innerIndex));
}
// Autogenerated method: PowerUI.Css.CssProperties.Get
::PowerUI::Css::CssProperty* PowerUI::Css::CssProperties::Get(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperties::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "CssProperties", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::CssProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.BackgroundImage
#include "PowerUI/Css/BackgroundImage.hpp"
// Including type: PowerUI.Css.BorderProperty
#include "PowerUI/Css/BorderProperty.hpp"
// Including type: PowerUI.Css.TextRenderingProperty
#include "PowerUI/Css/TextRenderingProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::CssProperty::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTextual
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::CssProperty::dyn_IsTextual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::dyn_IsTextual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTextual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsXProperty
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::CssProperty::dyn_IsXProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::dyn_IsXProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsXProperty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsWidthOrHeight
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::CssProperty::dyn_IsWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::dyn_IsWidthOrHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsWidthOrHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ValueType Type
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ValueType& PowerUI::Css::CssProperty::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ValueType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.CssProperty.GetProperties
::ArrayW<::StringW> PowerUI::Css::CssProperty::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.CssProperty.Apply
void PowerUI::Css::CssProperty::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated method: PowerUI.Css.CssProperty.SetDefault
void PowerUI::Css::CssProperty::SetDefault(::PowerUI::Css::Value* value, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::SetDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PowerUI.Css.CssProperty.GetBackground
::PowerUI::Css::BackgroundImage* PowerUI::Css::CssProperty::GetBackground(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::GetBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::BackgroundImage*, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Css.CssProperty.GetBorder
::PowerUI::Css::BorderProperty* PowerUI::Css::CssProperty::GetBorder(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::GetBorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::BorderProperty*, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Css.CssProperty.GetText
::PowerUI::Css::TextRenderingProperty* PowerUI::Css::CssProperty::GetText(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::TextRenderingProperty*, false>(this, ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.CssUnit
#include "PowerUI/Css/CssUnit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Suffix
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::CssUnit::dyn_Suffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssUnit::dyn_Suffix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Suffix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Prefix
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::CssUnit::dyn_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssUnit::dyn_Prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.DirectionType
#include "PowerUI/Css/DirectionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DirectionType RTL
::PowerUI::Css::DirectionType PowerUI::Css::DirectionType::_get_RTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DirectionType::_get_RTL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DirectionType>("PowerUI.Css", "DirectionType", "RTL"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DirectionType RTL
void PowerUI::Css::DirectionType::_set_RTL(::PowerUI::Css::DirectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DirectionType::_set_RTL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DirectionType", "RTL", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DirectionType LTR
::PowerUI::Css::DirectionType PowerUI::Css::DirectionType::_get_LTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DirectionType::_get_LTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DirectionType>("PowerUI.Css", "DirectionType", "LTR"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DirectionType LTR
void PowerUI::Css::DirectionType::_set_LTR(::PowerUI::Css::DirectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DirectionType::_set_LTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DirectionType", "LTR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::DirectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DirectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BackgroundColour
#include "PowerUI/Css/BackgroundColour.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BaseColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::BackgroundColour::dyn_BaseColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundColour::dyn_BaseColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BackingColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::BackgroundColour::dyn_BackingColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundColour::dyn_BackingColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackingColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.BackgroundColour.SetOverlayColour
void PowerUI::Css::BackgroundColour::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundColour::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.BackgroundColour.Paint
void PowerUI::Css::BackgroundColour::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundColour::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundColour.Layout
void PowerUI::Css::BackgroundColour::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundColour::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BackgroundImage
#include "PowerUI/Css/BackgroundImage.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value OffsetX
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::Css::BackgroundImage::dyn_OffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_OffsetX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetX"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value OffsetY
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::Css::BackgroundImage::dyn_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_OffsetY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetY"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value SizeX
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::Css::BackgroundImage::dyn_SizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_SizeX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeX"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value SizeY
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::Css::BackgroundImage::dyn_SizeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_SizeY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeY"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RepeatX
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::BackgroundImage::dyn_RepeatX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_RepeatX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RepeatX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RepeatY
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::BackgroundImage::dyn_RepeatY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_RepeatY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RepeatY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ImagePackage Image
[[deprecated("Use field access instead!")]] ::PowerUI::ImagePackage*& PowerUI::Css::BackgroundImage::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::PowerUI::ImagePackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ForcedIsolate
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::BackgroundImage::dyn_ForcedIsolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_ForcedIsolate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForcedIsolate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation ImageLocation
[[deprecated("Use field access instead!")]] ::Blaze::AtlasLocation*& PowerUI::Css::BackgroundImage::dyn_ImageLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_ImageLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageLocation"))->offset;
  return *reinterpret_cast<::Blaze::AtlasLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.FilterMode Filtering
[[deprecated("Use field access instead!")]] ::UnityEngine::FilterMode& PowerUI::Css::BackgroundImage::dyn_Filtering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_Filtering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filtering"))->offset;
  return *reinterpret_cast<::UnityEngine::FilterMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BackgroundClipping Clipping
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BackgroundClipping& PowerUI::Css::BackgroundImage::dyn_Clipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::dyn_Clipping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Clipping"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BackgroundClipping*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.Overlaps
bool PowerUI::Css::BackgroundImage::Overlaps(::PowerUI::Css::BackgroundImage* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::Overlaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Overlaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, image);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.SetImage
void PowerUI::Css::BackgroundImage::SetImage(::UnityEngine::Texture2D* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::SetImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, image);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.SetImage
void PowerUI::Css::BackgroundImage::SetImage(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::SetImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.ImageReady
void PowerUI::Css::BackgroundImage::ImageReady(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::ImageReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImageReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.SetOverlayColour
void PowerUI::Css::BackgroundImage::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.OnBatchDestroy
void PowerUI::Css::BackgroundImage::OnBatchDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::OnBatchDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.Paint
void PowerUI::Css::BackgroundImage::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.NowOffScreen
void PowerUI::Css::BackgroundImage::NowOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::NowOffScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.NowOnScreen
bool PowerUI::Css::BackgroundImage::NowOnScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::NowOnScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundImage.Layout
void PowerUI::Css::BackgroundImage::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundImage::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BackgroundShadow
#include "PowerUI/Css/BackgroundShadow.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BaseColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::BackgroundShadow::dyn_BaseColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::dyn_BaseColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BackingColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::BackgroundShadow::dyn_BackingColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::dyn_BackingColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackingColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BackingColourTransparent
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::BackgroundShadow::dyn_BackingColourTransparent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::dyn_BackingColourTransparent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BackingColourTransparent"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlurSize
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BackgroundShadow::dyn_BlurSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::dyn_BlurSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlurSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.BackgroundShadow.SetOverlayColour
void PowerUI::Css::BackgroundShadow::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.BackgroundShadow.Paint
void PowerUI::Css::BackgroundShadow::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BackgroundShadow.Layout
void PowerUI::Css::BackgroundShadow::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundShadow::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BorderProperty
#include "PowerUI/Css/BorderProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.RoundedCorners
#include "PowerUI/Css/RoundedCorners.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
// Including type: PowerUI.Css.RoundCornerPosition
#include "PowerUI/Css/RoundCornerPosition.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 WidthTop
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BorderProperty::dyn_WidthTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_WidthTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WidthTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WidthLeft
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BorderProperty::dyn_WidthLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_WidthLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WidthLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WidthRight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BorderProperty::dyn_WidthRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_WidthRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WidthRight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WidthBottom
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BorderProperty::dyn_WidthBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_WidthBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WidthBottom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] Colour
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& PowerUI::Css::BorderProperty::dyn_Colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_Colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colour"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value BaseColour
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::Css::BorderProperty::dyn_BaseColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_BaseColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseColour"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundedCorners Corners
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundedCorners*& PowerUI::Css::BorderProperty::dyn_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_Corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Corners"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundedCorners**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BorderStyle Style
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BorderStyle& PowerUI::Css::BorderProperty::dyn_Style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::dyn_Style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Style"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BorderStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.BorderProperty.ResetColour
void PowerUI::Css::BorderProperty::ResetColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::ResetColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BorderProperty.BorderTransform
void PowerUI::Css::BorderProperty::BorderTransform(::PowerUI::Transformation* topTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::BorderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BorderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topTransform);
}
// Autogenerated method: PowerUI.Css.BorderProperty.ApplyBorderTransform
void PowerUI::Css::BorderProperty::ApplyBorderTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::ApplyBorderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBorderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BorderProperty.SetCorner
void PowerUI::Css::BorderProperty::SetCorner(::PowerUI::Css::RoundCornerPosition position, int radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::SetCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, radius);
}
// Autogenerated method: PowerUI.Css.BorderProperty.RenderCorners
void PowerUI::Css::BorderProperty::RenderCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::RenderCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BorderProperty.BorderWidth
int PowerUI::Css::BorderProperty::BorderWidth(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::BorderWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BorderWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: PowerUI.Css.BorderProperty.SetOverlayColour
void PowerUI::Css::BorderProperty::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.BorderProperty.Paint
void PowerUI::Css::BorderProperty::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.BorderProperty.Layout
void PowerUI::Css::BorderProperty::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BorderProperty::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.RoundCorner
#include "PowerUI/Css/RoundCorner.hpp"
// Including type: PowerUI.Css.BorderProperty
#include "PowerUI/Css/BorderProperty.hpp"
// Including type: PowerUI.Css.RoundedCorners
#include "PowerUI/Css/RoundedCorners.hpp"
// Including type: PowerUI.Css.RoundBorderInverseProperty
#include "PowerUI/Css/RoundBorderInverseProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Resolution
int PowerUI::Css::RoundCorner::_get_Resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::_get_Resolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI.Css", "RoundCorner", "Resolution"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Resolution
void PowerUI::Css::RoundCorner::_set_Resolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::_set_Resolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCorner", "Resolution", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MicroResolution
int PowerUI::Css::RoundCorner::_get_MicroResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::_get_MicroResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI.Css", "RoundCorner", "MicroResolution"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MicroResolution
void PowerUI::Css::RoundCorner::_set_MicroResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::_set_MicroResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCorner", "MicroResolution", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ToIndex
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCorner::dyn_ToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_ToIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 FromIndex
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCorner::dyn_FromIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_FromIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FromIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CornerRadius
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCorner::dyn_CornerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_CornerRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CornerRadius"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] OuterArc
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& PowerUI::Css::RoundCorner::dyn_OuterArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_OuterArc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OuterArc"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] InnerArc
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& PowerUI::Css::RoundCorner::dyn_InnerArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_InnerArc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerArc"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 BlocksRequired
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCorner::dyn_BlocksRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_BlocksRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlocksRequired"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BorderProperty Border
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BorderProperty*& PowerUI::Css::RoundCorner::dyn_Border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_Border");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Border"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BorderProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InverseBlocksRequired
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCorner::dyn_InverseBlocksRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_InverseBlocksRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseBlocksRequired"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundedCorners RoundCorners
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundedCorners*& PowerUI::Css::RoundCorner::dyn_RoundCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_RoundCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoundCorners"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundedCorners**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundCornerPosition Position
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCornerPosition& PowerUI::Css::RoundCorner::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundCornerPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundBorderInverseProperty InverseBorder
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundBorderInverseProperty*& PowerUI::Css::RoundCorner::dyn_InverseBorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::dyn_InverseBorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseBorder"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundBorderInverseProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.RoundCorner.get_Radius
int PowerUI::Css::RoundCorner::get_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::get_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundCorner.set_Radius
void PowerUI::Css::RoundCorner::set_Radius(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::set_Radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.RoundCorner.RecomputeArcs
void PowerUI::Css::RoundCorner::RecomputeArcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::RecomputeArcs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecomputeArcs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundCorner.RecomputeInnerArc
void PowerUI::Css::RoundCorner::RecomputeInnerArc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::RecomputeInnerArc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecomputeInnerArc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundCorner.RenderInverse
void PowerUI::Css::RoundCorner::RenderInverse(float cornerX, float cornerY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::RenderInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cornerX), ::il2cpp_utils::ExtractType(cornerY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cornerX, cornerY);
}
// Autogenerated method: PowerUI.Css.RoundCorner.Render
void PowerUI::Css::RoundCorner::Render(float alpha, float cornerX, float cornerY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(cornerX), ::il2cpp_utils::ExtractType(cornerY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha, cornerX, cornerY);
}
// Autogenerated method: PowerUI.Css.RoundCorner..cctor
void PowerUI::Css::RoundCorner::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCorner::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "RoundCorner", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.RoundCornerPosition
#include "PowerUI/Css/RoundCornerPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.RoundCornerPosition TopLeft
::PowerUI::Css::RoundCornerPosition PowerUI::Css::RoundCornerPosition::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::RoundCornerPosition>("PowerUI.Css", "RoundCornerPosition", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.RoundCornerPosition TopLeft
void PowerUI::Css::RoundCornerPosition::_set_TopLeft(::PowerUI::Css::RoundCornerPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCornerPosition", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.RoundCornerPosition TopRight
::PowerUI::Css::RoundCornerPosition PowerUI::Css::RoundCornerPosition::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::RoundCornerPosition>("PowerUI.Css", "RoundCornerPosition", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.RoundCornerPosition TopRight
void PowerUI::Css::RoundCornerPosition::_set_TopRight(::PowerUI::Css::RoundCornerPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCornerPosition", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.RoundCornerPosition BottomLeft
::PowerUI::Css::RoundCornerPosition PowerUI::Css::RoundCornerPosition::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::RoundCornerPosition>("PowerUI.Css", "RoundCornerPosition", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.RoundCornerPosition BottomLeft
void PowerUI::Css::RoundCornerPosition::_set_BottomLeft(::PowerUI::Css::RoundCornerPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCornerPosition", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.RoundCornerPosition BottomRight
::PowerUI::Css::RoundCornerPosition PowerUI::Css::RoundCornerPosition::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::RoundCornerPosition>("PowerUI.Css", "RoundCornerPosition", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.RoundCornerPosition BottomRight
void PowerUI::Css::RoundCornerPosition::_set_BottomRight(::PowerUI::Css::RoundCornerPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "RoundCornerPosition", "BottomRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::RoundCornerPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundCornerPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.RoundedCorners
#include "PowerUI/Css/RoundedCorners.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: PowerUI.Css.RoundCorner
#include "PowerUI/Css/RoundCorner.hpp"
// Including type: PowerUI.Css.BorderProperty
#include "PowerUI/Css/BorderProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.RoundBorderInverseProperty
#include "PowerUI/Css/RoundBorderInverseProperty.hpp"
// Including type: PowerUI.Css.RoundCornerPosition
#include "PowerUI/Css/RoundCornerPosition.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Renderman Renderer
[[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& PowerUI::Css::RoundedCorners::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::PowerUI::Renderman**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundCorner TopLeft
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& PowerUI::Css::RoundedCorners::dyn_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_TopLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TopLeft"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundCorner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundCorner TopRight
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& PowerUI::Css::RoundedCorners::dyn_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_TopRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TopRight"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundCorner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.BorderProperty Border
[[deprecated("Use field access instead!")]] ::PowerUI::Css::BorderProperty*& PowerUI::Css::RoundedCorners::dyn_Border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_Border");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Border"))->offset;
  return *reinterpret_cast<::PowerUI::Css::BorderProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundCorner BottomLeft
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& PowerUI::Css::RoundedCorners::dyn_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_BottomLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomLeft"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundCorner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle Computed
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Css::RoundedCorners::dyn_Computed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_Computed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Computed"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundCorner BottomRight
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& PowerUI::Css::RoundedCorners::dyn_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_BottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomRight"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundCorner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.RoundBorderInverseProperty InverseBorder
[[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundBorderInverseProperty*& PowerUI::Css::RoundedCorners::dyn_InverseBorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::dyn_InverseBorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InverseBorder"))->offset;
  return *reinterpret_cast<::PowerUI::Css::RoundBorderInverseProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.SetCorner
void PowerUI::Css::RoundedCorners::SetCorner(ByRef<::PowerUI::Css::RoundCorner*> corner, ::PowerUI::Css::RoundCornerPosition position, int radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::SetCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(corner), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(corner), position, radius);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.Transform
void PowerUI::Css::RoundedCorners::Transform(::PowerUI::Transformation* topTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topTransform);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.ApplyTransform
void PowerUI::Css::RoundedCorners::ApplyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::ApplyTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.PreLayout
void PowerUI::Css::RoundedCorners::PreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::PreLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.Layout
void PowerUI::Css::RoundedCorners::Layout(int i, ByRef<int> cornerX, ByRef<int> cornerY, ByRef<int> lineWidth, ByRef<int> lineHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::Layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(cornerX), ::il2cpp_utils::ExtractType(cornerY), ::il2cpp_utils::ExtractType(lineWidth), ::il2cpp_utils::ExtractType(lineHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, byref(cornerX), byref(cornerY), byref(lineWidth), byref(lineHeight));
}
// Autogenerated method: PowerUI.Css.RoundedCorners.Recompute
void PowerUI::Css::RoundedCorners::Recompute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::Recompute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recompute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundedCorners.RenderCorners
void PowerUI::Css::RoundedCorners::RenderCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::RenderCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.DisplayableProperty
#include "PowerUI/Css/DisplayableProperty.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.MeshBlock
#include "PowerUI/MeshBlock.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
// Including type: Blaze.AtlasEntity
#include "Blaze/AtlasEntity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Visible
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::DisplayableProperty::dyn_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Changed
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::DisplayableProperty::dyn_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_Changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Isolated
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::DisplayableProperty::dyn_Isolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_Isolated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Isolated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlockCount
[[deprecated("Use field access instead!")]] int& PowerUI::Css::DisplayableProperty::dyn_BlockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_BlockCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Css::DisplayableProperty::dyn_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_Element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MeshBlock FirstBlock
[[deprecated("Use field access instead!")]] ::PowerUI::MeshBlock*& PowerUI::Css::DisplayableProperty::dyn_FirstBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_FirstBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstBlock"))->offset;
  return *reinterpret_cast<::PowerUI::MeshBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GotBatchAlready
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::DisplayableProperty::dyn_GotBatchAlready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::dyn_GotBatchAlready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GotBatchAlready"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.SetVisibility
void PowerUI::Css::DisplayableProperty::SetVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.NowOnScreen
bool PowerUI::Css::DisplayableProperty::NowOnScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::NowOnScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.NowOffScreen
void PowerUI::Css::DisplayableProperty::NowOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::NowOffScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.SetOverlayColour
void PowerUI::Css::DisplayableProperty::SetOverlayColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::SetOverlayColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.ColourChanged
void PowerUI::Css::DisplayableProperty::ColourChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::ColourChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColourChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.OnBatchDestroy
void PowerUI::Css::DisplayableProperty::OnBatchDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::OnBatchDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.SetOverlayColour
void PowerUI::Css::DisplayableProperty::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Change
void PowerUI::Css::DisplayableProperty::Change(::StringW property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Change");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.OnChange
void PowerUI::Css::DisplayableProperty::OnChange(::StringW property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::OnChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.ClearBlocks
void PowerUI::Css::DisplayableProperty::ClearBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::ClearBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.WentOffScreen
void PowerUI::Css::DisplayableProperty::WentOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::WentOffScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WentOffScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.MapPX
::UnityEngine::Vector3 PowerUI::Css::DisplayableProperty::MapPX(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::MapPX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapPX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Render
void PowerUI::Css::DisplayableProperty::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.RequestPaint
void PowerUI::Css::DisplayableProperty::RequestPaint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::RequestPaint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPaint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.RequestLayout
void PowerUI::Css::DisplayableProperty::RequestLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::RequestLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Paint
void PowerUI::Css::DisplayableProperty::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Layout
void PowerUI::Css::DisplayableProperty::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Add
::PowerUI::MeshBlock* PowerUI::Css::DisplayableProperty::Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::MeshBlock*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.get_Paintable
bool PowerUI::Css::DisplayableProperty::get_Paintable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::get_Paintable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Paintable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Transform
void PowerUI::Css::DisplayableProperty::Transform(::PowerUI::Transformation* topTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topTransform);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.ApplyTransform
void PowerUI::Css::DisplayableProperty::ApplyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::ApplyTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Isolate
void PowerUI::Css::DisplayableProperty::Isolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Isolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Isolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.Include
void PowerUI::Css::DisplayableProperty::Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::Include");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Include", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.IsIsolated
bool PowerUI::Css::DisplayableProperty::IsIsolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::IsIsolated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIsolated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.SetupBatch
void PowerUI::Css::DisplayableProperty::SetupBatch(::Blaze::TextureAtlas* graphics, ::Blaze::TextureAtlas* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::SetupBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphics), ::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphics, font);
}
// Autogenerated method: PowerUI.Css.DisplayableProperty.RequireImage
::Blaze::AtlasLocation* PowerUI::Css::DisplayableProperty::RequireImage(::Blaze::AtlasEntity* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayableProperty::RequireImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::AtlasLocation*, false>(this, ___internal__method, image);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.RoundBorderInverseProperty
#include "PowerUI/Css/RoundBorderInverseProperty.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.RoundBorderInverseProperty.SetOverlayColour
void PowerUI::Css::RoundBorderInverseProperty::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundBorderInverseProperty::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.RoundBorderInverseProperty.Paint
void PowerUI::Css::RoundBorderInverseProperty::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundBorderInverseProperty::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.RoundBorderInverseProperty.Layout
void PowerUI::Css::RoundBorderInverseProperty::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundBorderInverseProperty::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Css.TextRenderingProperty
#include "PowerUI/Css/TextRenderingProperty.hpp"
// Including type: PowerUI.Css.TextDecorationInfo
#include "PowerUI/Css/TextDecorationInfo.hpp"
// Including type: PowerUI.DynamicFont
#include "PowerUI/DynamicFont.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
// Including type: PowerUI.Text3D
#include "PowerUI/Text3D.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: PowerUI.BoxRegion
#include "PowerUI/BoxRegion.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Weight
[[deprecated("Use field access instead!")]] int& PowerUI::Css::TextRenderingProperty::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Italic
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::TextRenderingProperty::dyn_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Italic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Italic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Text
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::TextRenderingProperty::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FontSize
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_FontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_FontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SpaceSize
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_SpaceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_SpaceSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpaceSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BaseColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::TextRenderingProperty::dyn_BaseColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_BaseColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color FontColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::TextRenderingProperty::dyn_FontColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_FontColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Alias
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_Alias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Alias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Alias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Ascender
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_Ascender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Ascender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ascender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LineGap
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_LineGap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_LineGap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineGap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllWhitespace
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::TextRenderingProperty::dyn_AllWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_AllWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single ScaleFactor
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_ScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_ScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LetterSpacing
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_LetterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_LetterSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LetterSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.TextDecorationInfo TextLine
[[deprecated("Use field access instead!")]] ::PowerUI::Css::TextDecorationInfo*& PowerUI::Css::TextRenderingProperty::dyn_TextLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_TextLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextLine"))->offset;
  return *reinterpret_cast<::PowerUI::Css::TextDecorationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicFont FontToDraw
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicFont*& PowerUI::Css::TextRenderingProperty::dyn_FontToDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_FontToDraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontToDraw"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicFont**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EndPunctuationCount
[[deprecated("Use field access instead!")]] int& PowerUI::Css::TextRenderingProperty::dyn_EndPunctuationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_EndPunctuationCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndPunctuationCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StartPunctuationCount
[[deprecated("Use field access instead!")]] int& PowerUI::Css::TextRenderingProperty::dyn_StartPunctuationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_StartPunctuationCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartPunctuationCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public InfiniText.Glyph[] Characters
[[deprecated("Use field access instead!")]] ::ArrayW<::InfiniText::Glyph*>& PowerUI::Css::TextRenderingProperty::dyn_Characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Characters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Characters"))->offset;
  return *reinterpret_cast<::ArrayW<::InfiniText::Glyph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] Kerning
[[deprecated("Use field access instead!")]] ::ArrayW<float>& PowerUI::Css::TextRenderingProperty::dyn_Kerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Kerning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Kerning"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Text3D Text3D
[[deprecated("Use field access instead!")]] ::PowerUI::Text3D*& PowerUI::Css::TextRenderingProperty::dyn_Text3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Text3D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text3D"))->offset;
  return *reinterpret_cast<::PowerUI::Text3D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Extrude
[[deprecated("Use field access instead!")]] float& PowerUI::Css::TextRenderingProperty::dyn_Extrude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::dyn_Extrude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Extrude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.get_NoEndingSpace
bool PowerUI::Css::TextRenderingProperty::get_NoEndingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::get_NoEndingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoEndingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.get_EndSpaceSize
int PowerUI::Css::TextRenderingProperty::get_EndSpaceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::get_EndSpaceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndSpaceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.LetterCount
int PowerUI::Css::TextRenderingProperty::LetterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::LetterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LetterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.SetDimensions
void PowerUI::Css::TextRenderingProperty::SetDimensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::SetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.StandardSpaceSize
float PowerUI::Css::TextRenderingProperty::StandardSpaceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::StandardSpaceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StandardSpaceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.FontLoaded
void PowerUI::Css::TextRenderingProperty::FontLoaded(::PowerUI::DynamicFont* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::FontLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FontLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, font);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.SetText
void PowerUI::Css::TextRenderingProperty::SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.LetterIndex
int PowerUI::Css::TextRenderingProperty::LetterIndex(int widthOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::LetterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LetterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(widthOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, widthOffset);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.GetPositionOf
float PowerUI::Css::TextRenderingProperty::GetPositionOf(int letterID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::GetPositionOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(letterID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, letterID);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.LocalPositionOf
float PowerUI::Css::TextRenderingProperty::LocalPositionOf(int letterID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::LocalPositionOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPositionOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(letterID)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, letterID);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.DrawInvertCharacter
void PowerUI::Css::TextRenderingProperty::DrawInvertCharacter(int index, ByRef<float> left, float top, ::PowerUI::Renderman* renderer, float zIndex, ::PowerUI::BoxRegion* screenRegion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::DrawInvertCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawInvertCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(zIndex), ::il2cpp_utils::ExtractType(screenRegion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, byref(left), top, renderer, zIndex, screenRegion);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.DrawCharacter
void PowerUI::Css::TextRenderingProperty::DrawCharacter(int index, ByRef<float> left, float top, ::PowerUI::Renderman* renderer, float zIndex, ::PowerUI::BoxRegion* screenRegion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::DrawCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(zIndex), ::il2cpp_utils::ExtractType(screenRegion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, byref(left), top, renderer, zIndex, screenRegion);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.ToString
void PowerUI::Css::TextRenderingProperty::ToString(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.Get3D
::PowerUI::Text3D* PowerUI::Css::TextRenderingProperty::Get3D(float scale, ::UnityEngine::Color colour, ByRef<float> left, ByRef<float> top) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::Get3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(colour), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Text3D*, false>(this, ___internal__method, scale, colour, byref(left), byref(top));
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.GetExtrudeCounts
void PowerUI::Css::TextRenderingProperty::GetExtrudeCounts(ByRef<int> vertCount, ByRef<int> triCount, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::GetExtrudeCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtrudeCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vertCount), byref(triCount), scale);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.GetExtrude
void PowerUI::Css::TextRenderingProperty::GetExtrude(::PowerUI::Text3D* text, int vertIndex, int triIndex, int vertCount, int triCount, float scale, ByRef<float> left, ByRef<float> top) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::GetExtrude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtrude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(vertIndex), ::il2cpp_utils::ExtractType(triIndex), ::il2cpp_utils::ExtractType(vertCount), ::il2cpp_utils::ExtractType(triCount), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, vertIndex, triIndex, vertCount, triCount, scale, byref(left), byref(top));
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.SetOverlayColour
void PowerUI::Css::TextRenderingProperty::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::SetOverlayColour");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.NowOffScreen
void PowerUI::Css::TextRenderingProperty::NowOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::NowOffScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.NowOnScreen
bool PowerUI::Css::TextRenderingProperty::NowOnScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::NowOnScreen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.Paint
void PowerUI::Css::TextRenderingProperty::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::Paint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.Layout
void PowerUI::Css::TextRenderingProperty::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::Layout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::DisplayableProperty*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.TextRenderingProperty.ToString
::StringW PowerUI::Css::TextRenderingProperty::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextRenderingProperty::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.DisplayType
#include "PowerUI/Css/DisplayType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DisplayType None
::PowerUI::Css::DisplayType PowerUI::Css::DisplayType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DisplayType>("PowerUI.Css", "DisplayType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DisplayType None
void PowerUI::Css::DisplayType::_set_None(::PowerUI::Css::DisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DisplayType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DisplayType Block
::PowerUI::Css::DisplayType PowerUI::Css::DisplayType::_get_Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_get_Block");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DisplayType>("PowerUI.Css", "DisplayType", "Block"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DisplayType Block
void PowerUI::Css::DisplayType::_set_Block(::PowerUI::Css::DisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_set_Block");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DisplayType", "Block", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DisplayType Inline
::PowerUI::Css::DisplayType PowerUI::Css::DisplayType::_get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_get_Inline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DisplayType>("PowerUI.Css", "DisplayType", "Inline"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DisplayType Inline
void PowerUI::Css::DisplayType::_set_Inline(::PowerUI::Css::DisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_set_Inline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DisplayType", "Inline", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DisplayType InlineBlock
::PowerUI::Css::DisplayType PowerUI::Css::DisplayType::_get_InlineBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_get_InlineBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DisplayType>("PowerUI.Css", "DisplayType", "InlineBlock"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DisplayType InlineBlock
void PowerUI::Css::DisplayType::_set_InlineBlock(::PowerUI::Css::DisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_set_InlineBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DisplayType", "InlineBlock", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.DisplayType TableCell
::PowerUI::Css::DisplayType PowerUI::Css::DisplayType::_get_TableCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_get_TableCell");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::DisplayType>("PowerUI.Css", "DisplayType", "TableCell"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.DisplayType TableCell
void PowerUI::Css::DisplayType::_set_TableCell(::PowerUI::Css::DisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::_set_TableCell");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "DisplayType", "TableCell", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::DisplayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::DisplayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.ElementStyle
#include "PowerUI/Css/ElementStyle.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPainting
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::ElementStyle::dyn_IsPainting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::dyn_IsPainting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPainting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ElementStyle Next
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ElementStyle*& PowerUI::Css::ElementStyle::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ElementStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ComputedStyle Computed
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& PowerUI::Css::ElementStyle::dyn_Computed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::dyn_Computed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Computed"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ComputedStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderTopLeftRadius
void PowerUI::Css::ElementStyle::set_borderTopLeftRadius(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderTopLeftRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderTopLeftRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderTopLeftRadius
::StringW PowerUI::Css::ElementStyle::get_borderTopLeftRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderTopLeftRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderTopLeftRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderTopRightRadius
void PowerUI::Css::ElementStyle::set_borderTopRightRadius(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderTopRightRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderTopRightRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderTopRightRadius
::StringW PowerUI::Css::ElementStyle::get_borderTopRightRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderTopRightRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderTopRightRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderBottomRightRadius
void PowerUI::Css::ElementStyle::set_borderBottomRightRadius(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderBottomRightRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderBottomRightRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderBottomRightRadius
::StringW PowerUI::Css::ElementStyle::get_borderBottomRightRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderBottomRightRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderBottomRightRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderBottomLeftRadius
void PowerUI::Css::ElementStyle::set_borderBottomLeftRadius(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderBottomLeftRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderBottomLeftRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderBottomLeftRadius
::StringW PowerUI::Css::ElementStyle::get_borderBottomLeftRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderBottomLeftRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderBottomLeftRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderRadius
void PowerUI::Css::ElementStyle::set_borderRadius(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderRadius
::StringW PowerUI::Css::ElementStyle::get_borderRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_innerText
void PowerUI::Css::ElementStyle::set_innerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_innerText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_innerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_innerText
::StringW PowerUI::Css::ElementStyle::get_innerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_innerText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_innerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_content
void PowerUI::Css::ElementStyle::set_content(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_content
::StringW PowerUI::Css::ElementStyle::get_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_lineHeight
void PowerUI::Css::ElementStyle::set_lineHeight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_lineHeight
::StringW PowerUI::Css::ElementStyle::get_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_letterSpacing
void PowerUI::Css::ElementStyle::set_letterSpacing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_letterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_letterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_letterSpacing
::StringW PowerUI::Css::ElementStyle::get_letterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_letterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_letterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_wordSpacing
void PowerUI::Css::ElementStyle::set_wordSpacing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_wordSpacing
::StringW PowerUI::Css::ElementStyle::get_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scrollLeft
void PowerUI::Css::ElementStyle::set_scrollLeft(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scrollLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scrollLeft
::StringW PowerUI::Css::ElementStyle::get_scrollLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scrollLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scrollTop
void PowerUI::Css::ElementStyle::set_scrollTop(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scrollTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scrollTop
::StringW PowerUI::Css::ElementStyle::get_scrollTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scrollTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_zIndex
void PowerUI::Css::ElementStyle::set_zIndex(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_zIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_zIndex
::StringW PowerUI::Css::ElementStyle::get_zIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_zIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_whiteSpace
void PowerUI::Css::ElementStyle::set_whiteSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_whiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_whiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_whiteSpace
::StringW PowerUI::Css::ElementStyle::get_whiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_whiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_minHeight
void PowerUI::Css::ElementStyle::set_minHeight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_minHeight
::StringW PowerUI::Css::ElementStyle::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_minWidth
void PowerUI::Css::ElementStyle::set_minWidth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_minWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_minWidth
::StringW PowerUI::Css::ElementStyle::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_minWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_maxHeight
void PowerUI::Css::ElementStyle::set_maxHeight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_maxHeight
::StringW PowerUI::Css::ElementStyle::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_maxWidth
void PowerUI::Css::ElementStyle::set_maxWidth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_maxWidth
::StringW PowerUI::Css::ElementStyle::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_textClip
void PowerUI::Css::ElementStyle::set_textClip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_textClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_textClip
::StringW PowerUI::Css::ElementStyle::get_textClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_textClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_margin
void PowerUI::Css::ElementStyle::set_margin(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_margin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_margin
::StringW PowerUI::Css::ElementStyle::get_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_margin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_marginLeft
void PowerUI::Css::ElementStyle::set_marginLeft(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_marginLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_marginLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_marginRight
void PowerUI::Css::ElementStyle::set_marginRight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_marginRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_marginRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_marginTop
void PowerUI::Css::ElementStyle::set_marginTop(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_marginTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_marginTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_marginBottom
void PowerUI::Css::ElementStyle::set_marginBottom(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_marginBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_marginBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_padding
void PowerUI::Css::ElementStyle::set_padding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_padding
::StringW PowerUI::Css::ElementStyle::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_paddingLeft
void PowerUI::Css::ElementStyle::set_paddingLeft(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_paddingLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paddingLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_paddingRight
void PowerUI::Css::ElementStyle::set_paddingRight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_paddingRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paddingRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_paddingTop
void PowerUI::Css::ElementStyle::set_paddingTop(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_paddingTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paddingTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_paddingBottom
void PowerUI::Css::ElementStyle::set_paddingBottom(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_paddingBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paddingBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderStyle
void PowerUI::Css::ElementStyle::set_borderStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderStyle
::StringW PowerUI::Css::ElementStyle::get_borderStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderWidth
void PowerUI::Css::ElementStyle::set_borderWidth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderWidth
::StringW PowerUI::Css::ElementStyle::get_borderWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderColor
void PowerUI::Css::ElementStyle::set_borderColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_borderColor
::StringW PowerUI::Css::ElementStyle::get_borderColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_borderColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_borderColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_border
void PowerUI::Css::ElementStyle::set_border(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_border");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_border", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderLeft
void PowerUI::Css::ElementStyle::set_borderLeft(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderRight
void PowerUI::Css::ElementStyle::set_borderRight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderTop
void PowerUI::Css::ElementStyle::set_borderTop(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderBottom
void PowerUI::Css::ElementStyle::set_borderBottom(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderLeftStyle
void PowerUI::Css::ElementStyle::set_borderLeftStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderLeftStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderLeftStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderRightStyle
void PowerUI::Css::ElementStyle::set_borderRightStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderRightStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderRightStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderTopStyle
void PowerUI::Css::ElementStyle::set_borderTopStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderTopStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderTopStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderBottomStyle
void PowerUI::Css::ElementStyle::set_borderBottomStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderBottomStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderBottomStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderLeftColor
void PowerUI::Css::ElementStyle::set_borderLeftColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderLeftColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderLeftColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderRightColor
void PowerUI::Css::ElementStyle::set_borderRightColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderRightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderRightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderTopColor
void PowerUI::Css::ElementStyle::set_borderTopColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderTopColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderTopColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_borderBottomColor
void PowerUI::Css::ElementStyle::set_borderBottomColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_borderBottomColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_borderBottomColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_direction
void PowerUI::Css::ElementStyle::set_direction(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_direction
::StringW PowerUI::Css::ElementStyle::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_display
void PowerUI::Css::ElementStyle::set_display(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_display
::StringW PowerUI::Css::ElementStyle::get_display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_visibility
void PowerUI::Css::ElementStyle::set_visibility(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_visibility
::StringW PowerUI::Css::ElementStyle::get_visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_textDecoration
void PowerUI::Css::ElementStyle::set_textDecoration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_textDecoration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textDecoration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_textDecoration
::StringW PowerUI::Css::ElementStyle::get_textDecoration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_textDecoration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textDecoration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fontFamily
void PowerUI::Css::ElementStyle::set_fontFamily(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fontFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fontFamily
::StringW PowerUI::Css::ElementStyle::get_fontFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fontFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fontStyle
void PowerUI::Css::ElementStyle::set_fontStyle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fontStyle
::StringW PowerUI::Css::ElementStyle::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fontWeight
void PowerUI::Css::ElementStyle::set_fontWeight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fontWeight
::StringW PowerUI::Css::ElementStyle::get_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fontSpreadover
void PowerUI::Css::ElementStyle::set_fontSpreadover(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fontSpreadover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSpreadover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fontSpreadover
::StringW PowerUI::Css::ElementStyle::get_fontSpreadover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fontSpreadover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSpreadover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fontSize
void PowerUI::Css::ElementStyle::set_fontSize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fontSize
::StringW PowerUI::Css::ElementStyle::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_colorOverlayR
void PowerUI::Css::ElementStyle::set_colorOverlayR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_colorOverlayR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorOverlayR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_colorOverlayR
::StringW PowerUI::Css::ElementStyle::get_colorOverlayR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_colorOverlayR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorOverlayR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_colorOverlayG
void PowerUI::Css::ElementStyle::set_colorOverlayG(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_colorOverlayG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorOverlayG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_colorOverlayG
::StringW PowerUI::Css::ElementStyle::get_colorOverlayG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_colorOverlayG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorOverlayG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_colorOverlayB
void PowerUI::Css::ElementStyle::set_colorOverlayB(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_colorOverlayB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorOverlayB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_colorOverlayB
::StringW PowerUI::Css::ElementStyle::get_colorOverlayB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_colorOverlayB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorOverlayB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_colorOverlayA
void PowerUI::Css::ElementStyle::set_colorOverlayA(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_colorOverlayA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorOverlayA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_colorOverlayA
::StringW PowerUI::Css::ElementStyle::get_colorOverlayA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_colorOverlayA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorOverlayA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_colorOverlay
void PowerUI::Css::ElementStyle::set_colorOverlay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_colorOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_colorOverlay
::StringW PowerUI::Css::ElementStyle::get_colorOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_colorOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_opacity
void PowerUI::Css::ElementStyle::set_opacity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_opacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_opacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_opacity
::StringW PowerUI::Css::ElementStyle::get_opacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_opacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_opacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_color
void PowerUI::Css::ElementStyle::set_color(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_color
::StringW PowerUI::Css::ElementStyle::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundColor
void PowerUI::Css::ElementStyle::set_backgroundColor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundColor
::StringW PowerUI::Css::ElementStyle::get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundImage
void PowerUI::Css::ElementStyle::set_backgroundImage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundImage
::StringW PowerUI::Css::ElementStyle::get_backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundPosition
void PowerUI::Css::ElementStyle::set_backgroundPosition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundPosition
::StringW PowerUI::Css::ElementStyle::get_backgroundPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundRepeat
void PowerUI::Css::ElementStyle::set_backgroundRepeat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundRepeat
::StringW PowerUI::Css::ElementStyle::get_backgroundRepeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundSize
void PowerUI::Css::ElementStyle::set_backgroundSize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundSize
::StringW PowerUI::Css::ElementStyle::get_backgroundSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundSizeX
void PowerUI::Css::ElementStyle::set_backgroundSizeX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundSizeX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundSizeX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundSizeX
::StringW PowerUI::Css::ElementStyle::get_backgroundSizeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundSizeX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundSizeX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_backgroundSizeY
void PowerUI::Css::ElementStyle::set_backgroundSizeY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_backgroundSizeY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundSizeY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_backgroundSizeY
::StringW PowerUI::Css::ElementStyle::get_backgroundSizeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_backgroundSizeY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundSizeY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_background
void PowerUI::Css::ElementStyle::set_background(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_background");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_background", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_overflow
void PowerUI::Css::ElementStyle::set_overflow(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_overflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_overflow
::StringW PowerUI::Css::ElementStyle::get_overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_overflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_overflowX
void PowerUI::Css::ElementStyle::set_overflowX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_overflowX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflowX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_overflowX
::StringW PowerUI::Css::ElementStyle::get_overflowX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_overflowX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflowX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_overflowY
void PowerUI::Css::ElementStyle::set_overflowY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_overflowY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflowY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_overflowY
::StringW PowerUI::Css::ElementStyle::get_overflowY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_overflowY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflowY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_filterMode
void PowerUI::Css::ElementStyle::set_filterMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_filterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_filterMode
::StringW PowerUI::Css::ElementStyle::get_filterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_filterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_onAtlas
void PowerUI::Css::ElementStyle::set_onAtlas(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_onAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_onAtlas
::StringW PowerUI::Css::ElementStyle::get_onAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_onAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_width
void PowerUI::Css::ElementStyle::set_width(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_width
::StringW PowerUI::Css::ElementStyle::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_height
void PowerUI::Css::ElementStyle::set_height(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_height
::StringW PowerUI::Css::ElementStyle::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_left
void PowerUI::Css::ElementStyle::set_left(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_left
::StringW PowerUI::Css::ElementStyle::get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_right
void PowerUI::Css::ElementStyle::set_right(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_right
::StringW PowerUI::Css::ElementStyle::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_top
void PowerUI::Css::ElementStyle::set_top(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_top
::StringW PowerUI::Css::ElementStyle::get_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_bottom
void PowerUI::Css::ElementStyle::set_bottom(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_bottom
::StringW PowerUI::Css::ElementStyle::get_bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_vAlign
void PowerUI::Css::ElementStyle::set_vAlign(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_vAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_vAlign
::StringW PowerUI::Css::ElementStyle::get_vAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_vAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_verticalAlign
void PowerUI::Css::ElementStyle::set_verticalAlign(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_verticalAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_verticalAlign
::StringW PowerUI::Css::ElementStyle::get_verticalAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_verticalAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_textAlign
void PowerUI::Css::ElementStyle::set_textAlign(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_textAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_textAlign
::StringW PowerUI::Css::ElementStyle::get_textAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_textAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_position
void PowerUI::Css::ElementStyle::set_position(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_position
::StringW PowerUI::Css::ElementStyle::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_skewX
void PowerUI::Css::ElementStyle::set_skewX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_skewX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skewX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_skewX
::StringW PowerUI::Css::ElementStyle::get_skewX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_skewX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skewX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_skewY
void PowerUI::Css::ElementStyle::set_skewY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_skewY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skewY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_skewY
::StringW PowerUI::Css::ElementStyle::get_skewY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_skewY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skewY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_skewZ
void PowerUI::Css::ElementStyle::set_skewZ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_skewZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skewZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_skewZ
::StringW PowerUI::Css::ElementStyle::get_skewZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_skewZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skewZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_skew
void PowerUI::Css::ElementStyle::set_skew(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_skew
::StringW PowerUI::Css::ElementStyle::get_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_rotateX
void PowerUI::Css::ElementStyle::set_rotateX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_rotateX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_rotateX
::StringW PowerUI::Css::ElementStyle::get_rotateX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_rotateX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_rotateY
void PowerUI::Css::ElementStyle::set_rotateY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_rotateY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_rotateY
::StringW PowerUI::Css::ElementStyle::get_rotateY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_rotateY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_rotateZ
void PowerUI::Css::ElementStyle::set_rotateZ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_rotateZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_rotateZ
::StringW PowerUI::Css::ElementStyle::get_rotateZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_rotateZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_rotate
void PowerUI::Css::ElementStyle::set_rotate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_rotate
::StringW PowerUI::Css::ElementStyle::get_rotate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_translateX
void PowerUI::Css::ElementStyle::set_translateX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_translateX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_translateX
::StringW PowerUI::Css::ElementStyle::get_translateX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_translateX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_translateY
void PowerUI::Css::ElementStyle::set_translateY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_translateY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_translateY
::StringW PowerUI::Css::ElementStyle::get_translateY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_translateY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_translateZ
void PowerUI::Css::ElementStyle::set_translateZ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_translateZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_translateZ
::StringW PowerUI::Css::ElementStyle::get_translateZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_translateZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_translate
void PowerUI::Css::ElementStyle::set_translate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_translate
::StringW PowerUI::Css::ElementStyle::get_translate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scaleX
void PowerUI::Css::ElementStyle::set_scaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scaleX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scaleX
::StringW PowerUI::Css::ElementStyle::get_scaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scaleX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scaleY
void PowerUI::Css::ElementStyle::set_scaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scaleY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scaleY
::StringW PowerUI::Css::ElementStyle::get_scaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scaleY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scaleZ
void PowerUI::Css::ElementStyle::set_scaleZ(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scaleZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scaleZ
::StringW PowerUI::Css::ElementStyle::get_scaleZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scaleZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_scale
void PowerUI::Css::ElementStyle::set_scale(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_scale
::StringW PowerUI::Css::ElementStyle::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_transformOrigin
void PowerUI::Css::ElementStyle::set_transformOrigin(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_transformOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_transformOrigin
::StringW PowerUI::Css::ElementStyle::get_transformOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_transformOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_transformOriginX
void PowerUI::Css::ElementStyle::set_transformOriginX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_transformOriginX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformOriginX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_transformOriginX
::StringW PowerUI::Css::ElementStyle::get_transformOriginX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_transformOriginX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformOriginX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_transformOriginY
void PowerUI::Css::ElementStyle::set_transformOriginY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_transformOriginY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformOriginY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_transformOriginY
::StringW PowerUI::Css::ElementStyle::get_transformOriginY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_transformOriginY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformOriginY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_transformOriginPosition
void PowerUI::Css::ElementStyle::set_transformOriginPosition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_transformOriginPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transformOriginPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_transformOriginPosition
::StringW PowerUI::Css::ElementStyle::get_transformOriginPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_transformOriginPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformOriginPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fastLeft
int PowerUI::Css::ElementStyle::get_fastLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fastLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fastLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fastLeft
void PowerUI::Css::ElementStyle::set_fastLeft(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fastLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fastLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.get_fastTop
int PowerUI::Css::ElementStyle::get_fastTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::get_fastTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fastTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.set_fastTop
void PowerUI::Css::ElementStyle::set_fastTop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::set_fastTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fastTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ElementStyle.OnChanged
void PowerUI::Css::ElementStyle::OnChanged(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::OnChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.ElementStyle.GetComputed
::PowerUI::Css::ComputedStyle* PowerUI::Css::ElementStyle::GetComputed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::GetComputed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ComputedStyle*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ElementStyle.GetString
::StringW PowerUI::Css::ElementStyle::GetString(::StringW property, int innerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, property, innerIndex);
}
// Autogenerated method: PowerUI.Css.ElementStyle.GetString
::StringW PowerUI::Css::ElementStyle::GetString(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ElementStyle::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.HorizontalAlignType
#include "PowerUI/Css/HorizontalAlignType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Left
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Left"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Left
void PowerUI::Css::HorizontalAlignType::_set_Left(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Right
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Right"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Right
void PowerUI::Css::HorizontalAlignType::_set_Right(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Center
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Center"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Center
void PowerUI::Css::HorizontalAlignType::_set_Center(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Justify
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Justify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Justify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Justify"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Justify
void PowerUI::Css::HorizontalAlignType::_set_Justify(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Justify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Justify", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType End
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "End"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType End
void PowerUI::Css::HorizontalAlignType::_set_End(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "End", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Auto
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Auto
void PowerUI::Css::HorizontalAlignType::_set_Auto(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.HorizontalAlignType Start
::PowerUI::Css::HorizontalAlignType PowerUI::Css::HorizontalAlignType::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::HorizontalAlignType>("PowerUI.Css", "HorizontalAlignType", "Start"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.HorizontalAlignType Start
void PowerUI::Css::HorizontalAlignType::_set_Start(::PowerUI::Css::HorizontalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "HorizontalAlignType", "Start", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::HorizontalAlignType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::HorizontalAlignType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.OverflowType
#include "PowerUI/Css/OverflowType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.OverflowType Hidden
::PowerUI::Css::OverflowType PowerUI::Css::OverflowType::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::OverflowType>("PowerUI.Css", "OverflowType", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.OverflowType Hidden
void PowerUI::Css::OverflowType::_set_Hidden(::PowerUI::Css::OverflowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "OverflowType", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.OverflowType Visible
::PowerUI::Css::OverflowType PowerUI::Css::OverflowType::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::OverflowType>("PowerUI.Css", "OverflowType", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.OverflowType Visible
void PowerUI::Css::OverflowType::_set_Visible(::PowerUI::Css::OverflowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "OverflowType", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.OverflowType Auto
::PowerUI::Css::OverflowType PowerUI::Css::OverflowType::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::OverflowType>("PowerUI.Css", "OverflowType", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.OverflowType Auto
void PowerUI::Css::OverflowType::_set_Auto(::PowerUI::Css::OverflowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "OverflowType", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.OverflowType Scroll
::PowerUI::Css::OverflowType PowerUI::Css::OverflowType::_get_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_get_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::OverflowType>("PowerUI.Css", "OverflowType", "Scroll"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.OverflowType Scroll
void PowerUI::Css::OverflowType::_set_Scroll(::PowerUI::Css::OverflowType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::_set_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "OverflowType", "Scroll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::OverflowType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::OverflowType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.PositionType
#include "PowerUI/Css/PositionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.PositionType Relative
::PowerUI::Css::PositionType PowerUI::Css::PositionType::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::PositionType>("PowerUI.Css", "PositionType", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.PositionType Relative
void PowerUI::Css::PositionType::_set_Relative(::PowerUI::Css::PositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "PositionType", "Relative", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.PositionType Fixed
::PowerUI::Css::PositionType PowerUI::Css::PositionType::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::PositionType>("PowerUI.Css", "PositionType", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.PositionType Fixed
void PowerUI::Css::PositionType::_set_Fixed(::PowerUI::Css::PositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "PositionType", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.PositionType Absolute
::PowerUI::Css::PositionType PowerUI::Css::PositionType::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::PositionType>("PowerUI.Css", "PositionType", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.PositionType Absolute
void PowerUI::Css::PositionType::_set_Absolute(::PowerUI::Css::PositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "PositionType", "Absolute", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::PositionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::PositionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.BackgroundClipping
#include "PowerUI/Css/BackgroundClipping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BackgroundClipping BorderBox
::PowerUI::Css::BackgroundClipping PowerUI::Css::BackgroundClipping::_get_BorderBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_get_BorderBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BackgroundClipping>("PowerUI.Css", "BackgroundClipping", "BorderBox"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BackgroundClipping BorderBox
void PowerUI::Css::BackgroundClipping::_set_BorderBox(::PowerUI::Css::BackgroundClipping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_set_BorderBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BackgroundClipping", "BorderBox", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BackgroundClipping Text
::PowerUI::Css::BackgroundClipping PowerUI::Css::BackgroundClipping::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BackgroundClipping>("PowerUI.Css", "BackgroundClipping", "Text"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BackgroundClipping Text
void PowerUI::Css::BackgroundClipping::_set_Text(::PowerUI::Css::BackgroundClipping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BackgroundClipping", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BackgroundClipping PaddingBox
::PowerUI::Css::BackgroundClipping PowerUI::Css::BackgroundClipping::_get_PaddingBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_get_PaddingBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BackgroundClipping>("PowerUI.Css", "BackgroundClipping", "PaddingBox"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BackgroundClipping PaddingBox
void PowerUI::Css::BackgroundClipping::_set_PaddingBox(::PowerUI::Css::BackgroundClipping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_set_PaddingBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BackgroundClipping", "PaddingBox", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.BackgroundClipping ContentBox
::PowerUI::Css::BackgroundClipping PowerUI::Css::BackgroundClipping::_get_ContentBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_get_ContentBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::BackgroundClipping>("PowerUI.Css", "BackgroundClipping", "ContentBox"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.BackgroundClipping ContentBox
void PowerUI::Css::BackgroundClipping::_set_ContentBox(::PowerUI::Css::BackgroundClipping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::_set_ContentBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "BackgroundClipping", "ContentBox", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::BackgroundClipping::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::BackgroundClipping::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.FloatType
#include "PowerUI/Css/FloatType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.FloatType None
::PowerUI::Css::FloatType PowerUI::Css::FloatType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::FloatType>("PowerUI.Css", "FloatType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.FloatType None
void PowerUI::Css::FloatType::_set_None(::PowerUI::Css::FloatType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "FloatType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.FloatType Left
::PowerUI::Css::FloatType PowerUI::Css::FloatType::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::FloatType>("PowerUI.Css", "FloatType", "Left"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.FloatType Left
void PowerUI::Css::FloatType::_set_Left(::PowerUI::Css::FloatType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "FloatType", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.FloatType Right
::PowerUI::Css::FloatType PowerUI::Css::FloatType::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::FloatType>("PowerUI.Css", "FloatType", "Right"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.FloatType Right
void PowerUI::Css::FloatType::_set_Right(::PowerUI::Css::FloatType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "FloatType", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::FloatType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::FloatType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.ShaderData
#include "PowerUI/Css/ShaderData.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.ShaderSet
#include "PowerUI/ShaderSet.hpp"
// Including type: PowerUI.Css.ShadowData
#include "PowerUI/Css/ShadowData.hpp"
// Including type: PowerUI.Css.StrokeData
#include "PowerUI/Css/StrokeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Flags
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ShaderData::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Shader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& PowerUI::Css::ShaderData::dyn_Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_Shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Css::ShaderData::dyn_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_Element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ShaderSet Shaders
[[deprecated("Use field access instead!")]] ::PowerUI::ShaderSet*& PowerUI::Css::ShaderData::dyn_Shaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_Shaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shaders"))->offset;
  return *reinterpret_cast<::PowerUI::ShaderSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ShadowData TextShadow
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ShadowData*& PowerUI::Css::ShaderData::dyn_TextShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_TextShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextShadow"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ShadowData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.StrokeData TextStroke
[[deprecated("Use field access instead!")]] ::PowerUI::Css::StrokeData*& PowerUI::Css::ShaderData::dyn_TextStroke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::dyn_TextStroke");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextStroke"))->offset;
  return *reinterpret_cast<::PowerUI::Css::StrokeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.ShaderData.get_Lit
bool PowerUI::Css::ShaderData::get_Lit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::get_Lit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Lit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ShaderData.set_Lit
void PowerUI::Css::ShaderData::set_Lit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::set_Lit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Lit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.ShaderData.GetFlag
bool PowerUI::Css::ShaderData::GetFlag(int flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::GetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated method: PowerUI.Css.ShaderData.SetFlag
void PowerUI::Css::ShaderData::SetFlag(int flag, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag, value);
}
// Autogenerated method: PowerUI.Css.ShaderData.get_TangentsRequired
bool PowerUI::Css::ShaderData::get_TangentsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::get_TangentsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TangentsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ShaderData.get_IsolatedShader
::UnityEngine::Shader* PowerUI::Css::ShaderData::get_IsolatedShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::get_IsolatedShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsolatedShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ShaderData.UpdateShader
void PowerUI::Css::ShaderData::UpdateShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::UpdateShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ShaderData.Optimise
void PowerUI::Css::ShaderData::Optimise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::Optimise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Optimise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.ShaderData.Remove
void PowerUI::Css::ShaderData::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShaderData::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.ShadowData
#include "PowerUI/Css/ShadowData.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Blur
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ShadowData::dyn_Blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShadowData::dyn_Blur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blur"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 HOffset
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ShadowData::dyn_HOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShadowData::dyn_HOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VOffset
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ShadowData::dyn_VOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShadowData::dyn_VOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color Colour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::ShadowData::dyn_Colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShadowData::dyn_Colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation[] Location
[[deprecated("Use field access instead!")]] ::ArrayW<::Blaze::AtlasLocation*>& PowerUI::Css::ShadowData::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ShadowData::dyn_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::ArrayW<::Blaze::AtlasLocation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.StrokeData
#include "PowerUI/Css/StrokeData.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Blur
[[deprecated("Use field access instead!")]] int& PowerUI::Css::StrokeData::dyn_Blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StrokeData::dyn_Blur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blur"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color Colour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::StrokeData::dyn_Colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StrokeData::dyn_Colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Thickness
[[deprecated("Use field access instead!")]] int& PowerUI::Css::StrokeData::dyn_Thickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StrokeData::dyn_Thickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thickness"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation[] Location
[[deprecated("Use field access instead!")]] ::ArrayW<::Blaze::AtlasLocation*>& PowerUI::Css::StrokeData::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StrokeData::dyn_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::ArrayW<::Blaze::AtlasLocation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Selector
#include "PowerUI/Css/Selector.hpp"
// Including type: PowerUI.Css.SelectorStyle
#include "PowerUI/Css/SelectorStyle.hpp"
// Including type: PowerUI.Css.StyleSheet
#include "PowerUI/Css/StyleSheet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Modifier
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::Selector::dyn_Modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Selector::dyn_Modifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Modifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.SelectorStyle Style
[[deprecated("Use field access instead!")]] ::PowerUI::Css::SelectorStyle*& PowerUI::Css::Selector::dyn_Style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Selector::dyn_Style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Style"))->offset;
  return *reinterpret_cast<::PowerUI::Css::SelectorStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SelectorText
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::Selector::dyn_SelectorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Selector::dyn_SelectorText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectorText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.SelectorStyle
#include "PowerUI/Css/SelectorStyle.hpp"
// Including type: PowerUI.Css.StyleSheet
#include "PowerUI/Css/StyleSheet.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: PowerUI.Css.SelectorType
#include "PowerUI/Css/SelectorType.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.StyleSheet Sheet
[[deprecated("Use field access instead!")]] ::PowerUI::Css::StyleSheet*& PowerUI::Css::SelectorStyle::dyn_Sheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::dyn_Sheet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sheet"))->offset;
  return *reinterpret_cast<::PowerUI::Css::StyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Modifier
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::SelectorStyle::dyn_Modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::dyn_Modifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Modifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Selector
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::SelectorStyle::dyn_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::dyn_Selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selector"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document Document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::Css::SelectorStyle::dyn_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::dyn_Document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BaseSelector
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::SelectorStyle::dyn_BaseSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::dyn_BaseSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseSelector"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.get_SelectorType
::PowerUI::Css::SelectorType PowerUI::Css::SelectorStyle::get_SelectorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::get_SelectorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::SelectorType, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.get_Unmodified
bool PowerUI::Css::SelectorStyle::get_Unmodified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::get_Unmodified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unmodified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.OnLoaded
void PowerUI::Css::SelectorStyle::OnLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::OnLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.FontFaceReady
void PowerUI::Css::SelectorStyle::FontFaceReady(::PowerUI::DataPackage* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::FontFaceReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FontFaceReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, font);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.BakeToModifiers
void PowerUI::Css::SelectorStyle::BakeToModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::BakeToModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakeToModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.CopyTo
void PowerUI::Css::SelectorStyle::CopyTo(::PowerUI::Css::SelectorStyle* otherStyle, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherStyle), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherStyle, overwrite);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.OnChanged
void PowerUI::Css::SelectorStyle::OnChanged(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::OnChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.SelectorStyle.ToString
::StringW PowerUI::Css::SelectorStyle::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorStyle::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.SelectorType
#include "PowerUI/Css/SelectorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.SelectorType ID
::PowerUI::Css::SelectorType PowerUI::Css::SelectorType::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::SelectorType>("PowerUI.Css", "SelectorType", "ID"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.SelectorType ID
void PowerUI::Css::SelectorType::_set_ID(::PowerUI::Css::SelectorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "SelectorType", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.SelectorType Tag
::PowerUI::Css::SelectorType PowerUI::Css::SelectorType::_get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_get_Tag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::SelectorType>("PowerUI.Css", "SelectorType", "Tag"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.SelectorType Tag
void PowerUI::Css::SelectorType::_set_Tag(::PowerUI::Css::SelectorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_set_Tag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "SelectorType", "Tag", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.SelectorType Class
::PowerUI::Css::SelectorType PowerUI::Css::SelectorType::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::SelectorType>("PowerUI.Css", "SelectorType", "Class"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.SelectorType Class
void PowerUI::Css::SelectorType::_set_Class(::PowerUI::Css::SelectorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "SelectorType", "Class", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::SelectorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::SelectorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Css.Style
#include "PowerUI/Css/Style.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.ValueType
#include "PowerUI/Css/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Char[] Delimiter
::ArrayW<::Il2CppChar> PowerUI::Css::Style::_get_Delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::_get_Delimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("PowerUI.Css", "Style", "Delimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.Char[] Delimiter
void PowerUI::Css::Style::_set_Delimiter(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::_set_Delimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "Style", "Delimiter", value));
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Css::Style::dyn_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::dyn_Element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<PowerUI.Css.CssProperty,PowerUI.Css.Value> Properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::PowerUI::Css::CssProperty*, ::PowerUI::Css::Value*>*& PowerUI::Css::Style::dyn_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::dyn_Properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::PowerUI::Css::CssProperty*, ::PowerUI::Css::Value*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.Style.set_cssText
void PowerUI::Css::Style::set_cssText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::set_cssText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cssText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.Style.get_cssText
::StringW PowerUI::Css::Style::get_cssText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::get_cssText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cssText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Style.SetDirect
void PowerUI::Css::Style::SetDirect(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::SetDirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Css.Style.Get
::PowerUI::Css::Value* PowerUI::Css::Style::Get(::StringW cssProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, cssProperty);
}
// Autogenerated method: PowerUI.Css.Style.Set
void PowerUI::Css::Style::Set(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Css.Style.GetComputed
::PowerUI::Css::ComputedStyle* PowerUI::Css::Style::GetComputed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::GetComputed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ComputedStyle*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Style.Set
void PowerUI::Css::Style::Set(::StringW cssProperty, ::StringW value, int innerIndex, bool important) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(innerIndex), ::il2cpp_utils::ExtractType(important)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cssProperty, value, innerIndex, important);
}
// Autogenerated method: PowerUI.Css.Style.GetRawValue
::PowerUI::Css::Value* PowerUI::Css::Style::GetRawValue(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::GetRawValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property, type);
}
// Autogenerated method: PowerUI.Css.Style.OnChanged
void PowerUI::Css::Style::OnChanged(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::OnChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, newValue);
}
// Autogenerated method: PowerUI.Css.Style.get_Item
::PowerUI::Css::Value* PowerUI::Css::Style::get_Item(::StringW cssProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, cssProperty);
}
// Autogenerated method: PowerUI.Css.Style.set_Item
void PowerUI::Css::Style::set_Item(::StringW cssProperty, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cssProperty), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cssProperty, value);
}
// Autogenerated method: PowerUI.Css.Style.get_Item
::PowerUI::Css::Value* PowerUI::Css::Style::get_Item(::PowerUI::Css::CssProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.Css.Style.set_Item
void PowerUI::Css::Style::set_Item(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Css.Style.GetString
::StringW PowerUI::Css::Style::GetString(::StringW cssProperty, int innerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, cssProperty, innerIndex);
}
// Autogenerated method: PowerUI.Css.Style.GetString
::StringW PowerUI::Css::Style::GetString(::StringW cssProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::Style*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, cssProperty);
}
// Autogenerated method: PowerUI.Css.Style..cctor
void PowerUI::Css::Style::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Style", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Css.Style.ToString
::StringW PowerUI::Css::Style::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Style::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.StyleSheet
#include "PowerUI/Css/StyleSheet.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.Css.SelectorStyle
#include "PowerUI/Css/SelectorStyle.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document Document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::Css::StyleSheet::dyn_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::dyn_Document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<PowerUI.Css.SelectorStyle>> ModifiedSelectors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*>*& PowerUI::Css::StyleSheet::dyn_ModifiedSelectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::dyn_ModifiedSelectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifiedSelectors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.SelectorStyle> Selectors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>*& PowerUI::Css::StyleSheet::dyn_Selectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::dyn_Selectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selectors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.StyleSheet.GetStyleBySelector
::PowerUI::Css::SelectorStyle* PowerUI::Css::StyleSheet::GetStyleBySelector(::StringW selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::GetStyleBySelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleBySelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::SelectorStyle*, false>(this, ___internal__method, selector);
}
// Autogenerated method: PowerUI.Css.StyleSheet.AddModified
void PowerUI::Css::StyleSheet::AddModified(::StringW selector, ::PowerUI::Css::SelectorStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::AddModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selector, style);
}
// Autogenerated method: PowerUI.Css.StyleSheet.GetModifiers
::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>* PowerUI::Css::StyleSheet::GetModifiers(::StringW selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::GetModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*, false>(this, ___internal__method, selector);
}
// Autogenerated method: PowerUI.Css.StyleSheet.TryReadBlockComment
bool PowerUI::Css::StyleSheet::TryReadBlockComment(::Wrench::MLLexer* lexer, ::Il2CppChar currentCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::TryReadBlockComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryReadBlockComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractType(currentCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lexer, currentCharacter);
}
// Autogenerated method: PowerUI.Css.StyleSheet.StartSelector
::PowerUI::Css::SelectorStyle* PowerUI::Css::StyleSheet::StartSelector(::StringW selector, ::StringW modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::StartSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector), ::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::SelectorStyle*, false>(this, ___internal__method, selector, modifier);
}
// Autogenerated method: PowerUI.Css.StyleSheet.ParseCss
void PowerUI::Css::StyleSheet::ParseCss(::StringW css) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::ParseCss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, css);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.TextDecorationInfo
#include "PowerUI/Css/TextDecorationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color Colour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::TextDecorationInfo::dyn_Colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::dyn_Colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color BaseColour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::Css::TextDecorationInfo::dyn_BaseColour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::dyn_BaseColour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BaseColour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.TextLineType Type
[[deprecated("Use field access instead!")]] ::PowerUI::Css::TextLineType& PowerUI::Css::TextDecorationInfo::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::PowerUI::Css::TextLineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ColourOverride
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::TextDecorationInfo::dyn_ColourOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::dyn_ColourOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColourOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.TextDecorationInfo.SetColour
void PowerUI::Css::TextDecorationInfo::SetColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::SetColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.Css.TextDecorationInfo.SetOverlayColour
void PowerUI::Css::TextDecorationInfo::SetOverlayColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextDecorationInfo::SetOverlayColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.TextLineType
#include "PowerUI/Css/TextLineType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.TextLineType None
::PowerUI::Css::TextLineType PowerUI::Css::TextLineType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::TextLineType>("PowerUI.Css", "TextLineType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.TextLineType None
void PowerUI::Css::TextLineType::_set_None(::PowerUI::Css::TextLineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "TextLineType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.TextLineType Overline
::PowerUI::Css::TextLineType PowerUI::Css::TextLineType::_get_Overline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_get_Overline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::TextLineType>("PowerUI.Css", "TextLineType", "Overline"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.TextLineType Overline
void PowerUI::Css::TextLineType::_set_Overline(::PowerUI::Css::TextLineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_set_Overline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "TextLineType", "Overline", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.TextLineType Underline
::PowerUI::Css::TextLineType PowerUI::Css::TextLineType::_get_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_get_Underline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::TextLineType>("PowerUI.Css", "TextLineType", "Underline"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.TextLineType Underline
void PowerUI::Css::TextLineType::_set_Underline(::PowerUI::Css::TextLineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_set_Underline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "TextLineType", "Underline", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.TextLineType StrikeThrough
::PowerUI::Css::TextLineType PowerUI::Css::TextLineType::_get_StrikeThrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_get_StrikeThrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::TextLineType>("PowerUI.Css", "TextLineType", "StrikeThrough"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.TextLineType StrikeThrough
void PowerUI::Css::TextLineType::_set_StrikeThrough(::PowerUI::Css::TextLineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::_set_StrikeThrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "TextLineType", "StrikeThrough", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::TextLineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::TextLineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.Calculation
#include "PowerUI/Css/Calculation.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PX
[[deprecated("Use field access instead!")]] int& PowerUI::Css::Value::dyn_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_PX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Text
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Css::Value::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Single
[[deprecated("Use field access instead!")]] float& PowerUI::Css::Value::dyn_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Single");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Single"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Boolean
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::Value::dyn_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Boolean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Boolean"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Important
[[deprecated("Use field access instead!")]] bool& PowerUI::Css::Value::dyn_Important() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Important");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Important"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value[] InnerValues
[[deprecated("Use field access instead!")]] ::ArrayW<::PowerUI::Css::Value*>& PowerUI::Css::Value::dyn_InnerValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_InnerValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerValues"))->offset;
  return *reinterpret_cast<::ArrayW<::PowerUI::Css::Value*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Calculation Calculation
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Calculation*& PowerUI::Css::Value::dyn_Calculation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Calculation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Calculation"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Calculation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ValueType Type
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ValueType& PowerUI::Css::Value::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ValueType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Css.Value.GetColour
::UnityEngine::Color PowerUI::Css::Value::GetColour(::StringW valueText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "GetColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueText);
}
// Autogenerated method: PowerUI.Css.Value.GetColour
void PowerUI::Css::Value::GetColour(::StringW valueText, ByRef<float> r, ByRef<float> g, ByRef<float> b, ByRef<float> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "GetColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueText, byref(r), byref(g), byref(b), byref(a));
}
// Autogenerated method: PowerUI.Css.Value.GetInnerIndex
int PowerUI::Css::Value::GetInnerIndex(ByRef<::StringW> property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetInnerIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "GetInnerIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(property));
}
// Autogenerated method: PowerUI.Css.Value.TypeOf
::PowerUI::Css::ValueType PowerUI::Css::Value::TypeOf(::PowerUI::Css::CssProperty* property, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::TypeOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "TypeOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ValueType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property, byref(value));
}
// Autogenerated method: PowerUI.Css.Value.IsSingle
bool PowerUI::Css::Value::IsSingle(::StringW valueText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::IsSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "IsSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueText);
}
// Autogenerated method: PowerUI.Css.Value.TypeOf
::PowerUI::Css::ValueType PowerUI::Css::Value::TypeOf(::StringW valueText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::TypeOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "TypeOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ValueType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, valueText);
}
// Autogenerated method: PowerUI.Css.Value.IsAuto
bool PowerUI::Css::Value::IsAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::IsAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.IsAbsolute
bool PowerUI::Css::Value::IsAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::IsAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.Equals
bool PowerUI::Css::Value::Equals(::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.Value.MakeAbsolute
void PowerUI::Css::Value::MakeAbsolute(::PowerUI::Css::CssProperty* property, ::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::MakeAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, element);
}
// Autogenerated method: PowerUI.Css.Value.InheritFrom
void PowerUI::Css::Value::InheritFrom(::PowerUI::Css::Value* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::InheritFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InheritFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: PowerUI.Css.Value.ParentFontSize
int PowerUI::Css::Value::ParentFontSize(::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::ParentFontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentFontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, style);
}
// Autogenerated method: PowerUI.Css.Value.BakePX
void PowerUI::Css::Value::BakePX(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::BakePX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakePX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: PowerUI.Css.Value.Copy
::PowerUI::Css::Value* PowerUI::Css::Value::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.SetFloat
void PowerUI::Css::Value::SetFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Css.Value.ToFloat
float PowerUI::Css::Value::ToFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.ToColor
::UnityEngine::Color PowerUI::Css::Value::ToColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::ToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.InnerValueString
::StringW PowerUI::Css::Value::InnerValueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::InnerValueString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerValueString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.Reset
void PowerUI::Css::Value::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.Set
void PowerUI::Css::Value::Set(::StringW valueText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueText);
}
// Autogenerated method: PowerUI.Css.Value.Set
void PowerUI::Css::Value::Set(::StringW valueText, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueText, type);
}
// Autogenerated method: PowerUI.Css.Value.GetMixed
int PowerUI::Css::Value::GetMixed(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetMixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: PowerUI.Css.Value.SetPercent
void PowerUI::Css::Value::SetPercent(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::SetPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percent);
}
// Autogenerated method: PowerUI.Css.Value.Offset
void PowerUI::Css::Value::Offset(::PowerUI::Css::Value* by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(by)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: PowerUI.Css.Value.AllSameValues
bool PowerUI::Css::Value::AllSameValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::AllSameValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllSameValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.DoubleNibble
int PowerUI::Css::Value::DoubleNibble(int nibble) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::DoubleNibble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css", "Value", "DoubleNibble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nibble)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nibble);
}
// Autogenerated method: PowerUI.Css.Value.GetText
::StringW PowerUI::Css::Value::GetText(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.GetRadians
float PowerUI::Css::Value::GetRadians(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetRadians");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRadians", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.GetFloat
float PowerUI::Css::Value::GetFloat(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.GetPX
int PowerUI::Css::Value::GetPX(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetPX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.GetColor
::UnityEngine::Color PowerUI::Css::Value::GetColor(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.ToHex
::StringW PowerUI::Css::Value::ToHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::ToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Value.get_Item
::PowerUI::Css::Value* PowerUI::Css::Value::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::Value*, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Css.Value.set_Item
void PowerUI::Css::Value::set_Item(int index, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: PowerUI.Css.Value.SetInnerValues
void PowerUI::Css::Value::SetInnerValues(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::SetInnerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInnerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: PowerUI.Css.Value.SetInnerValues
void PowerUI::Css::Value::SetInnerValues(::StringW valueText, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::SetInnerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInnerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueText), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueText, count);
}
// Autogenerated method: PowerUI.Css.Value.ToString
::StringW PowerUI::Css::Value::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Value::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.ValueType
#include "PowerUI/Css/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Pixels
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Pixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Pixels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Pixels"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Pixels
void PowerUI::Css::ValueType::_set_Pixels(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Pixels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Pixels", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Percentage
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Percentage
void PowerUI::Css::ValueType::_set_Percentage(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Text
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Text
void PowerUI::Css::ValueType::_set_Text(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Color
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Color"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Color
void PowerUI::Css::ValueType::_set_Color(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Rectangle
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Rectangle
void PowerUI::Css::ValueType::_set_Rectangle(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Point
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Point"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Point
void PowerUI::Css::ValueType::_set_Point(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Boolean
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Boolean
void PowerUI::Css::ValueType::_set_Boolean(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Radians
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Radians() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Radians");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Radians"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Radians
void PowerUI::Css::ValueType::_set_Radians(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Radians");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Radians", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Null
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Null
void PowerUI::Css::ValueType::_set_Null(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Degrees
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Degrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Degrees");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Degrees"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Degrees
void PowerUI::Css::ValueType::_set_Degrees(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Degrees");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Degrees", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Single
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Single"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Single
void PowerUI::Css::ValueType::_set_Single(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Inherit
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Inherit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Inherit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Inherit"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Inherit
void PowerUI::Css::ValueType::_set_Inherit(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Inherit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Inherit", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Calc
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Calc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Calc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Calc"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Calc
void PowerUI::Css::ValueType::_set_Calc(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Calc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Calc", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Em
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Em() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Em");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Em"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Em
void PowerUI::Css::ValueType::_set_Em(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Em");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Em", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.ValueType Mixed
::PowerUI::Css::ValueType PowerUI::Css::ValueType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::ValueType>("PowerUI.Css", "ValueType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.ValueType Mixed
void PowerUI::Css::ValueType::_set_Mixed(::PowerUI::Css::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "ValueType", "Mixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::ValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::ValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.VerticalAlignType
#include "PowerUI/Css/VerticalAlignType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.VerticalAlignType Top
::PowerUI::Css::VerticalAlignType PowerUI::Css::VerticalAlignType::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::VerticalAlignType>("PowerUI.Css", "VerticalAlignType", "Top"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.VerticalAlignType Top
void PowerUI::Css::VerticalAlignType::_set_Top(::PowerUI::Css::VerticalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "VerticalAlignType", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.VerticalAlignType Bottom
::PowerUI::Css::VerticalAlignType PowerUI::Css::VerticalAlignType::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::VerticalAlignType>("PowerUI.Css", "VerticalAlignType", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.VerticalAlignType Bottom
void PowerUI::Css::VerticalAlignType::_set_Bottom(::PowerUI::Css::VerticalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "VerticalAlignType", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.VerticalAlignType Middle
::PowerUI::Css::VerticalAlignType PowerUI::Css::VerticalAlignType::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::VerticalAlignType>("PowerUI.Css", "VerticalAlignType", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.VerticalAlignType Middle
void PowerUI::Css::VerticalAlignType::_set_Middle(::PowerUI::Css::VerticalAlignType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "VerticalAlignType", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::VerticalAlignType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VerticalAlignType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.VisibilityType
#include "PowerUI/Css/VisibilityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.VisibilityType Hidden
::PowerUI::Css::VisibilityType PowerUI::Css::VisibilityType::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VisibilityType::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::VisibilityType>("PowerUI.Css", "VisibilityType", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.VisibilityType Hidden
void PowerUI::Css::VisibilityType::_set_Hidden(::PowerUI::Css::VisibilityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VisibilityType::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "VisibilityType", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.VisibilityType Visible
::PowerUI::Css::VisibilityType PowerUI::Css::VisibilityType::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VisibilityType::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::VisibilityType>("PowerUI.Css", "VisibilityType", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.VisibilityType Visible
void PowerUI::Css::VisibilityType::_set_Visible(::PowerUI::Css::VisibilityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VisibilityType::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "VisibilityType", "Visible", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::VisibilityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::VisibilityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.WhiteSpaceType
#include "PowerUI/Css/WhiteSpaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.WhiteSpaceType Normal
::PowerUI::Css::WhiteSpaceType PowerUI::Css::WhiteSpaceType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::WhiteSpaceType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::WhiteSpaceType>("PowerUI.Css", "WhiteSpaceType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.WhiteSpaceType Normal
void PowerUI::Css::WhiteSpaceType::_set_Normal(::PowerUI::Css::WhiteSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::WhiteSpaceType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "WhiteSpaceType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.WhiteSpaceType NoWrap
::PowerUI::Css::WhiteSpaceType PowerUI::Css::WhiteSpaceType::_get_NoWrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::WhiteSpaceType::_get_NoWrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::WhiteSpaceType>("PowerUI.Css", "WhiteSpaceType", "NoWrap"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.WhiteSpaceType NoWrap
void PowerUI::Css::WhiteSpaceType::_set_NoWrap(::PowerUI::Css::WhiteSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::WhiteSpaceType::_set_NoWrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css", "WhiteSpaceType", "NoWrap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::Css::WhiteSpaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::WhiteSpaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundClip
#include "PowerUI/Css/Properties/BackgroundClip.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundClip.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundClip::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundClip::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundClip.Apply
void PowerUI::Css::Properties::BackgroundClip::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundClip::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundColor
#include "PowerUI/Css/Properties/BackgroundColor.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundColor.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundColor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundColor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundColor.Apply
void PowerUI::Css::Properties::BackgroundColor::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundColor::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundImageProperty
#include "PowerUI/Css/Properties/BackgroundImageProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundImageProperty.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundImageProperty::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundImageProperty::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundImageProperty.Apply
void PowerUI::Css::Properties::BackgroundImageProperty::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundImageProperty::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundPosition
#include "PowerUI/Css/Properties/BackgroundPosition.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundPosition.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundPosition::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundPosition::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundPosition.Apply
void PowerUI::Css::Properties::BackgroundPosition::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundPosition::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundRepeat
#include "PowerUI/Css/Properties/BackgroundRepeat.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundRepeat.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundRepeat::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundRepeat::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundRepeat.Apply
void PowerUI::Css::Properties::BackgroundRepeat::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundRepeat::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BackgroundSize
#include "PowerUI/Css/Properties/BackgroundSize.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BackgroundSize.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BackgroundSize::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundSize::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BackgroundSize.Apply
void PowerUI::Css::Properties::BackgroundSize::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BackgroundSize::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BorderColor
#include "PowerUI/Css/Properties/BorderColor.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BorderColor.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BorderColor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderColor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BorderColor.Apply
void PowerUI::Css::Properties::BorderColor::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderColor::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
