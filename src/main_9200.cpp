// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.HostTopology
#include "UnityEngine/Networking/HostTopology.hpp"
// Including type: UnityEngine.Networking.ConnectionConfig
#include "UnityEngine/Networking/ConnectionConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.ConnectionConfig m_DefConfig
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::ConnectionConfig*& UnityEngine::Networking::HostTopology::dyn_m_DefConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_DefConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefConfig"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::ConnectionConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MaxDefConnections
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::HostTopology::dyn_m_MaxDefConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_MaxDefConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxDefConnections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Networking.ConnectionConfig> m_SpecialConnections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Networking::ConnectionConfig*>*& UnityEngine::Networking::HostTopology::dyn_m_SpecialConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_SpecialConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpecialConnections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Networking::ConnectionConfig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_ReceivedMessagePoolSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::HostTopology::dyn_m_ReceivedMessagePoolSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_ReceivedMessagePoolSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReceivedMessagePoolSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_SentMessagePoolSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::HostTopology::dyn_m_SentMessagePoolSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_SentMessagePoolSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SentMessagePoolSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MessagePoolSizeGrowthFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::Networking::HostTopology::dyn_m_MessagePoolSizeGrowthFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::dyn_m_MessagePoolSizeGrowthFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MessagePoolSizeGrowthFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_DefaultConfig
::UnityEngine::Networking::ConnectionConfig* UnityEngine::Networking::HostTopology::get_DefaultConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_DefaultConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::ConnectionConfig*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_MaxDefaultConnections
int UnityEngine::Networking::HostTopology::get_MaxDefaultConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_MaxDefaultConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxDefaultConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_SpecialConnectionConfigsCount
int UnityEngine::Networking::HostTopology::get_SpecialConnectionConfigsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_SpecialConnectionConfigsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpecialConnectionConfigsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_SpecialConnectionConfigs
::System::Collections::Generic::List_1<::UnityEngine::Networking::ConnectionConfig*>* UnityEngine::Networking::HostTopology::get_SpecialConnectionConfigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_SpecialConnectionConfigs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpecialConnectionConfigs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Networking::ConnectionConfig*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.GetSpecialConnectionConfig
::UnityEngine::Networking::ConnectionConfig* UnityEngine::Networking::HostTopology::GetSpecialConnectionConfig(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::GetSpecialConnectionConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpecialConnectionConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::ConnectionConfig*, false>(this, ___internal__method, i);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_ReceivedMessagePoolSize
uint16_t UnityEngine::Networking::HostTopology::get_ReceivedMessagePoolSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_ReceivedMessagePoolSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedMessagePoolSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_SentMessagePoolSize
uint16_t UnityEngine::Networking::HostTopology::get_SentMessagePoolSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_SentMessagePoolSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SentMessagePoolSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopology.get_MessagePoolSizeGrowthFactor
float UnityEngine::Networking::HostTopology::get_MessagePoolSizeGrowthFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopology::get_MessagePoolSizeGrowthFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MessagePoolSizeGrowthFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.ConnectionConfigInternal
#include "UnityEngine/Networking/ConnectionConfigInternal.hpp"
// Including type: UnityEngine.Networking.ConnectionConfig
#include "UnityEngine/Networking/ConnectionConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::ConnectionConfigInternal::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.Dispose
void UnityEngine::Networking::ConnectionConfigInternal::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::ConnectionConfigInternal*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.Dispose
void UnityEngine::Networking::ConnectionConfigInternal::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::ConnectionConfigInternal*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.InternalCreate
::System::IntPtr UnityEngine::Networking::ConnectionConfigInternal::InternalCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::InternalCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "ConnectionConfigInternal", "InternalCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.InternalDestroy
void UnityEngine::Networking::ConnectionConfigInternal::InternalDestroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "ConnectionConfigInternal", "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.AddChannel
uint8_t UnityEngine::Networking::ConnectionConfigInternal::AddChannel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::AddChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.SetPacketSize
bool UnityEngine::Networking::ConnectionConfigInternal::SetPacketSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::SetPacketSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPacketSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_FragmentSize
void UnityEngine::Networking::ConnectionConfigInternal::set_FragmentSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_FragmentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FragmentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_ResendTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_ResendTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_ResendTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResendTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_DisconnectTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_DisconnectTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_DisconnectTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisconnectTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_ConnectTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_ConnectTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_ConnectTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_MinUpdateTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_MinUpdateTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_MinUpdateTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinUpdateTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_PingTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_PingTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_PingTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PingTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_ReducedPingTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_ReducedPingTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_ReducedPingTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReducedPingTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_AllCostTimeout
void UnityEngine::Networking::ConnectionConfigInternal::set_AllCostTimeout(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_AllCostTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllCostTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_NetworkDropThreshold
void UnityEngine::Networking::ConnectionConfigInternal::set_NetworkDropThreshold(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_NetworkDropThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NetworkDropThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_OverflowDropThreshold
void UnityEngine::Networking::ConnectionConfigInternal::set_OverflowDropThreshold(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_OverflowDropThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverflowDropThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_MaxConnectionAttempt
void UnityEngine::Networking::ConnectionConfigInternal::set_MaxConnectionAttempt(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_MaxConnectionAttempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxConnectionAttempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_AckDelay
void UnityEngine::Networking::ConnectionConfigInternal::set_AckDelay(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_AckDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AckDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_SendDelay
void UnityEngine::Networking::ConnectionConfigInternal::set_SendDelay(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_SendDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_MaxCombinedReliableMessageSize
void UnityEngine::Networking::ConnectionConfigInternal::set_MaxCombinedReliableMessageSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_MaxCombinedReliableMessageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCombinedReliableMessageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_MaxCombinedReliableMessageCount
void UnityEngine::Networking::ConnectionConfigInternal::set_MaxCombinedReliableMessageCount(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_MaxCombinedReliableMessageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCombinedReliableMessageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_MaxSentMessageQueueSize
void UnityEngine::Networking::ConnectionConfigInternal::set_MaxSentMessageQueueSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_MaxSentMessageQueueSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSentMessageQueueSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_AcksType
void UnityEngine::Networking::ConnectionConfigInternal::set_AcksType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_AcksType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AcksType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_UsePlatformSpecificProtocols
void UnityEngine::Networking::ConnectionConfigInternal::set_UsePlatformSpecificProtocols(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_UsePlatformSpecificProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UsePlatformSpecificProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_InitialBandwidth
void UnityEngine::Networking::ConnectionConfigInternal::set_InitialBandwidth(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_InitialBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InitialBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_BandwidthPeakFactor
void UnityEngine::Networking::ConnectionConfigInternal::set_BandwidthPeakFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_BandwidthPeakFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BandwidthPeakFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_WebSocketReceiveBufferMaxSize
void UnityEngine::Networking::ConnectionConfigInternal::set_WebSocketReceiveBufferMaxSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_WebSocketReceiveBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WebSocketReceiveBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.set_UdpSocketReceiveBufferMaxSize
void UnityEngine::Networking::ConnectionConfigInternal::set_UdpSocketReceiveBufferMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::set_UdpSocketReceiveBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UdpSocketReceiveBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.SetSSLCertFilePath
int UnityEngine::Networking::ConnectionConfigInternal::SetSSLCertFilePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::SetSSLCertFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSSLCertFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.SetSSLPrivateKeyFilePath
int UnityEngine::Networking::ConnectionConfigInternal::SetSSLPrivateKeyFilePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::SetSSLPrivateKeyFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSSLPrivateKeyFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.SetSSLCAFilePath
int UnityEngine::Networking::ConnectionConfigInternal::SetSSLCAFilePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::SetSSLCAFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSSLCAFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.MakeChannelsSharedOrder
bool UnityEngine::Networking::ConnectionConfigInternal::MakeChannelsSharedOrder(::ArrayW<uint8_t> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::MakeChannelsSharedOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeChannelsSharedOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, values);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfigInternal.Finalize
void UnityEngine::Networking::ConnectionConfigInternal::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfigInternal::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.HostTopologyInternal
#include "UnityEngine/Networking/HostTopologyInternal.hpp"
// Including type: UnityEngine.Networking.HostTopology
#include "UnityEngine/Networking/HostTopology.hpp"
// Including type: UnityEngine.Networking.ConnectionConfigInternal
#include "UnityEngine/Networking/ConnectionConfigInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::HostTopologyInternal::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.Dispose
void UnityEngine::Networking::HostTopologyInternal::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::HostTopologyInternal*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.Dispose
void UnityEngine::Networking::HostTopologyInternal::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::HostTopologyInternal*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.InternalCreate
::System::IntPtr UnityEngine::Networking::HostTopologyInternal::InternalCreate(::UnityEngine::Networking::ConnectionConfigInternal* config, int maxDefaultConnections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::InternalCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "HostTopologyInternal", "InternalCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config), ::il2cpp_utils::ExtractType(maxDefaultConnections)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config, maxDefaultConnections);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.InternalDestroy
void UnityEngine::Networking::HostTopologyInternal::InternalDestroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "HostTopologyInternal", "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.AddSpecialConnectionConfig
uint16_t UnityEngine::Networking::HostTopologyInternal::AddSpecialConnectionConfig(::UnityEngine::Networking::ConnectionConfigInternal* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::AddSpecialConnectionConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecialConnectionConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, config);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.set_ReceivedMessagePoolSize
void UnityEngine::Networking::HostTopologyInternal::set_ReceivedMessagePoolSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::set_ReceivedMessagePoolSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedMessagePoolSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.set_SentMessagePoolSize
void UnityEngine::Networking::HostTopologyInternal::set_SentMessagePoolSize(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::set_SentMessagePoolSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SentMessagePoolSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.set_MessagePoolSizeGrowthFactor
void UnityEngine::Networking::HostTopologyInternal::set_MessagePoolSizeGrowthFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::set_MessagePoolSizeGrowthFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MessagePoolSizeGrowthFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.HostTopologyInternal.Finalize
void UnityEngine::Networking::HostTopologyInternal::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::HostTopologyInternal::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStopped
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStopped"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStopped
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStopped(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStopped", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStarted
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStarted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStarted
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStarted(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionPaused
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionPaused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionPaused"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionPaused
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionPaused(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionPaused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionPaused", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionResumed
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionResumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionResumed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionResumed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionResumed
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionResumed(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionResumed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionResumed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Analytics::AnalyticsSessionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo
#include "UnityEngine/Analytics/AnalyticsSessionInfo.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_SessionStateChanged.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAA76E0
// [DebuggerBrowsableAttribute] Offset: 0xAA76E0
// Autogenerated static field getter
// Get static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged sessionStateChanged
::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged* UnityEngine::Analytics::AnalyticsSessionInfo::_get_sessionStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_get_sessionStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged*>("UnityEngine.Analytics", "AnalyticsSessionInfo", "sessionStateChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged sessionStateChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::_set_sessionStateChanged(::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_set_sessionStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionInfo", "sessionStateChanged", value));
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo.CallSessionStateChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::CallSessionStateChanged(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::CallSessionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsSessionInfo", "CallSessionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionState), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(sessionElapsedTime), ::il2cpp_utils::ExtractType(sessionChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo.get_sessionId
int64_t UnityEngine::Analytics::AnalyticsSessionInfo::get_sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::get_sessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsSessionInfo", "get_sessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo.get_userId
::StringW UnityEngine::Analytics::AnalyticsSessionInfo::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsSessionInfo", "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_SessionStateChanged.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged.Invoke
void UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::Invoke(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged.BeginInvoke
::System::IAsyncResult* UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::BeginInvoke(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged, callback, object);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/SessionStateChanged.EndInvoke
void UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RemoteSettings
#include "UnityEngine/RemoteSettings.hpp"
// Including type: UnityEngine.RemoteSettings/UpdatedEventHandler
#include "UnityEngine/RemoteSettings_UpdatedEventHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xAA771C
// [CompilerGeneratedAttribute] Offset: 0xAA771C
// Autogenerated static field getter
// Get static field: static private UnityEngine.RemoteSettings/UpdatedEventHandler Updated
::UnityEngine::RemoteSettings::UpdatedEventHandler* UnityEngine::RemoteSettings::_get_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_Updated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteSettings::UpdatedEventHandler*>("UnityEngine", "RemoteSettings", "Updated"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RemoteSettings/UpdatedEventHandler Updated
void UnityEngine::RemoteSettings::_set_Updated(::UnityEngine::RemoteSettings::UpdatedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_Updated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "Updated", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xAA7758
// [CompilerGeneratedAttribute] Offset: 0xAA7758
// Autogenerated static field getter
// Get static field: static private System.Action BeforeFetchFromServer
::System::Action* UnityEngine::RemoteSettings::_get_BeforeFetchFromServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_BeforeFetchFromServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "RemoteSettings", "BeforeFetchFromServer"));
}
// Autogenerated static field setter
// Set static field: static private System.Action BeforeFetchFromServer
void UnityEngine::RemoteSettings::_set_BeforeFetchFromServer(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_BeforeFetchFromServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "BeforeFetchFromServer", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xAA7794
// [CompilerGeneratedAttribute] Offset: 0xAA7794
// Autogenerated static field getter
// Get static field: static private System.Action`3<System.Boolean,System.Boolean,System.Int32> Completed
::System::Action_3<bool, bool, int>* UnityEngine::RemoteSettings::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_Completed");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<bool, bool, int>*>("UnityEngine", "RemoteSettings", "Completed")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<System.Boolean,System.Boolean,System.Int32> Completed
void UnityEngine::RemoteSettings::_set_Completed(::System::Action_3<bool, bool, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "Completed", value));
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsUpdated
void UnityEngine::RemoteSettings::RemoteSettingsUpdated(bool wasLastUpdatedFromServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wasLastUpdatedFromServer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wasLastUpdatedFromServer);
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsBeforeFetchFromServer
void UnityEngine::RemoteSettings::RemoteSettingsBeforeFetchFromServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsBeforeFetchFromServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsBeforeFetchFromServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsUpdateCompleted
void UnityEngine::RemoteSettings::RemoteSettingsUpdateCompleted(bool wasLastUpdatedFromServer, bool settingsChanged, int response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsUpdateCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsUpdateCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wasLastUpdatedFromServer), ::il2cpp_utils::ExtractType(settingsChanged), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wasLastUpdatedFromServer, settingsChanged, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RemoteSettings/UpdatedEventHandler
#include "UnityEngine/RemoteSettings_UpdatedEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RemoteSettings/UpdatedEventHandler.Invoke
void UnityEngine::RemoteSettings::UpdatedEventHandler::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::RemoteSettings::UpdatedEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteSettings/UpdatedEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::RemoteSettings::UpdatedEventHandler::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::RemoteSettings::UpdatedEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.RemoteSettings/UpdatedEventHandler.EndInvoke
void UnityEngine::RemoteSettings::UpdatedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::RemoteSettings::UpdatedEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RemoteConfigSettings
#include "UnityEngine/RemoteConfigSettings.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::RemoteConfigSettings::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> Updated
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& UnityEngine::RemoteConfigSettings::dyn_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::dyn_Updated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Updated"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.Destroy
void UnityEngine::RemoteConfigSettings::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.Dispose
void UnityEngine::RemoteConfigSettings::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::RemoteConfigSettings*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.Internal_Destroy
void UnityEngine::RemoteConfigSettings::Internal_Destroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteConfigSettings", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.RemoteConfigSettingsUpdated
void UnityEngine::RemoteConfigSettings::RemoteConfigSettingsUpdated(::UnityEngine::RemoteConfigSettings* rcs, bool wasLastUpdatedFromServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::RemoteConfigSettingsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteConfigSettings", "RemoteConfigSettingsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rcs), ::il2cpp_utils::ExtractType(wasLastUpdatedFromServer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rcs, wasLastUpdatedFromServer);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.Finalize
void UnityEngine::RemoteConfigSettings::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.IMultipartFormSection
#include "UnityEngine/Networking/IMultipartFormSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.IMultipartFormSection.get_sectionName
::StringW UnityEngine::Networking::IMultipartFormSection::get_sectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::IMultipartFormSection::get_sectionName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::IMultipartFormSection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.IMultipartFormSection.get_sectionData
::ArrayW<uint8_t> UnityEngine::Networking::IMultipartFormSection::get_sectionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::IMultipartFormSection::get_sectionData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::IMultipartFormSection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.IMultipartFormSection.get_fileName
::StringW UnityEngine::Networking::IMultipartFormSection::get_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::IMultipartFormSection::get_fileName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::IMultipartFormSection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.IMultipartFormSection.get_contentType
::StringW UnityEngine::Networking::IMultipartFormSection::get_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::IMultipartFormSection::get_contentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::IMultipartFormSection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <webRequest>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& UnityEngine::Networking::UnityWebRequestAsyncOperation::dyn_$webRequest$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAsyncOperation::dyn_$webRequest$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<webRequest>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAsyncOperation.set_webRequest
void UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest(::UnityEngine::Networking::UnityWebRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_webRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.WWWForm
#include "UnityEngine/WWWForm.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Networking.IMultipartFormSection
#include "UnityEngine/Networking/IMultipartFormSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::UnityWebRequest::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.DownloadHandler m_DownloadHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::DownloadHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_DownloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_DownloadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DownloadHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::DownloadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.UploadHandler m_UploadHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UploadHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_UploadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_UploadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UploadHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UploadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.CertificateHandler m_CertificateHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::CertificateHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_CertificateHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_CertificateHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CertificateHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::CertificateHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri m_Uri
[[deprecated("Use field access instead!")]] ::System::Uri*& UnityEngine::Networking::UnityWebRequest::dyn_m_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_Uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeCertificateHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeCertificateHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeCertificateHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeCertificateHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeDownloadHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeDownloadHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeDownloadHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeDownloadHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeUploadHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeUploadHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeUploadHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeUploadHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetWebErrorString
::StringW UnityEngine::Networking::UnityWebRequest::GetWebErrorString(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetWebErrorString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetWebErrorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, err);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetHTTPStatusString
::StringW UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString(int64_t responseCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetHTTPStatusString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, responseCode);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeCertificateHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeCertificateHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeDownloadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeDownloadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeUploadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeUploadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Create
::System::IntPtr UnityEngine::Networking::UnityWebRequest::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Release
void UnityEngine::Networking::UnityWebRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalDestroy
void UnityEngine::Networking::UnityWebRequest::InternalDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetDefaults
void UnityEngine::Networking::UnityWebRequest::InternalSetDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Dispose
void UnityEngine::Networking::UnityWebRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::UnityWebRequest*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.DisposeHandlers
void UnityEngine::Networking::UnityWebRequest::DisposeHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::DisposeHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.BeginWebRequest
::UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::BeginWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::BeginWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Send
::UnityEngine::AsyncOperation* UnityEngine::Networking::UnityWebRequest::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SendWebRequest
::UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::SendWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SendWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Abort
void UnityEngine::Networking::UnityWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetMethod
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetCustomMethod
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetCustomMethod(::StringW customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMethodName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetCustomMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod(::StringW customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMethodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_method
void UnityEngine::Networking::UnityWebRequest::set_method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_error
::StringW UnityEngine::Networking::UnityWebRequest::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_use100Continue
void UnityEngine::Networking::UnityWebRequest::set_use100Continue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_use100Continue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_use100Continue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_useHttpContinue
void UnityEngine::Networking::UnityWebRequest::set_useHttpContinue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_useHttpContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useHttpContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_url
::StringW UnityEngine::Networking::UnityWebRequest::get_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_url
void UnityEngine::Networking::UnityWebRequest::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetUrl
::StringW UnityEngine::Networking::UnityWebRequest::GetUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUrl
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUrl(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetUrl
void UnityEngine::Networking::UnityWebRequest::InternalSetUrl(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_responseCode
int64_t UnityEngine::Networking::UnityWebRequest::get_responseCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_responseCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetUploadProgress
float UnityEngine::Networking::UnityWebRequest::GetUploadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetUploadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUploadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.IsExecuting
bool UnityEngine::Networking::UnityWebRequest::IsExecuting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::IsExecuting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExecuting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_uploadProgress
float UnityEngine::Networking::UnityWebRequest::get_uploadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_uploadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uploadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isModifiable
bool UnityEngine::Networking::UnityWebRequest::get_isModifiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isModifiable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isModifiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isDone
bool UnityEngine::Networking::UnityWebRequest::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isNetworkError
bool UnityEngine::Networking::UnityWebRequest::get_isNetworkError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isNetworkError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isHttpError
bool UnityEngine::Networking::UnityWebRequest::get_isHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isHttpError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHttpError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetDownloadProgress
float UnityEngine::Networking::UnityWebRequest::GetDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetDownloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadProgress
float UnityEngine::Networking::UnityWebRequest::get_downloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_uploadedBytes
uint64_t UnityEngine::Networking::UnityWebRequest::get_uploadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_uploadedBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uploadedBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadedBytes
uint64_t UnityEngine::Networking::UnityWebRequest::get_downloadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadedBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadedBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetRedirectLimitFromScripting
void UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting(int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRedirectLimitFromScripting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, limit);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_redirectLimit
void UnityEngine::Networking::UnityWebRequest::set_redirectLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_redirectLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_redirectLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetChunked
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetChunked(bool chunked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunked)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, chunked);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_chunkedTransfer
void UnityEngine::Networking::UnityWebRequest::set_chunkedTransfer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_chunkedTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_chunkedTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetRequestHeader
::StringW UnityEngine::Networking::UnityWebRequest::GetRequestHeader(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetRequestHeader
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetRequestHeader
void UnityEngine::Networking::UnityWebRequest::SetRequestHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetResponseHeader
::StringW UnityEngine::Networking::UnityWebRequest::GetResponseHeader(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetResponseHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetResponseHeaderKeys
::ArrayW<::StringW> UnityEngine::Networking::UnityWebRequest::GetResponseHeaderKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetResponseHeaderKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseHeaderKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetResponseHeaders
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* UnityEngine::Networking::UnityWebRequest::GetResponseHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetResponseHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUploadHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUploadHandler(::UnityEngine::Networking::UploadHandler* uh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetUploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, uh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_uploadHandler
::UnityEngine::Networking::UploadHandler* UnityEngine::Networking::UnityWebRequest::get_uploadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UploadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_uploadHandler
void UnityEngine::Networking::UnityWebRequest::set_uploadHandler(::UnityEngine::Networking::UploadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetDownloadHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetDownloadHandler(::UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetDownloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDownloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadHandler
::UnityEngine::Networking::DownloadHandler* UnityEngine::Networking::UnityWebRequest::get_downloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::DownloadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_downloadHandler
void UnityEngine::Networking::UnityWebRequest::set_downloadHandler(::UnityEngine::Networking::DownloadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_downloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetCertificateHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetCertificateHandler(::UnityEngine::Networking::CertificateHandler* ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetCertificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCertificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, ch);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_certificateHandler
::UnityEngine::Networking::CertificateHandler* UnityEngine::Networking::UnityWebRequest::get_certificateHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_certificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_certificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::CertificateHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_certificateHandler
void UnityEngine::Networking::UnityWebRequest::set_certificateHandler(::UnityEngine::Networking::CertificateHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_certificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_certificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetTimeoutMsec
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec(int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimeoutMsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, timeout);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_timeout
void UnityEngine::Networking::UnityWebRequest::set_timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Get
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequest::Get(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Post
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequest::Post(::StringW uri, ::StringW postData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(postData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, postData);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetupPost
void UnityEngine::Networking::UnityWebRequest::SetupPost(::UnityEngine::Networking::UnityWebRequest* request, ::StringW postData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetupPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "SetupPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(postData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, postData);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Post
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequest::Post(::StringW uri, ::UnityEngine::WWWForm* formData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(formData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, formData);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetupPost
void UnityEngine::Networking::UnityWebRequest::SetupPost(::UnityEngine::Networking::UnityWebRequest* request, ::UnityEngine::WWWForm* formData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetupPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "SetupPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(formData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, formData);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SerializeFormSections
::ArrayW<uint8_t> UnityEngine::Networking::UnityWebRequest::SerializeFormSections(::System::Collections::Generic::List_1<::UnityEngine::Networking::IMultipartFormSection*>* multipartFormSections, ::ArrayW<uint8_t> boundary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SerializeFormSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "SerializeFormSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipartFormSections), ::il2cpp_utils::ExtractType(boundary)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multipartFormSections, boundary);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GenerateBoundary
::ArrayW<uint8_t> UnityEngine::Networking::UnityWebRequest::GenerateBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GenerateBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GenerateBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SerializeSimpleForm
::ArrayW<uint8_t> UnityEngine::Networking::UnityWebRequest::SerializeSimpleForm(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* formFields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SerializeSimpleForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "SerializeSimpleForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formFields)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, formFields);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Finalize
void UnityEngine::Networking::UnityWebRequest::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Get
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Get
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Post
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Post
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Put
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Put
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Head
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Head
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Custom
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestMethod Custom
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OK
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OK
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Unknown
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Unknown
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SDKError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SDKError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnsupportedProtocol
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnsupportedProtocol
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError MalformattedUrl
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError MalformattedUrl
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveProxy
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveProxy
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveHost
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotResolveHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotConnectToHost
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError CannotConnectToHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError AccessDenied
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError AccessDenied
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError GenericHttpError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError GenericHttpError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError WriteError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError WriteError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReadError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReadError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OutOfMemory
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError OutOfMemory
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Timeout
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Timeout
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError HTTPPostError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError HTTPPostError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCannotConnect
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCannotConnect
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Aborted
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError Aborted
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError TooManyRedirects
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError TooManyRedirects
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReceivedNoData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError ReceivedNoData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLNotSupported
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLNotSupported
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToSendData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToSendData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToReceiveData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError FailedToReceiveData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCertificateError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCertificateError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCipherNotAvailable
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCipherNotAvailable
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCACertError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLCACertError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnrecognizedContentEncoding
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError UnrecognizedContentEncoding
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError LoginFailed
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError LoginFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLShutdownFailed
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError SSLShutdownFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError NoInternetConnection
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityWebRequestError NoInternetConnection
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWWForm
#include "UnityEngine/WWWForm.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte[]> formData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& UnityEngine::WWWForm::dyn_formData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_formData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> fieldNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& UnityEngine::WWWForm::dyn_fieldNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_fieldNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> fileNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& UnityEngine::WWWForm::dyn_fileNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_fileNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> types
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& UnityEngine::WWWForm::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] boundary
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& UnityEngine::WWWForm::dyn_boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_boundary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundary"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean containsFiles
[[deprecated("Use field access instead!")]] bool& UnityEngine::WWWForm::dyn_containsFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::dyn_containsFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containsFiles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WWWForm.get_DefaultEncoding
::System::Text::Encoding* UnityEngine::WWWForm::get_DefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::get_DefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWForm", "get_DefaultEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.WWWForm.AddField
void UnityEngine::WWWForm::AddField(::StringW fieldName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldName, value);
}
// Autogenerated method: UnityEngine.WWWForm.AddField
void UnityEngine::WWWForm::AddField(::StringW fieldName, ::StringW value, ::System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldName, value, e);
}
// Autogenerated method: UnityEngine.WWWForm.AddBinaryData
void UnityEngine::WWWForm::AddBinaryData(::StringW fieldName, ::ArrayW<uint8_t> contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::AddBinaryData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinaryData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldName, contents);
}
// Autogenerated method: UnityEngine.WWWForm.AddBinaryData
void UnityEngine::WWWForm::AddBinaryData(::StringW fieldName, ::ArrayW<uint8_t> contents, ::StringW fileName, ::StringW mimeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::AddBinaryData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBinaryData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(contents), ::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(mimeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldName, contents, fileName, mimeType);
}
// Autogenerated method: UnityEngine.WWWForm.get_headers
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* UnityEngine::WWWForm::get_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::get_headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWWForm.get_data
::ArrayW<uint8_t> UnityEngine::WWWForm::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWWTranscoder
#include "UnityEngine/WWWTranscoder.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] ucHexChars
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_ucHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_ucHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "ucHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ucHexChars
void UnityEngine::WWWTranscoder::_set_ucHexChars(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_ucHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "ucHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] lcHexChars
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_lcHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_lcHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "lcHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] lcHexChars
void UnityEngine::WWWTranscoder::_set_lcHexChars(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_lcHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "lcHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte urlEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_urlEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "urlEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte urlEscapeChar
void UnityEngine::WWWTranscoder::_set_urlEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_urlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "urlSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlSpace
void UnityEngine::WWWTranscoder::_set_urlSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dataSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_dataSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_dataSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "dataSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dataSpace
void UnityEngine::WWWTranscoder::_set_dataSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_dataSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "dataSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlForbidden
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_urlForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "urlForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlForbidden
void UnityEngine::WWWTranscoder::_set_urlForbidden(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlForbidden", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte qpEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_qpEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "qpEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte qpEscapeChar
void UnityEngine::WWWTranscoder::_set_qpEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_qpSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "qpSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpSpace
void UnityEngine::WWWTranscoder::_set_qpSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpForbidden
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_qpForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "qpForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpForbidden
void UnityEngine::WWWTranscoder::_set_qpForbidden(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpForbidden", value));
}
// Autogenerated method: UnityEngine.WWWTranscoder.Hex2Byte
uint8_t UnityEngine::WWWTranscoder::Hex2Byte(::ArrayW<uint8_t> b, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Hex2Byte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Hex2Byte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, offset);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Byte2Hex
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Byte2Hex(uint8_t b, ::ArrayW<uint8_t> hexChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Byte2Hex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Byte2Hex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(hexChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, hexChars);
}
// Autogenerated method: UnityEngine.WWWTranscoder.DataEncode
::StringW UnityEngine::WWWTranscoder::DataEncode(::StringW toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::DataEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "DataEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.DataEncode
::StringW UnityEngine::WWWTranscoder::DataEncode(::StringW toEncode, ::System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::DataEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "DataEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode, e);
}
// Autogenerated method: UnityEngine.WWWTranscoder.DataEncode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::DataEncode(::ArrayW<uint8_t> toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::DataEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "DataEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.QPEncode
::StringW UnityEngine::WWWTranscoder::QPEncode(::StringW toEncode, ::System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::QPEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "QPEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode, e);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Encode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Encode(::ArrayW<uint8_t> input, uint8_t escapeChar, ::ArrayW<uint8_t> space, ::ArrayW<uint8_t> forbidden, bool uppercase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(escapeChar), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(forbidden), ::il2cpp_utils::ExtractType(uppercase)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, escapeChar, space, forbidden, uppercase);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteArrayContains
bool UnityEngine::WWWTranscoder::ByteArrayContains(::ArrayW<uint8_t> array, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::ByteArrayContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteArrayContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, b);
}
// Autogenerated method: UnityEngine.WWWTranscoder.URLDecode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::URLDecode(::ArrayW<uint8_t> toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::URLDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "URLDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteSubArrayEquals
bool UnityEngine::WWWTranscoder::ByteSubArrayEquals(::ArrayW<uint8_t> array, int index, ::ArrayW<uint8_t> comperand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::ByteSubArrayEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteSubArrayEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(comperand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, comperand);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Decode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Decode(::ArrayW<uint8_t> input, uint8_t escapeChar, ::ArrayW<uint8_t> space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(escapeChar), ::il2cpp_utils::ExtractType(space)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, escapeChar, space);
}
// Autogenerated method: UnityEngine.WWWTranscoder.SevenBitClean
bool UnityEngine::WWWTranscoder::SevenBitClean(::StringW s, ::System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::SevenBitClean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "SevenBitClean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, e);
}
// Autogenerated method: UnityEngine.WWWTranscoder.SevenBitClean
bool UnityEngine::WWWTranscoder::SevenBitClean(::ArrayW<uint8_t> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::SevenBitClean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "SevenBitClean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: UnityEngine.WWWTranscoder..cctor
void UnityEngine::WWWTranscoder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.WebRequestUtils
#include "UnityEngineInternal/WebRequestUtils.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex domainRegex
::System::Text::RegularExpressions::Regex* UnityEngineInternal::WebRequestUtils::_get_domainRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::_get_domainRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("UnityEngineInternal", "WebRequestUtils", "domainRegex"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex domainRegex
void UnityEngineInternal::WebRequestUtils::_set_domainRegex(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::_set_domainRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "WebRequestUtils", "domainRegex", value));
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.RedirectTo
::StringW UnityEngineInternal::WebRequestUtils::RedirectTo(::StringW baseUri, ::StringW redirectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::RedirectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "RedirectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(redirectUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, redirectUri);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeInitialUrl
::StringW UnityEngineInternal::WebRequestUtils::MakeInitialUrl(::StringW targetUrl, ::StringW localUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::MakeInitialUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeInitialUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUrl), ::il2cpp_utils::ExtractType(localUrl)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetUrl, localUrl);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeUriString
::StringW UnityEngineInternal::WebRequestUtils::MakeUriString(::System::Uri* targetUri, ::StringW targetUrl, bool prependProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::MakeUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractType(targetUrl), ::il2cpp_utils::ExtractType(prependProtocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetUri, targetUrl, prependProtocol);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.URLDecode
::StringW UnityEngineInternal::WebRequestUtils::URLDecode(::StringW encoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::URLDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "URLDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoded)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoded);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils..cctor
void UnityEngineInternal::WebRequestUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::CertificateHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Release
void UnityEngine::Networking::CertificateHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificate
bool UnityEngine::Networking::CertificateHandler::ValidateCertificate(::ArrayW<uint8_t> certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::CertificateHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificateNative
bool UnityEngine::Networking::CertificateHandler::ValidateCertificateNative(::ArrayW<uint8_t> certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::ValidateCertificateNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Dispose
void UnityEngine::Networking::CertificateHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::CertificateHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Finalize
void UnityEngine::Networking::CertificateHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::DownloadHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Release
void UnityEngine::Networking::DownloadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Dispose
void UnityEngine::Networking::DownloadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.get_data
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandler::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.get_text
::StringW UnityEngine::Networking::DownloadHandler::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandler::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetText
::StringW UnityEngine::Networking::DownloadHandler::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetTextEncoder
::System::Text::Encoding* UnityEngine::Networking::DownloadHandler::GetTextEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetTextEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetContentType
::StringW UnityEngine::Networking::DownloadHandler::GetContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.InternalGetByteArray
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandler::InternalGetByteArray(::UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::InternalGetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandler", "InternalGetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dh)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Finalize
void UnityEngine::Networking::DownloadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandlerBuffer
#include "UnityEngine/Networking/DownloadHandlerBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.Create
::System::IntPtr UnityEngine::Networking::DownloadHandlerBuffer::Create(::UnityEngine::Networking::DownloadHandlerBuffer* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerBuffer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalCreateBuffer
void UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalGetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerBuffer::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::GetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::DownloadHandler*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::UploadHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Release
void UnityEngine::Networking::UploadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Dispose
void UnityEngine::Networking::UploadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::UploadHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.set_contentType
void UnityEngine::Networking::UploadHandler::set_contentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::set_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.SetContentType
void UnityEngine::Networking::UploadHandler::SetContentType(::StringW newContentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::SetContentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Networking::UploadHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContentType);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.InternalSetContentType
void UnityEngine::Networking::UploadHandler::InternalSetContentType(::StringW newContentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::InternalSetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContentType);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Finalize
void UnityEngine::Networking::UploadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UploadHandlerRaw
#include "UnityEngine/Networking/UploadHandlerRaw.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UploadHandlerRaw.Create
::System::IntPtr UnityEngine::Networking::UploadHandlerRaw::Create(::UnityEngine::Networking::UploadHandlerRaw* self, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandlerRaw::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UploadHandlerRaw", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWW
#include "UnityEngine/WWW.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest _uwr
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& UnityEngine::WWW::dyn__uwr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::dyn__uwr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uwr"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WWW.get_bytes
::ArrayW<uint8_t> UnityEngine::WWW::get_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_error
::StringW UnityEngine::WWW::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_isDone
bool UnityEngine::WWW::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_progress
float UnityEngine::WWW::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_text
::StringW UnityEngine::WWW::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.CreateTextureFromDownloadedData
::UnityEngine::Texture2D* UnityEngine::WWW::CreateTextureFromDownloadedData(bool markNonReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::CreateTextureFromDownloadedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextureFromDownloadedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markNonReadable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, markNonReadable);
}
// Autogenerated method: UnityEngine.WWW.get_texture
::UnityEngine::Texture2D* UnityEngine::WWW::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_url
::StringW UnityEngine::WWW::get_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.Dispose
void UnityEngine::WWW::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::WWW*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.WaitUntilDoneIfPossible
bool UnityEngine::WWW::WaitUntilDoneIfPossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::WaitUntilDoneIfPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilDoneIfPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WWW.get_keepWaiting
bool UnityEngine::WWW::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWW::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CustomYieldInstruction*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Video.VideoClipPlayable
#include "UnityEngine/Experimental/Video/VideoClipPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Experimental::Video::VideoClipPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.Video.VideoClipPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Experimental::Video::VideoClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::Video::VideoClipPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.Video.VideoClipPlayable.Equals
bool UnityEngine::Experimental::Video::VideoClipPlayable::Equals(::UnityEngine::Experimental::Video::VideoClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::Video::VideoClipPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoRenderMode
#include "UnityEngine/Video/VideoRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode CameraFarPlane
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_CameraFarPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_CameraFarPlane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "CameraFarPlane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode CameraFarPlane
void UnityEngine::Video::VideoRenderMode::_set_CameraFarPlane(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_CameraFarPlane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "CameraFarPlane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode CameraNearPlane
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_CameraNearPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_CameraNearPlane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "CameraNearPlane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode CameraNearPlane
void UnityEngine::Video::VideoRenderMode::_set_CameraNearPlane(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_CameraNearPlane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "CameraNearPlane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode RenderTexture
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_RenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_RenderTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "RenderTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode RenderTexture
void UnityEngine::Video::VideoRenderMode::_set_RenderTexture(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_RenderTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "RenderTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode MaterialOverride
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_MaterialOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_MaterialOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "MaterialOverride"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode MaterialOverride
void UnityEngine::Video::VideoRenderMode::_set_MaterialOverride(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_MaterialOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "MaterialOverride", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode APIOnly
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode APIOnly
void UnityEngine::Video::VideoRenderMode::_set_APIOnly(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoRenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.Video3DLayout
#include "UnityEngine/Video/Video3DLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout No3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_No3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_No3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "No3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout No3D
void UnityEngine::Video::Video3DLayout::_set_No3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_No3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "No3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_SideBySide3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_SideBySide3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "SideBySide3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
void UnityEngine::Video::Video3DLayout::_set_SideBySide3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_SideBySide3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "SideBySide3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_OverUnder3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_OverUnder3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "OverUnder3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
void UnityEngine::Video::Video3DLayout::_set_OverUnder3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_OverUnder3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "OverUnder3D", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::Video3DLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAspectRatio
#include "UnityEngine/Video/VideoAspectRatio.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_NoScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_NoScaling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "NoScaling"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
void UnityEngine::Video::VideoAspectRatio::_set_NoScaling(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_NoScaling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "NoScaling", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitVertically");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitVertically"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
void UnityEngine::Video::VideoAspectRatio::_set_FitVertically(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitVertically");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitVertically", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
void UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitInside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitInside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitInside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitInside
void UnityEngine::Video::VideoAspectRatio::_set_FitInside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitInside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitInside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitOutside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitOutside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitOutside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
void UnityEngine::Video::VideoAspectRatio::_set_FitOutside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitOutside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitOutside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio Stretch
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_Stretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_Stretch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "Stretch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio Stretch
void UnityEngine::Video::VideoAspectRatio::_set_Stretch(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_Stretch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "Stretch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAspectRatio::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeSource
#include "UnityEngine/Video/VideoTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
void UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_GameTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_GameTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "GameTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
void UnityEngine::Video::VideoTimeSource::_set_GameTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_GameTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "GameTimeSource", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeReference
#include "UnityEngine/Video/VideoTimeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference Freerun
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_Freerun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_Freerun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "Freerun"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference Freerun
void UnityEngine::Video::VideoTimeReference::_set_Freerun(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_Freerun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "Freerun", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference InternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_InternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_InternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "InternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference InternalTime
void UnityEngine::Video::VideoTimeReference::_set_InternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_InternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "InternalTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_ExternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_ExternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "ExternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
void UnityEngine::Video::VideoTimeReference::_set_ExternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_ExternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "ExternalTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeReference::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoSource
#include "UnityEngine/Video/VideoSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource VideoClip
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_VideoClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_VideoClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "VideoClip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource VideoClip
void UnityEngine::Video::VideoSource::_set_VideoClip(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_VideoClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "VideoClip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource Url
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_Url");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "Url"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource Url
void UnityEngine::Video::VideoSource::_set_Url(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_Url");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "Url", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAudioOutputMode
#include "UnityEngine/Video/VideoAudioOutputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode None
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode None
void UnityEngine::Video::VideoAudioOutputMode::_set_None(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
void UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
void UnityEngine::Video::VideoAudioOutputMode::_set_Direct(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "Direct", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
void UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAudioOutputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: UnityEngine.Video.VideoPlayer/EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler prepareCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_prepareCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_prepareCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prepareCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler loopPointReached
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_loopPointReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_loopPointReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopPointReached"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler started
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler frameDropped
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameDropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameDropped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDropped"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/ErrorEventHandler errorReceived
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::ErrorEventHandler*& UnityEngine::Video::VideoPlayer::dyn_errorReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_errorReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorReceived"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::ErrorEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/EventHandler seekCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_seekCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_seekCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/TimeEventHandler clockResyncOccurred
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::TimeEventHandler*& UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockResyncOccurred"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::TimeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/FrameReadyEventHandler frameReady
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameReady"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_url
void UnityEngine::Video::VideoPlayer::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_texture
::UnityEngine::Texture* UnityEngine::Video::VideoPlayer::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Prepare
void UnityEngine::Video::VideoPlayer::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Play
void UnityEngine::Video::VideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Pause
void UnityEngine::Video::VideoPlayer::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Stop
void UnityEngine::Video::VideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_isPlaying
bool UnityEngine::Video::VideoPlayer::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_time
double UnityEngine::Video::VideoPlayer::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_time
void UnityEngine::Video::VideoPlayer::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_playbackSpeed
void UnityEngine::Video::VideoPlayer::set_playbackSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_playbackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playbackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_isLooping
void UnityEngine::Video::VideoPlayer::set_isLooping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_isLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_frameCount
uint64_t UnityEngine::Video::VideoPlayer::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_frameRate
float UnityEngine::Video::VideoPlayer::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokePrepareCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokePrepareCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameReadyCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameReadyCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeLoopPointReachedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeLoopPointReachedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeStartedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeStartedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameDroppedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameDroppedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeErrorReceivedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal(::UnityEngine::Video::VideoPlayer* source, ::StringW errorStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeErrorReceivedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(errorStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, errorStr);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeSeekCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeSeekCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeClockResyncOccurredCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeClockResyncOccurredCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, seconds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/EventHandler.Invoke
void UnityEngine::Video::VideoPlayer::EventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/EventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/EventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::EventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/ErrorEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, message);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/ErrorEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, message, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/ErrorEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::ErrorEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, frameIdx, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/FrameReadyEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/TimeEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, seconds);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/TimeEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, double seconds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, seconds, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/TimeEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Video::VideoPlayer::TimeEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: UnityEngine.XR.XRSettings
#include "UnityEngine/XR/XRSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRSettings.get_enabled
bool UnityEngine::XR::XRSettings::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_showDeviceView
bool UnityEngine::XR::XRSettings::get_showDeviceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_showDeviceView
void UnityEngine::XR::XRSettings::set_showDeviceView(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureResolutionScale
float UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_eyeTextureResolutionScale
void UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureWidth
int UnityEngine::XR::XRSettings::get_eyeTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureHeight
int UnityEngine::XR::XRSettings::get_eyeTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureDesc
::UnityEngine::RenderTextureDescriptor UnityEngine::XR::XRSettings::get_eyeTextureDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTextureDescriptor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScale
float UnityEngine::XR::XRSettings::get_renderViewportScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScaleInternal
float UnityEngine::XR::XRSettings::get_renderViewportScaleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_loadedDeviceName
::StringW UnityEngine::XR::XRSettings::get_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_loadedDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_loadedDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureDesc_Injected
void UnityEngine::XR::XRSettings::get_eyeTextureDesc_Injected(ByRef<::UnityEngine::RenderTextureDescriptor> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureDesc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureDesc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RenderTextureDescriptor&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDevice
#include "UnityEngine/XR/XRDevice.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xAA9D54
// [CompilerGeneratedAttribute] Offset: 0xAA9D54
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deviceLoaded
::System::Action_1<::StringW>* UnityEngine::XR::XRDevice::_get_deviceLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_get_deviceLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("UnityEngine.XR", "XRDevice", "deviceLoaded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deviceLoaded
void UnityEngine::XR::XRDevice::_set_deviceLoaded(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_set_deviceLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDevice", "deviceLoaded", value));
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_isPresent
bool UnityEngine::XR::XRDevice::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_isPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.GetNativePtr
::System::IntPtr UnityEngine::XR::XRDevice::GetNativePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::GetNativePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "GetNativePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.InvokeDeviceLoaded
void UnityEngine::XR::XRDevice::InvokeDeviceLoaded(::StringW loadedDeviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::InvokeDeviceLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "InvokeDeviceLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedDeviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadedDeviceName);
}
// Autogenerated method: UnityEngine.XR.XRDevice..cctor
void UnityEngine::XR::XRDevice::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary
#include "UnityEngine/Experimental/XR/Boundary.hpp"
// Including type: UnityEngine.Experimental.XR.Boundary/Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensions
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensions(ByRef<::UnityEngine::Vector3> dimensionsOut, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dimensionsOut), boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensionsInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal(ByRef<::UnityEngine::Vector3> dimensionsOut, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensionsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dimensionsOut), boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_visible
bool UnityEngine::Experimental::XR::Boundary::get_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::get_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.set_visible
void UnityEngine::Experimental::XR::Boundary::set_visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::set_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "set_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_configured
bool UnityEngine::Experimental::XR::Boundary::get_configured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::get_configured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_configured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometry
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometry(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* geometry, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometryScriptingInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* geometry, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometryScriptingInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary/Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/Type PlayArea
::UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/Type PlayArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea(::UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/Type TrackedArea
::UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/Type TrackedArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea(::UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::Boundary::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WSA.WorldAnchor
#include "UnityEngine/XR/WSA/WorldAnchor.hpp"
// Including type: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate OnTrackingChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate*& UnityEngine::XR::WSA::WorldAnchor::dyn_OnTrackingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::dyn_OnTrackingChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTrackingChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor.Internal_TriggerEventOnTrackingLost
void UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.WSA", "WorldAnchor", "Internal_TriggerEventOnTrackingLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldAnchor), ::il2cpp_utils::ExtractType(located)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, worldAnchor, located);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.Invoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldAnchor, located);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.BeginInvoke
::System::IAsyncResult* UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, worldAnchor, located, callback, object);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/OnTrackingChangedDelegate.EndInvoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.XR.TrackableId
#include "UnityEngine/Experimental/XR/TrackableId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.XR.TrackableId s_InvalidId
::UnityEngine::Experimental::XR::TrackableId UnityEngine::Experimental::XR::TrackableId::_get_s_InvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::_get_s_InvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::TrackableId>("UnityEngine.Experimental.XR", "TrackableId", "s_InvalidId"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.XR.TrackableId s_InvalidId
void UnityEngine::Experimental::XR::TrackableId::_set_s_InvalidId(::UnityEngine::Experimental::XR::TrackableId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::_set_s_InvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "TrackableId", "s_InvalidId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId1
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::Experimental::XR::TrackableId::dyn_m_SubId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::dyn_m_SubId1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId2
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::Experimental::XR::TrackableId::dyn_m_SubId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::dyn_m_SubId2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId2"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.TrackableId.Equals
bool UnityEngine::Experimental::XR::TrackableId::Equals(::UnityEngine::Experimental::XR::TrackableId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::XR::TrackableId), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Experimental.XR.TrackableId..cctor
void UnityEngine::Experimental::XR::TrackableId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "TrackableId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.TrackableId.ToString
::StringW UnityEngine::Experimental::XR::TrackableId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.TrackableId.GetHashCode
int UnityEngine::Experimental::XR::TrackableId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.TrackableId.Equals
bool UnityEngine::Experimental::XR::TrackableId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackableId::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.ISubsystemDescriptorImpl
#include "UnityEngine/Experimental/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::Experimental::ISubsystemDescriptorImpl::set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::ISubsystemDescriptorImpl::set_ptr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::ISubsystemDescriptorImpl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.IntegratedSubsystemDescriptor
#include "UnityEngine/Experimental/IntegratedSubsystemDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Experimental::IntegratedSubsystemDescriptor::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::IntegratedSubsystemDescriptor::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.IntegratedSubsystemDescriptor.UnityEngine.Experimental.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::Experimental::IntegratedSubsystemDescriptor::UnityEngine_Experimental_ISubsystemDescriptorImpl_set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::IntegratedSubsystemDescriptor::UnityEngine.Experimental.ISubsystemDescriptorImpl.set_ptr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Experimental::IntegratedSubsystemDescriptor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.SubsystemDescriptor
#include "UnityEngine/Experimental/SubsystemDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Experimental::SubsystemDescriptor::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::SubsystemDescriptor::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.SubsystemDescriptor.get_id
::StringW UnityEngine::Experimental::SubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::SubsystemDescriptor::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Internal_SubsystemInstances
#include "UnityEngine/Experimental/Internal_SubsystemInstances.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Experimental.ISubsystem
#include "UnityEngine/Experimental/ISubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Experimental.IntegratedSubsystem
#include "UnityEngine/Experimental/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystem> s_IntegratedSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>* UnityEngine::Experimental::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>*>("UnityEngine.Experimental", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystem> s_IntegratedSubsystemInstances
void UnityEngine::Experimental::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystem> s_StandaloneSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>* UnityEngine::Experimental::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>*>("UnityEngine.Experimental", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystem> s_StandaloneSubsystemInstances
void UnityEngine::Experimental::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances", value));
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemInstances.Internal_InitializeManagedInstance
void UnityEngine::Experimental::Internal_SubsystemInstances::Internal_InitializeManagedInstance(::System::IntPtr ptr, ::UnityEngine::Experimental::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::Internal_InitializeManagedInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemInstances", "Internal_InitializeManagedInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, inst);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemInstances.Internal_ClearManagedInstances
void UnityEngine::Experimental::Internal_SubsystemInstances::Internal_ClearManagedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::Internal_ClearManagedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemInstances", "Internal_ClearManagedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemInstances.Internal_RemoveInstanceByPtr
void UnityEngine::Experimental::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemInstances", "Internal_RemoveInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemInstances..cctor
void UnityEngine::Experimental::Internal_SubsystemInstances::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemInstances::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemInstances", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.ISubsystemDescriptor
#include "UnityEngine/Experimental/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.SubsystemDescriptor
#include "UnityEngine/Experimental/SubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.Internal_SubsystemDescriptors
#include "UnityEngine/Experimental/Internal_SubsystemDescriptors.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Experimental.ISubsystemDescriptorImpl
#include "UnityEngine/Experimental/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptorImpl*>* UnityEngine::Experimental::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptorImpl*>*>("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
void UnityEngine::Experimental::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptorImpl*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptor*>* UnityEngine::Experimental::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptor*>*>("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.Experimental.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
void UnityEngine::Experimental::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::Experimental::ISubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors", value));
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemDescriptors.Internal_AddDescriptor
bool UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_AddDescriptor(::UnityEngine::Experimental::SubsystemDescriptor* descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_AddDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "Internal_AddDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemDescriptors.Internal_InitializeManagedDescriptor
void UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor(::System::IntPtr ptr, ::UnityEngine::Experimental::ISubsystemDescriptorImpl* desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "Internal_InitializeManagedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, desc);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemDescriptors.Internal_ClearManagedDescriptors
void UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemDescriptors", "Internal_ClearManagedDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.Internal_SubsystemDescriptors..cctor
void UnityEngine::Experimental::Internal_SubsystemDescriptors::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Internal_SubsystemDescriptors::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "Internal_SubsystemDescriptors", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.SubsystemManager
#include "UnityEngine/Experimental/SubsystemManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.SubsystemManager..cctor
void UnityEngine::Experimental::SubsystemManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::SubsystemManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "SubsystemManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.SubsystemManager.ReportSingleSubsystemAnalytics
void UnityEngine::Experimental::SubsystemManager::ReportSingleSubsystemAnalytics(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::SubsystemManager::ReportSingleSubsystemAnalytics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "SubsystemManager", "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.Experimental.SubsystemManager.StaticConstructScriptingClassMap
void UnityEngine::Experimental::SubsystemManager::StaticConstructScriptingClassMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::SubsystemManager::StaticConstructScriptingClassMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental", "SubsystemManager", "StaticConstructScriptingClassMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.ISubsystemDescriptor
#include "UnityEngine/Experimental/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.IntegratedSubsystem
#include "UnityEngine/Experimental/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Experimental::IntegratedSubsystem::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::IntegratedSubsystem::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Experimental.ISubsystemDescriptor m_subsystemDescriptor
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::ISubsystemDescriptor*& UnityEngine::Experimental::IntegratedSubsystem::dyn_m_subsystemDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::IntegratedSubsystem::dyn_m_subsystemDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subsystemDescriptor"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::ISubsystemDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.IntegratedSubsystem.SetHandle
void UnityEngine::Experimental::IntegratedSubsystem::SetHandle(::UnityEngine::Experimental::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::IntegratedSubsystem::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking
#include "UnityEngine/XR/InputTracking.hpp"
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xA8F4B8
// [CompilerGeneratedAttribute] Offset: 0xA8F4B8
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
void UnityEngine::XR::InputTracking::_set_trackingAcquired(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xA8F4F4
// [DebuggerBrowsableAttribute] Offset: 0xA8F4F4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
void UnityEngine::XR::InputTracking::_set_trackingLost(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingLost", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xA8F530
// [CompilerGeneratedAttribute] Offset: 0xA8F530
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeAdded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
void UnityEngine::XR::InputTracking::_set_nodeAdded(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeAdded", value));
}
// [CompilerGeneratedAttribute] Offset: 0xA8F56C
// [DebuggerBrowsableAttribute] Offset: 0xA8F56C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
void UnityEngine::XR::InputTracking::_set_nodeRemoved(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeRemoved", value));
}
// Autogenerated method: UnityEngine.XR.InputTracking.InvokeTrackingEvent
void UnityEngine::XR::InputTracking::InvokeTrackingEvent(::UnityEngine::XR::InputTracking::TrackingStateEventType eventType, ::UnityEngine::XR::XRNode nodeType, int64_t uniqueID, bool tracked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::InvokeTrackingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "InvokeTrackingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(uniqueID), ::il2cpp_utils::ExtractType(tracked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventType, nodeType, uniqueID, tracked);
}
// Autogenerated method: UnityEngine.XR.InputTracking.Recenter
void UnityEngine::XR::InputTracking::Recenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::Recenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "Recenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates
void UnityEngine::XR::InputTracking::GetNodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates_Internal
void UnityEngine::XR::InputTracking::GetNodeStates_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking..cctor
void UnityEngine::XR::InputTracking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking/TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeAdded
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType NodeRemoved
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingAcquired
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/TrackingStateEventType TrackingLost
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftEye
void UnityEngine::XR::XRNode::_set_LeftEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightEye
void UnityEngine::XR::XRNode::_set_RightEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode CenterEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_CenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_CenterEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "CenterEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode CenterEye
void UnityEngine::XR::XRNode::_set_CenterEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_CenterEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "CenterEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode Head
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode Head
void UnityEngine::XR::XRNode::_set_Head(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftHand
void UnityEngine::XR::XRNode::_set_LeftHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightHand
void UnityEngine::XR::XRNode::_set_RightHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode GameController
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_GameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_GameController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "GameController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode GameController
void UnityEngine::XR::XRNode::_set_GameController(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_GameController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "GameController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode TrackingReference
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode TrackingReference
void UnityEngine::XR::XRNode::_set_TrackingReference(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode HardwareTracker
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_HardwareTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_HardwareTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "HardwareTracker"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode HardwareTracker
void UnityEngine::XR::XRNode::_set_HardwareTracker(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_HardwareTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "HardwareTracker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.AvailableTrackingData
#include "UnityEngine/XR/AvailableTrackingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData None
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData None
void UnityEngine::XR::AvailableTrackingData::_set_None(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
void UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::AvailableTrackingData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::XRNodeState::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.AvailableTrackingData m_AvailableFields
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::AvailableTrackingData& UnityEngine::XR::XRNodeState::dyn_m_AvailableFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AvailableFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AvailableFields"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::AvailableTrackingData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::XRNodeState::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Acceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Acceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularAcceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularAcceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tracked
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNodeState::dyn_m_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Tracked");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_UniqueID
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::XRNodeState::dyn_m_UniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_UniqueID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UniqueID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
::UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::get_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_tracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rotation));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(ByRef<::UnityEngine::Vector3> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(velocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularVelocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(ByRef<::UnityEngine::Vector3> acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(acceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(ByRef<::UnityEngine::Vector3> angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularAcceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Vector3 inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Vector3> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Quaternion inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Quaternion> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRCameraSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRCameraSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRCameraSubsystem
#include "UnityEngine/Experimental/XR/XRCameraSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.FrameReceivedEventArgs> FrameReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::FrameReceivedEventArgs>*& UnityEngine::Experimental::XR::XRCameraSubsystem::dyn_FrameReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRCameraSubsystem::dyn_FrameReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::FrameReceivedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRCameraSubsystem.InvokeFrameReceivedEvent
void UnityEngine::Experimental::XR::XRCameraSubsystem::InvokeFrameReceivedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRCameraSubsystem::InvokeFrameReceivedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeFrameReceivedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRCameraSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRCameraSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRCameraSubsystem
#include "UnityEngine/Experimental/XR/XRCameraSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRDepthSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRDepthSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRDepthSubsystem
#include "UnityEngine/Experimental/XR/XRDepthSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.PointCloudUpdatedEventArgs> PointCloudUpdated
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>*& UnityEngine::Experimental::XR::XRDepthSubsystem::dyn_PointCloudUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRDepthSubsystem::dyn_PointCloudUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointCloudUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRDepthSubsystem.InvokePointCloudUpdatedEvent
void UnityEngine::Experimental::XR::XRDepthSubsystem::InvokePointCloudUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRDepthSubsystem::InvokePointCloudUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePointCloudUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRDepthSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRDepthSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRDepthSubsystem
#include "UnityEngine/Experimental/XR/XRDepthSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.MeshGenerationStatus
#include "UnityEngine/Experimental/XR/MeshGenerationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus Success
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshGenerationStatus>("UnityEngine.Experimental.XR", "MeshGenerationStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus Success
void UnityEngine::Experimental::XR::MeshGenerationStatus::_set_Success(::UnityEngine::Experimental::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshGenerationStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus InvalidMeshId
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationStatus::_get_InvalidMeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_get_InvalidMeshId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshGenerationStatus>("UnityEngine.Experimental.XR", "MeshGenerationStatus", "InvalidMeshId"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus InvalidMeshId
void UnityEngine::Experimental::XR::MeshGenerationStatus::_set_InvalidMeshId(::UnityEngine::Experimental::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_set_InvalidMeshId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshGenerationStatus", "InvalidMeshId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus GenerationAlreadyInProgress
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshGenerationStatus>("UnityEngine.Experimental.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus GenerationAlreadyInProgress
void UnityEngine::Experimental::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress(::UnityEngine::Experimental::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus Canceled
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshGenerationStatus>("UnityEngine.Experimental.XR", "MeshGenerationStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus Canceled
void UnityEngine::Experimental::XR::MeshGenerationStatus::_set_Canceled(::UnityEngine::Experimental::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshGenerationStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus UnknownError
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshGenerationStatus>("UnityEngine.Experimental.XR", "MeshGenerationStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshGenerationStatus UnknownError
void UnityEngine::Experimental::XR::MeshGenerationStatus::_set_UnknownError(::UnityEngine::Experimental::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshGenerationStatus", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::MeshGenerationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.HashCodeHelper
#include "UnityEngine/Experimental/XR/HashCodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.HashCodeHelper.Combine
int UnityEngine::Experimental::XR::HashCodeHelper::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.XR.MeshGenerationResult
#include "UnityEngine/Experimental/XR/MeshGenerationResult.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Experimental.XR.TrackableId <MeshId>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::TrackableId& UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshId>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::TrackableId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Mesh <Mesh>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Mesh>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.MeshCollider <MeshCollider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Experimental.XR.MeshGenerationStatus <Status>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::MeshGenerationStatus& UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Status$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Status>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::MeshGenerationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Experimental.XR.MeshVertexAttributes <Attributes>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::MeshVertexAttributes& UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attributes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::MeshVertexAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.get_MeshId
::UnityEngine::Experimental::XR::TrackableId UnityEngine::Experimental::XR::MeshGenerationResult::get_MeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::get_MeshId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::TrackableId, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.get_Mesh
::UnityEngine::Mesh* UnityEngine::Experimental::XR::MeshGenerationResult::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.get_MeshCollider
::UnityEngine::MeshCollider* UnityEngine::Experimental::XR::MeshGenerationResult::get_MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::get_MeshCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshCollider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.get_Status
::UnityEngine::Experimental::XR::MeshGenerationStatus UnityEngine::Experimental::XR::MeshGenerationResult::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::MeshGenerationStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.get_Attributes
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshGenerationResult::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::MeshVertexAttributes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.Equals
bool UnityEngine::Experimental::XR::MeshGenerationResult::Equals(::UnityEngine::Experimental::XR::MeshGenerationResult other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::XR::MeshGenerationResult), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.Equals
bool UnityEngine::Experimental::XR::MeshGenerationResult::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Experimental.XR.MeshGenerationResult.GetHashCode
int UnityEngine::Experimental::XR::MeshGenerationResult::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshGenerationResult::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.MeshVertexAttributes
#include "UnityEngine/Experimental/XR/MeshVertexAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes None
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshVertexAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshVertexAttributes>("UnityEngine.Experimental.XR", "MeshVertexAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes None
void UnityEngine::Experimental::XR::MeshVertexAttributes::_set_None(::UnityEngine::Experimental::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshVertexAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Normals
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshVertexAttributes>("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Normals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Normals
void UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Normals(::UnityEngine::Experimental::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Normals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Tangents
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Tangents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshVertexAttributes>("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Tangents"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Tangents
void UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Tangents(::UnityEngine::Experimental::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Tangents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Tangents", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes UVs
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshVertexAttributes::_get_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_get_UVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshVertexAttributes>("UnityEngine.Experimental.XR", "MeshVertexAttributes", "UVs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes UVs
void UnityEngine::Experimental::XR::MeshVertexAttributes::_set_UVs(::UnityEngine::Experimental::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_set_UVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshVertexAttributes", "UVs", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Colors
::UnityEngine::Experimental::XR::MeshVertexAttributes UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_get_Colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::MeshVertexAttributes>("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Colors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.MeshVertexAttributes Colors
void UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Colors(::UnityEngine::Experimental::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::_set_Colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "MeshVertexAttributes", "Colors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::MeshVertexAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::MeshVertexAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRMeshSubsystem
#include "UnityEngine/Experimental/XR/XRMeshSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.XRMeshSubsystem.InvokeMeshReadyDelegate
void UnityEngine::Experimental::XR::XRMeshSubsystem::InvokeMeshReadyDelegate(::UnityEngine::Experimental::XR::MeshGenerationResult result, ::System::Action_1<::UnityEngine::Experimental::XR::MeshGenerationResult>* onMeshGenerationComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRMeshSubsystem::InvokeMeshReadyDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMeshReadyDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(onMeshGenerationComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, onMeshGenerationComplete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRMeshSubsystem
#include "UnityEngine/Experimental/XR/XRMeshSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.PlaneAlignment
#include "UnityEngine/Experimental/XR/PlaneAlignment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.PlaneAlignment Horizontal
::UnityEngine::Experimental::XR::PlaneAlignment UnityEngine::Experimental::XR::PlaneAlignment::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::PlaneAlignment>("UnityEngine.Experimental.XR", "PlaneAlignment", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.PlaneAlignment Horizontal
void UnityEngine::Experimental::XR::PlaneAlignment::_set_Horizontal(::UnityEngine::Experimental::XR::PlaneAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "PlaneAlignment", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.PlaneAlignment Vertical
::UnityEngine::Experimental::XR::PlaneAlignment UnityEngine::Experimental::XR::PlaneAlignment::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::PlaneAlignment>("UnityEngine.Experimental.XR", "PlaneAlignment", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.PlaneAlignment Vertical
void UnityEngine::Experimental::XR::PlaneAlignment::_set_Vertical(::UnityEngine::Experimental::XR::PlaneAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "PlaneAlignment", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.PlaneAlignment NonAxis
::UnityEngine::Experimental::XR::PlaneAlignment UnityEngine::Experimental::XR::PlaneAlignment::_get_NonAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_get_NonAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::PlaneAlignment>("UnityEngine.Experimental.XR", "PlaneAlignment", "NonAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.PlaneAlignment NonAxis
void UnityEngine::Experimental::XR::PlaneAlignment::_set_NonAxis(::UnityEngine::Experimental::XR::PlaneAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::_set_NonAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "PlaneAlignment", "NonAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::PlaneAlignment::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAlignment::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.PlaneAddedEventArgs
#include "UnityEngine/Experimental/XR/PlaneAddedEventArgs.hpp"
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystem
#include "UnityEngine/Experimental/XR/XRPlaneSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.XRPlaneSubsystem <PlaneSubsystem>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::XRPlaneSubsystem*& UnityEngine::Experimental::XR::PlaneAddedEventArgs::dyn_$PlaneSubsystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAddedEventArgs::dyn_$PlaneSubsystem$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaneSubsystem>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::XRPlaneSubsystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.BoundedPlane <Plane>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::BoundedPlane& UnityEngine::Experimental::XR::PlaneAddedEventArgs::dyn_$Plane$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAddedEventArgs::dyn_$Plane$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Plane>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::BoundedPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneAddedEventArgs.set_PlaneSubsystem
void UnityEngine::Experimental::XR::PlaneAddedEventArgs::set_PlaneSubsystem(::UnityEngine::Experimental::XR::XRPlaneSubsystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAddedEventArgs::set_PlaneSubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PlaneSubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneAddedEventArgs.set_Plane
void UnityEngine::Experimental::XR::PlaneAddedEventArgs::set_Plane(::UnityEngine::Experimental::XR::BoundedPlane value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneAddedEventArgs::set_Plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.PlaneUpdatedEventArgs
#include "UnityEngine/Experimental/XR/PlaneUpdatedEventArgs.hpp"
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystem
#include "UnityEngine/Experimental/XR/XRPlaneSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.XRPlaneSubsystem <PlaneSubsystem>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::XRPlaneSubsystem*& UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::dyn_$PlaneSubsystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::dyn_$PlaneSubsystem$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaneSubsystem>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::XRPlaneSubsystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.BoundedPlane <Plane>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::BoundedPlane& UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::dyn_$Plane$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::dyn_$Plane$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Plane>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::BoundedPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneUpdatedEventArgs.set_PlaneSubsystem
void UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::set_PlaneSubsystem(::UnityEngine::Experimental::XR::XRPlaneSubsystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::set_PlaneSubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PlaneSubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneUpdatedEventArgs.set_Plane
void UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::set_Plane(::UnityEngine::Experimental::XR::BoundedPlane value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs::set_Plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.PlaneRemovedEventArgs
#include "UnityEngine/Experimental/XR/PlaneRemovedEventArgs.hpp"
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystem
#include "UnityEngine/Experimental/XR/XRPlaneSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.XRPlaneSubsystem <PlaneSubsystem>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::XRPlaneSubsystem*& UnityEngine::Experimental::XR::PlaneRemovedEventArgs::dyn_$PlaneSubsystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneRemovedEventArgs::dyn_$PlaneSubsystem$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaneSubsystem>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::XRPlaneSubsystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.BoundedPlane <Plane>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::BoundedPlane& UnityEngine::Experimental::XR::PlaneRemovedEventArgs::dyn_$Plane$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneRemovedEventArgs::dyn_$Plane$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Plane>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::BoundedPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneRemovedEventArgs.set_PlaneSubsystem
void UnityEngine::Experimental::XR::PlaneRemovedEventArgs::set_PlaneSubsystem(::UnityEngine::Experimental::XR::XRPlaneSubsystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneRemovedEventArgs::set_PlaneSubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PlaneSubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.PlaneRemovedEventArgs.set_Plane
void UnityEngine::Experimental::XR::PlaneRemovedEventArgs::set_Plane(::UnityEngine::Experimental::XR::BoundedPlane value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::PlaneRemovedEventArgs::set_Plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRPlaneSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystem
#include "UnityEngine/Experimental/XR/XRPlaneSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Experimental.XR.BoundedPlane
#include "UnityEngine/Experimental/XR/BoundedPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.PlaneAddedEventArgs> PlaneAdded
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::PlaneAddedEventArgs>*& UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlaneAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::PlaneAddedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.PlaneUpdatedEventArgs> PlaneUpdated
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs>*& UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlaneUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::PlaneUpdatedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.PlaneRemovedEventArgs> PlaneRemoved
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::PlaneRemovedEventArgs>*& UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::dyn_PlaneRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlaneRemoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::PlaneRemovedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRPlaneSubsystem.InvokePlaneAddedEvent
void UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneAddedEvent(::UnityEngine::Experimental::XR::BoundedPlane plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePlaneAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRPlaneSubsystem.InvokePlaneUpdatedEvent
void UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneUpdatedEvent(::UnityEngine::Experimental::XR::BoundedPlane plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePlaneUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRPlaneSubsystem.InvokePlaneRemovedEvent
void UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneRemovedEvent(::UnityEngine::Experimental::XR::BoundedPlane removedPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRPlaneSubsystem::InvokePlaneRemovedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePlaneRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedPlane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedPlane);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRPlaneSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRPlaneSubsystem
#include "UnityEngine/Experimental/XR/XRPlaneSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.ReferencePointUpdatedEventArgs
#include "UnityEngine/Experimental/XR/ReferencePointUpdatedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.ReferencePoint <ReferencePoint>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::ReferencePoint& UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$ReferencePoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$ReferencePoint$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReferencePoint>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::ReferencePoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.TrackingState <PreviousTrackingState>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::TrackingState& UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$PreviousTrackingState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$PreviousTrackingState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreviousTrackingState>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::TrackingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Pose <PreviousPose>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Pose& UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$PreviousPose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::dyn_$PreviousPose$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreviousPose>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Pose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.ReferencePointUpdatedEventArgs.set_ReferencePoint
void UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_ReferencePoint(::UnityEngine::Experimental::XR::ReferencePoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_ReferencePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ReferencePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.ReferencePointUpdatedEventArgs.set_PreviousTrackingState
void UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_PreviousTrackingState(::UnityEngine::Experimental::XR::TrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_PreviousTrackingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PreviousTrackingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.ReferencePointUpdatedEventArgs.set_PreviousPose
void UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_PreviousPose(::UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs::set_PreviousPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_PreviousPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRReferencePointSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRReferencePointSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRReferencePointSubsystem
#include "UnityEngine/Experimental/XR/XRReferencePointSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.ReferencePointUpdatedEventArgs> ReferencePointUpdated
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs>*& UnityEngine::Experimental::XR::XRReferencePointSubsystem::dyn_ReferencePointUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRReferencePointSubsystem::dyn_ReferencePointUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReferencePointUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::ReferencePointUpdatedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRReferencePointSubsystem.InvokeReferencePointUpdatedEvent
void UnityEngine::Experimental::XR::XRReferencePointSubsystem::InvokeReferencePointUpdatedEvent(::UnityEngine::Experimental::XR::ReferencePoint updatedReferencePoint, ::UnityEngine::Experimental::XR::TrackingState previousTrackingState, ::UnityEngine::Pose previousPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRReferencePointSubsystem::InvokeReferencePointUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeReferencePointUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatedReferencePoint), ::il2cpp_utils::ExtractType(previousTrackingState), ::il2cpp_utils::ExtractType(previousPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatedReferencePoint, previousTrackingState, previousPose);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRReferencePointSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRReferencePointSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRReferencePointSubsystem
#include "UnityEngine/Experimental/XR/XRReferencePointSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.TrackingState
#include "UnityEngine/Experimental/XR/TrackingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.TrackingState Unknown
::UnityEngine::Experimental::XR::TrackingState UnityEngine::Experimental::XR::TrackingState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::TrackingState>("UnityEngine.Experimental.XR", "TrackingState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.TrackingState Unknown
void UnityEngine::Experimental::XR::TrackingState::_set_Unknown(::UnityEngine::Experimental::XR::TrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "TrackingState", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.TrackingState Tracking
::UnityEngine::Experimental::XR::TrackingState UnityEngine::Experimental::XR::TrackingState::_get_Tracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_get_Tracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::TrackingState>("UnityEngine.Experimental.XR", "TrackingState", "Tracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.TrackingState Tracking
void UnityEngine::Experimental::XR::TrackingState::_set_Tracking(::UnityEngine::Experimental::XR::TrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_set_Tracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "TrackingState", "Tracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.TrackingState Unavailable
::UnityEngine::Experimental::XR::TrackingState UnityEngine::Experimental::XR::TrackingState::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::TrackingState>("UnityEngine.Experimental.XR", "TrackingState", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.TrackingState Unavailable
void UnityEngine::Experimental::XR::TrackingState::_set_Unavailable(::UnityEngine::Experimental::XR::TrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "TrackingState", "Unavailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::TrackingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::TrackingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.SessionTrackingStateChangedEventArgs
#include "UnityEngine/Experimental/XR/SessionTrackingStateChangedEventArgs.hpp"
// Including type: UnityEngine.Experimental.XR.XRSessionSubsystem
#include "UnityEngine/Experimental/XR/XRSessionSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Experimental.XR.XRSessionSubsystem m_Session
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::XRSessionSubsystem*& UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::dyn_m_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::dyn_m_Session");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Session"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::XRSessionSubsystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.TrackingState <NewState>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::TrackingState& UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::dyn_$NewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::dyn_$NewState$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewState>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::TrackingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.SessionTrackingStateChangedEventArgs.set_NewState
void UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::set_NewState(::UnityEngine::Experimental::XR::TrackingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs::set_NewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_NewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRSessionSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRSessionSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRSessionSubsystem
#include "UnityEngine/Experimental/XR/XRSessionSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Experimental.XR.TrackingState
#include "UnityEngine/Experimental/XR/TrackingState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Experimental.XR.SessionTrackingStateChangedEventArgs> TrackingStateChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs>*& UnityEngine::Experimental::XR::XRSessionSubsystem::dyn_TrackingStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRSessionSubsystem::dyn_TrackingStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingStateChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Experimental::XR::SessionTrackingStateChangedEventArgs>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.XR.XRSessionSubsystem.InvokeTrackingStateChangedEvent
void UnityEngine::Experimental::XR::XRSessionSubsystem::InvokeTrackingStateChangedEvent(::UnityEngine::Experimental::XR::TrackingState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRSessionSubsystem::InvokeTrackingStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeTrackingStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.XRSessionSubsystemDescriptor
#include "UnityEngine/Experimental/XR/XRSessionSubsystemDescriptor.hpp"
// Including type: UnityEngine.Experimental.XR.XRSessionSubsystem
#include "UnityEngine/Experimental/XR/XRSessionSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.BrightnessControl
#include "Vectrosity/BrightnessControl.hpp"
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vectrosity.RefInt m_objectNumber
[[deprecated("Use field access instead!")]] ::Vectrosity::RefInt*& Vectrosity::BrightnessControl::dyn_m_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::dyn_m_objectNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectNumber"))->offset;
  return *reinterpret_cast<::Vectrosity::RefInt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.VectorLine m_vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::BrightnessControl::dyn_m_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::dyn_m_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useLine
[[deprecated("Use field access instead!")]] bool& Vectrosity::BrightnessControl::dyn_m_useLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::dyn_m_useLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_destroyed
[[deprecated("Use field access instead!")]] bool& Vectrosity::BrightnessControl::dyn_m_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::dyn_m_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.BrightnessControl.get_objectNumber
::Vectrosity::RefInt* Vectrosity::BrightnessControl::get_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::get_objectNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Vectrosity::RefInt*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.BrightnessControl.Setup
void Vectrosity::BrightnessControl::Setup(::Vectrosity::VectorLine* line, bool m_useLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(m_useLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line, m_useLine);
}
// Autogenerated method: Vectrosity.BrightnessControl.SetUseLine
void Vectrosity::BrightnessControl::SetUseLine(bool useLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::SetUseLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUseLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useLine);
}
// Autogenerated method: Vectrosity.BrightnessControl.OnBecameVisible
void Vectrosity::BrightnessControl::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.BrightnessControl.OnBecameInvisible
void Vectrosity::BrightnessControl::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.BrightnessControl.OnDestroy
void Vectrosity::BrightnessControl::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::BrightnessControl::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.IVectorObject
#include "Vectrosity/IVectorObject.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Vectrosity.IVectorObject.SetName
void Vectrosity::IVectorObject::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::SetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateVerts
void Vectrosity::IVectorObject::UpdateVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateVerts");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateUVs
void Vectrosity::IVectorObject::UpdateUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateColors
void Vectrosity::IVectorObject::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateColors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateTris
void Vectrosity::IVectorObject::UpdateTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateTris");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateNormals
void Vectrosity::IVectorObject::UpdateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateTangents
void Vectrosity::IVectorObject::UpdateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateTangents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.UpdateMeshAttributes
void Vectrosity::IVectorObject::UpdateMeshAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::UpdateMeshAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.ClearMesh
void Vectrosity::IVectorObject::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.Enable
void Vectrosity::IVectorObject::Enable(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: Vectrosity.IVectorObject.SetVectorLine
void Vectrosity::IVectorObject::SetVectorLine(::Vectrosity::VectorLine* vectorLine, ::UnityEngine::Texture* texture, ::UnityEngine::Material* material, bool useCustomMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::SetVectorLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine, texture, material, useCustomMaterial);
}
// Autogenerated method: Vectrosity.IVectorObject.Destroy
void Vectrosity::IVectorObject::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.IVectorObject.VertexCount
int Vectrosity::IVectorObject::VertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::IVectorObject::VertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::IVectorObject*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.LineManager
#include "Vectrosity/LineManager.hpp"
// Including type: Vectrosity.LineManager/<DisableLine>c__Iterator0
#include "Vectrosity/LineManager_-DisableLine-c__Iterator0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> lines
::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* Vectrosity::LineManager::_get_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_get_lines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>*>("Vectrosity", "LineManager", "lines"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> lines
void Vectrosity::LineManager::_set_lines(::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_set_lines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineManager", "lines", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Transform> transforms
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* Vectrosity::LineManager::_get_transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_get_transforms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*>("Vectrosity", "LineManager", "transforms"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Transform> transforms
void Vectrosity::LineManager::_set_transforms(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_set_transforms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineManager", "transforms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lineCount
int Vectrosity::LineManager::_get_lineCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_get_lineCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "LineManager", "lineCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lineCount
void Vectrosity::LineManager::_set_lineCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::_set_lineCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineManager", "lineCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean destroyed
[[deprecated("Use field access instead!")]] bool& Vectrosity::LineManager::dyn_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::dyn_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.LineManager..cctor
void Vectrosity::LineManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "LineManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.Awake
void Vectrosity::LineManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.Initialize
void Vectrosity::LineManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.AddLine
void Vectrosity::LineManager::AddLine(::Vectrosity::VectorLine* vectorLine, ::UnityEngine::Transform* thisTransform, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::AddLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorLine), ::il2cpp_utils::ExtractType(thisTransform), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine, thisTransform, time);
}
// Autogenerated method: Vectrosity.LineManager.DisableLine
void Vectrosity::LineManager::DisableLine(::Vectrosity::VectorLine* vectorLine, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::DisableLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorLine), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine, time);
}
// Autogenerated method: Vectrosity.LineManager.DisableLine
::System::Collections::IEnumerator* Vectrosity::LineManager::DisableLine(::Vectrosity::VectorLine* vectorLine, float time, bool remove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::DisableLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorLine), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(remove)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, vectorLine, time, remove);
}
// Autogenerated method: Vectrosity.LineManager.LateUpdate
void Vectrosity::LineManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.RemoveLine
void Vectrosity::LineManager::RemoveLine(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::RemoveLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: Vectrosity.LineManager.RemoveLine
void Vectrosity::LineManager::RemoveLine(::Vectrosity::VectorLine* vectorLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::RemoveLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine);
}
// Autogenerated method: Vectrosity.LineManager.DisableIfUnused
void Vectrosity::LineManager::DisableIfUnused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::DisableIfUnused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableIfUnused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.EnableIfUsed
void Vectrosity::LineManager::EnableIfUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::EnableIfUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableIfUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.StartCheckDistance
void Vectrosity::LineManager::StartCheckDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::StartCheckDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCheckDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.CheckDistance
void Vectrosity::LineManager::CheckDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::CheckDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager.OnDestroy
void Vectrosity::LineManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vectrosity.LineManager/<DisableLine>c__Iterator0
#include "Vectrosity/LineManager_-DisableLine-c__Iterator0.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single time
[[deprecated("Use field access instead!")]] float& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean remove
[[deprecated("Use field access instead!")]] bool& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_remove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Vectrosity.VectorLine vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single <$>time
[[deprecated("Use field access instead!")]] float& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<$>time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean <$>remove
[[deprecated("Use field access instead!")]] bool& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$remove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<$>remove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Vectrosity.VectorLine <$>vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$$vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<$>vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Vectrosity.LineManager <>f__this
[[deprecated("Use field access instead!")]] ::Vectrosity::LineManager*& Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$f__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::dyn_$$f__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__this"))->offset;
  return *reinterpret_cast<::Vectrosity::LineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.LineManager/<DisableLine>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Vectrosity::LineManager::$DisableLine$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::LineManager::$DisableLine$c__Iterator0*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager/<DisableLine>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Vectrosity::LineManager::$DisableLine$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::LineManager::$DisableLine$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager/<DisableLine>c__Iterator0.MoveNext
bool Vectrosity::LineManager::$DisableLine$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::LineManager::$DisableLine$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager/<DisableLine>c__Iterator0.Dispose
void Vectrosity::LineManager::$DisableLine$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::LineManager::$DisableLine$c__Iterator0*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.LineManager/<DisableLine>c__Iterator0.Reset
void Vectrosity::LineManager::$DisableLine$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineManager::$DisableLine$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::LineManager::$DisableLine$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 i
[[deprecated("Use field access instead!")]] int& Vectrosity::RefInt::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::RefInt::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.LineType
#include "Vectrosity/LineType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Vectrosity.LineType Continuous
::Vectrosity::LineType Vectrosity::LineType::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::LineType>("Vectrosity", "LineType", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.LineType Continuous
void Vectrosity::LineType::_set_Continuous(::Vectrosity::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineType", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.LineType Discrete
::Vectrosity::LineType Vectrosity::LineType::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::LineType>("Vectrosity", "LineType", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.LineType Discrete
void Vectrosity::LineType::_set_Discrete(::Vectrosity::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineType", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.LineType Points
::Vectrosity::LineType Vectrosity::LineType::_get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_get_Points");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::LineType>("Vectrosity", "LineType", "Points"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.LineType Points
void Vectrosity::LineType::_set_Points(::Vectrosity::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::_set_Points");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "LineType", "Points", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Vectrosity::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.Joins
#include "Vectrosity/Joins.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Vectrosity.Joins Fill
::Vectrosity::Joins Vectrosity::Joins::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::Joins>("Vectrosity", "Joins", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.Joins Fill
void Vectrosity::Joins::_set_Fill(::Vectrosity::Joins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "Joins", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.Joins Weld
::Vectrosity::Joins Vectrosity::Joins::_get_Weld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_get_Weld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::Joins>("Vectrosity", "Joins", "Weld"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.Joins Weld
void Vectrosity::Joins::_set_Weld(::Vectrosity::Joins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_set_Weld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "Joins", "Weld", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.Joins None
::Vectrosity::Joins Vectrosity::Joins::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::Joins>("Vectrosity", "Joins", "None"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.Joins None
void Vectrosity::Joins::_set_None(::Vectrosity::Joins value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "Joins", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Vectrosity::Joins::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::Joins::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.EndCap
#include "Vectrosity/EndCap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Vectrosity.EndCap Front
::Vectrosity::EndCap Vectrosity::EndCap::_get_Front() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_get_Front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::EndCap>("Vectrosity", "EndCap", "Front"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.EndCap Front
void Vectrosity::EndCap::_set_Front(::Vectrosity::EndCap value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_set_Front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "EndCap", "Front", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.EndCap Both
::Vectrosity::EndCap Vectrosity::EndCap::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::EndCap>("Vectrosity", "EndCap", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.EndCap Both
void Vectrosity::EndCap::_set_Both(::Vectrosity::EndCap value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "EndCap", "Both", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.EndCap Mirror
::Vectrosity::EndCap Vectrosity::EndCap::_get_Mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_get_Mirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::EndCap>("Vectrosity", "EndCap", "Mirror"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.EndCap Mirror
void Vectrosity::EndCap::_set_Mirror(::Vectrosity::EndCap value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_set_Mirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "EndCap", "Mirror", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.EndCap Back
::Vectrosity::EndCap Vectrosity::EndCap::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::EndCap>("Vectrosity", "EndCap", "Back"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.EndCap Back
void Vectrosity::EndCap::_set_Back(::Vectrosity::EndCap value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "EndCap", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.EndCap None
::Vectrosity::EndCap Vectrosity::EndCap::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::EndCap>("Vectrosity", "EndCap", "None"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.EndCap None
void Vectrosity::EndCap::_set_None(::Vectrosity::EndCap value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "EndCap", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Vectrosity::EndCap::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::EndCap::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.CanvasState
#include "Vectrosity/CanvasState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Vectrosity.CanvasState None
::Vectrosity::CanvasState Vectrosity::CanvasState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::CanvasState>("Vectrosity", "CanvasState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.CanvasState None
void Vectrosity::CanvasState::_set_None(::Vectrosity::CanvasState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "CanvasState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.CanvasState OnCanvas
::Vectrosity::CanvasState Vectrosity::CanvasState::_get_OnCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_get_OnCanvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::CanvasState>("Vectrosity", "CanvasState", "OnCanvas"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.CanvasState OnCanvas
void Vectrosity::CanvasState::_set_OnCanvas(::Vectrosity::CanvasState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_set_OnCanvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "CanvasState", "OnCanvas", value));
}
// Autogenerated static field getter
// Get static field: static public Vectrosity.CanvasState OffCanvas
::Vectrosity::CanvasState Vectrosity::CanvasState::_get_OffCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_get_OffCanvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::CanvasState>("Vectrosity", "CanvasState", "OffCanvas"));
}
// Autogenerated static field setter
// Set static field: static public Vectrosity.CanvasState OffCanvas
void Vectrosity::CanvasState::_set_OffCanvas(::Vectrosity::CanvasState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::_set_OffCanvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "CanvasState", "OffCanvas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Vectrosity::CanvasState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::CanvasState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vectrosity.IVectorObject
#include "Vectrosity/IVectorObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.PhysicsMaterial2D
#include "UnityEngine/PhysicsMaterial2D.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: Vectrosity.LineManager
#include "Vectrosity/LineManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Vectrosity.CapInfo
#include "Vectrosity/CapInfo.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: UnityEngine.PolygonCollider2D
#include "UnityEngine/PolygonCollider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 v3zero
::UnityEngine::Vector3 Vectrosity::VectorLine::_get_v3zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_v3zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Vectrosity", "VectorLine", "v3zero"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 v3zero
void Vectrosity::VectorLine::_set_v3zero(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_v3zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "v3zero", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Canvas m_canvas
::UnityEngine::Canvas* Vectrosity::VectorLine::_get_m_canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_m_canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Canvas*>("Vectrosity", "VectorLine", "m_canvas"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Canvas m_canvas
void Vectrosity::VectorLine::_set_m_canvas(::UnityEngine::Canvas* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_m_canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "m_canvas", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform camTransform
::UnityEngine::Transform* Vectrosity::VectorLine::_get_camTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_camTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("Vectrosity", "VectorLine", "camTransform"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform camTransform
void Vectrosity::VectorLine::_set_camTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_camTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "camTransform", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Camera cam3D
::UnityEngine::Camera* Vectrosity::VectorLine::_get_cam3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_cam3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera*>("Vectrosity", "VectorLine", "cam3D"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Camera cam3D
void Vectrosity::VectorLine::_set_cam3D(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_cam3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "cam3D", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 oldPosition
::UnityEngine::Vector3 Vectrosity::VectorLine::_get_oldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_oldPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Vectrosity", "VectorLine", "oldPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 oldPosition
void Vectrosity::VectorLine::_set_oldPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_oldPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "oldPosition", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 oldRotation
::UnityEngine::Vector3 Vectrosity::VectorLine::_get_oldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_oldRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("Vectrosity", "VectorLine", "oldRotation"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 oldRotation
void Vectrosity::VectorLine::_set_oldRotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_oldRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "oldRotation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean lineManagerCreated
bool Vectrosity::VectorLine::_get_lineManagerCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_lineManagerCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Vectrosity", "VectorLine", "lineManagerCreated"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean lineManagerCreated
void Vectrosity::VectorLine::_set_lineManagerCreated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_lineManagerCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "lineManagerCreated", value));
}
// Autogenerated static field getter
// Get static field: static private Vectrosity.LineManager m_lineManager
::Vectrosity::LineManager* Vectrosity::VectorLine::_get_m_lineManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_m_lineManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Vectrosity::LineManager*>("Vectrosity", "VectorLine", "m_lineManager"));
}
// Autogenerated static field setter
// Set static field: static private Vectrosity.LineManager m_lineManager
void Vectrosity::VectorLine::_set_m_lineManager(::Vectrosity::LineManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_m_lineManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "m_lineManager", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,Vectrosity.CapInfo> capDictionary
::System::Collections::Generic::Dictionary_2<::StringW, ::Vectrosity::CapInfo*>* Vectrosity::VectorLine::_get_capDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_capDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Vectrosity::CapInfo*>*>("Vectrosity", "VectorLine", "capDictionary")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,Vectrosity.CapInfo> capDictionary
void Vectrosity::VectorLine::_set_capDictionary(::System::Collections::Generic::Dictionary_2<::StringW, ::Vectrosity::CapInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_capDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "capDictionary", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 endianDiff1
int Vectrosity::VectorLine::_get_endianDiff1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_endianDiff1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorLine", "endianDiff1"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 endianDiff1
void Vectrosity::VectorLine::_set_endianDiff1(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_endianDiff1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "endianDiff1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 endianDiff2
int Vectrosity::VectorLine::_get_endianDiff2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_endianDiff2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorLine", "endianDiff2"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 endianDiff2
void Vectrosity::VectorLine::_set_endianDiff2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_endianDiff2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "endianDiff2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] byteBlock
::ArrayW<uint8_t> Vectrosity::VectorLine::_get_byteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_byteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Vectrosity", "VectorLine", "byteBlock"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] byteBlock
void Vectrosity::VectorLine::_set_byteBlock(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_byteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "byteBlock", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] functionNames
::ArrayW<::StringW> Vectrosity::VectorLine::_get_functionNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_get_functionNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Vectrosity", "VectorLine", "functionNames"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] functionNames
void Vectrosity::VectorLine::_set_functionNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::_set_functionNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorLine", "functionNames", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_lineVertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Vectrosity::VectorLine::dyn_m_lineVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineVertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] m_lineUVs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Vectrosity::VectorLine::dyn_m_lineUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineUVs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32[] m_lineColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& Vectrosity::VectorLine::dyn_m_lineColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_lineTriangles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Vectrosity::VectorLine::dyn_m_lineTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineTriangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineTriangles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_vertexCount
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_vertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_vertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_go
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Vectrosity::VectorLine::dyn_m_go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_go");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_go"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Vectrosity::VectorLine::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.IVectorObject m_vectorObject
[[deprecated("Use field access instead!")]] ::Vectrosity::IVectorObject*& Vectrosity::VectorLine::dyn_m_vectorObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_vectorObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorObject"))->offset;
  return *reinterpret_cast<::Vectrosity::IVectorObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 m_color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& Vectrosity::VectorLine::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.CanvasState m_canvasState
[[deprecated("Use field access instead!")]] ::Vectrosity::CanvasState& Vectrosity::VectorLine::dyn_m_canvasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_canvasState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvasState"))->offset;
  return *reinterpret_cast<::Vectrosity::CanvasState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_is2D
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_is2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_is2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_is2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> m_points2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& Vectrosity::VectorLine::dyn_m_points2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_points2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_points2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_points3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Vectrosity::VectorLine::dyn_m_points3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_points3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_points3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_pointsCount
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_pointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_pointsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pointsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_screenPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Vectrosity::VectorLine::dyn_m_screenPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_screenPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_screenPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_lineWidths
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Vectrosity::VectorLine::dyn_m_lineWidths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineWidths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineWidths"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lineWidth
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxWeldDistance
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_maxWeldDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_maxWeldDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxWeldDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_distances
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Vectrosity::VectorLine::dyn_m_distances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_distances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_distances"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& Vectrosity::VectorLine::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Vectrosity::VectorLine::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_originalTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& Vectrosity::VectorLine::dyn_m_originalTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_originalTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& Vectrosity::VectorLine::dyn_m_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_active
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.LineType m_lineType
[[deprecated("Use field access instead!")]] ::Vectrosity::LineType& Vectrosity::VectorLine::dyn_m_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineType"))->offset;
  return *reinterpret_cast<::Vectrosity::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_capLength
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_capLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_capLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_capLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_smoothWidth
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_smoothWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_smoothWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_smoothWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_smoothColor
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_smoothColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_smoothColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_smoothColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.Joins m_joins
[[deprecated("Use field access instead!")]] ::Vectrosity::Joins& Vectrosity::VectorLine::dyn_m_joins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_joins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_joins"))->offset;
  return *reinterpret_cast<::Vectrosity::Joins*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isAutoDrawing
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_isAutoDrawing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_isAutoDrawing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isAutoDrawing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_drawStart
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_drawStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_drawStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_drawStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_drawEnd
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_drawEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_drawEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_drawEnd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_endPointsUpdate
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_endPointsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_endPointsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_endPointsUpdate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useNormals
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_useNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_useNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useTangents
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_useTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_useTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useTangents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_normalsCalculated
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_normalsCalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_normalsCalculated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_normalsCalculated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_tangentsCalculated
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_tangentsCalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_tangentsCalculated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tangentsCalculated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.EndCap m_capType
[[deprecated("Use field access instead!")]] ::Vectrosity::EndCap& Vectrosity::VectorLine::dyn_m_capType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_capType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_capType"))->offset;
  return *reinterpret_cast<::Vectrosity::EndCap*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_endCap
[[deprecated("Use field access instead!")]] ::StringW& Vectrosity::VectorLine::dyn_m_endCap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_endCap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_endCap"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useCapColors
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_useCapColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_useCapColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useCapColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 m_frontColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& Vectrosity::VectorLine::dyn_m_frontColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_frontColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frontColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 m_backColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& Vectrosity::VectorLine::dyn_m_backColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_backColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_frontEndCapIndex
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_frontEndCapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_frontEndCapIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frontEndCapIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_backEndCapIndex
[[deprecated("Use field access instead!")]] int& Vectrosity::VectorLine::dyn_m_backEndCapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_backEndCapIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backEndCapIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lineUVBottom
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_lineUVBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineUVBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineUVBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lineUVTop
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_lineUVTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_lineUVTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineUVTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_frontCapUVBottom
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_frontCapUVBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_frontCapUVBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frontCapUVBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_frontCapUVTop
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_frontCapUVTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_frontCapUVTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frontCapUVTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_backCapUVBottom
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_backCapUVBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_backCapUVBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backCapUVBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_backCapUVTop
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_backCapUVTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_backCapUVTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_backCapUVTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_continuousTexture
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_continuousTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_continuousTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_continuousTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_drawTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Vectrosity::VectorLine::dyn_m_drawTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_drawTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_drawTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_viewportDraw
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_viewportDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_viewportDraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_viewportDraw"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_textureScale
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_textureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_textureScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textureScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useTextureScale
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_useTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_useTextureScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useTextureScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_textureOffset
[[deprecated("Use field access instead!")]] float& Vectrosity::VectorLine::dyn_m_textureOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_textureOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textureOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useMatrix
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_useMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_useMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useMatrix"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Vectrosity::VectorLine::dyn_m_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_collider
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collider"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_trigger
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_trigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_trigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.PhysicsMaterial2D m_physicsMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::PhysicsMaterial2D*& Vectrosity::VectorLine::dyn_m_physicsMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_physicsMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_physicsMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::PhysicsMaterial2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_alignOddWidthToPixels
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorLine::dyn_m_alignOddWidthToPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::dyn_m_alignOddWidthToPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_alignOddWidthToPixels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VectorLine..cctor
void Vectrosity::VectorLine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_lineVertices
::ArrayW<::UnityEngine::Vector3> Vectrosity::VectorLine::get_lineVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_lineVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_lineUVs
::ArrayW<::UnityEngine::Vector2> Vectrosity::VectorLine::get_lineUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_lineUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_lineColors
::ArrayW<::UnityEngine::Color32> Vectrosity::VectorLine::get_lineColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_lineColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Color32>, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_lineTriangles
::System::Collections::Generic::List_1<int>* Vectrosity::VectorLine::get_lineTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_lineTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_rectTransform
::UnityEngine::RectTransform* Vectrosity::VectorLine::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_color
::UnityEngine::Color32 Vectrosity::VectorLine::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_color
void Vectrosity::VectorLine::set_color(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_is2D
bool Vectrosity::VectorLine::get_is2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_is2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_is2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_points2
::System::Collections::Generic::List_1<::UnityEngine::Vector2>* Vectrosity::VectorLine::get_points2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_points2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_points2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_points3
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Vectrosity::VectorLine::get_points3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_points3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_points3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_points3
void Vectrosity::VectorLine::set_points3(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_points3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_points3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_pointsCount
int Vectrosity::VectorLine::get_pointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_pointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_name
::StringW Vectrosity::VectorLine::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_name
void Vectrosity::VectorLine::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_texture
::UnityEngine::Texture* Vectrosity::VectorLine::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_layer
void Vectrosity::VectorLine::set_layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_active
bool Vectrosity::VectorLine::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_active
void Vectrosity::VectorLine::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_smoothWidth
bool Vectrosity::VectorLine::get_smoothWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_smoothWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_isAutoDrawing
bool Vectrosity::VectorLine::get_isAutoDrawing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_isAutoDrawing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAutoDrawing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_drawStart
int Vectrosity::VectorLine::get_drawStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_drawStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_drawEnd
int Vectrosity::VectorLine::get_drawEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_drawEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.set_drawTransform
void Vectrosity::VectorLine::set_drawTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_drawTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.set_textureScale
void Vectrosity::VectorLine::set_textureScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::set_textureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Vectrosity.VectorLine.get_camTransformPosition
::UnityEngine::Vector3 Vectrosity::VectorLine::get_camTransformPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_camTransformPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "get_camTransformPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_camTransformExists
bool Vectrosity::VectorLine::get_camTransformExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_camTransformExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "get_camTransformExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.get_lineManager
::Vectrosity::LineManager* Vectrosity::VectorLine::get_lineManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::get_lineManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "get_lineManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Vectrosity::LineManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetupLine
void Vectrosity::VectorLine::SetupLine(::StringW lineName, ::UnityEngine::Texture* texture, float width, ::Vectrosity::LineType lineType, ::Vectrosity::Joins joins, bool use2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineName), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(lineType), ::il2cpp_utils::ExtractType(joins), ::il2cpp_utils::ExtractType(use2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineName, texture, width, lineType, joins, use2D);
}
// Autogenerated method: Vectrosity.VectorLine.SetupTriangles
void Vectrosity::VectorLine::SetupTriangles(int startVert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startVert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startVert);
}
// Autogenerated method: Vectrosity.VectorLine.SetLastFillTriangles
void Vectrosity::VectorLine::SetLastFillTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetLastFillTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastFillTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetEndCapUVs
void Vectrosity::VectorLine::SetEndCapUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetEndCapUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndCapUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetupTransform
void Vectrosity::VectorLine::SetupTransform(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "SetupTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: Vectrosity.VectorLine.ResizeMeshArrays
void Vectrosity::VectorLine::ResizeMeshArrays(int newCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ResizeMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newCount);
}
// Autogenerated method: Vectrosity.VectorLine.Resize
void Vectrosity::VectorLine::Resize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.ResizeLineWidths
void Vectrosity::VectorLine::ResizeLineWidths(int newSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ResizeLineWidths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeLineWidths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSize);
}
// Autogenerated method: Vectrosity.VectorLine.SetUVs
void Vectrosity::VectorLine::SetUVs(int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startIndex, endIndex);
}
// Autogenerated method: Vectrosity.VectorLine.SetVertexCount
bool Vectrosity::VectorLine::SetVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetVertexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.MaxPoints
int Vectrosity::VectorLine::MaxPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::MaxPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.CalculateTangents
::ArrayW<::UnityEngine::Vector4> Vectrosity::VectorLine::CalculateTangents(::ArrayW<::UnityEngine::Vector3> normals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CalculateTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normals)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector4>, false>(this, ___internal__method, normals);
}
// Autogenerated method: Vectrosity.VectorLine.SetupVectorCanvas
::UnityEngine::GameObject* Vectrosity::VectorLine::SetupVectorCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupVectorCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "SetupVectorCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.CheckCamera3D
bool Vectrosity::VectorLine::CheckCamera3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CheckCamera3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCamera3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetCamera3D
void Vectrosity::VectorLine::SetCamera3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetCamera3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "SetCamera3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetCamera3D
void Vectrosity::VectorLine::SetCamera3D(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetCamera3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "SetCamera3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera);
}
// Autogenerated method: Vectrosity.VectorLine.CameraHasMoved
bool Vectrosity::VectorLine::CameraHasMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CameraHasMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "CameraHasMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.UpdateCameraInfo
void Vectrosity::VectorLine::UpdateCameraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::UpdateCameraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "UpdateCameraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.GetSegmentNumber
int Vectrosity::VectorLine::GetSegmentNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::GetSegmentNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSegmentNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetEndCapColors
void Vectrosity::VectorLine::SetEndCapColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetEndCapColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndCapColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetColor
void Vectrosity::VectorLine::SetColor(::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Vectrosity.VectorLine.SetColor
void Vectrosity::VectorLine::SetColor(::UnityEngine::Color32 color, int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color, startIndex, endIndex);
}
// Autogenerated method: Vectrosity.VectorLine.CheckNormals
void Vectrosity::VectorLine::CheckNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CheckNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.CheckLine
void Vectrosity::VectorLine::CheckLine(bool draw3D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CheckLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(draw3D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, draw3D);
}
// Autogenerated method: Vectrosity.VectorLine.DrawEndCap
void Vectrosity::VectorLine::DrawEndCap(bool draw3D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::DrawEndCap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawEndCap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(draw3D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, draw3D);
}
// Autogenerated method: Vectrosity.VectorLine.ScaleCapVertices
void Vectrosity::VectorLine::ScaleCapVertices(int offset, float scale, ::UnityEngine::Vector3 center) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ScaleCapVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScaleCapVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(center)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, scale, center);
}
// Autogenerated method: Vectrosity.VectorLine.SetContinuousTexture
void Vectrosity::VectorLine::SetContinuousTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetContinuousTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContinuousTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.UseMatrix
bool Vectrosity::VectorLine::UseMatrix(ByRef<::UnityEngine::Matrix4x4> thisMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::UseMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(thisMatrix));
}
// Autogenerated method: Vectrosity.VectorLine.CheckPointCount
bool Vectrosity::VectorLine::CheckPointCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CheckPointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.ClearTriangles
void Vectrosity::VectorLine::ClearTriangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ClearTriangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTriangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetupDrawStartEnd
void Vectrosity::VectorLine::SetupDrawStartEnd(ByRef<int> start, ByRef<int> end, bool clearVertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupDrawStartEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupDrawStartEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(clearVertices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(start), byref(end), clearVertices);
}
// Autogenerated method: Vectrosity.VectorLine.ZeroVertices
void Vectrosity::VectorLine::ZeroVertices(int startIndex, int endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ZeroVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ZeroVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startIndex, endIndex);
}
// Autogenerated method: Vectrosity.VectorLine.SetupCanvasState
void Vectrosity::VectorLine::SetupCanvasState(::Vectrosity::CanvasState wantedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetupCanvasState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupCanvasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wantedState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wantedState);
}
// Autogenerated method: Vectrosity.VectorLine.Draw
void Vectrosity::VectorLine::Draw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.Line2D
void Vectrosity::VectorLine::Line2D(int start, int end, ::UnityEngine::Matrix4x4 thisMatrix, bool useTransformMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Line2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Line2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(thisMatrix), ::il2cpp_utils::ExtractType(useTransformMatrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, thisMatrix, useTransformMatrix);
}
// Autogenerated method: Vectrosity.VectorLine.Line3D
void Vectrosity::VectorLine::Line3D(int start, int end, ::UnityEngine::Matrix4x4 thisMatrix, bool useTransformMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Line3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Line3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(thisMatrix), ::il2cpp_utils::ExtractType(useTransformMatrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, thisMatrix, useTransformMatrix);
}
// Autogenerated method: Vectrosity.VectorLine.CheckDrawStartFill
void Vectrosity::VectorLine::CheckDrawStartFill(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::CheckDrawStartFill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDrawStartFill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start);
}
// Autogenerated method: Vectrosity.VectorLine.Draw3D
void Vectrosity::VectorLine::Draw3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Draw3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.IntersectAndDoSkip
bool Vectrosity::VectorLine::IntersectAndDoSkip(ByRef<::UnityEngine::Vector3> pos1, ByRef<::UnityEngine::Vector3> pos2, ByRef<::UnityEngine::Vector3> p1, ByRef<::UnityEngine::Vector3> p2, ByRef<float> screenHeight, ByRef<::UnityEngine::Ray> ray, ByRef<::UnityEngine::Plane> cameraPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::IntersectAndDoSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectAndDoSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(screenHeight), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(cameraPlane)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pos1), byref(pos2), byref(p1), byref(p2), byref(screenHeight), byref(ray), byref(cameraPlane));
}
// Autogenerated method: Vectrosity.VectorLine.PlaneIntersectionPoint
::UnityEngine::Vector3 Vectrosity::VectorLine::PlaneIntersectionPoint(ByRef<::UnityEngine::Ray> ray, ByRef<::UnityEngine::Plane> plane, ByRef<::UnityEngine::Vector3> p1, ByRef<::UnityEngine::Vector3> p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::PlaneIntersectionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaneIntersectionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, byref(ray), byref(plane), byref(p1), byref(p2));
}
// Autogenerated method: Vectrosity.VectorLine.DrawPoints
void Vectrosity::VectorLine::DrawPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::DrawPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.DrawPoints3D
void Vectrosity::VectorLine::DrawPoints3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::DrawPoints3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawPoints3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SkipQuad
void Vectrosity::VectorLine::SkipQuad(ByRef<int> idx, ByRef<int> widthIdx, ByRef<int> widthIdxAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SkipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(widthIdx), ::il2cpp_utils::ExtractType(widthIdxAdd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(idx), byref(widthIdx), byref(widthIdxAdd));
}
// Autogenerated method: Vectrosity.VectorLine.SkipQuad3D
void Vectrosity::VectorLine::SkipQuad3D(ByRef<int> idx, ByRef<int> widthIdx, ByRef<int> widthIdxAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SkipQuad3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipQuad3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(widthIdx), ::il2cpp_utils::ExtractType(widthIdxAdd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(idx), byref(widthIdx), byref(widthIdxAdd));
}
// Autogenerated method: Vectrosity.VectorLine.WeldJoins
void Vectrosity::VectorLine::WeldJoins(int start, int end, bool connectFirstAndLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::WeldJoins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WeldJoins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(connectFirstAndLast)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, connectFirstAndLast);
}
// Autogenerated method: Vectrosity.VectorLine.WeldJoinsDiscrete
void Vectrosity::VectorLine::WeldJoinsDiscrete(int start, int end, bool connectFirstAndLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::WeldJoinsDiscrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WeldJoinsDiscrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(connectFirstAndLast)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, connectFirstAndLast);
}
// Autogenerated method: Vectrosity.VectorLine.SetIntersectionPoint
void Vectrosity::VectorLine::SetIntersectionPoint(int p1, int p2, int p3, int p4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetIntersectionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntersectionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p1, p2, p3, p4);
}
// Autogenerated method: Vectrosity.VectorLine.WeldJoins3D
void Vectrosity::VectorLine::WeldJoins3D(int start, int end, bool connectFirstAndLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::WeldJoins3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WeldJoins3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(connectFirstAndLast)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, connectFirstAndLast);
}
// Autogenerated method: Vectrosity.VectorLine.WeldJoinsDiscrete3D
void Vectrosity::VectorLine::WeldJoinsDiscrete3D(int start, int end, bool connectFirstAndLast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::WeldJoinsDiscrete3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WeldJoinsDiscrete3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(connectFirstAndLast)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, connectFirstAndLast);
}
// Autogenerated method: Vectrosity.VectorLine.SetIntersectionPoint3D
void Vectrosity::VectorLine::SetIntersectionPoint3D(int p1, int p2, int p3, int p4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetIntersectionPoint3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntersectionPoint3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p1, p2, p3, p4);
}
// Autogenerated method: Vectrosity.VectorLine.LineManagerCheckDistance
void Vectrosity::VectorLine::LineManagerCheckDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::LineManagerCheckDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "LineManagerCheckDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.LineManagerDisable
void Vectrosity::VectorLine::LineManagerDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::LineManagerDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "LineManagerDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.LineManagerEnable
void Vectrosity::VectorLine::LineManagerEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::LineManagerEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "LineManagerEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.Draw3DAuto
void Vectrosity::VectorLine::Draw3DAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Draw3DAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw3DAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.Draw3DAuto
void Vectrosity::VectorLine::Draw3DAuto(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Draw3DAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw3DAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: Vectrosity.VectorLine.StopDrawing3DAuto
void Vectrosity::VectorLine::StopDrawing3DAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::StopDrawing3DAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopDrawing3DAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetTextureScale
void Vectrosity::VectorLine::SetTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.ResetTextureScale
void Vectrosity::VectorLine::ResetTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::ResetTextureScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTextureScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.SetCollider
void Vectrosity::VectorLine::SetCollider(bool convertToWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(convertToWorldSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, convertToWorldSpace);
}
// Autogenerated method: Vectrosity.VectorLine.SetPathVerticesContinuous
void Vectrosity::VectorLine::SetPathVerticesContinuous(ByRef<int> i, ByRef<int> startIdx, ByRef<int> endIdx, ::ArrayW<::UnityEngine::Vector2> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetPathVerticesContinuous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPathVerticesContinuous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(startIdx), ::il2cpp_utils::ExtractType(endIdx), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(i), byref(startIdx), byref(endIdx), path);
}
// Autogenerated method: Vectrosity.VectorLine.SetPathWorldVerticesContinuous
void Vectrosity::VectorLine::SetPathWorldVerticesContinuous(ByRef<int> i, ByRef<::UnityEngine::Vector3> v3, ByRef<int> startIdx, ByRef<int> endIdx, ::ArrayW<::UnityEngine::Vector2> path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetPathWorldVerticesContinuous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPathWorldVerticesContinuous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(startIdx), ::il2cpp_utils::ExtractType(endIdx), ::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(i), byref(v3), byref(startIdx), byref(endIdx), path);
}
// Autogenerated method: Vectrosity.VectorLine.SetPathVerticesDiscrete
void Vectrosity::VectorLine::SetPathVerticesDiscrete(ByRef<int> i, ByRef<int> pIdx, ::ArrayW<::UnityEngine::Vector2> path, ::UnityEngine::PolygonCollider2D* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetPathVerticesDiscrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPathVerticesDiscrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(pIdx), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(i), byref(pIdx), path, collider);
}
// Autogenerated method: Vectrosity.VectorLine.SetPathWorldVerticesDiscrete
void Vectrosity::VectorLine::SetPathWorldVerticesDiscrete(ByRef<int> i, ByRef<::UnityEngine::Vector3> v3, ByRef<int> pIdx, ::ArrayW<::UnityEngine::Vector2> path, ::UnityEngine::PolygonCollider2D* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetPathWorldVerticesDiscrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPathWorldVerticesDiscrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(v3), ::il2cpp_utils::ExtractType(pIdx), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(i), byref(v3), byref(pIdx), path, collider);
}
// Autogenerated method: Vectrosity.VectorLine.Destroy
void Vectrosity::VectorLine::Destroy(ByRef<::Vectrosity::VectorLine*> line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(line));
}
// Autogenerated method: Vectrosity.VectorLine.Destroy
void Vectrosity::VectorLine::Destroy(::ArrayW<::Vectrosity::VectorLine*> lines) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lines)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lines);
}
// Autogenerated method: Vectrosity.VectorLine.DestroyLine
void Vectrosity::VectorLine::DestroyLine(ByRef<::Vectrosity::VectorLine*> line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::DestroyLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorLine", "DestroyLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(line));
}
// Autogenerated method: Vectrosity.VectorLine.SetDistances
void Vectrosity::VectorLine::SetDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::SetDistances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDistances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorLine.Approximately
bool Vectrosity::VectorLine::Approximately(::UnityEngine::Vector2 p1, ::UnityEngine::Vector2 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p1, p2);
}
// Autogenerated method: Vectrosity.VectorLine.Approximately
bool Vectrosity::VectorLine::Approximately(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p1, p2);
}
// Autogenerated method: Vectrosity.VectorLine.Approximately
bool Vectrosity::VectorLine::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorLine::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VectorManager
#include "Vectrosity/VectorManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single minBrightnessDistance
float Vectrosity::VectorManager::_get_minBrightnessDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_minBrightnessDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Vectrosity", "VectorManager", "minBrightnessDistance"));
}
// Autogenerated static field setter
// Set static field: static public System.Single minBrightnessDistance
void Vectrosity::VectorManager::_set_minBrightnessDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_minBrightnessDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "minBrightnessDistance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single maxBrightnessDistance
float Vectrosity::VectorManager::_get_maxBrightnessDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_maxBrightnessDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Vectrosity", "VectorManager", "maxBrightnessDistance"));
}
// Autogenerated static field setter
// Set static field: static public System.Single maxBrightnessDistance
void Vectrosity::VectorManager::_set_maxBrightnessDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_maxBrightnessDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "maxBrightnessDistance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 brightnessLevels
int Vectrosity::VectorManager::_get_brightnessLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_brightnessLevels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorManager", "brightnessLevels"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 brightnessLevels
void Vectrosity::VectorManager::_set_brightnessLevels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_brightnessLevels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "brightnessLevels", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single distanceCheckFrequency
float Vectrosity::VectorManager::_get_distanceCheckFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_distanceCheckFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Vectrosity", "VectorManager", "distanceCheckFrequency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single distanceCheckFrequency
void Vectrosity::VectorManager::_set_distanceCheckFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_distanceCheckFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "distanceCheckFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color fogColor
::UnityEngine::Color Vectrosity::VectorManager::_get_fogColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_fogColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("Vectrosity", "VectorManager", "fogColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color fogColor
void Vectrosity::VectorManager::_set_fogColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_fogColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "fogColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean useDraw3D
bool Vectrosity::VectorManager::_get_useDraw3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_useDraw3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Vectrosity", "VectorManager", "useDraw3D"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean useDraw3D
void Vectrosity::VectorManager::_set_useDraw3D(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_useDraw3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "useDraw3D", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines
::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* Vectrosity::VectorManager::_get_vectorLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_vectorLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>*>("Vectrosity", "VectorManager", "vectorLines"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines
void Vectrosity::VectorManager::_set_vectorLines(::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_vectorLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "vectorLines", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers
::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* Vectrosity::VectorManager::_get_objectNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_objectNumbers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::RefInt*>*>("Vectrosity", "VectorManager", "objectNumbers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers
void Vectrosity::VectorManager::_set_objectNumbers(::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_objectNumbers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "objectNumbers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 _arrayCount
int Vectrosity::VectorManager::_get__arrayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get__arrayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorManager", "_arrayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 _arrayCount
void Vectrosity::VectorManager::_set__arrayCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set__arrayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "_arrayCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines2
::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* Vectrosity::VectorManager::_get_vectorLines2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_vectorLines2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>*>("Vectrosity", "VectorManager", "vectorLines2"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines2
void Vectrosity::VectorManager::_set_vectorLines2(::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_vectorLines2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "vectorLines2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers2
::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* Vectrosity::VectorManager::_get_objectNumbers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_objectNumbers2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::RefInt*>*>("Vectrosity", "VectorManager", "objectNumbers2"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers2
void Vectrosity::VectorManager::_set_objectNumbers2(::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_objectNumbers2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "objectNumbers2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _arrayCount2
int Vectrosity::VectorManager::_get__arrayCount2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get__arrayCount2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorManager", "_arrayCount2"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _arrayCount2
void Vectrosity::VectorManager::_set__arrayCount2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set__arrayCount2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "_arrayCount2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Transform> transforms3
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* Vectrosity::VectorManager::_get_transforms3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_transforms3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*>("Vectrosity", "VectorManager", "transforms3"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Transform> transforms3
void Vectrosity::VectorManager::_set_transforms3(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_transforms3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "transforms3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines3
::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* Vectrosity::VectorManager::_get_vectorLines3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_vectorLines3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>*>("Vectrosity", "VectorManager", "vectorLines3"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.VectorLine> vectorLines3
void Vectrosity::VectorManager::_set_vectorLines3(::System::Collections::Generic::List_1<::Vectrosity::VectorLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_vectorLines3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "vectorLines3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> oldDistances
::System::Collections::Generic::List_1<int>* Vectrosity::VectorManager::_get_oldDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_oldDistances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("Vectrosity", "VectorManager", "oldDistances"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> oldDistances
void Vectrosity::VectorManager::_set_oldDistances(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_oldDistances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "oldDistances", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Color> colors
::System::Collections::Generic::List_1<::UnityEngine::Color>* Vectrosity::VectorManager::_get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Color>*>("Vectrosity", "VectorManager", "colors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Color> colors
void Vectrosity::VectorManager::_set_colors(::System::Collections::Generic::List_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "colors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers3
::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* Vectrosity::VectorManager::_get_objectNumbers3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_objectNumbers3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Vectrosity::RefInt*>*>("Vectrosity", "VectorManager", "objectNumbers3"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Vectrosity.RefInt> objectNumbers3
void Vectrosity::VectorManager::_set_objectNumbers3(::System::Collections::Generic::List_1<::Vectrosity::RefInt*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_objectNumbers3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "objectNumbers3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _arrayCount3
int Vectrosity::VectorManager::_get__arrayCount3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get__arrayCount3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Vectrosity", "VectorManager", "_arrayCount3"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _arrayCount3
void Vectrosity::VectorManager::_set__arrayCount3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set__arrayCount3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "_arrayCount3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> meshTable
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>* Vectrosity::VectorManager::_get_meshTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_get_meshTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>*>("Vectrosity", "VectorManager", "meshTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Mesh> meshTable
void Vectrosity::VectorManager::_set_meshTable(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Mesh*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::_set_meshTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorManager", "meshTable", value));
}
// Autogenerated method: Vectrosity.VectorManager..cctor
void Vectrosity::VectorManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.GetBrightnessValue
float Vectrosity::VectorManager::GetBrightnessValue(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::GetBrightnessValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "GetBrightnessValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos);
}
// Autogenerated method: Vectrosity.VectorManager.get_arrayCount
int Vectrosity::VectorManager::get_arrayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::get_arrayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "get_arrayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.VisibilityStaticSetup
void Vectrosity::VectorManager::VisibilityStaticSetup(::Vectrosity::VectorLine* line, ByRef<::Vectrosity::RefInt*> objectNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::VisibilityStaticSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "VisibilityStaticSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractIndependentType<::Vectrosity::RefInt*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, line, byref(objectNum));
}
// Autogenerated method: Vectrosity.VectorManager.VisibilityStaticRemove
void Vectrosity::VectorManager::VisibilityStaticRemove(int objectNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::VisibilityStaticRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "VisibilityStaticRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectNumber);
}
// Autogenerated method: Vectrosity.VectorManager.get_arrayCount2
int Vectrosity::VectorManager::get_arrayCount2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::get_arrayCount2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "get_arrayCount2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.VisibilitySetup
void Vectrosity::VectorManager::VisibilitySetup(::UnityEngine::Transform* thisTransform, ::Vectrosity::VectorLine* line, ByRef<::Vectrosity::RefInt*> objectNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::VisibilitySetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "VisibilitySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisTransform), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractIndependentType<::Vectrosity::RefInt*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisTransform, line, byref(objectNum));
}
// Autogenerated method: Vectrosity.VectorManager.VisibilityRemove
void Vectrosity::VectorManager::VisibilityRemove(int objectNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::VisibilityRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "VisibilityRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectNumber);
}
// Autogenerated method: Vectrosity.VectorManager.CheckDistanceSetup
void Vectrosity::VectorManager::CheckDistanceSetup(::UnityEngine::Transform* thisTransform, ::Vectrosity::VectorLine* line, ::UnityEngine::Color color, ::Vectrosity::RefInt* objectNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::CheckDistanceSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "CheckDistanceSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisTransform), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(objectNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisTransform, line, color, objectNum);
}
// Autogenerated method: Vectrosity.VectorManager.DistanceRemove
void Vectrosity::VectorManager::DistanceRemove(int objectNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::DistanceRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "DistanceRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectNumber);
}
// Autogenerated method: Vectrosity.VectorManager.CheckDistance
void Vectrosity::VectorManager::CheckDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::CheckDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "CheckDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.SetOldDistance
void Vectrosity::VectorManager::SetOldDistance(int objectNumber, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::SetOldDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "SetOldDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectNumber), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectNumber, val);
}
// Autogenerated method: Vectrosity.VectorManager.SetDistanceColor
void Vectrosity::VectorManager::SetDistanceColor(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::SetDistanceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "SetDistanceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Vectrosity.VectorManager.DrawArrayLine
void Vectrosity::VectorManager::DrawArrayLine(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::DrawArrayLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "DrawArrayLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Vectrosity.VectorManager.DrawArrayLine2
void Vectrosity::VectorManager::DrawArrayLine2(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::DrawArrayLine2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "DrawArrayLine2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Vectrosity.VectorManager.DrawArrayLines
void Vectrosity::VectorManager::DrawArrayLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::DrawArrayLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "DrawArrayLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.DrawArrayLines2
void Vectrosity::VectorManager::DrawArrayLines2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::DrawArrayLines2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "DrawArrayLines2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorManager.GetBounds
::UnityEngine::Bounds Vectrosity::VectorManager::GetBounds(::Vectrosity::VectorLine* line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, line);
}
// Autogenerated method: Vectrosity.VectorManager.GetBounds
::UnityEngine::Bounds Vectrosity::VectorManager::GetBounds(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points3)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points3);
}
// Autogenerated method: Vectrosity.VectorManager.MakeBoundsMesh
::UnityEngine::Mesh* Vectrosity::VectorManager::MakeBoundsMesh(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::MakeBoundsMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "MakeBoundsMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bounds);
}
// Autogenerated method: Vectrosity.VectorManager.SetupBoundsMesh
void Vectrosity::VectorManager::SetupBoundsMesh(::UnityEngine::GameObject* go, ::Vectrosity::VectorLine* line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorManager::SetupBoundsMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorManager", "SetupBoundsMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, line);
}
