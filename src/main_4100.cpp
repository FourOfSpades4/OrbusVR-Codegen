// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass3_0
#include "AmplifyColor/VolumeEffectFlags_--c__DisplayClass3_0.hpp"
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.VolumeEffectComponent comp
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectComponent*& AmplifyColor::VolumeEffectFlags::$$c__DisplayClass3_0::dyn_comp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass3_0::dyn_comp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comp"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffectComponent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass3_0.<UpdateFlags>b__0
bool AmplifyColor::VolumeEffectFlags::$$c__DisplayClass3_0::$UpdateFlags$b__0(::AmplifyColor::VolumeEffectComponentFlags* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass3_0::<UpdateFlags>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateFlags>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectFlags/<>c
#include "AmplifyColor/VolumeEffectFlags_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AmplifyColor.VolumeEffectFlags/<>c <>9
::AmplifyColor::VolumeEffectFlags::$$c* AmplifyColor::VolumeEffectFlags::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::AmplifyColor::VolumeEffectFlags::$$c*>("AmplifyColor", "VolumeEffectFlags/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AmplifyColor.VolumeEffectFlags/<>c <>9
void AmplifyColor::VolumeEffectFlags::$$c::_set_$$9(::AmplifyColor::VolumeEffectFlags::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectFlags/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectComponentFlags,System.Boolean> <>9__7_0
::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, bool>* AmplifyColor::VolumeEffectFlags::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, bool>*>("AmplifyColor", "VolumeEffectFlags/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectComponentFlags,System.Boolean> <>9__7_0
void AmplifyColor::VolumeEffectFlags::$$c::_set_$$9__7_0(::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectFlags/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectComponentFlags,System.String> <>9__7_1
::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, ::StringW>* AmplifyColor::VolumeEffectFlags::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, ::StringW>*>("AmplifyColor", "VolumeEffectFlags/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectComponentFlags,System.String> <>9__7_1
void AmplifyColor::VolumeEffectFlags::$$c::_set_$$9__7_1(::System::Func_2<::AmplifyColor::VolumeEffectComponentFlags*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectFlags/<>c", "<>9__7_1", value)));
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags/<>c..cctor
void AmplifyColor::VolumeEffectFlags::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectFlags/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags/<>c.<GetComponentNames>b__7_0
bool AmplifyColor::VolumeEffectFlags::$$c::$GetComponentNames$b__7_0(::AmplifyColor::VolumeEffectComponentFlags* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::<GetComponentNames>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetComponentNames>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags/<>c.<GetComponentNames>b__7_1
::StringW AmplifyColor::VolumeEffectFlags::$$c::$GetComponentNames$b__7_1(::AmplifyColor::VolumeEffectComponentFlags* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c::<GetComponentNames>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetComponentNames>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.PrecisionModes
#include "AmplifyBloom/PrecisionModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.PrecisionModes Low
::AmplifyBloom::PrecisionModes AmplifyBloom::PrecisionModes::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::PrecisionModes::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::PrecisionModes>("AmplifyBloom", "PrecisionModes", "Low"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.PrecisionModes Low
void AmplifyBloom::PrecisionModes::_set_Low(::AmplifyBloom::PrecisionModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::PrecisionModes::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "PrecisionModes", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.PrecisionModes High
::AmplifyBloom::PrecisionModes AmplifyBloom::PrecisionModes::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::PrecisionModes::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::PrecisionModes>("AmplifyBloom", "PrecisionModes", "High"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.PrecisionModes High
void AmplifyBloom::PrecisionModes::_set_High(::AmplifyBloom::PrecisionModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::PrecisionModes::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "PrecisionModes", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::PrecisionModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::PrecisionModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.BloomPasses
#include "AmplifyBloom/BloomPasses.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses Threshold
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_Threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_Threshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "Threshold"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses Threshold
void AmplifyBloom::BloomPasses::_set_Threshold(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_Threshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "Threshold", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses ThresholdMask
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_ThresholdMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_ThresholdMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "ThresholdMask"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses ThresholdMask
void AmplifyBloom::BloomPasses::_set_ThresholdMask(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_ThresholdMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "ThresholdMask", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses AnamorphicGlare
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_AnamorphicGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_AnamorphicGlare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "AnamorphicGlare"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses AnamorphicGlare
void AmplifyBloom::BloomPasses::_set_AnamorphicGlare(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_AnamorphicGlare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "AnamorphicGlare", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare0
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare0"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare0
void AmplifyBloom::BloomPasses::_set_LensFlare0(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare0", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare1
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare1"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare1
void AmplifyBloom::BloomPasses::_set_LensFlare1(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare1", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare2
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare2"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare2
void AmplifyBloom::BloomPasses::_set_LensFlare2(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare2", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare3
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare3"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare3
void AmplifyBloom::BloomPasses::_set_LensFlare3(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare3", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare4
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare4"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare4
void AmplifyBloom::BloomPasses::_set_LensFlare4(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare4", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses LensFlare5
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_LensFlare5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_LensFlare5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "LensFlare5"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses LensFlare5
void AmplifyBloom::BloomPasses::_set_LensFlare5(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_LensFlare5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "LensFlare5", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses DownsampleNoWeightedAvg
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_DownsampleNoWeightedAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_DownsampleNoWeightedAvg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "DownsampleNoWeightedAvg"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses DownsampleNoWeightedAvg
void AmplifyBloom::BloomPasses::_set_DownsampleNoWeightedAvg(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_DownsampleNoWeightedAvg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "DownsampleNoWeightedAvg", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses DownsampleWithKaris
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_DownsampleWithKaris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_DownsampleWithKaris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "DownsampleWithKaris"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses DownsampleWithKaris
void AmplifyBloom::BloomPasses::_set_DownsampleWithKaris(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_DownsampleWithKaris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "DownsampleWithKaris", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses DownsampleWithoutKaris
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_DownsampleWithoutKaris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_DownsampleWithoutKaris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "DownsampleWithoutKaris"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses DownsampleWithoutKaris
void AmplifyBloom::BloomPasses::_set_DownsampleWithoutKaris(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_DownsampleWithoutKaris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "DownsampleWithoutKaris", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses DownsampleWithTempFilterWithKaris
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_DownsampleWithTempFilterWithKaris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_DownsampleWithTempFilterWithKaris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "DownsampleWithTempFilterWithKaris"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses DownsampleWithTempFilterWithKaris
void AmplifyBloom::BloomPasses::_set_DownsampleWithTempFilterWithKaris(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_DownsampleWithTempFilterWithKaris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "DownsampleWithTempFilterWithKaris", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses DownsampleWithTempFilterWithoutKaris
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_DownsampleWithTempFilterWithoutKaris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_DownsampleWithTempFilterWithoutKaris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "DownsampleWithTempFilterWithoutKaris"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses DownsampleWithTempFilterWithoutKaris
void AmplifyBloom::BloomPasses::_set_DownsampleWithTempFilterWithoutKaris(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_DownsampleWithTempFilterWithoutKaris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "DownsampleWithTempFilterWithoutKaris", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses HorizontalBlur
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_HorizontalBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_HorizontalBlur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "HorizontalBlur"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses HorizontalBlur
void AmplifyBloom::BloomPasses::_set_HorizontalBlur(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_HorizontalBlur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "HorizontalBlur", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses VerticalBlur
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_VerticalBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_VerticalBlur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "VerticalBlur"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses VerticalBlur
void AmplifyBloom::BloomPasses::_set_VerticalBlur(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_VerticalBlur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "VerticalBlur", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses VerticalBlurWithTempFilter
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_VerticalBlurWithTempFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_VerticalBlurWithTempFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "VerticalBlurWithTempFilter"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses VerticalBlurWithTempFilter
void AmplifyBloom::BloomPasses::_set_VerticalBlurWithTempFilter(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_VerticalBlurWithTempFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "VerticalBlurWithTempFilter", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses UpscaleFirstPass
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_UpscaleFirstPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_UpscaleFirstPass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "UpscaleFirstPass"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses UpscaleFirstPass
void AmplifyBloom::BloomPasses::_set_UpscaleFirstPass(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_UpscaleFirstPass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "UpscaleFirstPass", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses Upscale
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_Upscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_Upscale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "Upscale"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses Upscale
void AmplifyBloom::BloomPasses::_set_Upscale(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_Upscale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "Upscale", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS1
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS1"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS1
void AmplifyBloom::BloomPasses::_set_WeightedAddPS1(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS1", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS2
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS2"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS2
void AmplifyBloom::BloomPasses::_set_WeightedAddPS2(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS2", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS3
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS3"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS3
void AmplifyBloom::BloomPasses::_set_WeightedAddPS3(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS3", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS4
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS4"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS4
void AmplifyBloom::BloomPasses::_set_WeightedAddPS4(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS4", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS5
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS5"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS5
void AmplifyBloom::BloomPasses::_set_WeightedAddPS5(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS5", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS6
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS6"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS6
void AmplifyBloom::BloomPasses::_set_WeightedAddPS6(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS6", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS7
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS7"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS7
void AmplifyBloom::BloomPasses::_set_WeightedAddPS7(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS7", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses WeightedAddPS8
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_WeightedAddPS8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_WeightedAddPS8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "WeightedAddPS8"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses WeightedAddPS8
void AmplifyBloom::BloomPasses::_set_WeightedAddPS8(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_WeightedAddPS8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "WeightedAddPS8", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehWeightedBlur
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehWeightedBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehWeightedBlur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehWeightedBlur"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehWeightedBlur
void AmplifyBloom::BloomPasses::_set_BokehWeightedBlur(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehWeightedBlur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehWeightedBlur", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehComposition2S
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehComposition2S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehComposition2S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehComposition2S"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehComposition2S
void AmplifyBloom::BloomPasses::_set_BokehComposition2S(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehComposition2S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehComposition2S", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehComposition3S
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehComposition3S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehComposition3S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehComposition3S"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehComposition3S
void AmplifyBloom::BloomPasses::_set_BokehComposition3S(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehComposition3S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehComposition3S", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehComposition4S
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehComposition4S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehComposition4S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehComposition4S"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehComposition4S
void AmplifyBloom::BloomPasses::_set_BokehComposition4S(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehComposition4S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehComposition4S", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehComposition5S
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehComposition5S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehComposition5S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehComposition5S"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehComposition5S
void AmplifyBloom::BloomPasses::_set_BokehComposition5S(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehComposition5S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehComposition5S", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses BokehComposition6S
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_BokehComposition6S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_BokehComposition6S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "BokehComposition6S"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses BokehComposition6S
void AmplifyBloom::BloomPasses::_set_BokehComposition6S(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_BokehComposition6S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "BokehComposition6S", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses Decode
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_Decode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "Decode"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses Decode
void AmplifyBloom::BloomPasses::_set_Decode(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_Decode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "Decode", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.BloomPasses TotalPasses
::AmplifyBloom::BloomPasses AmplifyBloom::BloomPasses::_get_TotalPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_get_TotalPasses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::BloomPasses>("AmplifyBloom", "BloomPasses", "TotalPasses"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.BloomPasses TotalPasses
void AmplifyBloom::BloomPasses::_set_TotalPasses(::AmplifyBloom::BloomPasses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::_set_TotalPasses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "BloomPasses", "TotalPasses", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::BloomPasses::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::BloomPasses::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.UpscaleQualityEnum
#include "AmplifyBloom/UpscaleQualityEnum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.UpscaleQualityEnum Realistic
::AmplifyBloom::UpscaleQualityEnum AmplifyBloom::UpscaleQualityEnum::_get_Realistic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::UpscaleQualityEnum::_get_Realistic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::UpscaleQualityEnum>("AmplifyBloom", "UpscaleQualityEnum", "Realistic"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.UpscaleQualityEnum Realistic
void AmplifyBloom::UpscaleQualityEnum::_set_Realistic(::AmplifyBloom::UpscaleQualityEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::UpscaleQualityEnum::_set_Realistic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "UpscaleQualityEnum", "Realistic", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.UpscaleQualityEnum Natural
::AmplifyBloom::UpscaleQualityEnum AmplifyBloom::UpscaleQualityEnum::_get_Natural() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::UpscaleQualityEnum::_get_Natural");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::UpscaleQualityEnum>("AmplifyBloom", "UpscaleQualityEnum", "Natural"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.UpscaleQualityEnum Natural
void AmplifyBloom::UpscaleQualityEnum::_set_Natural(::AmplifyBloom::UpscaleQualityEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::UpscaleQualityEnum::_set_Natural");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "UpscaleQualityEnum", "Natural", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::UpscaleQualityEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::UpscaleQualityEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.DebugToScreenEnum
#include "AmplifyBloom/DebugToScreenEnum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum None
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "None"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum None
void AmplifyBloom::DebugToScreenEnum::_set_None(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "None", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum Bloom
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_Bloom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_Bloom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "Bloom"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum Bloom
void AmplifyBloom::DebugToScreenEnum::_set_Bloom(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_Bloom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "Bloom", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum MainThreshold
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_MainThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_MainThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "MainThreshold"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum MainThreshold
void AmplifyBloom::DebugToScreenEnum::_set_MainThreshold(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_MainThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "MainThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum FeaturesThreshold
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_FeaturesThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_FeaturesThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "FeaturesThreshold"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum FeaturesThreshold
void AmplifyBloom::DebugToScreenEnum::_set_FeaturesThreshold(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_FeaturesThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "FeaturesThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum TemporalFilter
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_TemporalFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_TemporalFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "TemporalFilter"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum TemporalFilter
void AmplifyBloom::DebugToScreenEnum::_set_TemporalFilter(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_TemporalFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "TemporalFilter", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum BokehFilter
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_BokehFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_BokehFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "BokehFilter"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum BokehFilter
void AmplifyBloom::DebugToScreenEnum::_set_BokehFilter(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_BokehFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "BokehFilter", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum LensFlare
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_LensFlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_LensFlare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "LensFlare"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum LensFlare
void AmplifyBloom::DebugToScreenEnum::_set_LensFlare(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_LensFlare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "LensFlare", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum LensGlare
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_LensGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_LensGlare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "LensGlare"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum LensGlare
void AmplifyBloom::DebugToScreenEnum::_set_LensGlare(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_LensGlare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "LensGlare", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum LensDirt
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_LensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_LensDirt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "LensDirt"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum LensDirt
void AmplifyBloom::DebugToScreenEnum::_set_LensDirt(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_LensDirt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "LensDirt", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.DebugToScreenEnum LensStarburst
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::DebugToScreenEnum::_get_LensStarburst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_get_LensStarburst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::DebugToScreenEnum>("AmplifyBloom", "DebugToScreenEnum", "LensStarburst"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.DebugToScreenEnum LensStarburst
void AmplifyBloom::DebugToScreenEnum::_set_LensStarburst(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::_set_LensStarburst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "DebugToScreenEnum", "LensStarburst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::DebugToScreenEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::DebugToScreenEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.MainThresholdSizeEnum
#include "AmplifyBloom/MainThresholdSizeEnum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.MainThresholdSizeEnum Full
::AmplifyBloom::MainThresholdSizeEnum AmplifyBloom::MainThresholdSizeEnum::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::MainThresholdSizeEnum>("AmplifyBloom", "MainThresholdSizeEnum", "Full"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.MainThresholdSizeEnum Full
void AmplifyBloom::MainThresholdSizeEnum::_set_Full(::AmplifyBloom::MainThresholdSizeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "MainThresholdSizeEnum", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.MainThresholdSizeEnum Half
::AmplifyBloom::MainThresholdSizeEnum AmplifyBloom::MainThresholdSizeEnum::_get_Half() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_get_Half");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::MainThresholdSizeEnum>("AmplifyBloom", "MainThresholdSizeEnum", "Half"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.MainThresholdSizeEnum Half
void AmplifyBloom::MainThresholdSizeEnum::_set_Half(::AmplifyBloom::MainThresholdSizeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_set_Half");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "MainThresholdSizeEnum", "Half", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.MainThresholdSizeEnum Quarter
::AmplifyBloom::MainThresholdSizeEnum AmplifyBloom::MainThresholdSizeEnum::_get_Quarter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_get_Quarter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::MainThresholdSizeEnum>("AmplifyBloom", "MainThresholdSizeEnum", "Quarter"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.MainThresholdSizeEnum Quarter
void AmplifyBloom::MainThresholdSizeEnum::_set_Quarter(::AmplifyBloom::MainThresholdSizeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::_set_Quarter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "MainThresholdSizeEnum", "Quarter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::MainThresholdSizeEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::MainThresholdSizeEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyBloomBase
#include "AmplifyBloom/AmplifyBloomBase.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: AmplifyBloom.AmplifyLensFlare
#include "AmplifyBloom/AmplifyLensFlare.hpp"
// Including type: AmplifyBloom.AmplifyGlare
#include "AmplifyBloom/AmplifyGlare.hpp"
// Including type: AmplifyBloom.AmplifyBokeh
#include "AmplifyBloom/AmplifyBokeh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AmplifyBloom.PrecisionModes
#include "AmplifyBloom/PrecisionModes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxGhosts
int AmplifyBloom::AmplifyBloomBase::_get_MaxGhosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MaxGhosts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyBloomBase", "MaxGhosts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxGhosts
void AmplifyBloom::AmplifyBloomBase::_set_MaxGhosts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MaxGhosts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MaxGhosts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MinDownscales
int AmplifyBloom::AmplifyBloomBase::_get_MinDownscales() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MinDownscales");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyBloomBase", "MinDownscales"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MinDownscales
void AmplifyBloom::AmplifyBloomBase::_set_MinDownscales(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MinDownscales");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MinDownscales", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxDownscales
int AmplifyBloom::AmplifyBloomBase::_get_MaxDownscales() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MaxDownscales");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyBloomBase", "MaxDownscales"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxDownscales
void AmplifyBloom::AmplifyBloomBase::_set_MaxDownscales(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MaxDownscales");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MaxDownscales", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxGaussian
int AmplifyBloom::AmplifyBloomBase::_get_MaxGaussian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MaxGaussian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyBloomBase", "MaxGaussian"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxGaussian
void AmplifyBloom::AmplifyBloomBase::_set_MaxGaussian(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MaxGaussian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MaxGaussian", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MaxDirtIntensity
float AmplifyBloom::AmplifyBloomBase::_get_MaxDirtIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MaxDirtIntensity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("AmplifyBloom", "AmplifyBloomBase", "MaxDirtIntensity"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MaxDirtIntensity
void AmplifyBloom::AmplifyBloomBase::_set_MaxDirtIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MaxDirtIntensity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MaxDirtIntensity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MaxStarburstIntensity
float AmplifyBloom::AmplifyBloomBase::_get_MaxStarburstIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_get_MaxStarburstIntensity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("AmplifyBloom", "AmplifyBloomBase", "MaxStarburstIntensity"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MaxStarburstIntensity
void AmplifyBloom::AmplifyBloomBase::_set_MaxStarburstIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::_set_MaxStarburstIntensity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBloomBase", "MaxStarburstIntensity", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_maskTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& AmplifyBloom::AmplifyBloomBase::dyn_m_maskTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_maskTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maskTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture m_targetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& AmplifyBloom::AmplifyBloomBase::dyn_m_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_targetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_showDebugMessages
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_showDebugMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_showDebugMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showDebugMessages"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_softMaxdownscales
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyBloomBase::dyn_m_softMaxdownscales() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_softMaxdownscales");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_softMaxdownscales"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.DebugToScreenEnum m_debugToScreen
[[deprecated("Use field access instead!")]] ::AmplifyBloom::DebugToScreenEnum& AmplifyBloom::AmplifyBloomBase::dyn_m_debugToScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_debugToScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debugToScreen"))->offset;
  return *reinterpret_cast<::AmplifyBloom::DebugToScreenEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highPrecision
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_highPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_highPrecision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highPrecision"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_bloomRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyBloomBase::dyn_m_bloomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bloomRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bloomRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_overallThreshold
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBloomBase::dyn_m_overallThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_overallThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overallThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_bloomParams
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyBloomBase::dyn_m_bloomParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bloomParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bloomParams"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_temporalFilteringActive
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_temporalFilteringActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_temporalFilteringValue
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_temporalFilteringValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_bloomDownsampleCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyBloomBase::dyn_m_bloomDownsampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bloomDownsampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bloomDownsampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_temporalFilteringCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_temporalFilteringCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_temporalFilteringCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_separateFeaturesThreshold
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_separateFeaturesThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_separateFeaturesThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_separateFeaturesThreshold"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_featuresThreshold
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBloomBase::dyn_m_featuresThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_featuresThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_featuresThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.AmplifyLensFlare m_lensFlare
[[deprecated("Use field access instead!")]] ::AmplifyBloom::AmplifyLensFlare*& AmplifyBloom::AmplifyBloomBase::dyn_m_lensFlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensFlare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlare"))->offset;
  return *reinterpret_cast<::AmplifyBloom::AmplifyLensFlare**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_applyLensDirt
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_applyLensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_applyLensDirt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_applyLensDirt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lensDirtStrength
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensDirtStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_lensDirtTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensDirtTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_applyLensStardurst
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_m_applyLensStardurst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_applyLensStardurst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_applyLensStardurst"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_lensStardurstTex
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& AmplifyBloom::AmplifyBloomBase::dyn_m_lensStardurstTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensStardurstTex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensStardurstTex"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lensStarburstStrength
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBloomBase::dyn_m_lensStarburstStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensStarburstStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensStarburstStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.AmplifyGlare m_anamorphicGlare
[[deprecated("Use field access instead!")]] ::AmplifyBloom::AmplifyGlare*& AmplifyBloom::AmplifyBloomBase::dyn_m_anamorphicGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_anamorphicGlare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_anamorphicGlare"))->offset;
  return *reinterpret_cast<::AmplifyBloom::AmplifyGlare**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.AmplifyBokeh m_bokehFilter
[[deprecated("Use field access instead!")]] ::AmplifyBloom::AmplifyBokeh*& AmplifyBloom::AmplifyBloomBase::dyn_m_bokehFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bokehFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bokehFilter"))->offset;
  return *reinterpret_cast<::AmplifyBloom::AmplifyBokeh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_upscaleWeights
[[deprecated("Use field access instead!")]] ::ArrayW<float>& AmplifyBloom::AmplifyBloomBase::dyn_m_upscaleWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_upscaleWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_upscaleWeights"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_gaussianRadius
[[deprecated("Use field access instead!")]] ::ArrayW<float>& AmplifyBloom::AmplifyBloomBase::dyn_m_gaussianRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_gaussianRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gaussianRadius"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_gaussianSteps
[[deprecated("Use field access instead!")]] ::ArrayW<int>& AmplifyBloom::AmplifyBloomBase::dyn_m_gaussianSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_gaussianSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gaussianSteps"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_lensDirtWeights
[[deprecated("Use field access instead!")]] ::ArrayW<float>& AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensDirtWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensDirtWeights"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] m_lensStarburstWeights
[[deprecated("Use field access instead!")]] ::ArrayW<float>& AmplifyBloom::AmplifyBloomBase::dyn_m_lensStarburstWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_lensStarburstWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensStarburstWeights"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] m_downscaleSettingsFoldout
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& AmplifyBloom::AmplifyBloomBase::dyn_m_downscaleSettingsFoldout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_downscaleSettingsFoldout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_downscaleSettingsFoldout"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_featuresSourceId
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyBloomBase::dyn_m_featuresSourceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_featuresSourceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_featuresSourceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.UpscaleQualityEnum m_upscaleQuality
[[deprecated("Use field access instead!")]] ::AmplifyBloom::UpscaleQualityEnum& AmplifyBloom::AmplifyBloomBase::dyn_m_upscaleQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_upscaleQuality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_upscaleQuality"))->offset;
  return *reinterpret_cast<::AmplifyBloom::UpscaleQualityEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.MainThresholdSizeEnum m_mainThresholdSize
[[deprecated("Use field access instead!")]] ::AmplifyBloom::MainThresholdSizeEnum& AmplifyBloom::AmplifyBloomBase::dyn_m_mainThresholdSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_mainThresholdSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mainThresholdSize"))->offset;
  return *reinterpret_cast<::AmplifyBloom::MainThresholdSizeEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_cameraTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& AmplifyBloom::AmplifyBloomBase::dyn_m_cameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_cameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_starburstMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& AmplifyBloom::AmplifyBloomBase::dyn_m_starburstMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_starburstMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starburstMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_bloomShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& AmplifyBloom::AmplifyBloomBase::dyn_m_bloomShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bloomShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bloomShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_bloomMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AmplifyBloom::AmplifyBloomBase::dyn_m_bloomMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_bloomMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bloomMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_finalCompositionShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& AmplifyBloom::AmplifyBloomBase::dyn_m_finalCompositionShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_finalCompositionShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_finalCompositionShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_finalCompositionMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& AmplifyBloom::AmplifyBloomBase::dyn_m_finalCompositionMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_finalCompositionMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_finalCompositionMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture m_tempFilterBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& AmplifyBloom::AmplifyBloomBase::dyn_m_tempFilterBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_tempFilterBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tempFilterBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& AmplifyBloom::AmplifyBloomBase::dyn_m_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] m_tempUpscaleRTs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& AmplifyBloom::AmplifyBloomBase::dyn_m_tempUpscaleRTs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_tempUpscaleRTs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tempUpscaleRTs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] m_tempAuxDownsampleRTs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& AmplifyBloom::AmplifyBloomBase::dyn_m_tempAuxDownsampleRTs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_tempAuxDownsampleRTs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tempAuxDownsampleRTs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] m_tempDownsamplesSizes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& AmplifyBloom::AmplifyBloomBase::dyn_m_tempDownsamplesSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_m_tempDownsamplesSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tempDownsamplesSizes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean silentError
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBloomBase::dyn_silentError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::dyn_silentError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "silentError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.Awake
void AmplifyBloom::AmplifyBloomBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.OnDestroy
void AmplifyBloom::AmplifyBloomBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.ApplyGaussianBlur
void AmplifyBloom::AmplifyBloomBase::ApplyGaussianBlur(::UnityEngine::RenderTexture* renderTexture, int amount, float radius, bool applyTemporal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::ApplyGaussianBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyGaussianBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(amount), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(applyTemporal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderTexture, amount, radius, applyTemporal);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.CreateTempFilterRT
void AmplifyBloom::AmplifyBloomBase::CreateTempFilterRT(::UnityEngine::RenderTexture* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::CreateTempFilterRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTempFilterRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.CleanTempFilterRT
void AmplifyBloom::AmplifyBloomBase::CleanTempFilterRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::CleanTempFilterRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanTempFilterRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.OnRenderImage
void AmplifyBloom::AmplifyBloomBase::OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.FinalComposition
void AmplifyBloom::AmplifyBloomBase::FinalComposition(float srcContribution, float upscaleContribution, ::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, int forcePassId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::FinalComposition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalComposition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcContribution), ::il2cpp_utils::ExtractType(upscaleContribution), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(forcePassId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, srcContribution, upscaleContribution, src, dest, forcePassId);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.ApplyUpscale
void AmplifyBloom::AmplifyBloomBase::ApplyUpscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::ApplyUpscale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyUpscale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensGlareInstance
::AmplifyBloom::AmplifyGlare* AmplifyBloom::AmplifyBloomBase::get_LensGlareInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensGlareInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensGlareInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::AmplifyGlare*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_BokehFilterInstance
::AmplifyBloom::AmplifyBokeh* AmplifyBloom::AmplifyBloomBase::get_BokehFilterInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_BokehFilterInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BokehFilterInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::AmplifyBokeh*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensFlareInstance
::AmplifyBloom::AmplifyLensFlare* AmplifyBloom::AmplifyBloomBase::get_LensFlareInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensFlareInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::AmplifyLensFlare*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ApplyLensDirt
bool AmplifyBloom::AmplifyBloomBase::get_ApplyLensDirt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ApplyLensDirt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensDirt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ApplyLensDirt
void AmplifyBloom::AmplifyBloomBase::set_ApplyLensDirt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ApplyLensDirt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensDirt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensDirtStrength
float AmplifyBloom::AmplifyBloomBase::get_LensDirtStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensDirtStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensDirtStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_LensDirtStrength
void AmplifyBloom::AmplifyBloomBase::set_LensDirtStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_LensDirtStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensDirtStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensDirtTexture
::UnityEngine::Texture* AmplifyBloom::AmplifyBloomBase::get_LensDirtTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensDirtTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensDirtTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_LensDirtTexture
void AmplifyBloom::AmplifyBloomBase::set_LensDirtTexture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_LensDirtTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensDirtTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ApplyLensStardurst
bool AmplifyBloom::AmplifyBloomBase::get_ApplyLensStardurst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ApplyLensStardurst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensStardurst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ApplyLensStardurst
void AmplifyBloom::AmplifyBloomBase::set_ApplyLensStardurst(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ApplyLensStardurst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensStardurst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensStardurstTex
::UnityEngine::Texture* AmplifyBloom::AmplifyBloomBase::get_LensStardurstTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensStardurstTex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensStardurstTex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_LensStardurstTex
void AmplifyBloom::AmplifyBloomBase::set_LensStardurstTex(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_LensStardurstTex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensStardurstTex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensStarburstStrength
float AmplifyBloom::AmplifyBloomBase::get_LensStarburstStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensStarburstStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensStarburstStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_LensStarburstStrength
void AmplifyBloom::AmplifyBloomBase::set_LensStarburstStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_LensStarburstStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensStarburstStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_CurrentPrecisionMode
::AmplifyBloom::PrecisionModes AmplifyBloom::AmplifyBloomBase::get_CurrentPrecisionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_CurrentPrecisionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPrecisionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::PrecisionModes, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_CurrentPrecisionMode
void AmplifyBloom::AmplifyBloomBase::set_CurrentPrecisionMode(::AmplifyBloom::PrecisionModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_CurrentPrecisionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPrecisionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_HighPrecision
bool AmplifyBloom::AmplifyBloomBase::get_HighPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_HighPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HighPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_HighPrecision
void AmplifyBloom::AmplifyBloomBase::set_HighPrecision(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_HighPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_BloomRange
float AmplifyBloom::AmplifyBloomBase::get_BloomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_BloomRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BloomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_BloomRange
void AmplifyBloom::AmplifyBloomBase::set_BloomRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_BloomRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BloomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_OverallThreshold
float AmplifyBloom::AmplifyBloomBase::get_OverallThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_OverallThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverallThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_OverallThreshold
void AmplifyBloom::AmplifyBloomBase::set_OverallThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_OverallThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverallThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_BloomParams
::UnityEngine::Vector4 AmplifyBloom::AmplifyBloomBase::get_BloomParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_BloomParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BloomParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_BloomParams
void AmplifyBloom::AmplifyBloomBase::set_BloomParams(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_BloomParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BloomParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_OverallIntensity
float AmplifyBloom::AmplifyBloomBase::get_OverallIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_OverallIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverallIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_OverallIntensity
void AmplifyBloom::AmplifyBloomBase::set_OverallIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_OverallIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverallIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_BloomScale
float AmplifyBloom::AmplifyBloomBase::get_BloomScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_BloomScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BloomScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_BloomScale
void AmplifyBloom::AmplifyBloomBase::set_BloomScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_BloomScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BloomScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_UpscaleBlurRadius
float AmplifyBloom::AmplifyBloomBase::get_UpscaleBlurRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_UpscaleBlurRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpscaleBlurRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_UpscaleBlurRadius
void AmplifyBloom::AmplifyBloomBase::set_UpscaleBlurRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_UpscaleBlurRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpscaleBlurRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_TemporalFilteringActive
bool AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TemporalFilteringActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_TemporalFilteringActive
void AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TemporalFilteringActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_TemporalFilteringValue
float AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TemporalFilteringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_TemporalFilteringValue
void AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TemporalFilteringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_SoftMaxdownscales
int AmplifyBloom::AmplifyBloomBase::get_SoftMaxdownscales() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_SoftMaxdownscales");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SoftMaxdownscales", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_BloomDownsampleCount
int AmplifyBloom::AmplifyBloomBase::get_BloomDownsampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_BloomDownsampleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BloomDownsampleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_BloomDownsampleCount
void AmplifyBloom::AmplifyBloomBase::set_BloomDownsampleCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_BloomDownsampleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BloomDownsampleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_FeaturesSourceId
int AmplifyBloom::AmplifyBloomBase::get_FeaturesSourceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_FeaturesSourceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeaturesSourceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_FeaturesSourceId
void AmplifyBloom::AmplifyBloomBase::set_FeaturesSourceId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_FeaturesSourceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FeaturesSourceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_DownscaleSettingsFoldout
::ArrayW<bool> AmplifyBloom::AmplifyBloomBase::get_DownscaleSettingsFoldout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_DownscaleSettingsFoldout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DownscaleSettingsFoldout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_UpscaleWeights
::ArrayW<float> AmplifyBloom::AmplifyBloomBase::get_UpscaleWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_UpscaleWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpscaleWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensDirtWeights
::ArrayW<float> AmplifyBloom::AmplifyBloomBase::get_LensDirtWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensDirtWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensDirtWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_LensStarburstWeights
::ArrayW<float> AmplifyBloom::AmplifyBloomBase::get_LensStarburstWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_LensStarburstWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensStarburstWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_GaussianRadius
::ArrayW<float> AmplifyBloom::AmplifyBloomBase::get_GaussianRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_GaussianRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GaussianRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_GaussianSteps
::ArrayW<int> AmplifyBloom::AmplifyBloomBase::get_GaussianSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_GaussianSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GaussianSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_TemporalFilteringCurve
::UnityEngine::AnimationCurve* AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_TemporalFilteringCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TemporalFilteringCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_TemporalFilteringCurve
void AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_TemporalFilteringCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TemporalFilteringCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_SeparateFeaturesThreshold
bool AmplifyBloom::AmplifyBloomBase::get_SeparateFeaturesThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_SeparateFeaturesThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SeparateFeaturesThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_SeparateFeaturesThreshold
void AmplifyBloom::AmplifyBloomBase::set_SeparateFeaturesThreshold(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_SeparateFeaturesThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SeparateFeaturesThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_FeaturesThreshold
float AmplifyBloom::AmplifyBloomBase::get_FeaturesThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_FeaturesThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeaturesThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_FeaturesThreshold
void AmplifyBloom::AmplifyBloomBase::set_FeaturesThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_FeaturesThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FeaturesThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_DebugToScreen
::AmplifyBloom::DebugToScreenEnum AmplifyBloom::AmplifyBloomBase::get_DebugToScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_DebugToScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugToScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::DebugToScreenEnum, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_DebugToScreen
void AmplifyBloom::AmplifyBloomBase::set_DebugToScreen(::AmplifyBloom::DebugToScreenEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_DebugToScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DebugToScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_UpscaleQuality
::AmplifyBloom::UpscaleQualityEnum AmplifyBloom::AmplifyBloomBase::get_UpscaleQuality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_UpscaleQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UpscaleQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::UpscaleQualityEnum, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_UpscaleQuality
void AmplifyBloom::AmplifyBloomBase::set_UpscaleQuality(::AmplifyBloom::UpscaleQualityEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_UpscaleQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UpscaleQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ShowDebugMessages
bool AmplifyBloom::AmplifyBloomBase::get_ShowDebugMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ShowDebugMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowDebugMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ShowDebugMessages
void AmplifyBloom::AmplifyBloomBase::set_ShowDebugMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ShowDebugMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowDebugMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_MainThresholdSize
::AmplifyBloom::MainThresholdSizeEnum AmplifyBloom::AmplifyBloomBase::get_MainThresholdSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_MainThresholdSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MainThresholdSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::MainThresholdSizeEnum, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_MainThresholdSize
void AmplifyBloom::AmplifyBloomBase::set_MainThresholdSize(::AmplifyBloom::MainThresholdSizeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_MainThresholdSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MainThresholdSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_TargetTexture
::UnityEngine::RenderTexture* AmplifyBloom::AmplifyBloomBase::get_TargetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_TargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_TargetTexture
void AmplifyBloom::AmplifyBloomBase::set_TargetTexture(::UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_TargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_MaskTexture
::UnityEngine::Texture* AmplifyBloom::AmplifyBloomBase::get_MaskTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_MaskTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_MaskTexture
void AmplifyBloom::AmplifyBloomBase::set_MaskTexture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_MaskTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaskTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ApplyBokehFilter
bool AmplifyBloom::AmplifyBloomBase::get_ApplyBokehFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ApplyBokehFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyBokehFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ApplyBokehFilter
void AmplifyBloom::AmplifyBloomBase::set_ApplyBokehFilter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ApplyBokehFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyBokehFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ApplyLensFlare
bool AmplifyBloom::AmplifyBloomBase::get_ApplyLensFlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ApplyLensFlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensFlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ApplyLensFlare
void AmplifyBloom::AmplifyBloomBase::set_ApplyLensFlare(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ApplyLensFlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensFlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.get_ApplyLensGlare
bool AmplifyBloom::AmplifyBloomBase::get_ApplyLensGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::get_ApplyLensGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBloomBase.set_ApplyLensGlare
void AmplifyBloom::AmplifyBloomBase::set_ApplyLensGlare(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBloomBase::set_ApplyLensGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyBloomEffect
#include "AmplifyBloom/AmplifyBloomEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.ApertureShape
#include "AmplifyBloom/ApertureShape.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.ApertureShape Square
::AmplifyBloom::ApertureShape AmplifyBloom::ApertureShape::_get_Square() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_get_Square");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::ApertureShape>("AmplifyBloom", "ApertureShape", "Square"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.ApertureShape Square
void AmplifyBloom::ApertureShape::_set_Square(::AmplifyBloom::ApertureShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_set_Square");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "ApertureShape", "Square", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.ApertureShape Hexagon
::AmplifyBloom::ApertureShape AmplifyBloom::ApertureShape::_get_Hexagon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_get_Hexagon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::ApertureShape>("AmplifyBloom", "ApertureShape", "Hexagon"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.ApertureShape Hexagon
void AmplifyBloom::ApertureShape::_set_Hexagon(::AmplifyBloom::ApertureShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_set_Hexagon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "ApertureShape", "Hexagon", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.ApertureShape Octagon
::AmplifyBloom::ApertureShape AmplifyBloom::ApertureShape::_get_Octagon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_get_Octagon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::ApertureShape>("AmplifyBloom", "ApertureShape", "Octagon"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.ApertureShape Octagon
void AmplifyBloom::ApertureShape::_set_Octagon(::AmplifyBloom::ApertureShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::_set_Octagon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "ApertureShape", "Octagon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::ApertureShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::ApertureShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyBokehData
#include "AmplifyBloom/AmplifyBokehData.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.RenderTexture BokehRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& AmplifyBloom::AmplifyBokehData::dyn_BokehRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokehData::dyn_BokehRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BokehRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector4[] Offsets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& AmplifyBloom::AmplifyBokehData::dyn_Offsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokehData::dyn_Offsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offsets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyBokehData.Destroy
void AmplifyBloom::AmplifyBokehData::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokehData::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyBokeh
#include "AmplifyBloom/AmplifyBokeh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyBloom.AmplifyBokehData
#include "AmplifyBloom/AmplifyBokehData.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 PerPassSampleCount
int AmplifyBloom::AmplifyBokeh::_get_PerPassSampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::_get_PerPassSampleCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyBokeh", "PerPassSampleCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PerPassSampleCount
void AmplifyBloom::AmplifyBokeh::_set_PerPassSampleCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::_set_PerPassSampleCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyBokeh", "PerPassSampleCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isActive
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBokeh::dyn_m_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_applyOnBloomSource
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyBokeh::dyn_m_applyOnBloomSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_applyOnBloomSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_applyOnBloomSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_bokehSampleRadius
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBokeh::dyn_m_bokehSampleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_bokehSampleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bokehSampleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_bokehCameraProperties
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyBokeh::dyn_m_bokehCameraProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_bokehCameraProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bokehCameraProperties"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_offsetRotation
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyBokeh::dyn_m_offsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_offsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_offsetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.ApertureShape m_apertureShape
[[deprecated("Use field access instead!")]] ::AmplifyBloom::ApertureShape& AmplifyBloom::AmplifyBokeh::dyn_m_apertureShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_apertureShape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_apertureShape"))->offset;
  return *reinterpret_cast<::AmplifyBloom::ApertureShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AmplifyBloom.AmplifyBokehData> m_bokehOffsets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyBloom::AmplifyBokehData*>*& AmplifyBloom::AmplifyBokeh::dyn_m_bokehOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::dyn_m_bokehOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bokehOffsets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyBloom::AmplifyBokehData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.Destroy
void AmplifyBloom::AmplifyBokeh::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::AmplifyBokeh*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.CreateBokehOffsets
void AmplifyBloom::AmplifyBokeh::CreateBokehOffsets(::AmplifyBloom::ApertureShape shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::CreateBokehOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBokehOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shape);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.CalculateBokehSamples
::ArrayW<::UnityEngine::Vector4> AmplifyBloom::AmplifyBokeh::CalculateBokehSamples(int sampleCount, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::CalculateBokehSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBokehSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector4>, false>(this, ___internal__method, sampleCount, angle);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.ApplyBokehFilter
void AmplifyBloom::AmplifyBokeh::ApplyBokehFilter(::UnityEngine::RenderTexture* source, ::UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::ApplyBokehFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBokehFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, material);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.OnAfterDeserialize
void AmplifyBloom::AmplifyBokeh::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::AmplifyBokeh*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.OnBeforeSerialize
void AmplifyBloom::AmplifyBokeh::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::AmplifyBokeh*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_ApertureShape
::AmplifyBloom::ApertureShape AmplifyBloom::AmplifyBokeh::get_ApertureShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_ApertureShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApertureShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::ApertureShape, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_ApertureShape
void AmplifyBloom::AmplifyBokeh::set_ApertureShape(::AmplifyBloom::ApertureShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_ApertureShape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApertureShape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_ApplyBokeh
bool AmplifyBloom::AmplifyBokeh::get_ApplyBokeh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_ApplyBokeh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyBokeh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_ApplyBokeh
void AmplifyBloom::AmplifyBokeh::set_ApplyBokeh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_ApplyBokeh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyBokeh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_ApplyOnBloomSource
bool AmplifyBloom::AmplifyBokeh::get_ApplyOnBloomSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_ApplyOnBloomSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyOnBloomSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_ApplyOnBloomSource
void AmplifyBloom::AmplifyBokeh::set_ApplyOnBloomSource(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_ApplyOnBloomSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyOnBloomSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_BokehSampleRadius
float AmplifyBloom::AmplifyBokeh::get_BokehSampleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_BokehSampleRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BokehSampleRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_BokehSampleRadius
void AmplifyBloom::AmplifyBokeh::set_BokehSampleRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_BokehSampleRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BokehSampleRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_OffsetRotation
float AmplifyBloom::AmplifyBokeh::get_OffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_OffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_OffsetRotation
void AmplifyBloom::AmplifyBokeh::set_OffsetRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_OffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_BokehCameraProperties
::UnityEngine::Vector4 AmplifyBloom::AmplifyBokeh::get_BokehCameraProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_BokehCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BokehCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_BokehCameraProperties
void AmplifyBloom::AmplifyBokeh::set_BokehCameraProperties(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_BokehCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BokehCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_Aperture
float AmplifyBloom::AmplifyBokeh::get_Aperture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_Aperture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aperture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_Aperture
void AmplifyBloom::AmplifyBokeh::set_Aperture(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_Aperture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aperture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_FocalLength
float AmplifyBloom::AmplifyBokeh::get_FocalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_FocalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FocalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_FocalLength
void AmplifyBloom::AmplifyBokeh::set_FocalLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_FocalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FocalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_FocalDistance
float AmplifyBloom::AmplifyBokeh::get_FocalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_FocalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FocalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_FocalDistance
void AmplifyBloom::AmplifyBokeh::set_FocalDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_FocalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FocalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.get_MaxCoCDiameter
float AmplifyBloom::AmplifyBokeh::get_MaxCoCDiameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::get_MaxCoCDiameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCoCDiameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyBokeh.set_MaxCoCDiameter
void AmplifyBloom::AmplifyBokeh::set_MaxCoCDiameter(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokeh::set_MaxCoCDiameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxCoCDiameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.GlareLibType
#include "AmplifyBloom/GlareLibType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType CheapLens
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_CheapLens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_CheapLens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "CheapLens"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType CheapLens
void AmplifyBloom::GlareLibType::_set_CheapLens(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_CheapLens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "CheapLens", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType CrossScreen
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_CrossScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_CrossScreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "CrossScreen"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType CrossScreen
void AmplifyBloom::GlareLibType::_set_CrossScreen(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_CrossScreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "CrossScreen", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType CrossScreenSpectral
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_CrossScreenSpectral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_CrossScreenSpectral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "CrossScreenSpectral"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType CrossScreenSpectral
void AmplifyBloom::GlareLibType::_set_CrossScreenSpectral(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_CrossScreenSpectral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "CrossScreenSpectral", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType SnowCross
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_SnowCross() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_SnowCross");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "SnowCross"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType SnowCross
void AmplifyBloom::GlareLibType::_set_SnowCross(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_SnowCross");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "SnowCross", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType SnowCrossSpectral
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_SnowCrossSpectral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_SnowCrossSpectral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "SnowCrossSpectral"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType SnowCrossSpectral
void AmplifyBloom::GlareLibType::_set_SnowCrossSpectral(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_SnowCrossSpectral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "SnowCrossSpectral", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType SunnyCross
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_SunnyCross() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_SunnyCross");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "SunnyCross"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType SunnyCross
void AmplifyBloom::GlareLibType::_set_SunnyCross(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_SunnyCross");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "SunnyCross", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType SunnyCrossSpectral
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_SunnyCrossSpectral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_SunnyCrossSpectral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "SunnyCrossSpectral"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType SunnyCrossSpectral
void AmplifyBloom::GlareLibType::_set_SunnyCrossSpectral(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_SunnyCrossSpectral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "SunnyCrossSpectral", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType VerticalSlits
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_VerticalSlits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_VerticalSlits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "VerticalSlits"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType VerticalSlits
void AmplifyBloom::GlareLibType::_set_VerticalSlits(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_VerticalSlits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "VerticalSlits", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType HorizontalSlits
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_HorizontalSlits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_HorizontalSlits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "HorizontalSlits"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType HorizontalSlits
void AmplifyBloom::GlareLibType::_set_HorizontalSlits(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_HorizontalSlits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "HorizontalSlits", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.GlareLibType Custom
::AmplifyBloom::GlareLibType AmplifyBloom::GlareLibType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::GlareLibType>("AmplifyBloom", "GlareLibType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.GlareLibType Custom
void AmplifyBloom::GlareLibType::_set_Custom(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "GlareLibType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::GlareLibType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareLibType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.GlareDefData
#include "AmplifyBloom/GlareDefData.hpp"
// Including type: AmplifyBloom.StarDefData
#include "AmplifyBloom/StarDefData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean FoldoutValue
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::GlareDefData::dyn_FoldoutValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::dyn_FoldoutValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FoldoutValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.StarLibType m_starType
[[deprecated("Use field access instead!")]] ::AmplifyBloom::StarLibType& AmplifyBloom::GlareDefData::dyn_m_starType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::dyn_m_starType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starType"))->offset;
  return *reinterpret_cast<::AmplifyBloom::StarLibType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_starInclination
[[deprecated("Use field access instead!")]] float& AmplifyBloom::GlareDefData::dyn_m_starInclination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::dyn_m_starInclination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starInclination"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_chromaticAberration
[[deprecated("Use field access instead!")]] float& AmplifyBloom::GlareDefData::dyn_m_chromaticAberration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::dyn_m_chromaticAberration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_chromaticAberration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.StarDefData m_customStarData
[[deprecated("Use field access instead!")]] ::AmplifyBloom::StarDefData*& AmplifyBloom::GlareDefData::dyn_m_customStarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::dyn_m_customStarData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_customStarData"))->offset;
  return *reinterpret_cast<::AmplifyBloom::StarDefData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.GlareDefData.get_StarType
::AmplifyBloom::StarLibType AmplifyBloom::GlareDefData::get_StarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::get_StarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::StarLibType, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.GlareDefData.set_StarType
void AmplifyBloom::GlareDefData::set_StarType(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::set_StarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.GlareDefData.get_StarInclination
float AmplifyBloom::GlareDefData::get_StarInclination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::get_StarInclination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarInclination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.GlareDefData.set_StarInclination
void AmplifyBloom::GlareDefData::set_StarInclination(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::set_StarInclination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarInclination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.GlareDefData.get_StarInclinationDeg
float AmplifyBloom::GlareDefData::get_StarInclinationDeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::get_StarInclinationDeg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarInclinationDeg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.GlareDefData.set_StarInclinationDeg
void AmplifyBloom::GlareDefData::set_StarInclinationDeg(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::set_StarInclinationDeg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarInclinationDeg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.GlareDefData.get_ChromaticAberration
float AmplifyBloom::GlareDefData::get_ChromaticAberration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::get_ChromaticAberration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChromaticAberration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.GlareDefData.set_ChromaticAberration
void AmplifyBloom::GlareDefData::set_ChromaticAberration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::set_ChromaticAberration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChromaticAberration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.GlareDefData.get_CustomStarData
::AmplifyBloom::StarDefData* AmplifyBloom::GlareDefData::get_CustomStarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::get_CustomStarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomStarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::StarDefData*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.GlareDefData.set_CustomStarData
void AmplifyBloom::GlareDefData::set_CustomStarData(::AmplifyBloom::StarDefData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::GlareDefData::set_CustomStarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomStarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyGlare
#include "AmplifyBloom/AmplifyGlare.hpp"
// Including type: AmplifyBloom.GlareDefData
#include "AmplifyBloom/GlareDefData.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: AmplifyBloom.StarDefData
#include "AmplifyBloom/StarDefData.hpp"
// Including type: AmplifyBloom.AmplifyGlareCache
#include "AmplifyBloom/AmplifyGlareCache.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxLineSamples
int AmplifyBloom::AmplifyGlare::_get_MaxLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_get_MaxLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyGlare", "MaxLineSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxLineSamples
void AmplifyBloom::AmplifyGlare::_set_MaxLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_set_MaxLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyGlare", "MaxLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxTotalSamples
int AmplifyBloom::AmplifyGlare::_get_MaxTotalSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_get_MaxTotalSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyGlare", "MaxTotalSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxTotalSamples
void AmplifyBloom::AmplifyGlare::_set_MaxTotalSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_set_MaxTotalSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyGlare", "MaxTotalSamples", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxStarLines
int AmplifyBloom::AmplifyGlare::_get_MaxStarLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_get_MaxStarLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyGlare", "MaxStarLines"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxStarLines
void AmplifyBloom::AmplifyGlare::_set_MaxStarLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_set_MaxStarLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyGlare", "MaxStarLines", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxPasses
int AmplifyBloom::AmplifyGlare::_get_MaxPasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_get_MaxPasses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyGlare", "MaxPasses"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxPasses
void AmplifyBloom::AmplifyGlare::_set_MaxPasses(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_set_MaxPasses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyGlare", "MaxPasses", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxCustomGlare
int AmplifyBloom::AmplifyGlare::_get_MaxCustomGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_get_MaxCustomGlare");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyGlare", "MaxCustomGlare"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxCustomGlare
void AmplifyBloom::AmplifyGlare::_set_MaxCustomGlare(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::_set_MaxCustomGlare");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyGlare", "MaxCustomGlare", value));
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.GlareDefData[] m_customGlareDef
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::GlareDefData*>& AmplifyBloom::AmplifyGlare::dyn_m_customGlareDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_customGlareDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_customGlareDef"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::GlareDefData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_customGlareDefIdx
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_customGlareDefIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_customGlareDefIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_customGlareDefIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_customGlareDefAmount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_customGlareDefAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_customGlareDefAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_customGlareDefAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_applyGlare
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyGlare::dyn_m_applyGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_applyGlare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_applyGlare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _overallTint
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& AmplifyBloom::AmplifyGlare::dyn__overallTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn__overallTint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overallTint"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_cromaticAberrationGrad
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& AmplifyBloom::AmplifyGlare::dyn_m_cromaticAberrationGrad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_cromaticAberrationGrad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cromaticAberrationGrad"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_glareMaxPassCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_glareMaxPassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_glareMaxPassCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glareMaxPassCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.StarDefData[] m_starDefArr
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::StarDefData*>& AmplifyBloom::AmplifyGlare::dyn_m_starDefArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_starDefArr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starDefArr"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::StarDefData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.GlareDefData[] m_glareDefArr
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::GlareDefData*>& AmplifyBloom::AmplifyGlare::dyn_m_glareDefArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_glareDefArr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glareDefArr"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::GlareDefData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[] m_weigthsMat
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Matrix4x4>& AmplifyBloom::AmplifyGlare::dyn_m_weigthsMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_weigthsMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_weigthsMat"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[] m_offsetsMat
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Matrix4x4>& AmplifyBloom::AmplifyGlare::dyn_m_offsetsMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_offsetsMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_offsetsMat"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_whiteReference
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& AmplifyBloom::AmplifyGlare::dyn_m_whiteReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_whiteReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_whiteReference"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_aTanFoV
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyGlare::dyn_m_aTanFoV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_aTanFoV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aTanFoV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.AmplifyGlareCache m_amplifyGlareCache
[[deprecated("Use field access instead!")]] ::AmplifyBloom::AmplifyGlareCache*& AmplifyBloom::AmplifyGlare::dyn_m_amplifyGlareCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_amplifyGlareCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_amplifyGlareCache"))->offset;
  return *reinterpret_cast<::AmplifyBloom::AmplifyGlareCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentWidth
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_currentWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_currentWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentHeight
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_currentHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_currentHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.GlareLibType m_currentGlareType
[[deprecated("Use field access instead!")]] ::AmplifyBloom::GlareLibType& AmplifyBloom::AmplifyGlare::dyn_m_currentGlareType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_currentGlareType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentGlareType"))->offset;
  return *reinterpret_cast<::AmplifyBloom::GlareLibType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentGlareIdx
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlare::dyn_m_currentGlareIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_currentGlareIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentGlareIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_perPassDisplacement
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyGlare::dyn_m_perPassDisplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_perPassDisplacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_perPassDisplacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_intensity
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyGlare::dyn_m_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_overallStreakScale
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyGlare::dyn_m_overallStreakScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_overallStreakScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overallStreakScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDirty
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyGlare::dyn_m_isDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn_m_isDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] _rtBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& AmplifyBloom::AmplifyGlare::dyn__rtBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::dyn__rtBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rtBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.Init
void AmplifyBloom::AmplifyGlare::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.Destroy
void AmplifyBloom::AmplifyGlare::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::AmplifyGlare*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.SetDirty
void AmplifyBloom::AmplifyGlare::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.OnRenderFromCache
void AmplifyBloom::AmplifyGlare::OnRenderFromCache(::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* dest, ::UnityEngine::Material* material, float glareIntensity, float cameraRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::OnRenderFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(glareIntensity), ::il2cpp_utils::ExtractType(cameraRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest, material, glareIntensity, cameraRotation);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.UpdateMatrixesForPass
void AmplifyBloom::AmplifyGlare::UpdateMatrixesForPass(::UnityEngine::Material* material, ::ArrayW<::UnityEngine::Vector4> offsets, ::ArrayW<::UnityEngine::Vector4> weights, float glareIntensity, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::UpdateMatrixesForPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMatrixesForPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(offsets), ::il2cpp_utils::ExtractType(weights), ::il2cpp_utils::ExtractType(glareIntensity), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, offsets, weights, glareIntensity, rotation);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.OnRenderImage
void AmplifyBloom::AmplifyGlare::OnRenderImage(::UnityEngine::Material* material, ::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* dest, float cameraRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(cameraRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, source, dest, cameraRot);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_CurrentGlare
::AmplifyBloom::GlareLibType AmplifyBloom::AmplifyGlare::get_CurrentGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_CurrentGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::GlareLibType, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_CurrentGlare
void AmplifyBloom::AmplifyGlare::set_CurrentGlare(::AmplifyBloom::GlareLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_CurrentGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_GlareMaxPassCount
int AmplifyBloom::AmplifyGlare::get_GlareMaxPassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_GlareMaxPassCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlareMaxPassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_GlareMaxPassCount
void AmplifyBloom::AmplifyGlare::set_GlareMaxPassCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_GlareMaxPassCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlareMaxPassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_PerPassDisplacement
float AmplifyBloom::AmplifyGlare::get_PerPassDisplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_PerPassDisplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PerPassDisplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_PerPassDisplacement
void AmplifyBloom::AmplifyGlare::set_PerPassDisplacement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_PerPassDisplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PerPassDisplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_Intensity
float AmplifyBloom::AmplifyGlare::get_Intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_Intensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Intensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_Intensity
void AmplifyBloom::AmplifyGlare::set_Intensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_Intensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Intensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_OverallTint
::UnityEngine::Color AmplifyBloom::AmplifyGlare::get_OverallTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_OverallTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverallTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_OverallTint
void AmplifyBloom::AmplifyGlare::set_OverallTint(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_OverallTint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverallTint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_ApplyLensGlare
bool AmplifyBloom::AmplifyGlare::get_ApplyLensGlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_ApplyLensGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_ApplyLensGlare
void AmplifyBloom::AmplifyGlare::set_ApplyLensGlare(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_ApplyLensGlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensGlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_CromaticColorGradient
::UnityEngine::Gradient* AmplifyBloom::AmplifyGlare::get_CromaticColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_CromaticColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CromaticColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_CromaticColorGradient
void AmplifyBloom::AmplifyGlare::set_CromaticColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_CromaticColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CromaticColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_OverallStreakScale
float AmplifyBloom::AmplifyGlare::get_OverallStreakScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_OverallStreakScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverallStreakScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_OverallStreakScale
void AmplifyBloom::AmplifyGlare::set_OverallStreakScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_OverallStreakScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverallStreakScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_CustomGlareDef
::ArrayW<::AmplifyBloom::GlareDefData*> AmplifyBloom::AmplifyGlare::get_CustomGlareDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_CustomGlareDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomGlareDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::AmplifyBloom::GlareDefData*>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_CustomGlareDef
void AmplifyBloom::AmplifyGlare::set_CustomGlareDef(::ArrayW<::AmplifyBloom::GlareDefData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_CustomGlareDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomGlareDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_CustomGlareDefIdx
int AmplifyBloom::AmplifyGlare::get_CustomGlareDefIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_CustomGlareDefIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomGlareDefIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_CustomGlareDefIdx
void AmplifyBloom::AmplifyGlare::set_CustomGlareDefIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_CustomGlareDefIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomGlareDefIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.get_CustomGlareDefAmount
int AmplifyBloom::AmplifyGlare::get_CustomGlareDefAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::get_CustomGlareDefAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomGlareDefAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyGlare.set_CustomGlareDefAmount
void AmplifyBloom::AmplifyGlare::set_CustomGlareDefAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlare::set_CustomGlareDefAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomGlareDefAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyPassCache
#include "AmplifyBloom/AmplifyPassCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector4[] Offsets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& AmplifyBloom::AmplifyPassCache::dyn_Offsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyPassCache::dyn_Offsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offsets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector4[] Weights
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& AmplifyBloom::AmplifyPassCache::dyn_Weights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyPassCache::dyn_Weights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weights"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyPassCache.Destroy
void AmplifyBloom::AmplifyPassCache::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyPassCache::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyStarlineCache
#include "AmplifyBloom/AmplifyStarlineCache.hpp"
// Including type: AmplifyBloom.AmplifyPassCache
#include "AmplifyBloom/AmplifyPassCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: AmplifyBloom.AmplifyPassCache[] Passes
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::AmplifyPassCache*>& AmplifyBloom::AmplifyStarlineCache::dyn_Passes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyStarlineCache::dyn_Passes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Passes"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::AmplifyPassCache*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyStarlineCache.Destroy
void AmplifyBloom::AmplifyStarlineCache::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyStarlineCache::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyGlareCache
#include "AmplifyBloom/AmplifyGlareCache.hpp"
// Including type: AmplifyBloom.AmplifyStarlineCache
#include "AmplifyBloom/AmplifyStarlineCache.hpp"
// Including type: AmplifyBloom.GlareDefData
#include "AmplifyBloom/GlareDefData.hpp"
// Including type: AmplifyBloom.StarDefData
#include "AmplifyBloom/StarDefData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: AmplifyBloom.AmplifyStarlineCache[] Starlines
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::AmplifyStarlineCache*>& AmplifyBloom::AmplifyGlareCache::dyn_Starlines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_Starlines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Starlines"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::AmplifyStarlineCache*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector4 AverageWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyGlareCache::dyn_AverageWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_AverageWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AverageWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector4[,] CromaticAberrationMat
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& AmplifyBloom::AmplifyGlareCache::dyn_CromaticAberrationMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_CromaticAberrationMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CromaticAberrationMat"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 TotalRT
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlareCache::dyn_TotalRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_TotalRT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalRT"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: AmplifyBloom.GlareDefData GlareDef
[[deprecated("Use field access instead!")]] ::AmplifyBloom::GlareDefData*& AmplifyBloom::AmplifyGlareCache::dyn_GlareDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_GlareDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlareDef"))->offset;
  return *reinterpret_cast<::AmplifyBloom::GlareDefData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: AmplifyBloom.StarDefData StarDef
[[deprecated("Use field access instead!")]] ::AmplifyBloom::StarDefData*& AmplifyBloom::AmplifyGlareCache::dyn_StarDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_StarDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StarDef"))->offset;
  return *reinterpret_cast<::AmplifyBloom::StarDefData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 CurrentPassCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyGlareCache::dyn_CurrentPassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::dyn_CurrentPassCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentPassCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyGlareCache.Destroy
void AmplifyBloom::AmplifyGlareCache::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyGlareCache::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.IAmplifyItem
#include "AmplifyBloom/IAmplifyItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AmplifyBloom.IAmplifyItem.Destroy
void AmplifyBloom::IAmplifyItem::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::IAmplifyItem::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::IAmplifyItem*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyLensFlare
#include "AmplifyBloom/AmplifyLensFlare.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LUTTextureWidth
int AmplifyBloom::AmplifyLensFlare::_get_LUTTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::_get_LUTTextureWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyLensFlare", "LUTTextureWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LUTTextureWidth
void AmplifyBloom::AmplifyLensFlare::_set_LUTTextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::_set_LUTTextureWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyLensFlare", "LUTTextureWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_overallIntensity
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyLensFlare::dyn_m_overallIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_overallIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overallIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_normalizedGhostIntensity
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyLensFlare::dyn_m_normalizedGhostIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_normalizedGhostIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_normalizedGhostIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_normalizedHaloIntensity
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyLensFlare::dyn_m_normalizedHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_normalizedHaloIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_normalizedHaloIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_applyLensFlare
[[deprecated("Use field access instead!")]] bool& AmplifyBloom::AmplifyLensFlare::dyn_m_applyLensFlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_applyLensFlare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_applyLensFlare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_lensFlareGhostAmount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGhostAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_lensFlareGhostsParams
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostsParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostsParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGhostsParams"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lensFlareGhostChrDistortion
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostChrDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGhostChrDistortion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGhostChrDistortion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_lensGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& AmplifyBloom::AmplifyLensFlare::dyn_m_lensGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D m_lensFlareGradTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGradTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGradTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGradTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] m_lensFlareGradColor
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGradColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGradColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGradColor"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 m_lensFlareHaloParams
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareHaloParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareHaloParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareHaloParams"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lensFlareHaloChrDistortion
[[deprecated("Use field access instead!")]] float& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareHaloChrDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareHaloChrDistortion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareHaloChrDistortion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_lensFlareGaussianBlurAmount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGaussianBlurAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::dyn_m_lensFlareGaussianBlurAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lensFlareGaussianBlurAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.Init
void AmplifyBloom::AmplifyLensFlare::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.Destroy
void AmplifyBloom::AmplifyLensFlare::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::AmplifyBloom::AmplifyLensFlare*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.CreateLUTexture
void AmplifyBloom::AmplifyLensFlare::CreateLUTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::CreateLUTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLUTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.ApplyFlare
::UnityEngine::RenderTexture* AmplifyBloom::AmplifyLensFlare::ApplyFlare(::UnityEngine::Material* material, ::UnityEngine::RenderTexture* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::ApplyFlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyFlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method, material, source);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.TextureFromGradient
void AmplifyBloom::AmplifyLensFlare::TextureFromGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::TextureFromGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextureFromGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_ApplyLensFlare
bool AmplifyBloom::AmplifyLensFlare::get_ApplyLensFlare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_ApplyLensFlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyLensFlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_ApplyLensFlare
void AmplifyBloom::AmplifyLensFlare::set_ApplyLensFlare(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_ApplyLensFlare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ApplyLensFlare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_OverallIntensity
float AmplifyBloom::AmplifyLensFlare::get_OverallIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_OverallIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverallIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_OverallIntensity
void AmplifyBloom::AmplifyLensFlare::set_OverallIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_OverallIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverallIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostAmount
int AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostAmount
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostsParams
::UnityEngine::Vector4 AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostsParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostsParams
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsParams(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostsParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareNormalizedGhostsIntensity
float AmplifyBloom::AmplifyLensFlare::get_LensFlareNormalizedGhostsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareNormalizedGhostsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareNormalizedGhostsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareNormalizedGhostsIntensity
void AmplifyBloom::AmplifyLensFlare::set_LensFlareNormalizedGhostsIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareNormalizedGhostsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareNormalizedGhostsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostsIntensity
float AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostsIntensity
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostsDispersal
float AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsDispersal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsDispersal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostsDispersal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostsDispersal
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsDispersal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsDispersal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostsDispersal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostsPowerFactor
float AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsPowerFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsPowerFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostsPowerFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostsPowerFactor
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsPowerFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsPowerFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostsPowerFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostsPowerFalloff
float AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsPowerFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostsPowerFalloff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostsPowerFalloff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostsPowerFalloff
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsPowerFalloff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostsPowerFalloff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostsPowerFalloff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGradient
::UnityEngine::Gradient* AmplifyBloom::AmplifyLensFlare::get_LensFlareGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGradient
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloParams
::UnityEngine::Vector4 AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloParams
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloParams(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareNormalizedHaloIntensity
float AmplifyBloom::AmplifyLensFlare::get_LensFlareNormalizedHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareNormalizedHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareNormalizedHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareNormalizedHaloIntensity
void AmplifyBloom::AmplifyLensFlare::set_LensFlareNormalizedHaloIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareNormalizedHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareNormalizedHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloIntensity
float AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloIntensity
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloWidth
float AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloWidth
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloPowerFactor
float AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloPowerFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloPowerFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloPowerFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloPowerFactor
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloPowerFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloPowerFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloPowerFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloPowerFalloff
float AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloPowerFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloPowerFalloff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloPowerFalloff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloPowerFalloff
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloPowerFalloff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloPowerFalloff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloPowerFalloff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGhostChrDistortion
float AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostChrDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGhostChrDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGhostChrDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGhostChrDistortion
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostChrDistortion(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGhostChrDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGhostChrDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareHaloChrDistortion
float AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloChrDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareHaloChrDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareHaloChrDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareHaloChrDistortion
void AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloChrDistortion(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareHaloChrDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareHaloChrDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.get_LensFlareGaussianBlurAmount
int AmplifyBloom::AmplifyLensFlare::get_LensFlareGaussianBlurAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::get_LensFlareGaussianBlurAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LensFlareGaussianBlurAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyLensFlare.set_LensFlareGaussianBlurAmount
void AmplifyBloom::AmplifyLensFlare::set_LensFlareGaussianBlurAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyLensFlare::set_LensFlareGaussianBlurAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LensFlareGaussianBlurAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.StarLineData
#include "AmplifyBloom/StarLineData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 PassCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::StarLineData::dyn_PassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLineData::dyn_PassCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PassCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single SampleLength
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarLineData::dyn_SampleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLineData::dyn_SampleLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single Attenuation
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarLineData::dyn_Attenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLineData::dyn_Attenuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attenuation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single Inclination
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarLineData::dyn_Inclination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLineData::dyn_Inclination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Inclination"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.StarLibType
#include "AmplifyBloom/StarLibType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.StarLibType Cross
::AmplifyBloom::StarLibType AmplifyBloom::StarLibType::_get_Cross() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_get_Cross");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::StarLibType>("AmplifyBloom", "StarLibType", "Cross"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.StarLibType Cross
void AmplifyBloom::StarLibType::_set_Cross(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_set_Cross");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "StarLibType", "Cross", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.StarLibType Cross_Filter
::AmplifyBloom::StarLibType AmplifyBloom::StarLibType::_get_Cross_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_get_Cross_Filter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::StarLibType>("AmplifyBloom", "StarLibType", "Cross_Filter"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.StarLibType Cross_Filter
void AmplifyBloom::StarLibType::_set_Cross_Filter(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_set_Cross_Filter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "StarLibType", "Cross_Filter", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.StarLibType Snow_Cross
::AmplifyBloom::StarLibType AmplifyBloom::StarLibType::_get_Snow_Cross() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_get_Snow_Cross");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::StarLibType>("AmplifyBloom", "StarLibType", "Snow_Cross"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.StarLibType Snow_Cross
void AmplifyBloom::StarLibType::_set_Snow_Cross(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_set_Snow_Cross");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "StarLibType", "Snow_Cross", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.StarLibType Vertical
::AmplifyBloom::StarLibType AmplifyBloom::StarLibType::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::StarLibType>("AmplifyBloom", "StarLibType", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.StarLibType Vertical
void AmplifyBloom::StarLibType::_set_Vertical(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "StarLibType", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.StarLibType Sunny_Cross
::AmplifyBloom::StarLibType AmplifyBloom::StarLibType::_get_Sunny_Cross() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_get_Sunny_Cross");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::StarLibType>("AmplifyBloom", "StarLibType", "Sunny_Cross"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.StarLibType Sunny_Cross
void AmplifyBloom::StarLibType::_set_Sunny_Cross(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::_set_Sunny_Cross");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "StarLibType", "Sunny_Cross", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::StarLibType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLibType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.StarDefData
#include "AmplifyBloom/StarDefData.hpp"
// Including type: AmplifyBloom.StarLineData
#include "AmplifyBloom/StarLineData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.StarLibType m_starType
[[deprecated("Use field access instead!")]] ::AmplifyBloom::StarLibType& AmplifyBloom::StarDefData::dyn_m_starType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_starType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starType"))->offset;
  return *reinterpret_cast<::AmplifyBloom::StarLibType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_starName
[[deprecated("Use field access instead!")]] ::StringW& AmplifyBloom::StarDefData::dyn_m_starName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_starName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_starlinesCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::StarDefData::dyn_m_starlinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_starlinesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starlinesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_passCount
[[deprecated("Use field access instead!")]] int& AmplifyBloom::StarDefData::dyn_m_passCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_passCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_passCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_sampleLength
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_sampleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_sampleLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sampleLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_attenuation
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_attenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_attenuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_attenuation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_inclination
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_inclination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_inclination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inclination"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_rotation
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AmplifyBloom.StarLineData[] m_starLinesArr
[[deprecated("Use field access instead!")]] ::ArrayW<::AmplifyBloom::StarLineData*>& AmplifyBloom::StarDefData::dyn_m_starLinesArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_starLinesArr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_starLinesArr"))->offset;
  return *reinterpret_cast<::ArrayW<::AmplifyBloom::StarLineData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_customIncrement
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_customIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_customIncrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_customIncrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_longAttenuation
[[deprecated("Use field access instead!")]] float& AmplifyBloom::StarDefData::dyn_m_longAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::dyn_m_longAttenuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_longAttenuation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.StarDefData.Destroy
void AmplifyBloom::StarDefData::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.CalculateStarData
void AmplifyBloom::StarDefData::CalculateStarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::CalculateStarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateStarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_StarType
::AmplifyBloom::StarLibType AmplifyBloom::StarDefData::get_StarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_StarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::StarLibType, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_StarType
void AmplifyBloom::StarDefData::set_StarType(::AmplifyBloom::StarLibType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_StarType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_StarName
::StringW AmplifyBloom::StarDefData::get_StarName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_StarName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_StarName
void AmplifyBloom::StarDefData::set_StarName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_StarName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_StarlinesCount
int AmplifyBloom::StarDefData::get_StarlinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_StarlinesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarlinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_StarlinesCount
void AmplifyBloom::StarDefData::set_StarlinesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_StarlinesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StarlinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_PassCount
int AmplifyBloom::StarDefData::get_PassCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_PassCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_PassCount
void AmplifyBloom::StarDefData::set_PassCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_PassCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PassCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_SampleLength
float AmplifyBloom::StarDefData::get_SampleLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_SampleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SampleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_SampleLength
void AmplifyBloom::StarDefData::set_SampleLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_SampleLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SampleLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_Attenuation
float AmplifyBloom::StarDefData::get_Attenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_Attenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_Attenuation
void AmplifyBloom::StarDefData::set_Attenuation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_Attenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Attenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_Inclination
float AmplifyBloom::StarDefData::get_Inclination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_Inclination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inclination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_Inclination
void AmplifyBloom::StarDefData::set_Inclination(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_Inclination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inclination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_CameraRotInfluence
float AmplifyBloom::StarDefData::get_CameraRotInfluence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_CameraRotInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CameraRotInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_CameraRotInfluence
void AmplifyBloom::StarDefData::set_CameraRotInfluence(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_CameraRotInfluence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CameraRotInfluence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_StarLinesArr
::ArrayW<::AmplifyBloom::StarLineData*> AmplifyBloom::StarDefData::get_StarLinesArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_StarLinesArr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StarLinesArr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::AmplifyBloom::StarLineData*>, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_CustomIncrement
float AmplifyBloom::StarDefData::get_CustomIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_CustomIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_CustomIncrement
void AmplifyBloom::StarDefData::set_CustomIncrement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_CustomIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AmplifyBloom.StarDefData.get_LongAttenuation
float AmplifyBloom::StarDefData::get_LongAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::get_LongAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.StarDefData.set_LongAttenuation
void AmplifyBloom::StarDefData::set_LongAttenuation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarDefData::set_LongAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.LogType
#include "AmplifyBloom/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.LogType Normal
::AmplifyBloom::LogType AmplifyBloom::LogType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::LogType>("AmplifyBloom", "LogType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.LogType Normal
void AmplifyBloom::LogType::_set_Normal(::AmplifyBloom::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "LogType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.LogType Warning
::AmplifyBloom::LogType AmplifyBloom::LogType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::LogType>("AmplifyBloom", "LogType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.LogType Warning
void AmplifyBloom::LogType::_set_Warning(::AmplifyBloom::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "LogType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyBloom.LogType Error
::AmplifyBloom::LogType AmplifyBloom::LogType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyBloom::LogType>("AmplifyBloom", "LogType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyBloom.LogType Error
void AmplifyBloom::LogType::_set_Error(::AmplifyBloom::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "LogType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyBloom::LogType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::LogType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyBloom.AmplifyUtils
#include "AmplifyBloom/AmplifyUtils.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: AmplifyBloom.LogType
#include "AmplifyBloom/LogType.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaskTextureId
int AmplifyBloom::AmplifyUtils::_get_MaskTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_MaskTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "MaskTextureId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaskTextureId
void AmplifyBloom::AmplifyUtils::_set_MaskTextureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_MaskTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "MaskTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BlurRadiusId
int AmplifyBloom::AmplifyUtils::_get_BlurRadiusId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_BlurRadiusId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "BlurRadiusId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BlurRadiusId
void AmplifyBloom::AmplifyUtils::_set_BlurRadiusId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_BlurRadiusId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "BlurRadiusId", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HighPrecisionKeyword
::StringW AmplifyBloom::AmplifyUtils::_get_HighPrecisionKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_HighPrecisionKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyBloom", "AmplifyUtils", "HighPrecisionKeyword"));
}
// Autogenerated static field setter
// Set static field: static public System.String HighPrecisionKeyword
void AmplifyBloom::AmplifyUtils::_set_HighPrecisionKeyword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_HighPrecisionKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "HighPrecisionKeyword", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderModeTag
::StringW AmplifyBloom::AmplifyUtils::_get_ShaderModeTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_ShaderModeTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyBloom", "AmplifyUtils", "ShaderModeTag"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderModeTag
void AmplifyBloom::AmplifyUtils::_set_ShaderModeTag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_ShaderModeTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "ShaderModeTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderModeValue
::StringW AmplifyBloom::AmplifyUtils::_get_ShaderModeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_ShaderModeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyBloom", "AmplifyUtils", "ShaderModeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderModeValue
void AmplifyBloom::AmplifyUtils::_set_ShaderModeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_ShaderModeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "ShaderModeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DebugStr
::StringW AmplifyBloom::AmplifyUtils::_get_DebugStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_DebugStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyBloom", "AmplifyUtils", "DebugStr"));
}
// Autogenerated static field setter
// Set static field: static public System.String DebugStr
void AmplifyBloom::AmplifyUtils::_set_DebugStr(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_DebugStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "DebugStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 UpscaleContributionId
int AmplifyBloom::AmplifyUtils::_get_UpscaleContributionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_UpscaleContributionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "UpscaleContributionId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UpscaleContributionId
void AmplifyBloom::AmplifyUtils::_set_UpscaleContributionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_UpscaleContributionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "UpscaleContributionId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SourceContributionId
int AmplifyBloom::AmplifyUtils::_get_SourceContributionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_SourceContributionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "SourceContributionId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SourceContributionId
void AmplifyBloom::AmplifyUtils::_set_SourceContributionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_SourceContributionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "SourceContributionId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensStarburstRTId
int AmplifyBloom::AmplifyUtils::_get_LensStarburstRTId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensStarburstRTId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensStarburstRTId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensStarburstRTId
void AmplifyBloom::AmplifyUtils::_set_LensStarburstRTId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensStarburstRTId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensStarburstRTId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensDirtRTId
int AmplifyBloom::AmplifyUtils::_get_LensDirtRTId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensDirtRTId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensDirtRTId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensDirtRTId
void AmplifyBloom::AmplifyUtils::_set_LensDirtRTId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensDirtRTId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensDirtRTId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareRTId
int AmplifyBloom::AmplifyUtils::_get_LensFlareRTId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareRTId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareRTId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareRTId
void AmplifyBloom::AmplifyUtils::_set_LensFlareRTId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareRTId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareRTId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensGlareRTId
int AmplifyBloom::AmplifyUtils::_get_LensGlareRTId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensGlareRTId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensGlareRTId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensGlareRTId
void AmplifyBloom::AmplifyUtils::_set_LensGlareRTId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensGlareRTId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensGlareRTId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] MipResultsRTS
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_MipResultsRTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_MipResultsRTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "MipResultsRTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] MipResultsRTS
void AmplifyBloom::AmplifyUtils::_set_MipResultsRTS(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_MipResultsRTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "MipResultsRTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] AnamorphicRTS
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_AnamorphicRTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_AnamorphicRTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "AnamorphicRTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] AnamorphicRTS
void AmplifyBloom::AmplifyUtils::_set_AnamorphicRTS(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_AnamorphicRTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "AnamorphicRTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] AnamorphicGlareWeightsMatStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareWeightsMatStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareWeightsMatStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareWeightsMatStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] AnamorphicGlareWeightsMatStr
void AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareWeightsMatStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareWeightsMatStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareWeightsMatStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] AnamorphicGlareOffsetsMatStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareOffsetsMatStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareOffsetsMatStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareOffsetsMatStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] AnamorphicGlareOffsetsMatStr
void AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareOffsetsMatStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareOffsetsMatStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareOffsetsMatStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] AnamorphicGlareWeightsStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareWeightsStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_AnamorphicGlareWeightsStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareWeightsStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] AnamorphicGlareWeightsStr
void AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareWeightsStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_AnamorphicGlareWeightsStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "AnamorphicGlareWeightsStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] UpscaleWeightsStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_UpscaleWeightsStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_UpscaleWeightsStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "UpscaleWeightsStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] UpscaleWeightsStr
void AmplifyBloom::AmplifyUtils::_set_UpscaleWeightsStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_UpscaleWeightsStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "UpscaleWeightsStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] LensDirtWeightsStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_LensDirtWeightsStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensDirtWeightsStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "LensDirtWeightsStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] LensDirtWeightsStr
void AmplifyBloom::AmplifyUtils::_set_LensDirtWeightsStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensDirtWeightsStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensDirtWeightsStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32[] LensStarburstWeightsStr
::ArrayW<int> AmplifyBloom::AmplifyUtils::_get_LensStarburstWeightsStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensStarburstWeightsStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("AmplifyBloom", "AmplifyUtils", "LensStarburstWeightsStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32[] LensStarburstWeightsStr
void AmplifyBloom::AmplifyUtils::_set_LensStarburstWeightsStr(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensStarburstWeightsStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensStarburstWeightsStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BloomRangeId
int AmplifyBloom::AmplifyUtils::_get_BloomRangeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_BloomRangeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "BloomRangeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BloomRangeId
void AmplifyBloom::AmplifyUtils::_set_BloomRangeId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_BloomRangeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "BloomRangeId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensDirtStrengthId
int AmplifyBloom::AmplifyUtils::_get_LensDirtStrengthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensDirtStrengthId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensDirtStrengthId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensDirtStrengthId
void AmplifyBloom::AmplifyUtils::_set_LensDirtStrengthId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensDirtStrengthId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensDirtStrengthId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BloomParamsId
int AmplifyBloom::AmplifyUtils::_get_BloomParamsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_BloomParamsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "BloomParamsId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BloomParamsId
void AmplifyBloom::AmplifyUtils::_set_BloomParamsId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_BloomParamsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "BloomParamsId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 TempFilterValueId
int AmplifyBloom::AmplifyUtils::_get_TempFilterValueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_TempFilterValueId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "TempFilterValueId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 TempFilterValueId
void AmplifyBloom::AmplifyUtils::_set_TempFilterValueId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_TempFilterValueId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "TempFilterValueId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareStarMatrixId
int AmplifyBloom::AmplifyUtils::_get_LensFlareStarMatrixId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareStarMatrixId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareStarMatrixId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareStarMatrixId
void AmplifyBloom::AmplifyUtils::_set_LensFlareStarMatrixId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareStarMatrixId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareStarMatrixId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareStarburstStrengthId
int AmplifyBloom::AmplifyUtils::_get_LensFlareStarburstStrengthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareStarburstStrengthId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareStarburstStrengthId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareStarburstStrengthId
void AmplifyBloom::AmplifyUtils::_set_LensFlareStarburstStrengthId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareStarburstStrengthId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareStarburstStrengthId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareGhostsParamsId
int AmplifyBloom::AmplifyUtils::_get_LensFlareGhostsParamsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareGhostsParamsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareGhostsParamsId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareGhostsParamsId
void AmplifyBloom::AmplifyUtils::_set_LensFlareGhostsParamsId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareGhostsParamsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareGhostsParamsId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareLUTId
int AmplifyBloom::AmplifyUtils::_get_LensFlareLUTId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareLUTId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareLUTId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareLUTId
void AmplifyBloom::AmplifyUtils::_set_LensFlareLUTId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareLUTId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareLUTId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareHaloParamsId
int AmplifyBloom::AmplifyUtils::_get_LensFlareHaloParamsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareHaloParamsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareHaloParamsId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareHaloParamsId
void AmplifyBloom::AmplifyUtils::_set_LensFlareHaloParamsId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareHaloParamsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareHaloParamsId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareGhostChrDistortionId
int AmplifyBloom::AmplifyUtils::_get_LensFlareGhostChrDistortionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareGhostChrDistortionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareGhostChrDistortionId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareGhostChrDistortionId
void AmplifyBloom::AmplifyUtils::_set_LensFlareGhostChrDistortionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareGhostChrDistortionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareGhostChrDistortionId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LensFlareHaloChrDistortionId
int AmplifyBloom::AmplifyUtils::_get_LensFlareHaloChrDistortionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_LensFlareHaloChrDistortionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "LensFlareHaloChrDistortionId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LensFlareHaloChrDistortionId
void AmplifyBloom::AmplifyUtils::_set_LensFlareHaloChrDistortionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_LensFlareHaloChrDistortionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "LensFlareHaloChrDistortionId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 BokehParamsId
int AmplifyBloom::AmplifyUtils::_get_BokehParamsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_BokehParamsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("AmplifyBloom", "AmplifyUtils", "BokehParamsId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BokehParamsId
void AmplifyBloom::AmplifyUtils::_set_BokehParamsId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_BokehParamsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "BokehParamsId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureFormat CurrentRTFormat
::UnityEngine::RenderTextureFormat AmplifyBloom::AmplifyUtils::_get_CurrentRTFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_CurrentRTFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderTextureFormat>("AmplifyBloom", "AmplifyUtils", "CurrentRTFormat"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureFormat CurrentRTFormat
void AmplifyBloom::AmplifyUtils::_set_CurrentRTFormat(::UnityEngine::RenderTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_CurrentRTFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "CurrentRTFormat", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FilterMode CurrentFilterMode
::UnityEngine::FilterMode AmplifyBloom::AmplifyUtils::_get_CurrentFilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_CurrentFilterMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FilterMode>("AmplifyBloom", "AmplifyUtils", "CurrentFilterMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FilterMode CurrentFilterMode
void AmplifyBloom::AmplifyUtils::_set_CurrentFilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_CurrentFilterMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "CurrentFilterMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextureWrapMode CurrentWrapMode
::UnityEngine::TextureWrapMode AmplifyBloom::AmplifyUtils::_get_CurrentWrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_CurrentWrapMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TextureWrapMode>("AmplifyBloom", "AmplifyUtils", "CurrentWrapMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextureWrapMode CurrentWrapMode
void AmplifyBloom::AmplifyUtils::_set_CurrentWrapMode(::UnityEngine::TextureWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_CurrentWrapMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "CurrentWrapMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderTextureReadWrite CurrentReadWriteMode
::UnityEngine::RenderTextureReadWrite AmplifyBloom::AmplifyUtils::_get_CurrentReadWriteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_CurrentReadWriteMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderTextureReadWrite>("AmplifyBloom", "AmplifyUtils", "CurrentReadWriteMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderTextureReadWrite CurrentReadWriteMode
void AmplifyBloom::AmplifyUtils::_set_CurrentReadWriteMode(::UnityEngine::RenderTextureReadWrite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_CurrentReadWriteMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "CurrentReadWriteMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IsInitialized
bool AmplifyBloom::AmplifyUtils::_get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get_IsInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("AmplifyBloom", "AmplifyUtils", "IsInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IsInitialized
void AmplifyBloom::AmplifyUtils::_set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set_IsInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "IsInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.RenderTexture> _allocatedRT
::System::Collections::Generic::List_1<::UnityEngine::RenderTexture*>* AmplifyBloom::AmplifyUtils::_get__allocatedRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_get__allocatedRT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::RenderTexture*>*>("AmplifyBloom", "AmplifyUtils", "_allocatedRT"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.RenderTexture> _allocatedRT
void AmplifyBloom::AmplifyUtils::_set__allocatedRT(::System::Collections::Generic::List_1<::UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::_set__allocatedRT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "AmplifyUtils", "_allocatedRT", value));
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.InitializeIds
void AmplifyBloom::AmplifyUtils::InitializeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::InitializeIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "InitializeIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.DebugLog
void AmplifyBloom::AmplifyUtils::DebugLog(::StringW value, ::AmplifyBloom::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::DebugLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "DebugLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.GetTempRenderTarget
::UnityEngine::RenderTexture* AmplifyBloom::AmplifyUtils::GetTempRenderTarget(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::GetTempRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "GetTempRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, width, height);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.ReleaseTempRenderTarget
void AmplifyBloom::AmplifyUtils::ReleaseTempRenderTarget(::UnityEngine::RenderTexture* renderTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::ReleaseTempRenderTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "ReleaseTempRenderTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTarget);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.ReleaseAllRT
void AmplifyBloom::AmplifyUtils::ReleaseAllRT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::ReleaseAllRT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "ReleaseAllRT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils.EnsureKeywordEnabled
void AmplifyBloom::AmplifyUtils::EnsureKeywordEnabled(::UnityEngine::Material* mat, ::StringW keyword, bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::EnsureKeywordEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", "EnsureKeywordEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mat, keyword, state);
}
// Autogenerated method: AmplifyBloom.AmplifyUtils..cctor
void AmplifyBloom::AmplifyUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "AmplifyUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AmplifyBloom.VersionInfo
#include "AmplifyBloom/VersionInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Major
uint8_t AmplifyBloom::VersionInfo::_get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_get_Major");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyBloom", "VersionInfo", "Major"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Major
void AmplifyBloom::VersionInfo::_set_Major(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_set_Major");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "VersionInfo", "Major", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Minor
uint8_t AmplifyBloom::VersionInfo::_get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_get_Minor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyBloom", "VersionInfo", "Minor"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Minor
void AmplifyBloom::VersionInfo::_set_Minor(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_set_Minor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "VersionInfo", "Minor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Release
uint8_t AmplifyBloom::VersionInfo::_get_Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_get_Release");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyBloom", "VersionInfo", "Release"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Release
void AmplifyBloom::VersionInfo::_set_Release(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_set_Release");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "VersionInfo", "Release", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StageSuffix
::StringW AmplifyBloom::VersionInfo::_get_StageSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_get_StageSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyBloom", "VersionInfo", "StageSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String StageSuffix
void AmplifyBloom::VersionInfo::_set_StageSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::_set_StageSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyBloom", "VersionInfo", "StageSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_major
[[deprecated("Use field access instead!")]] int& AmplifyBloom::VersionInfo::dyn_m_major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::dyn_m_major");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_major"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_minor
[[deprecated("Use field access instead!")]] int& AmplifyBloom::VersionInfo::dyn_m_minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::dyn_m_minor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_release
[[deprecated("Use field access instead!")]] int& AmplifyBloom::VersionInfo::dyn_m_release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::dyn_m_release");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_release"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyBloom.VersionInfo.StaticToString
::StringW AmplifyBloom::VersionInfo::StaticToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::StaticToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "VersionInfo", "StaticToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyBloom.VersionInfo.get_Number
int AmplifyBloom::VersionInfo::get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::get_Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyBloom.VersionInfo.Current
::AmplifyBloom::VersionInfo* AmplifyBloom::VersionInfo::Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "VersionInfo", "Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyBloom::VersionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyBloom.VersionInfo.Matches
bool AmplifyBloom::VersionInfo::Matches(::AmplifyBloom::VersionInfo* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "VersionInfo", "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version);
}
// Autogenerated method: AmplifyBloom.VersionInfo..cctor
void AmplifyBloom::VersionInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyBloom", "VersionInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyBloom.VersionInfo.ToString
::StringW AmplifyBloom::VersionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::VersionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.ENetException
#include "ENet/ENetException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Event
#include "ENet/Event.hpp"
// Including type: ENet.Packet
#include "ENet/Packet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ENet.Native.ENetEvent _event
[[deprecated("Use field access instead!")]] ::ENet::Native::ENetEvent& ENet::Event::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::dyn__event");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::ENet::Native::ENetEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Event..ctor
// ABORTED elsewhere.  ENet::Event::Event(::ENet::Native::ENetEvent event)
// Autogenerated method: ENet.Event.get_ChannelID
uint8_t ENet::Event::get_ChannelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::get_ChannelID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ChannelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Event.get_NativeData
::ENet::Native::ENetEvent ENet::Event::get_NativeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::get_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetEvent, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Event.set_NativeData
void ENet::Event::set_NativeData(::ENet::Native::ENetEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::set_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Event.get_Packet
::ENet::Packet ENet::Event::get_Packet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::get_Packet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Packet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Packet, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Event.get_Type
::ENet::EventType ENet::Event::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Event::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::EventType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.EventType
#include "ENet/EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ENet.EventType None
::ENet::EventType ENet::EventType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::EventType>("ENet", "EventType", "None"));
}
// Autogenerated static field setter
// Set static field: static public ENet.EventType None
void ENet::EventType::_set_None(::ENet::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "EventType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.EventType Connect
::ENet::EventType ENet::EventType::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::EventType>("ENet", "EventType", "Connect"));
}
// Autogenerated static field setter
// Set static field: static public ENet.EventType Connect
void ENet::EventType::_set_Connect(::ENet::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "EventType", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.EventType Disconnect
::ENet::EventType ENet::EventType::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::EventType>("ENet", "EventType", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public ENet.EventType Disconnect
void ENet::EventType::_set_Disconnect(::ENet::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "EventType", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.EventType Receive
::ENet::EventType ENet::EventType::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::EventType>("ENet", "EventType", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public ENet.EventType Receive
void ENet::EventType::_set_Receive(::ENet::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "EventType", "Receive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ENet::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Host
#include "ENet/Host.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ENet.Event
#include "ENet/Event.hpp"
// Including type: ENet.Peer
#include "ENet/Peer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ENet.Native.ENetHost* _host
[[deprecated("Use field access instead!")]] ::ENet::Native::ENetHost*& ENet::Host::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::dyn__host");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::ENet::Native::ENetHost**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Host.Equals
bool ENet::Host::Equals(::ENet::Host other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Host), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: ENet.Host.CheckBandwidthLimit
void ENet::Host::CheckBandwidthLimit(int incomingBandwidth, int outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::CheckBandwidthLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet", "Host", "CheckBandwidthLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Host.CheckChannelLimit
void ENet::Host::CheckChannelLimit(int channelLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::CheckChannelLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet", "Host", "CheckChannelLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelLimit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channelLimit);
}
// Autogenerated method: ENet.Host.CheckInitialized
void ENet::Host::CheckInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::CheckInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Host.Initialize
void ENet::Host::Initialize(::System::Net::IPEndPoint* address, int peerLimit, int channelLimit, int incomingBandwidth, int outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Host.Dispose
void ENet::Host::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Host), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Host.CheckEvents
bool ENet::Host::CheckEvents(ByRef<::ENet::Event> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::CheckEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ENet::Event&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(event));
}
// Autogenerated method: ENet.Host.Connect
::ENet::Peer ENet::Host::Connect(::StringW hostName, int port, int data, int channelLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channelLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Peer, false>(this, ___internal__method, hostName, port, data, channelLimit);
}
// Autogenerated method: ENet.Host.Connect
::ENet::Peer ENet::Host::Connect(::System::Net::IPEndPoint* address, int data, int channelLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channelLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Peer, false>(this, ___internal__method, address, data, channelLimit);
}
// Autogenerated method: ENet.Host.Service
bool ENet::Host::Service(int timeout, ByRef<::ENet::Event> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractIndependentType<::ENet::Event&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout, byref(event));
}
// Autogenerated method: ENet.Host.get_NativeData
::ENet::Native::ENetHost* ENet::Host::get_NativeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::get_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Host.set_NativeData
void ENet::Host::set_NativeData(::ENet::Native::ENetHost* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::set_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Host.Equals
bool ENet::Host::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ENet.Host.GetHashCode
int ENet::Host::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Host::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Packet
#include "ENet/Packet.hpp"
// Including type: ENet.Packet/<GetEnumerator>d__40
#include "ENet/Packet_-GetEnumerator-d__40.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: ENet.Native.ENetPacket/freeCallback_cb
#include "ENet/Native/ENetPacket_freeCallback_cb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ENet.Native.ENetPacket/freeCallback_cb _freeCallbackDelegate
::ENet::Native::ENetPacket::freeCallback_cb* ENet::Packet::_get__freeCallbackDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_get__freeCallbackDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::Native::ENetPacket::freeCallback_cb*>("ENet", "Packet", "_freeCallbackDelegate"));
}
// Autogenerated static field setter
// Set static field: static private ENet.Native.ENetPacket/freeCallback_cb _freeCallbackDelegate
void ENet::Packet::_set__freeCallbackDelegate(::ENet::Native::ENetPacket::freeCallback_cb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_set__freeCallbackDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "Packet", "_freeCallbackDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr _freeCallbackFunctionPointer
::System::IntPtr ENet::Packet::_get__freeCallbackFunctionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_get__freeCallbackFunctionPointer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("ENet", "Packet", "_freeCallbackFunctionPointer"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr _freeCallbackFunctionPointer
void ENet::Packet::_set__freeCallbackFunctionPointer(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_set__freeCallbackFunctionPointer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "Packet", "_freeCallbackFunctionPointer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _freeCallbackKey
::Il2CppObject* ENet::Packet::_get__freeCallbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_get__freeCallbackKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("ENet", "Packet", "_freeCallbackKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _freeCallbackKey
void ENet::Packet::_set__freeCallbackKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_set__freeCallbackKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "Packet", "_freeCallbackKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<ENet.Packet,System.Collections.Generic.Dictionary`2<System.Object,System.Object>> _userData
::System::Collections::Generic::Dictionary_2<::ENet::Packet, ::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>*>* ENet::Packet::_get__userData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_get__userData");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::ENet::Packet, ::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>*>*>("ENet", "Packet", "_userData")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<ENet.Packet,System.Collections.Generic.Dictionary`2<System.Object,System.Object>> _userData
void ENet::Packet::_set__userData(::System::Collections::Generic::Dictionary_2<::ENet::Packet, ::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_set__userData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "Packet", "_userData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _userDataDefaultKey
::Il2CppObject* ENet::Packet::_get__userDataDefaultKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_get__userDataDefaultKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("ENet", "Packet", "_userDataDefaultKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _userDataDefaultKey
void ENet::Packet::_set__userDataDefaultKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::_set__userDataDefaultKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "Packet", "_userDataDefaultKey", value));
}
// Autogenerated instance field getter
// Get instance field: private ENet.Native.ENetPacket* _packet
[[deprecated("Use field access instead!")]] ::ENet::Native::ENetPacket*& ENet::Packet::dyn__packet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::dyn__packet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packet"))->offset;
  return *reinterpret_cast<::ENet::Native::ENetPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& ENet::Packet::dyn_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::dyn_ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Packet..cctor
void ENet::Packet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet", "Packet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ENet.Packet..ctor
ENet::Packet::Packet(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Packet.CheckInitialized
void ENet::Packet::CheckInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::CheckInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.Equals
bool ENet::Packet::Equals(::ENet::Packet other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: ENet.Packet.Initialize
void ENet::Packet::Initialize(::ArrayW<uint8_t> data, int offset, int length, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, length, flags);
}
// Autogenerated method: ENet.Packet.Initialize
void ENet::Packet::Initialize(::System::IntPtr data, int length, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, flags);
}
// Autogenerated method: ENet.Packet.CopyTo
void ENet::Packet::CopyTo(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: ENet.Packet.CopyTo
void ENet::Packet::CopyTo(::ArrayW<uint8_t> array, int arrayIndex, int count, int sourceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(sourceIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex, count, sourceIndex);
}
// Autogenerated method: ENet.Packet.GetBytes
::ArrayW<uint8_t> ENet::Packet::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.Dispose
void ENet::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.Resize
void ENet::Packet::Resize(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: ENet.Packet.get_Data
::System::IntPtr ENet::Packet::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.get_Length
int ENet::Packet::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.get_NativeData
::ENet::Native::ENetPacket* ENet::Packet::get_NativeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::get_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.set_NativeData
void ENet::Packet::set_NativeData(::ENet::Native::ENetPacket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::set_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Packet.Add
void ENet::Packet::Add(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Packet.Clear
void ENet::Packet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.Contains
bool ENet::Packet::Contains(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Packet.CopyTo
void ENet::Packet::CopyTo(::ArrayW<uint8_t> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: ENet.Packet.GetEnumerator
::System::Collections::Generic::IEnumerator_1<uint8_t>* ENet::Packet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* ENet::Packet::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.IndexOf
int ENet::Packet::IndexOf(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Packet.Insert
void ENet::Packet::Insert(int index, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: ENet.Packet.Remove
bool ENet::Packet::Remove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Packet.RemoveAt
void ENet::Packet::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: ENet.Packet.get_Item
uint8_t ENet::Packet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 6));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, index);
}
// Autogenerated method: ENet.Packet.set_Item
void ENet::Packet::set_Item(int index, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: ENet.Packet.System.Collections.Generic.ICollection<System.Byte>.get_Count
int ENet::Packet::System_Collections_Generic_ICollection$System_Byte$_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::System.Collections.Generic.ICollection<System.Byte>.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.System.Collections.Generic.ICollection<System.Byte>.get_IsReadOnly
bool ENet::Packet::System_Collections_Generic_ICollection$System_Byte$_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::System.Collections.Generic.ICollection<System.Byte>.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Packet), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet.InitializeUserData
void ENet::Packet::InitializeUserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::InitializeUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet", "Packet", "InitializeUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ENet.Packet.FreeCallbackHandler
void ENet::Packet::FreeCallbackHandler(::ENet::Native::ENetPacket* native) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::FreeCallbackHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet", "Packet", "FreeCallbackHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(native)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, native);
}
// Autogenerated method: ENet.Packet.GetUserData
::Il2CppObject* ENet::Packet::GetUserData(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: ENet.Packet.Equals
bool ENet::Packet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ENet.Packet.GetHashCode
int ENet::Packet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Packet/<GetEnumerator>d__40
#include "ENet/Packet_-GetEnumerator-d__40.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& ENet::Packet::$GetEnumerator$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <>2__current
[[deprecated("Use field access instead!")]] uint8_t& ENet::Packet::$GetEnumerator$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ENet.Packet <>4__this
[[deprecated("Use field access instead!")]] ::ENet::Packet& ENet::Packet::$GetEnumerator$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::ENet::Packet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
[[deprecated("Use field access instead!")]] int& ENet::Packet::$GetEnumerator$d__40::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Packet/<GetEnumerator>d__40.System.IDisposable.Dispose
void ENet::Packet::$GetEnumerator$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Packet::$GetEnumerator$d__40*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet/<GetEnumerator>d__40.MoveNext
bool ENet::Packet::$GetEnumerator$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Packet::$GetEnumerator$d__40*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet/<GetEnumerator>d__40.System.Collections.Generic.IEnumerator<System.Byte>.get_Current
uint8_t ENet::Packet::$GetEnumerator$d__40::System_Collections_Generic_IEnumerator$System_Byte$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::System.Collections.Generic.IEnumerator<System.Byte>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Packet::$GetEnumerator$d__40*), 4));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet/<GetEnumerator>d__40.System.Collections.IEnumerator.Reset
void ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Packet::$GetEnumerator$d__40*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Packet/<GetEnumerator>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Packet::$GetEnumerator$d__40*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.PacketFreeCallback
#include "ENet/PacketFreeCallback.hpp"
// Including type: ENet.Packet
#include "ENet/Packet.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.PacketFreeCallback.Invoke
void ENet::PacketFreeCallback::Invoke(::ENet::Packet packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFreeCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::PacketFreeCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.PacketFreeCallback.BeginInvoke
::System::IAsyncResult* ENet::PacketFreeCallback::BeginInvoke(::ENet::Packet packet, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFreeCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::PacketFreeCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, packet, callback, object);
}
// Autogenerated method: ENet.PacketFreeCallback.EndInvoke
void ENet::PacketFreeCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFreeCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::PacketFreeCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ENet.PacketFlags None
::ENet::PacketFlags ENet::PacketFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PacketFlags>("ENet", "PacketFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PacketFlags None
void ENet::PacketFlags::_set_None(::ENet::PacketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PacketFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PacketFlags Reliable
::ENet::PacketFlags ENet::PacketFlags::_get_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_get_Reliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PacketFlags>("ENet", "PacketFlags", "Reliable"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PacketFlags Reliable
void ENet::PacketFlags::_set_Reliable(::ENet::PacketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_set_Reliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PacketFlags", "Reliable", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PacketFlags Unsequenced
::ENet::PacketFlags ENet::PacketFlags::_get_Unsequenced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_get_Unsequenced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PacketFlags>("ENet", "PacketFlags", "Unsequenced"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PacketFlags Unsequenced
void ENet::PacketFlags::_set_Unsequenced(::ENet::PacketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_set_Unsequenced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PacketFlags", "Unsequenced", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PacketFlags NoAllocate
::ENet::PacketFlags ENet::PacketFlags::_get_NoAllocate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_get_NoAllocate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PacketFlags>("ENet", "PacketFlags", "NoAllocate"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PacketFlags NoAllocate
void ENet::PacketFlags::_set_NoAllocate(::ENet::PacketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_set_NoAllocate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PacketFlags", "NoAllocate", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PacketFlags UnreliableFragment
::ENet::PacketFlags ENet::PacketFlags::_get_UnreliableFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_get_UnreliableFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PacketFlags>("ENet", "PacketFlags", "UnreliableFragment"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PacketFlags UnreliableFragment
void ENet::PacketFlags::_set_UnreliableFragment(::ENet::PacketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::_set_UnreliableFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PacketFlags", "UnreliableFragment", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ENet::PacketFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PacketFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Peer
#include "ENet/Peer.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
// Including type: ENet.Packet
#include "ENet/Packet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ENet.Native.ENetPeer* _peer
[[deprecated("Use field access instead!")]] ::ENet::Native::ENetPeer*& ENet::Peer::dyn__peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::dyn__peer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peer"))->offset;
  return *reinterpret_cast<::ENet::Native::ENetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Peer..ctor
// ABORTED elsewhere.  ENet::Peer::Peer(::ENet::Native::ENetPeer* peer)
// Autogenerated method: ENet.Peer.CheckInitialized
void ENet::Peer::CheckInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::CheckInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Peer.Equals
bool ENet::Peer::Equals(::ENet::Peer other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::ENet::Peer), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: ENet.Peer.Disconnect
void ENet::Peer::Disconnect(int data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: ENet.Peer.Send
void ENet::Peer::Send(uint8_t channelID, ::ArrayW<uint8_t> data, int offset, int length, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelID, data, offset, length, flags);
}
// Autogenerated method: ENet.Peer.Send
void ENet::Peer::Send(uint8_t channelID, ::ENet::Packet packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelID, packet);
}
// Autogenerated method: ENet.Peer.get_NativeData
::ENet::Native::ENetPeer* ENet::Peer::get_NativeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::get_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method);
}
// Autogenerated method: ENet.Peer.set_NativeData
void ENet::Peer::set_NativeData(::ENet::Native::ENetPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::set_NativeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_NativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ENet.Peer.Equals
bool ENet::Peer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ENet.Peer.GetHashCode
int ENet::Peer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Peer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.PeerState
#include "ENet/PeerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Uninitialized
::ENet::PeerState ENet::PeerState::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Uninitialized
void ENet::PeerState::_set_Uninitialized(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Disconnected
::ENet::PeerState ENet::PeerState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Disconnected
void ENet::PeerState::_set_Disconnected(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Connecting
::ENet::PeerState ENet::PeerState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Connecting
void ENet::PeerState::_set_Connecting(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState AcknowledgingConnect
::ENet::PeerState ENet::PeerState::_get_AcknowledgingConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_AcknowledgingConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "AcknowledgingConnect"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState AcknowledgingConnect
void ENet::PeerState::_set_AcknowledgingConnect(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_AcknowledgingConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "AcknowledgingConnect", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState ConnectionPending
::ENet::PeerState ENet::PeerState::_get_ConnectionPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_ConnectionPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "ConnectionPending"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState ConnectionPending
void ENet::PeerState::_set_ConnectionPending(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_ConnectionPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "ConnectionPending", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState ConnectionSucceeded
::ENet::PeerState ENet::PeerState::_get_ConnectionSucceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_ConnectionSucceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "ConnectionSucceeded"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState ConnectionSucceeded
void ENet::PeerState::_set_ConnectionSucceeded(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_ConnectionSucceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "ConnectionSucceeded", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Connected
::ENet::PeerState ENet::PeerState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Connected
void ENet::PeerState::_set_Connected(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState DisconnectingLater
::ENet::PeerState ENet::PeerState::_get_DisconnectingLater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_DisconnectingLater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "DisconnectingLater"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState DisconnectingLater
void ENet::PeerState::_set_DisconnectingLater(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_DisconnectingLater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "DisconnectingLater", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Disconnecting
::ENet::PeerState ENet::PeerState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Disconnecting
void ENet::PeerState::_set_Disconnecting(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Disconnecting", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState AcknowledgingDisconnect
::ENet::PeerState ENet::PeerState::_get_AcknowledgingDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_AcknowledgingDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "AcknowledgingDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState AcknowledgingDisconnect
void ENet::PeerState::_set_AcknowledgingDisconnect(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_AcknowledgingDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "AcknowledgingDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public ENet.PeerState Zombie
::ENet::PeerState ENet::PeerState::_get_Zombie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_get_Zombie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::PeerState>("ENet", "PeerState", "Zombie"));
}
// Autogenerated static field setter
// Set static field: static public ENet.PeerState Zombie
void ENet::PeerState::_set_Zombie(::ENet::PeerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::_set_Zombie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet", "PeerState", "Zombie", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ENet::PeerState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::PeerState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Native.ENetApiMacOS
#include "ENet/Native/ENetApiMacOS.hpp"
// Including type: ENet.Native.ENetCallbacks
#include "ENet/Native/ENetCallbacks.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: ENet.Native.ENetEvent
#include "ENet/Native/ENetEvent.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ENet.Native.ENetPacket
#include "ENet/Native/ENetPacket.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.Native.ENetApiMacOS.native_initialize_with_callbacks
int ENet::Native::ENetApiMacOS::native_initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_initialize_with_callbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_initialize_with_callbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(inits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_check_events
int ENet::Native::ENetApiMacOS::native_host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_check_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_check_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiMacOS::native_host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(channelCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiMacOS::native_host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiMacOS::native_host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_destroy
void ENet::Native::ENetApiMacOS::native_host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_host_service
int ENet::Native::ENetApiMacOS::native_host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_host_service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_host_service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>(), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiMacOS::native_packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_packet_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_packet_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_packet_destroy
void ENet::Native::ENetApiMacOS::native_packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_packet_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_packet_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_packet_resize
int ENet::Native::ENetApiMacOS::native_packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_packet_resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_packet_resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_peer_disconnect
void ENet::Native::ENetApiMacOS::native_peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_peer_disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_peer_disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.native_peer_send
int ENet::Native::ENetApiMacOS::native_peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::native_peer_send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiMacOS", "native_peer_send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.initialize_with_callbacks
int ENet::Native::ENetApiMacOS::initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::initialize_with_callbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_check_events
int ENet::Native::ENetApiMacOS::host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_check_events");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiMacOS::host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiMacOS::host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiMacOS::host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_destroy
void ENet::Native::ENetApiMacOS::host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.host_service
int ENet::Native::ENetApiMacOS::host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::host_service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiMacOS::packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::packet_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.packet_destroy
void ENet::Native::ENetApiMacOS::packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::packet_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.packet_resize
int ENet::Native::ENetApiMacOS::packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::packet_resize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.peer_disconnect
void ENet::Native::ENetApiMacOS::peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::peer_disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiMacOS.peer_send
int ENet::Native::ENetApiMacOS::peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiMacOS::peer_send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, peer, channelID, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Native.ENetApiLinux
#include "ENet/Native/ENetApiLinux.hpp"
// Including type: ENet.Native.ENetCallbacks
#include "ENet/Native/ENetCallbacks.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: ENet.Native.ENetEvent
#include "ENet/Native/ENetEvent.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ENet.Native.ENetPacket
#include "ENet/Native/ENetPacket.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.Native.ENetApiLinux.native_initialize_with_callbacks
int ENet::Native::ENetApiLinux::native_initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_initialize_with_callbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_initialize_with_callbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(inits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_check_events
int ENet::Native::ENetApiLinux::native_host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_check_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_check_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiLinux::native_host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(channelCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiLinux::native_host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiLinux::native_host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_destroy
void ENet::Native::ENetApiLinux::native_host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_host_service
int ENet::Native::ENetApiLinux::native_host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_host_service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_host_service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>(), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiLinux::native_packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_packet_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_packet_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_packet_destroy
void ENet::Native::ENetApiLinux::native_packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_packet_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_packet_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_packet_resize
int ENet::Native::ENetApiLinux::native_packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_packet_resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_packet_resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_peer_disconnect
void ENet::Native::ENetApiLinux::native_peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_peer_disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_peer_disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiLinux.native_peer_send
int ENet::Native::ENetApiLinux::native_peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::native_peer_send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiLinux", "native_peer_send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApiLinux.initialize_with_callbacks
int ENet::Native::ENetApiLinux::initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::initialize_with_callbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_check_events
int ENet::Native::ENetApiLinux::host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_check_events");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiLinux::host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiLinux::host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiLinux::host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_destroy
void ENet::Native::ENetApiLinux::host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiLinux.host_service
int ENet::Native::ENetApiLinux::host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::host_service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiLinux.packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiLinux::packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::packet_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiLinux.packet_destroy
void ENet::Native::ENetApiLinux::packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::packet_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiLinux.packet_resize
int ENet::Native::ENetApiLinux::packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::packet_resize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiLinux.peer_disconnect
void ENet::Native::ENetApiLinux::peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::peer_disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiLinux.peer_send
int ENet::Native::ENetApiLinux::peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiLinux::peer_send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, peer, channelID, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Native.ENetApiX86
#include "ENet/Native/ENetApiX86.hpp"
// Including type: ENet.Native.ENetCallbacks
#include "ENet/Native/ENetCallbacks.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: ENet.Native.ENetEvent
#include "ENet/Native/ENetEvent.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ENet.Native.ENetPacket
#include "ENet/Native/ENetPacket.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.Native.ENetApiX86.native_initialize_with_callbacks
int ENet::Native::ENetApiX86::native_initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_initialize_with_callbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_initialize_with_callbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(inits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_check_events
int ENet::Native::ENetApiX86::native_host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_check_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_check_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiX86::native_host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(channelCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX86::native_host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX86::native_host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_destroy
void ENet::Native::ENetApiX86::native_host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_host_service
int ENet::Native::ENetApiX86::native_host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_host_service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_host_service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>(), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiX86::native_packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_packet_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_packet_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_packet_destroy
void ENet::Native::ENetApiX86::native_packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_packet_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_packet_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_packet_resize
int ENet::Native::ENetApiX86::native_packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_packet_resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_packet_resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_peer_disconnect
void ENet::Native::ENetApiX86::native_peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_peer_disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_peer_disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiX86.native_peer_send
int ENet::Native::ENetApiX86::native_peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::native_peer_send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX86", "native_peer_send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApiX86.initialize_with_callbacks
int ENet::Native::ENetApiX86::initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::initialize_with_callbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiX86.host_check_events
int ENet::Native::ENetApiX86::host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_check_events");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiX86.host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiX86::host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiX86.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX86::host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX86.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX86::host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX86.host_destroy
void ENet::Native::ENetApiX86::host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiX86.host_service
int ENet::Native::ENetApiX86::host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::host_service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiX86.packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiX86::packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::packet_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiX86.packet_destroy
void ENet::Native::ENetApiX86::packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::packet_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiX86.packet_resize
int ENet::Native::ENetApiX86::packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::packet_resize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiX86.peer_disconnect
void ENet::Native::ENetApiX86::peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::peer_disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiX86.peer_send
int ENet::Native::ENetApiX86::peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX86::peer_send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, peer, channelID, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Native.ENetApi
#include "ENet/Native/ENetApi.hpp"
// Including type: ENet.Native.ENetCallbacks
#include "ENet/Native/ENetCallbacks.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: ENet.Native.ENetEvent
#include "ENet/Native/ENetEvent.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ENet.Native.ENetPacket
#include "ENet/Native/ENetPacket.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static ENet.Native.ENetApi _platform
::ENet::Native::ENetApi* ENet::Native::ENetApi::_get__platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::_get__platform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ENet::Native::ENetApi*>("ENet.Native", "ENetApi", "_platform"));
}
// Autogenerated static field setter
// Set static field: static ENet.Native.ENetApi _platform
void ENet::Native::ENetApi::_set__platform(::ENet::Native::ENetApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::_set__platform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet.Native", "ENetApi", "_platform", value));
}
// Autogenerated static field getter
// Get static field: static System.Object _platformLock
::Il2CppObject* ENet::Native::ENetApi::_get__platformLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::_get__platformLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("ENet.Native", "ENetApi", "_platformLock"));
}
// Autogenerated static field setter
// Set static field: static System.Object _platformLock
void ENet::Native::ENetApi::_set__platformLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::_set__platformLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ENet.Native", "ENetApi", "_platformLock", value));
}
// Autogenerated method: ENet.Native.ENetApi.get_Platform
::ENet::Native::ENetApi* ENet::Native::ENetApi::get_Platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::get_Platform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "get_Platform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetApi*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ENet.Native.ENetApi.initialize_with_callbacks
int ENet::Native::ENetApi::initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::initialize_with_callbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_check_events
int ENet::Native::ENetApi::enet_host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_check_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_check_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApi::enet_host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(channelCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApi::enet_host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApi::enet_host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_destroy
void ENet::Native::ENetApi::enet_host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApi.enet_host_service
int ENet::Native::ENetApi::enet_host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_host_service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_host_service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>(), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApi.host_check_events
int ENet::Native::ENetApi::host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_check_events");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApi.host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApi::host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApi.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApi::host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApi.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApi::host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApi.host_destroy
void ENet::Native::ENetApi::host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApi.host_service
int ENet::Native::ENetApi::host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::host_service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApi.enet_packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApi::enet_packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_packet_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_packet_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApi.enet_packet_destroy
void ENet::Native::ENetApi::enet_packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_packet_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_packet_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApi.enet_packet_resize
int ENet::Native::ENetApi::enet_packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_packet_resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_packet_resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApi.packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApi::packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::packet_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApi.packet_destroy
void ENet::Native::ENetApi::packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::packet_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApi.packet_resize
int ENet::Native::ENetApi::packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::packet_resize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApi.enet_peer_disconnect
void ENet::Native::ENetApi::enet_peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_peer_disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_peer_disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApi.enet_peer_send
int ENet::Native::ENetApi::enet_peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::enet_peer_send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", "enet_peer_send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApi.peer_disconnect
void ENet::Native::ENetApi::peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::peer_disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApi.peer_send
int ENet::Native::ENetApi::peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::peer_send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApi..cctor
void ENet::Native::ENetApi::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApi::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApi", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Native.ENetApiX64
#include "ENet/Native/ENetApiX64.hpp"
// Including type: ENet.Native.ENetCallbacks
#include "ENet/Native/ENetCallbacks.hpp"
// Including type: ENet.Native.ENetHost
#include "ENet/Native/ENetHost.hpp"
// Including type: ENet.Native.ENetEvent
#include "ENet/Native/ENetEvent.hpp"
// Including type: ENet.Native.ENetPeer
#include "ENet/Native/ENetPeer.hpp"
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ENet.Native.ENetPacket
#include "ENet/Native/ENetPacket.hpp"
// Including type: ENet.PacketFlags
#include "ENet/PacketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.Native.ENetApiX64.native_initialize_with_callbacks
int ENet::Native::ENetApiX64::native_initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_initialize_with_callbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_initialize_with_callbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(inits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_check_events
int ENet::Native::ENetApiX64::native_host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_check_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_check_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiX64::native_host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(channelCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX64::native_host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX64::native_host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(peerLimit), ::il2cpp_utils::ExtractType(channelLimit), ::il2cpp_utils::ExtractType(incomingBandwidth), ::il2cpp_utils::ExtractType(outgoingBandwidth)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_destroy
void ENet::Native::ENetApiX64::native_host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_host_service
int ENet::Native::ENetApiX64::native_host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_host_service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_host_service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::ENet::Native::ENetEvent&>(), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiX64::native_packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_packet_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_packet_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataLength), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_packet_destroy
void ENet::Native::ENetApiX64::native_packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_packet_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_packet_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_packet_resize
int ENet::Native::ENetApiX64::native_packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_packet_resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_packet_resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(dataLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_peer_disconnect
void ENet::Native::ENetApiX64::native_peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_peer_disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_peer_disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiX64.native_peer_send
int ENet::Native::ENetApiX64::native_peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::native_peer_send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetApiX64", "native_peer_send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(channelID), ::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peer, channelID, packet);
}
// Autogenerated method: ENet.Native.ENetApiX64.initialize_with_callbacks
int ENet::Native::ENetApiX64::initialize_with_callbacks(uint version, ByRef<::ENet::Native::ENetCallbacks> inits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::initialize_with_callbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version, byref(inits));
}
// Autogenerated method: ENet.Native.ENetApiX64.host_check_events
int ENet::Native::ENetApiX64::host_check_events(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_check_events");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event));
}
// Autogenerated method: ENet.Native.ENetApiX64.host_connect
::ENet::Native::ENetPeer* ENet::Native::ENetApiX64::host_connect(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr channelCount, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_connect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPeer*, false>(this, ___internal__method, host, byref(address), channelCount, data);
}
// Autogenerated method: ENet.Native.ENetApiX64.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX64::host_create(::ENet::Native::ENetAddress* address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, address, peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX64.host_create
::ENet::Native::ENetHost* ENet::Native::ENetApiX64::host_create(ByRef<::ENet::Native::ENetAddress> address, ::System::IntPtr peerLimit, ::System::IntPtr channelLimit, uint incomingBandwidth, uint outgoingBandwidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetHost*, false>(this, ___internal__method, byref(address), peerLimit, channelLimit, incomingBandwidth, outgoingBandwidth);
}
// Autogenerated method: ENet.Native.ENetApiX64.host_destroy
void ENet::Native::ENetApiX64::host_destroy(::ENet::Native::ENetHost* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: ENet.Native.ENetApiX64.host_service
int ENet::Native::ENetApiX64::host_service(::ENet::Native::ENetHost* host, ByRef<::ENet::Native::ENetEvent> event, uint timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::host_service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, host, byref(event), timeout);
}
// Autogenerated method: ENet.Native.ENetApiX64.packet_create
::ENet::Native::ENetPacket* ENet::Native::ENetApiX64::packet_create(::System::IntPtr data, ::System::IntPtr dataLength, ::ENet::PacketFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::packet_create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetPacket*, false>(this, ___internal__method, data, dataLength, flags);
}
// Autogenerated method: ENet.Native.ENetApiX64.packet_destroy
void ENet::Native::ENetApiX64::packet_destroy(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::packet_destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetApiX64.packet_resize
int ENet::Native::ENetApiX64::packet_resize(::ENet::Native::ENetPacket* packet, ::System::IntPtr dataLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::packet_resize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, packet, dataLength);
}
// Autogenerated method: ENet.Native.ENetApiX64.peer_disconnect
void ENet::Native::ENetApiX64::peer_disconnect(::ENet::Native::ENetPeer* peer, uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::peer_disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, data);
}
// Autogenerated method: ENet.Native.ENetApiX64.peer_send
int ENet::Native::ENetApiX64::peer_send(::ENet::Native::ENetPeer* peer, uint8_t channelID, ::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetApiX64::peer_send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetApi*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, peer, channelID, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ENet.Native.ENetAddress
#include "ENet/Native/ENetAddress.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 host
[[deprecated("Use field access instead!")]] uint& ENet::Native::ENetAddress::dyn_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetAddress::dyn_host");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "host"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 port
[[deprecated("Use field access instead!")]] uint16_t& ENet::Native::ENetAddress::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetAddress::dyn_port");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ENet.Native.ENetAddress.op_Explicit
ENet::Native::ENetAddress::ENetAddress(::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetAddress::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ENet.Native", "ENetAddress", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::ENet::Native::ENetAddress, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ENet.Native.ENetPacket/freeCallback_cb
#include "ENet/Native/ENetPacket_freeCallback_cb.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ENet.Native.ENetPacket/freeCallback_cb.Invoke
void ENet::Native::ENetPacket::freeCallback_cb::Invoke(::ENet::Native::ENetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetPacket::freeCallback_cb::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetPacket::freeCallback_cb*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ENet.Native.ENetPacket/freeCallback_cb.BeginInvoke
::System::IAsyncResult* ENet::Native::ENetPacket::freeCallback_cb::BeginInvoke(::ENet::Native::ENetPacket* packet, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetPacket::freeCallback_cb::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetPacket::freeCallback_cb*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, packet, callback, object);
}
// Autogenerated method: ENet.Native.ENetPacket/freeCallback_cb.EndInvoke
void ENet::Native::ENetPacket::freeCallback_cb::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Native::ENetPacket::freeCallback_cb::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ENet::Native::ENetPacket::freeCallback_cb*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.CallbackHandle
#include "SteamNative/CallbackHandle.hpp"
// Including type: Facepunch.Steamworks.BaseSteamworks
#include "Facepunch/Steamworks/BaseSteamworks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.BaseSteamworks Steamworks
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::BaseSteamworks*& SteamNative::CallbackHandle::dyn_Steamworks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_Steamworks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Steamworks"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::BaseSteamworks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.GCHandle FuncA
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& SteamNative::CallbackHandle::dyn_FuncA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_FuncA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FuncA"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.GCHandle FuncB
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& SteamNative::CallbackHandle::dyn_FuncB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_FuncB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FuncB"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.GCHandle FuncC
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& SteamNative::CallbackHandle::dyn_FuncC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_FuncC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FuncC"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr vTablePtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& SteamNative::CallbackHandle::dyn_vTablePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_vTablePtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vTablePtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.GCHandle PinnedCallback
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& SteamNative::CallbackHandle::dyn_PinnedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::dyn_PinnedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PinnedCallback"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.CallbackHandle.Dispose
void SteamNative::CallbackHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::CallbackHandle*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.CallbackHandle.UnregisterCallback
void SteamNative::CallbackHandle::UnregisterCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallbackHandle::UnregisterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.CallResult
#include "SteamNative/CallResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.SteamAPICall_t Call
[[deprecated("Use field access instead!")]] ::SteamNative::SteamAPICall_t& SteamNative::CallResult::dyn_Call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallResult::dyn_Call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Call"))->offset;
  return *reinterpret_cast<::SteamNative::SteamAPICall_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.CallResult.Try
void SteamNative::CallResult::Try() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallResult::Try");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Try", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.CallResult.RunCallback
void SteamNative::CallResult::RunCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CallResult::RunCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::CallResult*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.VoiceResult
#include "SteamNative/VoiceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult OK
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult OK
void SteamNative::VoiceResult::_set_OK(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult NotInitialized
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult NotInitialized
void SteamNative::VoiceResult::_set_NotInitialized(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult NotRecording
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_NotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_NotRecording");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "NotRecording"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult NotRecording
void SteamNative::VoiceResult::_set_NotRecording(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_NotRecording");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "NotRecording", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult NoData
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult NoData
void SteamNative::VoiceResult::_set_NoData(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult BufferTooSmall
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult BufferTooSmall
void SteamNative::VoiceResult::_set_BufferTooSmall(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult DataCorrupted
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_DataCorrupted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_DataCorrupted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "DataCorrupted"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult DataCorrupted
void SteamNative::VoiceResult::_set_DataCorrupted(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_DataCorrupted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "DataCorrupted", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult Restricted
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_Restricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_Restricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "Restricted"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult Restricted
void SteamNative::VoiceResult::_set_Restricted(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_Restricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "Restricted", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult UnsupportedCodec
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_UnsupportedCodec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_UnsupportedCodec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "UnsupportedCodec"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult UnsupportedCodec
void SteamNative::VoiceResult::_set_UnsupportedCodec(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_UnsupportedCodec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "UnsupportedCodec", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult ReceiverOutOfDate
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_ReceiverOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_ReceiverOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "ReceiverOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult ReceiverOutOfDate
void SteamNative::VoiceResult::_set_ReceiverOutOfDate(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_ReceiverOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "ReceiverOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.VoiceResult ReceiverDidNotAnswer
::SteamNative::VoiceResult SteamNative::VoiceResult::_get_ReceiverDidNotAnswer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_get_ReceiverDidNotAnswer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::VoiceResult>("SteamNative", "VoiceResult", "ReceiverDidNotAnswer"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.VoiceResult ReceiverDidNotAnswer
void SteamNative::VoiceResult::_set_ReceiverDidNotAnswer(::SteamNative::VoiceResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::_set_ReceiverDidNotAnswer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "VoiceResult", "ReceiverDidNotAnswer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& SteamNative::VoiceResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::VoiceResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.ChatEntryType
#include "SteamNative/ChatEntryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType Invalid
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType Invalid
void SteamNative::ChatEntryType::_set_Invalid(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType ChatMsg
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_ChatMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_ChatMsg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "ChatMsg"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType ChatMsg
void SteamNative::ChatEntryType::_set_ChatMsg(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_ChatMsg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "ChatMsg", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType Typing
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_Typing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_Typing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "Typing"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType Typing
void SteamNative::ChatEntryType::_set_Typing(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_Typing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "Typing", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType InviteGame
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_InviteGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_InviteGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "InviteGame"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType InviteGame
void SteamNative::ChatEntryType::_set_InviteGame(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_InviteGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "InviteGame", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType Emote
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_Emote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_Emote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "Emote"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType Emote
void SteamNative::ChatEntryType::_set_Emote(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_Emote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "Emote", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType LeftConversation
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_LeftConversation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_LeftConversation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "LeftConversation"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType LeftConversation
void SteamNative::ChatEntryType::_set_LeftConversation(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_LeftConversation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "LeftConversation", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType Entered
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_Entered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_Entered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "Entered"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType Entered
void SteamNative::ChatEntryType::_set_Entered(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_Entered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "Entered", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType WasKicked
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_WasKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_WasKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "WasKicked"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType WasKicked
void SteamNative::ChatEntryType::_set_WasKicked(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_WasKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "WasKicked", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType WasBanned
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_WasBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_WasBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "WasBanned"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType WasBanned
void SteamNative::ChatEntryType::_set_WasBanned(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_WasBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "WasBanned", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType Disconnected
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType Disconnected
void SteamNative::ChatEntryType::_set_Disconnected(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType HistoricalChat
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_HistoricalChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_HistoricalChat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "HistoricalChat"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType HistoricalChat
void SteamNative::ChatEntryType::_set_HistoricalChat(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_HistoricalChat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "HistoricalChat", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.ChatEntryType LinkBlocked
::SteamNative::ChatEntryType SteamNative::ChatEntryType::_get_LinkBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_get_LinkBlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::ChatEntryType>("SteamNative", "ChatEntryType", "LinkBlocked"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.ChatEntryType LinkBlocked
void SteamNative::ChatEntryType::_set_LinkBlocked(::SteamNative::ChatEntryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::_set_LinkBlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "ChatEntryType", "LinkBlocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& SteamNative::ChatEntryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::ChatEntryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.FriendRelationship
#include "SteamNative/FriendRelationship.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship None
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "None"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship None
void SteamNative::FriendRelationship::_set_None(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "None", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship Blocked
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship Blocked
void SteamNative::FriendRelationship::_set_Blocked(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "Blocked", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship RequestRecipient
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_RequestRecipient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_RequestRecipient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "RequestRecipient"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship RequestRecipient
void SteamNative::FriendRelationship::_set_RequestRecipient(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_RequestRecipient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "RequestRecipient", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship Friend
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_Friend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_Friend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "Friend"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship Friend
void SteamNative::FriendRelationship::_set_Friend(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_Friend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "Friend", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship RequestInitiator
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_RequestInitiator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_RequestInitiator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "RequestInitiator"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship RequestInitiator
void SteamNative::FriendRelationship::_set_RequestInitiator(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_RequestInitiator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "RequestInitiator", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship Ignored
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_Ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_Ignored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "Ignored"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship Ignored
void SteamNative::FriendRelationship::_set_Ignored(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_Ignored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "Ignored", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship IgnoredFriend
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_IgnoredFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_IgnoredFriend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "IgnoredFriend"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship IgnoredFriend
void SteamNative::FriendRelationship::_set_IgnoredFriend(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_IgnoredFriend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "IgnoredFriend", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship Suggested_DEPRECATED
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_Suggested_DEPRECATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_Suggested_DEPRECATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "Suggested_DEPRECATED"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship Suggested_DEPRECATED
void SteamNative::FriendRelationship::_set_Suggested_DEPRECATED(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_Suggested_DEPRECATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "Suggested_DEPRECATED", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.FriendRelationship Max
::SteamNative::FriendRelationship SteamNative::FriendRelationship::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::FriendRelationship>("SteamNative", "FriendRelationship", "Max"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.FriendRelationship Max
void SteamNative::FriendRelationship::_set_Max(::SteamNative::FriendRelationship value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "FriendRelationship", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& SteamNative::FriendRelationship::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::FriendRelationship::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.PersonaState
#include "SteamNative/PersonaState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Offline
::SteamNative::PersonaState SteamNative::PersonaState::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Offline
void SteamNative::PersonaState::_set_Offline(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Online
::SteamNative::PersonaState SteamNative::PersonaState::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Online"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Online
void SteamNative::PersonaState::_set_Online(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Busy
::SteamNative::PersonaState SteamNative::PersonaState::_get_Busy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Busy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Busy"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Busy
void SteamNative::PersonaState::_set_Busy(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Busy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Busy", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Away
::SteamNative::PersonaState SteamNative::PersonaState::_get_Away() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Away");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Away"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Away
void SteamNative::PersonaState::_set_Away(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Away");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Away", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Snooze
::SteamNative::PersonaState SteamNative::PersonaState::_get_Snooze() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Snooze");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Snooze"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Snooze
void SteamNative::PersonaState::_set_Snooze(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Snooze");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Snooze", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState LookingToTrade
::SteamNative::PersonaState SteamNative::PersonaState::_get_LookingToTrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_LookingToTrade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "LookingToTrade"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState LookingToTrade
void SteamNative::PersonaState::_set_LookingToTrade(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_LookingToTrade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "LookingToTrade", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState LookingToPlay
::SteamNative::PersonaState SteamNative::PersonaState::_get_LookingToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_LookingToPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "LookingToPlay"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState LookingToPlay
void SteamNative::PersonaState::_set_LookingToPlay(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_LookingToPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "LookingToPlay", value));
}
// Autogenerated static field getter
// Get static field: static public SteamNative.PersonaState Max
::SteamNative::PersonaState SteamNative::PersonaState::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::SteamNative::PersonaState>("SteamNative", "PersonaState", "Max"));
}
// Autogenerated static field setter
// Set static field: static public SteamNative.PersonaState Max
void SteamNative::PersonaState::_set_Max(::SteamNative::PersonaState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("SteamNative", "PersonaState", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& SteamNative::PersonaState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::PersonaState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
// Including type: SteamNative.CSteamID
#include "SteamNative/CSteamID.hpp"
// Including type: SteamNative.FriendRelationship
#include "SteamNative/FriendRelationship.hpp"
// Including type: SteamNative.PersonaState
#include "SteamNative/PersonaState.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.FriendGameInfo_t
#include "SteamNative/FriendGameInfo_t.hpp"
// Including type: SteamNative.ChatEntryType
#include "SteamNative/ChatEntryType.hpp"
// Including type: SteamNative.VoiceResult
#include "SteamNative/VoiceResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendCount
int SteamNative::Platform::Interface::ISteamFriends_GetFriendCount(int iFriendFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, iFriendFlags);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendByIndex
::SteamNative::CSteamID SteamNative::Platform::Interface::ISteamFriends_GetFriendByIndex(int iFriend, int iFriendFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendByIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::CSteamID, false>(this, ___internal__method, iFriend, iFriendFlags);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendRelationship
::SteamNative::FriendRelationship SteamNative::Platform::Interface::ISteamFriends_GetFriendRelationship(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendRelationship");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::FriendRelationship, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendPersonaState
::SteamNative::PersonaState SteamNative::Platform::Interface::ISteamFriends_GetFriendPersonaState(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendPersonaState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::PersonaState, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendPersonaName
::System::IntPtr SteamNative::Platform::Interface::ISteamFriends_GetFriendPersonaName(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendPersonaName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendGamePlayed
bool SteamNative::Platform::Interface::ISteamFriends_GetFriendGamePlayed(uint64_t steamIDFriend, ByRef<::SteamNative::FriendGameInfo_t> pFriendGameInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendGamePlayed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, steamIDFriend, byref(pFriendGameInfo));
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetSmallFriendAvatar
int SteamNative::Platform::Interface::ISteamFriends_GetSmallFriendAvatar(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetSmallFriendAvatar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetMediumFriendAvatar
int SteamNative::Platform::Interface::ISteamFriends_GetMediumFriendAvatar(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetMediumFriendAvatar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetLargeFriendAvatar
int SteamNative::Platform::Interface::ISteamFriends_GetLargeFriendAvatar(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetLargeFriendAvatar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_RequestFriendRichPresence
void SteamNative::Platform::Interface::ISteamFriends_RequestFriendRichPresence(uint64_t steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_RequestFriendRichPresence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamFriends_GetFriendMessage
int SteamNative::Platform::Interface::ISteamFriends_GetFriendMessage(uint64_t steamIDFriend, int iMessageID, ::System::IntPtr pvData, int cubData, ByRef<::SteamNative::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamFriends_GetFriendMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend, iMessageID, pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamInventory_DestroyResult
void SteamNative::Platform::Interface::ISteamInventory_DestroyResult(int resultHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamInventory_DestroyResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultHandle);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamNetworking_IsP2PPacketAvailable
bool SteamNative::Platform::Interface::ISteamNetworking_IsP2PPacketAvailable(ByRef<uint> pcubMsgSize, int nChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamNetworking_IsP2PPacketAvailable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pcubMsgSize), nChannel);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamNetworking_ReadP2PPacket
bool SteamNative::Platform::Interface::ISteamNetworking_ReadP2PPacket(::System::IntPtr pubDest, uint cubDest, ByRef<uint> pcubMsgSize, ByRef<uint64_t> psteamIDRemote, int nChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamNetworking_ReadP2PPacket");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pubDest, cubDest, byref(pcubMsgSize), byref(psteamIDRemote), nChannel);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUser_GetAvailableVoice
::SteamNative::VoiceResult SteamNative::Platform::Interface::ISteamUser_GetAvailableVoice(ByRef<uint> pcbCompressed, ByRef<uint> pcbUncompressed_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUser_GetAvailableVoice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::VoiceResult, false>(this, ___internal__method, byref(pcbCompressed), byref(pcbUncompressed_Deprecated), nUncompressedVoiceDesiredSampleRate_Deprecated);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUser_GetVoice
::SteamNative::VoiceResult SteamNative::Platform::Interface::ISteamUser_GetVoice(bool bWantCompressed, ::System::IntPtr pDestBuffer, uint cbDestBufferSize, ByRef<uint> nBytesWritten, bool bWantUncompressed_Deprecated, ::System::IntPtr pUncompressedDestBuffer_Deprecated, uint cbUncompressedDestBufferSize_Deprecated, ByRef<uint> nUncompressBytesWritten_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUser_GetVoice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::VoiceResult, false>(this, ___internal__method, bWantCompressed, pDestBuffer, cbDestBufferSize, byref(nBytesWritten), bWantUncompressed_Deprecated, pUncompressedDestBuffer_Deprecated, cbUncompressedDestBufferSize_Deprecated, byref(nUncompressBytesWritten_Deprecated), nUncompressedVoiceDesiredSampleRate_Deprecated);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUser_GetVoiceOptimalSampleRate
uint SteamNative::Platform::Interface::ISteamUser_GetVoiceOptimalSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUser_GetVoiceOptimalSampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUtils_GetImageSize
bool SteamNative::Platform::Interface::ISteamUtils_GetImageSize(int iImage, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUtils_GetImageSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, iImage, byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUtils_GetImageRGBA
bool SteamNative::Platform::Interface::ISteamUtils_GetImageRGBA(int iImage, ::System::IntPtr pubDest, int nDestBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUtils_GetImageRGBA");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, iImage, pubDest, nDestBufferSize);
}
// Autogenerated method: SteamNative.Platform/Interface.ISteamUtils_IsAPICallCompleted
bool SteamNative::Platform::Interface::ISteamUtils_IsAPICallCompleted(uint64_t hSteamAPICall, ByRef<bool> pbFailed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::ISteamUtils_IsAPICallCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hSteamAPICall, byref(pbFailed));
}
// Autogenerated method: SteamNative.Platform/Interface.SteamApi_SteamAPI_RunCallbacks
void SteamNative::Platform::Interface::SteamApi_SteamAPI_RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::SteamApi_SteamAPI_RunCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.Platform/Interface.SteamApi_SteamAPI_UnregisterCallback
void SteamNative::Platform::Interface::SteamApi_SteamAPI_UnregisterCallback(::System::IntPtr pCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::SteamApi_SteamAPI_UnregisterCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pCallback);
}
// Autogenerated method: SteamNative.Platform/Interface.SteamApi_SteamAPI_Shutdown
void SteamNative::Platform::Interface::SteamApi_SteamAPI_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::SteamApi_SteamAPI_Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.Platform/Interface.SteamApi_SteamGameServer_Shutdown
void SteamNative::Platform::Interface::SteamApi_SteamGameServer_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::Platform::Interface::SteamApi_SteamGameServer_Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::Platform::Interface*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamApi
#include "SteamNative/SteamApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamApi::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamApi.Dispose
void SteamNative::SteamApi::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamApi*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamApi.SteamAPI_RunCallbacks
void SteamNative::SteamApi::SteamAPI_RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::SteamAPI_RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SteamAPI_RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamApi.SteamAPI_Shutdown
void SteamNative::SteamApi::SteamAPI_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::SteamAPI_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SteamAPI_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamApi.SteamAPI_UnregisterCallback
void SteamNative::SteamApi::SteamAPI_UnregisterCallback(::System::IntPtr pCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::SteamAPI_UnregisterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SteamAPI_UnregisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pCallback);
}
// Autogenerated method: SteamNative.SteamApi.SteamGameServer_Shutdown
void SteamNative::SteamApi::SteamGameServer_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApi::SteamGameServer_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SteamGameServer_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamAppList
#include "SteamNative/SteamAppList.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamAppList::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamAppList::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamAppList.Dispose
void SteamNative::SteamAppList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamAppList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamAppList*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamApps
#include "SteamNative/SteamApps.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamApps::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApps::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamApps.Dispose
void SteamNative::SteamApps::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamApps::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamApps*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamClient
#include "SteamNative/SteamClient.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamClient::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamClient::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamClient.Dispose
void SteamNative::SteamClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamFriends
#include "SteamNative/SteamFriends.hpp"
// Including type: SteamNative.CSteamID
#include "SteamNative/CSteamID.hpp"
// Including type: SteamNative.FriendGameInfo_t
#include "SteamNative/FriendGameInfo_t.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.ChatEntryType
#include "SteamNative/ChatEntryType.hpp"
// Including type: SteamNative.PersonaState
#include "SteamNative/PersonaState.hpp"
// Including type: SteamNative.FriendRelationship
#include "SteamNative/FriendRelationship.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamFriends::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamFriends.Dispose
void SteamNative::SteamFriends::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamFriends*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendByIndex
uint64_t SteamNative::SteamFriends::GetFriendByIndex(int iFriend, int iFriendFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iFriend), ::il2cpp_utils::ExtractType(iFriendFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, iFriend, iFriendFlags);
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendCount
int SteamNative::SteamFriends::GetFriendCount(int iFriendFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iFriendFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, iFriendFlags);
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendGamePlayed
bool SteamNative::SteamFriends::GetFriendGamePlayed(::SteamNative::CSteamID steamIDFriend, ByRef<::SteamNative::FriendGameInfo_t> pFriendGameInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendGamePlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendGamePlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend), ::il2cpp_utils::ExtractType(pFriendGameInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, steamIDFriend, byref(pFriendGameInfo));
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendMessage
int SteamNative::SteamFriends::GetFriendMessage(::SteamNative::CSteamID steamIDFriend, int iMessageID, ::System::IntPtr pvData, int cubData, ByRef<::SteamNative::ChatEntryType> peChatEntryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend), ::il2cpp_utils::ExtractType(iMessageID), ::il2cpp_utils::ExtractType(pvData), ::il2cpp_utils::ExtractType(cubData), ::il2cpp_utils::ExtractIndependentType<::SteamNative::ChatEntryType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend, iMessageID, pvData, cubData, byref(peChatEntryType));
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendPersonaName
::StringW SteamNative::SteamFriends::GetFriendPersonaName(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendPersonaName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendPersonaName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendPersonaState
::SteamNative::PersonaState SteamNative::SteamFriends::GetFriendPersonaState(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendPersonaState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendPersonaState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::PersonaState, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.GetFriendRelationship
::SteamNative::FriendRelationship SteamNative::SteamFriends::GetFriendRelationship(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetFriendRelationship");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendRelationship", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::FriendRelationship, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.GetLargeFriendAvatar
int SteamNative::SteamFriends::GetLargeFriendAvatar(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetLargeFriendAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLargeFriendAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.GetMediumFriendAvatar
int SteamNative::SteamFriends::GetMediumFriendAvatar(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetMediumFriendAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMediumFriendAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.GetSmallFriendAvatar
int SteamNative::SteamFriends::GetSmallFriendAvatar(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::GetSmallFriendAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSmallFriendAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated method: SteamNative.SteamFriends.RequestFriendRichPresence
void SteamNative::SteamFriends::RequestFriendRichPresence(::SteamNative::CSteamID steamIDFriend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamFriends::RequestFriendRichPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestFriendRichPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamIDFriend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, steamIDFriend);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamGameServer
#include "SteamNative/SteamGameServer.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamGameServer::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamGameServer::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamGameServer.Dispose
void SteamNative::SteamGameServer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamGameServer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamGameServer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamGameServerStats
#include "SteamNative/SteamGameServerStats.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamGameServerStats::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamGameServerStats::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamGameServerStats.Dispose
void SteamNative::SteamGameServerStats::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamGameServerStats::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamGameServerStats*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamHTTP
#include "SteamNative/SteamHTTP.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamHTTP::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamHTTP::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamHTTP.Dispose
void SteamNative::SteamHTTP::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamHTTP::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamHTTP*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamInventory
#include "SteamNative/SteamInventory.hpp"
// Including type: SteamNative.SteamInventoryResult_t
#include "SteamNative/SteamInventoryResult_t.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamInventory::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamInventory::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamInventory.Dispose
void SteamNative::SteamInventory::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamInventory::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamInventory*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamInventory.DestroyResult
void SteamNative::SteamInventory::DestroyResult(::SteamNative::SteamInventoryResult_t resultHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamInventory::DestroyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamMatchmaking
#include "SteamNative/SteamMatchmaking.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamMatchmaking::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamMatchmaking::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamMatchmaking.Dispose
void SteamNative::SteamMatchmaking::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamMatchmaking::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamMatchmaking*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamMatchmakingServers
#include "SteamNative/SteamMatchmakingServers.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamMatchmakingServers::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamMatchmakingServers::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamMatchmakingServers.Dispose
void SteamNative::SteamMatchmakingServers::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamMatchmakingServers::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamMatchmakingServers*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamNetworking
#include "SteamNative/SteamNetworking.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.CSteamID
#include "SteamNative/CSteamID.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamNetworking::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamNetworking::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamNetworking.Dispose
void SteamNative::SteamNetworking::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamNetworking::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamNetworking*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamNetworking.IsP2PPacketAvailable
bool SteamNative::SteamNetworking::IsP2PPacketAvailable(ByRef<uint> pcubMsgSize, int nChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamNetworking::IsP2PPacketAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsP2PPacketAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(nChannel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pcubMsgSize), nChannel);
}
// Autogenerated method: SteamNative.SteamNetworking.ReadP2PPacket
bool SteamNative::SteamNetworking::ReadP2PPacket(::System::IntPtr pubDest, uint cubDest, ByRef<uint> pcubMsgSize, ByRef<::SteamNative::CSteamID> psteamIDRemote, int nChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamNetworking::ReadP2PPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadP2PPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pubDest), ::il2cpp_utils::ExtractType(cubDest), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::SteamNative::CSteamID&>(), ::il2cpp_utils::ExtractType(nChannel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pubDest, cubDest, byref(pcubMsgSize), byref(psteamIDRemote), nChannel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamRemoteStorage
#include "SteamNative/SteamRemoteStorage.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamRemoteStorage::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamRemoteStorage::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamRemoteStorage.Dispose
void SteamNative::SteamRemoteStorage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamRemoteStorage::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamRemoteStorage*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamScreenshots
#include "SteamNative/SteamScreenshots.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamScreenshots::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamScreenshots::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamScreenshots.Dispose
void SteamNative::SteamScreenshots::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamScreenshots::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamScreenshots*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamUGC
#include "SteamNative/SteamUGC.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamUGC::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUGC::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamUGC.Dispose
void SteamNative::SteamUGC::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUGC::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamUGC*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamUser
#include "SteamNative/SteamUser.hpp"
// Including type: SteamNative.VoiceResult
#include "SteamNative/VoiceResult.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamUser::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUser::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamUser.Dispose
void SteamNative::SteamUser::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUser::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamUser*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamUser.GetAvailableVoice
::SteamNative::VoiceResult SteamNative::SteamUser::GetAvailableVoice(ByRef<uint> pcbCompressed, ByRef<uint> pcbUncompressed_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUser::GetAvailableVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailableVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(nUncompressedVoiceDesiredSampleRate_Deprecated)})));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::VoiceResult, false>(this, ___internal__method, byref(pcbCompressed), byref(pcbUncompressed_Deprecated), nUncompressedVoiceDesiredSampleRate_Deprecated);
}
// Autogenerated method: SteamNative.SteamUser.GetVoice
::SteamNative::VoiceResult SteamNative::SteamUser::GetVoice(bool bWantCompressed, ::System::IntPtr pDestBuffer, uint cbDestBufferSize, ByRef<uint> nBytesWritten, bool bWantUncompressed_Deprecated, ::System::IntPtr pUncompressedDestBuffer_Deprecated, uint cbUncompressedDestBufferSize_Deprecated, ByRef<uint> nUncompressBytesWritten_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUser::GetVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bWantCompressed), ::il2cpp_utils::ExtractType(pDestBuffer), ::il2cpp_utils::ExtractType(cbDestBufferSize), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(bWantUncompressed_Deprecated), ::il2cpp_utils::ExtractType(pUncompressedDestBuffer_Deprecated), ::il2cpp_utils::ExtractType(cbUncompressedDestBufferSize_Deprecated), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(nUncompressedVoiceDesiredSampleRate_Deprecated)})));
  return ::il2cpp_utils::RunMethodRethrow<::SteamNative::VoiceResult, false>(this, ___internal__method, bWantCompressed, pDestBuffer, cbDestBufferSize, byref(nBytesWritten), bWantUncompressed_Deprecated, pUncompressedDestBuffer_Deprecated, cbUncompressedDestBufferSize_Deprecated, byref(nUncompressBytesWritten_Deprecated), nUncompressedVoiceDesiredSampleRate_Deprecated);
}
// Autogenerated method: SteamNative.SteamUser.GetVoiceOptimalSampleRate
uint SteamNative::SteamUser::GetVoiceOptimalSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUser::GetVoiceOptimalSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVoiceOptimalSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamUserStats
#include "SteamNative/SteamUserStats.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamUserStats::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUserStats::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamUserStats.Dispose
void SteamNative::SteamUserStats::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUserStats::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamUserStats*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamUtils
#include "SteamNative/SteamUtils.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: SteamNative.SteamAPICall_t
#include "SteamNative/SteamAPICall_t.hpp"
// Including type: SteamNative.Platform/Interface
#include "SteamNative/Platform_Interface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: SteamNative.Platform/Interface platform
[[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& SteamNative::SteamUtils::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUtils::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::SteamNative::Platform::Interface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamNative.SteamUtils.Dispose
void SteamNative::SteamUtils::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUtils::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::SteamNative::SteamUtils*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamNative.SteamUtils.GetImageRGBA
bool SteamNative::SteamUtils::GetImageRGBA(int iImage, ::System::IntPtr pubDest, int nDestBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUtils::GetImageRGBA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetImageRGBA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iImage), ::il2cpp_utils::ExtractType(pubDest), ::il2cpp_utils::ExtractType(nDestBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, iImage, pubDest, nDestBufferSize);
}
// Autogenerated method: SteamNative.SteamUtils.GetImageSize
bool SteamNative::SteamUtils::GetImageSize(int iImage, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUtils::GetImageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetImageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iImage), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, iImage, byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: SteamNative.SteamUtils.IsAPICallCompleted
bool SteamNative::SteamUtils::IsAPICallCompleted(::SteamNative::SteamAPICall_t hSteamAPICall, ByRef<bool> pbFailed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamUtils::IsAPICallCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAPICallCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hSteamAPICall), ::il2cpp_utils::ExtractType(pbFailed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hSteamAPICall, byref(pbFailed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.SteamInventoryResult_t
#include "SteamNative/SteamInventoryResult_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Value
[[deprecated("Use field access instead!")]] int& SteamNative::SteamInventoryResult_t::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::SteamInventoryResult_t::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNative.CSteamID
#include "SteamNative/CSteamID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 Value
[[deprecated("Use field access instead!")]] uint64_t& SteamNative::CSteamID::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::SteamNative::CSteamID::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Facepunch.Steamworks.BaseSteamworks
#include "Facepunch/Steamworks/BaseSteamworks.hpp"
// Including type: Facepunch.Steamworks.BaseSteamworks/<>c__DisplayClass41_0`1
#include "Facepunch/Steamworks/BaseSteamworks_--c__DisplayClass41_0_1.hpp"
// Including type: Facepunch.Steamworks.Networking
#include "Facepunch/Steamworks/Networking.hpp"
// Including type: Facepunch.Steamworks.Inventory
#include "Facepunch/Steamworks/Inventory.hpp"
// Including type: Facepunch.Steamworks.Workshop
#include "Facepunch/Steamworks/Workshop.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Facepunch.Steamworks.Interop.NativeInterface
#include "Facepunch/Steamworks/Interop/NativeInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamNative.CallbackHandle
#include "SteamNative/CallbackHandle.hpp"
// Including type: SteamNative.CallResult
#include "SteamNative/CallResult.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Networking <Networking>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Networking*& Facepunch::Steamworks::BaseSteamworks::dyn_$Networking$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_$Networking$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Networking>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Networking**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Inventory <Inventory>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Inventory*& Facepunch::Steamworks::BaseSteamworks::dyn_$Inventory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_$Inventory$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Inventory>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Inventory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Workshop <Workshop>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Workshop*& Facepunch::Steamworks::BaseSteamworks::dyn_$Workshop$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_$Workshop$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Workshop>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Workshop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action OnUpdate
[[deprecated("Use field access instead!")]] ::System::Action*& Facepunch::Steamworks::BaseSteamworks::dyn_OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_OnUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnUpdate"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Interop.NativeInterface native
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Interop::NativeInterface*& Facepunch::Steamworks::BaseSteamworks::dyn_native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_native");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Interop::NativeInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SteamNative.CallbackHandle> CallbackHandles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::SteamNative::CallbackHandle*>*& Facepunch::Steamworks::BaseSteamworks::dyn_CallbackHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_CallbackHandles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CallbackHandles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::SteamNative::CallbackHandle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SteamNative.CallResult> CallResults
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::SteamNative::CallResult*>*& Facepunch::Steamworks::BaseSteamworks::dyn_CallResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_CallResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CallResults"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::SteamNative::CallResult*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Facepunch::Steamworks::BaseSteamworks::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Action`1<System.Object>>> Callbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Action_1<::Il2CppObject*>*>*>*& Facepunch::Steamworks::BaseSteamworks::dyn_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::dyn_Callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Action_1<::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.get_Networking
::Facepunch::Steamworks::Networking* Facepunch::Steamworks::BaseSteamworks::get_Networking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::get_Networking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Networking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Networking*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.set_Networking
void Facepunch::Steamworks::BaseSteamworks::set_Networking(::Facepunch::Steamworks::Networking* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::set_Networking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Networking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.get_Inventory
::Facepunch::Steamworks::Inventory* Facepunch::Steamworks::BaseSteamworks::get_Inventory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::get_Inventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Inventory*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.set_Inventory
void Facepunch::Steamworks::BaseSteamworks::set_Inventory(::Facepunch::Steamworks::Inventory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::set_Inventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.get_Workshop
::Facepunch::Steamworks::Workshop* Facepunch::Steamworks::BaseSteamworks::get_Workshop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::get_Workshop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Workshop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Workshop*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.set_Workshop
void Facepunch::Steamworks::BaseSteamworks::set_Workshop(::Facepunch::Steamworks::Workshop* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::set_Workshop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Workshop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.Dispose
void Facepunch::Steamworks::BaseSteamworks::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::BaseSteamworks*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.get_IsValid
bool Facepunch::Steamworks::BaseSteamworks::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.UnregisterCallResult
void Facepunch::Steamworks::BaseSteamworks::UnregisterCallResult(::SteamNative::CallResult* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::UnregisterCallResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterCallResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.Update
void Facepunch::Steamworks::BaseSteamworks::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::BaseSteamworks*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.RunUpdateCallbacks
void Facepunch::Steamworks::BaseSteamworks::RunUpdateCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::RunUpdateCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunUpdateCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.CallbackList
::System::Collections::Generic::List_1<::System::Action_1<::Il2CppObject*>*>* Facepunch::Steamworks::BaseSteamworks::CallbackList(::System::Type* T) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::CallbackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallbackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(T)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Action_1<::Il2CppObject*>*>*, false>(this, ___internal__method, T);
}
// Autogenerated method: Facepunch.Steamworks.BaseSteamworks.Finalize
void Facepunch::Steamworks::BaseSteamworks::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::BaseSteamworks::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
// Including type: Facepunch.Steamworks.Voice
#include "Facepunch/Steamworks/Voice.hpp"
// Including type: Facepunch.Steamworks.ServerList
#include "Facepunch/Steamworks/ServerList.hpp"
// Including type: Facepunch.Steamworks.LobbyList
#include "Facepunch/Steamworks/LobbyList.hpp"
// Including type: Facepunch.Steamworks.App
#include "Facepunch/Steamworks/App.hpp"
// Including type: Facepunch.Steamworks.Achievements
#include "Facepunch/Steamworks/Achievements.hpp"
// Including type: Facepunch.Steamworks.Stats
#include "Facepunch/Steamworks/Stats.hpp"
// Including type: Facepunch.Steamworks.MicroTransactions
#include "Facepunch/Steamworks/MicroTransactions.hpp"
// Including type: Facepunch.Steamworks.User
#include "Facepunch/Steamworks/User.hpp"
// Including type: Facepunch.Steamworks.RemoteStorage
#include "Facepunch/Steamworks/RemoteStorage.hpp"
// Including type: Facepunch.Steamworks.Friends
#include "Facepunch/Steamworks/Friends.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAB2C58
// Autogenerated static field getter
// Get static field: static private Facepunch.Steamworks.Client <Instance>k__BackingField
::Facepunch::Steamworks::Client* Facepunch::Steamworks::Client::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Facepunch::Steamworks::Client*>("Facepunch.Steamworks", "Client", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Facepunch.Steamworks.Client <Instance>k__BackingField
void Facepunch::Steamworks::Client::_set_$Instance$k__BackingField(::Facepunch::Steamworks::Client* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Facepunch.Steamworks", "Client", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Voice <Voice>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Voice*& Facepunch::Steamworks::Client::dyn_$Voice$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$Voice$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Voice>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Voice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.ServerList <ServerList>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::ServerList*& Facepunch::Steamworks::Client::dyn_$ServerList$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$ServerList$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ServerList>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::ServerList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.LobbyList <LobbyList>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::LobbyList*& Facepunch::Steamworks::Client::dyn_$LobbyList$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$LobbyList$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LobbyList>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::LobbyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.App <App>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::App*& Facepunch::Steamworks::Client::dyn_$App$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$App$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<App>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::App**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Achievements <Achievements>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Achievements*& Facepunch::Steamworks::Client::dyn_$Achievements$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$Achievements$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Achievements>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Achievements**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Stats <Stats>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Stats*& Facepunch::Steamworks::Client::dyn_$Stats$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$Stats$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Stats>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Stats**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.MicroTransactions <MicroTransactions>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::MicroTransactions*& Facepunch::Steamworks::Client::dyn_$MicroTransactions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$MicroTransactions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MicroTransactions>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::MicroTransactions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.User <User>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::User*& Facepunch::Steamworks::Client::dyn_$User$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$User$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<User>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.RemoteStorage <RemoteStorage>k__BackingField
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::RemoteStorage*& Facepunch::Steamworks::Client::dyn_$RemoteStorage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn_$RemoteStorage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RemoteStorage>k__BackingField"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::RemoteStorage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Friends _friends
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Friends*& Facepunch::Steamworks::Client::dyn__friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::dyn__friends");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friends"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Friends**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_Instance
::Facepunch::Steamworks::Client* Facepunch::Steamworks::Client::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Facepunch.Steamworks", "Client", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Client*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_Instance
void Facepunch::Steamworks::Client::set_Instance(::Facepunch::Steamworks::Client* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Facepunch.Steamworks", "Client", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_Voice
::Facepunch::Steamworks::Voice* Facepunch::Steamworks::Client::get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Voice*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_Voice
void Facepunch::Steamworks::Client::set_Voice(::Facepunch::Steamworks::Voice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_ServerList
::Facepunch::Steamworks::ServerList* Facepunch::Steamworks::Client::get_ServerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_ServerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::ServerList*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_ServerList
void Facepunch::Steamworks::Client::set_ServerList(::Facepunch::Steamworks::ServerList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_ServerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_LobbyList
::Facepunch::Steamworks::LobbyList* Facepunch::Steamworks::Client::get_LobbyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_LobbyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LobbyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::LobbyList*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_LobbyList
void Facepunch::Steamworks::Client::set_LobbyList(::Facepunch::Steamworks::LobbyList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_LobbyList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LobbyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_App
::Facepunch::Steamworks::App* Facepunch::Steamworks::Client::get_App() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::App*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_App
void Facepunch::Steamworks::Client::set_App(::Facepunch::Steamworks::App* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_Achievements
::Facepunch::Steamworks::Achievements* Facepunch::Steamworks::Client::get_Achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_Achievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Achievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Achievements*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_Achievements
void Facepunch::Steamworks::Client::set_Achievements(::Facepunch::Steamworks::Achievements* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_Achievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Achievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_Stats
::Facepunch::Steamworks::Stats* Facepunch::Steamworks::Client::get_Stats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_Stats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Stats*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_Stats
void Facepunch::Steamworks::Client::set_Stats(::Facepunch::Steamworks::Stats* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_Stats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Stats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_MicroTransactions
::Facepunch::Steamworks::MicroTransactions* Facepunch::Steamworks::Client::get_MicroTransactions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_MicroTransactions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicroTransactions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::MicroTransactions*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_MicroTransactions
void Facepunch::Steamworks::Client::set_MicroTransactions(::Facepunch::Steamworks::MicroTransactions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_MicroTransactions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicroTransactions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_User
::Facepunch::Steamworks::User* Facepunch::Steamworks::Client::get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_User");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_User", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::User*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_User
void Facepunch::Steamworks::Client::set_User(::Facepunch::Steamworks::User* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_User");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_User", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_RemoteStorage
::Facepunch::Steamworks::RemoteStorage* Facepunch::Steamworks::Client::get_RemoteStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_RemoteStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::RemoteStorage*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.set_RemoteStorage
void Facepunch::Steamworks::Client::set_RemoteStorage(::Facepunch::Steamworks::RemoteStorage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::set_RemoteStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemoteStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Client.RunCallbacks
void Facepunch::Steamworks::Client::RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.get_Friends
::Facepunch::Steamworks::Friends* Facepunch::Steamworks::Client::get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::get_Friends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Friends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Friends*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.Finalize
void Facepunch::Steamworks::Client::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::BaseSteamworks*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.Update
void Facepunch::Steamworks::Client::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::BaseSteamworks*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Client.Dispose
void Facepunch::Steamworks::Client::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Client::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::BaseSteamworks*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Achievements
#include "Facepunch/Steamworks/Achievements.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::Achievements::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Achievements::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.Achievements.Dispose
void Facepunch::Steamworks::Achievements::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Achievements::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Achievements*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.App
#include "Facepunch/Steamworks/App.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::App::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::App::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.App.Dispose
void Facepunch::Steamworks::App::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::App::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::App*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Friends
#include "Facepunch/Steamworks/Friends.hpp"
// Including type: Facepunch.Steamworks.Friends/ChatMessageDelegate
#include "Facepunch/Steamworks/Friends_ChatMessageDelegate.hpp"
// Including type: Facepunch.Steamworks.Friends/JoinRequestedDelegate
#include "Facepunch/Steamworks/Friends_JoinRequestedDelegate.hpp"
// Including type: Facepunch.Steamworks.Friends/AvatarSize
#include "Facepunch/Steamworks/Friends_AvatarSize.hpp"
// Including type: Facepunch.Steamworks.Friends/PersonaCallback
#include "Facepunch/Steamworks/Friends_PersonaCallback.hpp"
// Including type: Facepunch.Steamworks.Friends/<>c__DisplayClass32_0
#include "Facepunch/Steamworks/Friends_--c__DisplayClass32_0.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Facepunch.Steamworks.SteamFriend
#include "Facepunch/Steamworks/SteamFriend.hpp"
// Including type: SteamNative.GameConnectedFriendChatMsg_t
#include "SteamNative/GameConnectedFriendChatMsg_t.hpp"
// Including type: SteamNative.GameRichPresenceJoinRequested_t
#include "SteamNative/GameRichPresenceJoinRequested_t.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Facepunch.Steamworks.Image
#include "Facepunch/Steamworks/Image.hpp"
// Including type: SteamNative.PersonaStateChange_t
#include "SteamNative/PersonaStateChange_t.hpp"
// Including type: SteamNative.AvatarImageLoaded_t
#include "SteamNative/AvatarImageLoaded_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::Friends::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Facepunch::Steamworks::Friends::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Friends/ChatMessageDelegate OnChatMessage
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Friends::ChatMessageDelegate*& Facepunch::Steamworks::Friends::dyn_OnChatMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn_OnChatMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnChatMessage"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Friends::ChatMessageDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facepunch.Steamworks.Friends/JoinRequestedDelegate OnInvitedToGame
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Friends::JoinRequestedDelegate*& Facepunch::Steamworks::Friends::dyn_OnInvitedToGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn_OnInvitedToGame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnInvitedToGame"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Friends::JoinRequestedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Facepunch.Steamworks.SteamFriend> _allFriends
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Facepunch::Steamworks::SteamFriend*>*& Facepunch::Steamworks::Friends::dyn__allFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn__allFriends");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allFriends"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Facepunch::Steamworks::SteamFriend*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Facepunch.Steamworks.Friends/PersonaCallback> PersonaCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Facepunch::Steamworks::Friends::PersonaCallback*>*& Facepunch::Steamworks::Friends::dyn_PersonaCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::dyn_PersonaCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PersonaCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Facepunch::Steamworks::Friends::PersonaCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.Friends.OnFriendChatMessage
void Facepunch::Steamworks::Friends::OnFriendChatMessage(::SteamNative::GameConnectedFriendChatMsg_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::OnFriendChatMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFriendChatMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Facepunch.Steamworks.Friends.OnGameJoinRequested
void Facepunch::Steamworks::Friends::OnGameJoinRequested(::SteamNative::GameRichPresenceJoinRequested_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::OnGameJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGameJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Facepunch.Steamworks.Friends.get_All
::System::Collections::Generic::IEnumerable_1<::Facepunch::Steamworks::SteamFriend*>* Facepunch::Steamworks::Friends::get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::get_All");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_All", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Facepunch::Steamworks::SteamFriend*>*, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Friends.Refresh
void Facepunch::Steamworks::Friends::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Friends.GetCachedAvatar
::Facepunch::Steamworks::Image* Facepunch::Steamworks::Friends::GetCachedAvatar(::Facepunch::Steamworks::Friends::AvatarSize size, uint64_t steamid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::GetCachedAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(steamid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::Image*, false>(this, ___internal__method, size, steamid);
}
// Autogenerated method: Facepunch.Steamworks.Friends.Get
::Facepunch::Steamworks::SteamFriend* Facepunch::Steamworks::Friends::Get(uint64_t steamid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steamid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Facepunch::Steamworks::SteamFriend*, false>(this, ___internal__method, steamid);
}
// Autogenerated method: Facepunch.Steamworks.Friends.Cycle
void Facepunch::Steamworks::Friends::Cycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::Cycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Friends.OnPersonaStateChange
void Facepunch::Steamworks::Friends::OnPersonaStateChange(::SteamNative::PersonaStateChange_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::OnPersonaStateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPersonaStateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Facepunch.Steamworks.Friends.LoadAvatarForSteamId
void Facepunch::Steamworks::Friends::LoadAvatarForSteamId(uint64_t Steamid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::LoadAvatarForSteamId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAvatarForSteamId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Steamid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Steamid);
}
// Autogenerated method: Facepunch.Steamworks.Friends.OnAvatarImageLoaded
void Facepunch::Steamworks::Friends::OnAvatarImageLoaded(::SteamNative::AvatarImageLoaded_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::OnAvatarImageLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAvatarImageLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Facepunch.Steamworks.Friends/ChatMessageDelegate
#include "Facepunch/Steamworks/Friends_ChatMessageDelegate.hpp"
// Including type: Facepunch.Steamworks.SteamFriend
#include "Facepunch/Steamworks/SteamFriend.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Facepunch.Steamworks.Friends/ChatMessageDelegate.Invoke
void Facepunch::Steamworks::Friends::ChatMessageDelegate::Invoke(::Facepunch::Steamworks::SteamFriend* _friend, ::StringW type, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::ChatMessageDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::ChatMessageDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _friend, type, message);
}
// Autogenerated method: Facepunch.Steamworks.Friends/ChatMessageDelegate.BeginInvoke
::System::IAsyncResult* Facepunch::Steamworks::Friends::ChatMessageDelegate::BeginInvoke(::Facepunch::Steamworks::SteamFriend* _friend, ::StringW type, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::ChatMessageDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::ChatMessageDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, _friend, type, message, callback, object);
}
// Autogenerated method: Facepunch.Steamworks.Friends/ChatMessageDelegate.EndInvoke
void Facepunch::Steamworks::Friends::ChatMessageDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::ChatMessageDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::ChatMessageDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Facepunch.Steamworks.Friends/JoinRequestedDelegate
#include "Facepunch/Steamworks/Friends_JoinRequestedDelegate.hpp"
// Including type: Facepunch.Steamworks.SteamFriend
#include "Facepunch/Steamworks/SteamFriend.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Facepunch.Steamworks.Friends/JoinRequestedDelegate.Invoke
void Facepunch::Steamworks::Friends::JoinRequestedDelegate::Invoke(::Facepunch::Steamworks::SteamFriend* _friend, ::StringW connect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::JoinRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::JoinRequestedDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _friend, connect);
}
// Autogenerated method: Facepunch.Steamworks.Friends/JoinRequestedDelegate.BeginInvoke
::System::IAsyncResult* Facepunch::Steamworks::Friends::JoinRequestedDelegate::BeginInvoke(::Facepunch::Steamworks::SteamFriend* _friend, ::StringW connect, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::JoinRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::JoinRequestedDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, _friend, connect, callback, object);
}
// Autogenerated method: Facepunch.Steamworks.Friends/JoinRequestedDelegate.EndInvoke
void Facepunch::Steamworks::Friends::JoinRequestedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::JoinRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::Friends::JoinRequestedDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Friends/AvatarSize
#include "Facepunch/Steamworks/Friends_AvatarSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Small
::Facepunch::Steamworks::Friends::AvatarSize Facepunch::Steamworks::Friends::AvatarSize::_get_Small() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_get_Small");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Facepunch::Steamworks::Friends::AvatarSize>("Facepunch.Steamworks", "Friends/AvatarSize", "Small"));
}
// Autogenerated static field setter
// Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Small
void Facepunch::Steamworks::Friends::AvatarSize::_set_Small(::Facepunch::Steamworks::Friends::AvatarSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_set_Small");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Facepunch.Steamworks", "Friends/AvatarSize", "Small", value));
}
// Autogenerated static field getter
// Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Medium
::Facepunch::Steamworks::Friends::AvatarSize Facepunch::Steamworks::Friends::AvatarSize::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Facepunch::Steamworks::Friends::AvatarSize>("Facepunch.Steamworks", "Friends/AvatarSize", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Medium
void Facepunch::Steamworks::Friends::AvatarSize::_set_Medium(::Facepunch::Steamworks::Friends::AvatarSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Facepunch.Steamworks", "Friends/AvatarSize", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Large
::Facepunch::Steamworks::Friends::AvatarSize Facepunch::Steamworks::Friends::AvatarSize::_get_Large() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_get_Large");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Facepunch::Steamworks::Friends::AvatarSize>("Facepunch.Steamworks", "Friends/AvatarSize", "Large"));
}
// Autogenerated static field setter
// Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Large
void Facepunch::Steamworks::Friends::AvatarSize::_set_Large(::Facepunch::Steamworks::Friends::AvatarSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::_set_Large");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Facepunch.Steamworks", "Friends/AvatarSize", "Large", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Facepunch::Steamworks::Friends::AvatarSize::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::AvatarSize::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Friends/<>c__DisplayClass32_0
#include "Facepunch/Steamworks/Friends_--c__DisplayClass32_0.hpp"
// Including type: Facepunch.Steamworks.SteamFriend
#include "Facepunch/Steamworks/SteamFriend.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 steamid
[[deprecated("Use field access instead!")]] uint64_t& Facepunch::Steamworks::Friends::$$c__DisplayClass32_0::dyn_steamid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::$$c__DisplayClass32_0::dyn_steamid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "steamid"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.Friends/<>c__DisplayClass32_0.<Get>b__0
bool Facepunch::Steamworks::Friends::$$c__DisplayClass32_0::$Get$b__0(::Facepunch::Steamworks::SteamFriend* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Friends::$$c__DisplayClass32_0::<Get>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Get>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.Image
#include "Facepunch/Steamworks/Image.hpp"
// Including type: SteamNative.SteamUtils
#include "SteamNative/SteamUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Id>k__BackingField
[[deprecated("Use field access instead!")]] int& Facepunch::Steamworks::Image::dyn_$Id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$Id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Id>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Width>k__BackingField
[[deprecated("Use field access instead!")]] int& Facepunch::Steamworks::Image::dyn_$Width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$Width$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Width>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Height>k__BackingField
[[deprecated("Use field access instead!")]] int& Facepunch::Steamworks::Image::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$Height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Data>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Facepunch::Steamworks::Image::dyn_$Data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$Data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Data>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsLoaded>k__BackingField
[[deprecated("Use field access instead!")]] bool& Facepunch::Steamworks::Image::dyn_$IsLoaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$IsLoaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsLoaded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsError>k__BackingField
[[deprecated("Use field access instead!")]] bool& Facepunch::Steamworks::Image::dyn_$IsError$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::dyn_$IsError$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsError>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.Image.get_Id
int Facepunch::Steamworks::Image::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_Id
void Facepunch::Steamworks::Image::set_Id(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_Width
void Facepunch::Steamworks::Image::set_Width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_Height
void Facepunch::Steamworks::Image::set_Height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_Data
void Facepunch::Steamworks::Image::set_Data(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.get_IsLoaded
bool Facepunch::Steamworks::Image::get_IsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::get_IsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_IsLoaded
void Facepunch::Steamworks::Image::set_IsLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_IsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.set_IsError
void Facepunch::Steamworks::Image::set_IsError(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::set_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Facepunch.Steamworks.Image.TryLoad
bool Facepunch::Steamworks::Image::TryLoad(::SteamNative::SteamUtils* utils) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::Image::TryLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utils)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, utils);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.LobbyList
#include "Facepunch/Steamworks/LobbyList.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::LobbyList::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::LobbyList::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.LobbyList.Dispose
void Facepunch::Steamworks::LobbyList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::LobbyList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::LobbyList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.MicroTransactions
#include "Facepunch/Steamworks/MicroTransactions.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::MicroTransactions::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::MicroTransactions::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.MicroTransactions.Dispose
void Facepunch::Steamworks::MicroTransactions::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::MicroTransactions::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::MicroTransactions*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.RemoteStorage
#include "Facepunch/Steamworks/RemoteStorage.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
// Including type: SteamNative.SteamRemoteStorage
#include "SteamNative/SteamRemoteStorage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::RemoteStorage::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::RemoteStorage::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: SteamNative.SteamRemoteStorage native
[[deprecated("Use field access instead!")]] ::SteamNative::SteamRemoteStorage*& Facepunch::Steamworks::RemoteStorage::dyn_native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::RemoteStorage::dyn_native");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native"))->offset;
  return *reinterpret_cast<::SteamNative::SteamRemoteStorage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.RemoteStorage.Dispose
void Facepunch::Steamworks::RemoteStorage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::RemoteStorage::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::RemoteStorage*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Facepunch.Steamworks.ServerList
#include "Facepunch/Steamworks/ServerList.hpp"
// Including type: Facepunch.Steamworks.ServerList/Server
#include "Facepunch/Steamworks/ServerList_Server.hpp"
// Including type: Facepunch.Steamworks.Client
#include "Facepunch/Steamworks/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Facepunch.Steamworks.Client client
[[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Client*& Facepunch::Steamworks::ServerList::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::ServerList::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Facepunch::Steamworks::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Facepunch.Steamworks.ServerList.Dispose
void Facepunch::Steamworks::ServerList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Facepunch::Steamworks::ServerList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facepunch::Steamworks::ServerList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
