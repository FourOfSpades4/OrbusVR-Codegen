// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objects
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_IsSynchronized
bool System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/OrderedDictionaryKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.StringCollection
#include "System/Collections/Specialized/StringCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList data
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::StringCollection::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Item
::StringW System::Collections::Specialized::StringCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.set_Item
void System::Collections::Specialized::StringCollection::set_Item(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Count
int System::Collections::Specialized::StringCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsReadOnly
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsFixedSize
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Add
int System::Collections::Specialized::StringCollection::Add(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Clear
void System::Collections::Specialized::StringCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Contains
bool System::Collections::Specialized::StringCollection::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.CopyTo
void System::Collections::Specialized::StringCollection::CopyTo(::ArrayW<::StringW> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.IndexOf
int System::Collections::Specialized::StringCollection::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Insert
void System::Collections::Specialized::StringCollection::Insert(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_IsSynchronized
bool System::Collections::Specialized::StringCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Remove
void System::Collections::Specialized::StringCollection::Remove(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.RemoveAt
void System::Collections::Specialized::StringCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::StringCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::Specialized::StringCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.set_Item
void System::Collections::Specialized::StringCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Add
int System::Collections::Specialized::StringCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains
bool System::Collections::Specialized::StringCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf
int System::Collections::Specialized::StringCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert
void System::Collections::Specialized::StringCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove
void System::Collections::Specialized::StringCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::StringCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::StringCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Specialized::StringCollection*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NodeColor
#include "System/Collections/Generic/NodeColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Black
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Black
void System::Collections::Generic::NodeColor::_set_Black(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Red
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Red
void System::Collections::Generic::NodeColor::_set_Red(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Red", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::NodeColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.TreeRotation
#include "System/Collections/Generic/TreeRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Left
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Left"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Left
void System::Collections::Generic::TreeRotation::_set_Left(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation LeftRight
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation LeftRight
void System::Collections::Generic::TreeRotation::_set_LeftRight(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Right
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Right
void System::Collections::Generic::TreeRotation::_set_Right(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation RightLeft
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_RightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_RightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "RightLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation RightLeft
void System::Collections::Generic::TreeRotation::_set_RightLeft(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_RightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "RightLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::TreeRotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElement
#include "System/Net/Configuration/BypassElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.BypassElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::BypassElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::BypassElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElement
#include "System/Net/Configuration/ConnectionManagementElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ConnectionManagementElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElement
#include "System/Net/Configuration/WebRequestModuleElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModuleElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModuleElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModuleElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, ::System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::DiagnosticsConfigurationHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub__::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub__::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR___.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathDocumentNavigator
#include "MS/Internal/Xml/Cache/XPathDocumentNavigator.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageCurrent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurrent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxCurrent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxCurrent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxParent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.GetPositionHashCode
int MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Value
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.Clone
::System::Xml::XPath::XPathNavigator* MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NamespaceURI
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NameTable
::System::Xml::XmlNameTable* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToFirstNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToNextNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToParent
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.IsSamePosition
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_UnderlyingObject
::Il2CppObject* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNode
#include "MS/Internal/Xml/Cache/XPathNode.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodeInfoAtom info
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodeInfoAtom*& MS::Internal::Xml::Cache::XPathNode::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodeInfoAtom**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSibling
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSibling"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxParent
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSimilar
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSimilar"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 posOffset
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_posOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_posOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posOffset"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 props
[[deprecated("Use field access instead!")]] uint& MS::Internal::Xml::Cache::XPathNode::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_props");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNode::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetParent
int MS::Internal::Xml::Cache::XPathNode::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetSibling
int MS::Internal::Xml::Cache::XPathNode::GetSibling(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsXmlNamespaceNode
bool MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasSibling
bool MS::Internal::Xml::Cache::XPathNode::get_HasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasCollapsedText
bool MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasCollapsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsText
bool MS::Internal::Xml::Cache::XPathNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasNamespaceDecls
bool MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasNamespaceDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Value
::StringW MS::Internal::Xml::Cache::XPathNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeRef
#include "MS/Internal/Xml/Cache/XPathNodeRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] page
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeRef::dyn_page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_page");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "page"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idx
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef..ctor
// ABORTED elsewhere.  MS::Internal::Xml::Cache::XPathNodeRef::XPathNodeRef(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> page, int idx)
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Page
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeRef::get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Page");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Page", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Index
int MS::Internal::Xml::Cache::XPathNodeRef::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeHelper
#include "MS/Internal/Xml/Cache/XPathNodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocalNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetInScopeNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetParent
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageNode, int idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageNode, idxNode);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageCurrent, ByRef<int> idxCurrent, ::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageEnd, int idxEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetTextFollowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageCurrent), ::il2cpp_utils::ExtractType(idxCurrent), ::il2cpp_utils::ExtractType(pageEnd), ::il2cpp_utils::ExtractType(idxEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageCurrent), byref(idxCurrent), pageEnd, idxEnd);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetNonDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageNum
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageNext
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNext"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_PageNumber
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NodeCount
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NextPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseUri
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSibling
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSibling"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSimilar
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSimilar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSimilar"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathDocument doc
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathDocument*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumBase
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosBase
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localNameHash
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localNameHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localNameHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localNameHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodePageInfo pageInfo
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodePageInfo*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodePageInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_SiblingPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SiblingPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_ParentPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeInfoAtom::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.Equals
bool MS::Internal::Xml::Cache::XPathNodeInfoAtom::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.ToString
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexDecoder
#include "System/Xml/BinHexDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::BinHexDecoder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_curIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_curIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasHalfByteCached
[[deprecated("Use field access instead!")]] bool& System::Xml::BinHexDecoder::dyn_hasHalfByteCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_hasHalfByteCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHalfByteCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte cachedHalfByte
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinHexDecoder::dyn_cachedHalfByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_cachedHalfByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedHalfByte"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
::ArrayW<uint8_t> System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, bool allowOddChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(allowOddChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, allowOddChars);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
void System::Xml::BinHexDecoder::Decode(::Il2CppChar* pChars, ::Il2CppChar* pCharsEndPos, uint8_t* pBytes, uint8_t* pBytesEndPos, ByRef<bool> hasHalfByteCached, ByRef<uint8_t> cachedHalfByte, ByRef<int> charsDecoded, ByRef<int> bytesDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pChars), ::il2cpp_utils::ExtractType(pCharsEndPos), ::il2cpp_utils::ExtractType(pBytes), ::il2cpp_utils::ExtractType(pBytesEndPos), ::il2cpp_utils::ExtractType(hasHalfByteCached), ::il2cpp_utils::ExtractType(cachedHalfByte), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pChars, pCharsEndPos, pBytes, pBytesEndPos, byref(hasHalfByteCached), byref(cachedHalfByte), byref(charsDecoded), byref(bytesDecoded));
}
// Autogenerated method: System.Xml.BinHexDecoder.get_IsFull
bool System::Xml::BinHexDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
int System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
::StringW System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count, ::ArrayW<::Il2CppChar> outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Bits
#include "System/Xml/Bits.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0101010101010101
uint System::Xml::Bits::_get_MASK_0101010101010101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0101010101010101");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0101010101010101"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0101010101010101
void System::Xml::Bits::_set_MASK_0101010101010101(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0101010101010101");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0101010101010101", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0011001100110011
uint System::Xml::Bits::_get_MASK_0011001100110011() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0011001100110011");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0011001100110011"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0011001100110011
void System::Xml::Bits::_set_MASK_0011001100110011(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0011001100110011");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0011001100110011", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000111100001111
uint System::Xml::Bits::_get_MASK_0000111100001111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000111100001111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000111100001111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000111100001111
void System::Xml::Bits::_set_MASK_0000111100001111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000111100001111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000111100001111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000000011111111
uint System::Xml::Bits::_get_MASK_0000000011111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000000011111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000000011111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000000011111111
void System::Xml::Bits::_set_MASK_0000000011111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000000011111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000000011111111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_1111111111111111
uint System::Xml::Bits::_get_MASK_1111111111111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_1111111111111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_1111111111111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_1111111111111111
void System::Xml::Bits::_set_MASK_1111111111111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_1111111111111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_1111111111111111", value));
}
// Autogenerated method: System.Xml.Bits.Count
int System::Xml::Bits::Count(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated method: System.Xml.Bits.LeastPosition
int System::Xml::Bits::LeastPosition(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::LeastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "LeastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated method: System.Xml.Bits..cctor
void System::Xml::Bits::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinaryCompatibility
#include "System/Xml/BinaryCompatibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
void System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2", value));
}
// Autogenerated method: System.Xml.BinaryCompatibility.get_TargetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "get_TargetsAtLeast_Desktop_V4_5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility.RunningOnCheck
bool System::Xml::BinaryCompatibility::RunningOnCheck(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::RunningOnCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "RunningOnCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyName);
}
// Autogenerated method: System.Xml.BinaryCompatibility..cctor
void System::Xml::BinaryCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdProcessing
#include "System/Xml/DtdProcessing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Prohibit
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Prohibit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Prohibit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Prohibit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Prohibit
void System::Xml::DtdProcessing::_set_Prohibit(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Prohibit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Prohibit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Ignore
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Ignore
void System::Xml::DtdProcessing::_set_Ignore(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Parse
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Parse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Parse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Parse
void System::Xml::DtdProcessing::_set_Parse(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Parse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Parse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdProcessing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.EntityHandling
#include "System/Xml/EntityHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandEntities
void System::Xml::EntityHandling::_set_ExpandEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandEntities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandCharEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandCharEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandCharEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandCharEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandCharEntities
void System::Xml::EntityHandling::_set_ExpandCharEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandCharEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandCharEntities", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::EntityHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::IDtdInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::IDtdInfo::get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::IDtdInfo::get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::IDtdInfo::LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::IDtdInfo::LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::IDtdAttributeListInfo::LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::IDtdAttributeInfo::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::IDtdAttributeInfo::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::IDtdAttributeInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::IDtdAttributeInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::IDtdAttributeInfo::get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::IDtdAttributeInfo::get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Name
::StringW System::Xml::IDtdEntityInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsExternal
bool System::Xml::IDtdEntityInfo::get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsUnparsedEntity
bool System::Xml::IDtdEntityInfo::get_IsUnparsedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsUnparsedEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsParameterEntity
bool System::Xml::IDtdEntityInfo::get_IsParameterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsParameterEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_BaseUriString
::StringW System::Xml::IDtdEntityInfo::get_BaseUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_BaseUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_DeclaredUriString
::StringW System::Xml::IDtdEntityInfo::get_DeclaredUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_DeclaredUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_SystemId
::StringW System::Xml::IDtdEntityInfo::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_SystemId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_PublicId
::StringW System::Xml::IDtdEntityInfo::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_PublicId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Text
::StringW System::Xml::IDtdEntityInfo::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LineNumber
int System::Xml::IDtdEntityInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LinePosition
int System::Xml::IDtdEntityInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdEntityInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParser
#include "System/Xml/IDtdParser.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParser.ParseInternalDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseInternalDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParser*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, adapter, saveInternalSubset);
}
// Autogenerated method: System.Xml.IDtdParser.ParseFreeFloatingDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseFreeFloatingDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParser*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NameTable
::System::Xml::XmlNameTable* System::Xml::IDtdParserAdapter::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::IDtdParserAdapter::get_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_BaseUri
::System::Uri* System::Xml::IDtdParserAdapter::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_BaseUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::IDtdParserAdapter::get_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBufferLength
int System::Xml::IDtdParserAdapter::get_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBufferLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_CurrentPosition
int System::Xml::IDtdParserAdapter::get_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.set_CurrentPosition
void System::Xml::IDtdParserAdapter::set_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::set_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineNo
int System::Xml::IDtdParserAdapter::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineNo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineStartPosition
int System::Xml::IDtdParserAdapter::get_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineStartPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEof
bool System::Xml::IDtdParserAdapter::get_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEof");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_EntityStackLength
int System::Xml::IDtdParserAdapter::get_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_EntityStackLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized
bool System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ReadData
int System::Xml::IDtdParserAdapter::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ReadData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnNewLine
void System::Xml::IDtdParserAdapter::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnNewLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNumericCharRef
int System::Xml::IDtdParserAdapter::ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNumericCharRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNamedCharRef
int System::Xml::IDtdParserAdapter::ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNamedCharRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParsePI
void System::Xml::IDtdParserAdapter::ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParsePI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseComment
void System::Xml::IDtdParserAdapter::ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushEntity
bool System::Xml::IDtdParserAdapter::PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PopEntity
bool System::Xml::IDtdParserAdapter::PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PopEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushExternalSubset
bool System::Xml::IDtdParserAdapter::PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushExternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushInternalDtd
void System::Xml::IDtdParserAdapter::PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushInternalDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnSystemId
void System::Xml::IDtdParserAdapter::OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnSystemId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnPublicId
void System::Xml::IDtdParserAdapter::OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnPublicId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.Throw
void System::Xml::IDtdParserAdapter::Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::Throw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapterWithValidation
#include "System/Xml/IDtdParserAdapterWithValidation.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation
bool System::Xml::IDtdParserAdapterWithValidation::get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterWithValidation::get_DtdValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapterWithValidation*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::IDtdParserAdapterWithValidation::get_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterWithValidation::get_ValidationEventHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapterWithValidation*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapterV1
#include "System/Xml/IDtdParserAdapterV1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode
bool System::Xml::IDtdParserAdapterV1::get_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_V1CompatibilityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapterV1*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_Normalization
bool System::Xml::IDtdParserAdapterV1::get_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_Normalization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapterV1*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapterV1.get_Namespaces
bool System::Xml::IDtdParserAdapterV1::get_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapterV1::get_Namespaces");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdParserAdapterV1*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IValidationEventHandling.SendEvent
void System::Xml::IValidationEventHandling::SendEvent(::System::Exception* exception, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IValidationEventHandling::SendEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IValidationEventHandling*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IncrementalReadDecoder
#include "System/Xml/IncrementalReadDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IncrementalReadDecoder.get_IsFull
bool System::Xml::IncrementalReadDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IncrementalReadDecoder.Decode
int System::Xml::IncrementalReadDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IncrementalReadDummyDecoder
#include "System/Xml/IncrementalReadDummyDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IncrementalReadDummyDecoder.get_IsFull
bool System::Xml::IncrementalReadDummyDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDummyDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IncrementalReadDummyDecoder.Decode
int System::Xml::IncrementalReadDummyDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IncrementalReadDummyDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Initial
::System::Xml::ReadState System::Xml::ReadState::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Initial
void System::Xml::ReadState::_set_Initial(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Interactive
::System::Xml::ReadState System::Xml::ReadState::_get_Interactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Interactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Interactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Interactive
void System::Xml::ReadState::_set_Interactive(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Interactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Interactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Error
::System::Xml::ReadState System::Xml::ReadState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Error
void System::Xml::ReadState::_set_Error(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState EndOfFile
::System::Xml::ReadState System::Xml::ReadState::_get_EndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_EndOfFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "EndOfFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState EndOfFile
void System::Xml::ReadState::_set_EndOfFile(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_EndOfFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "EndOfFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ReadState Closed
::System::Xml::ReadState System::Xml::ReadState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ReadState>("System.Xml", "ReadState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ReadState Closed
void System::Xml::ReadState::_set_Closed(::System::Xml::ReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ReadState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ReadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ReadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.WhitespaceHandling
#include "System/Xml/WhitespaceHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling All
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling All
void System::Xml::WhitespaceHandling::_set_All(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling Significant
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_Significant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_Significant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "Significant"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling Significant
void System::Xml::WhitespaceHandling::_set_Significant(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_Significant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "Significant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WhitespaceHandling None
::System::Xml::WhitespaceHandling System::Xml::WhitespaceHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WhitespaceHandling>("System.Xml", "WhitespaceHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WhitespaceHandling None
void System::Xml::WhitespaceHandling::_set_None(::System::Xml::WhitespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WhitespaceHandling", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::WhitespaceHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WhitespaceHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _docTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__docTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__docTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_docTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _pubId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__pubId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__pubId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pubId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sysId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__sysId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__sysId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sysId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _internalSubset
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__internalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__internalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _baseURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlParserContext::dyn__baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlParserContext::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlParserContext.get_DocTypeName
::StringW System::Xml::XmlParserContext::get_DocTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_DocTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_PublicId
::StringW System::Xml::XmlParserContext::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_PublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_SystemId
::StringW System::Xml::XmlParserContext::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_SystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_BaseURI
::StringW System::Xml::XmlParserContext::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_InternalSubset
::StringW System::Xml::XmlParserContext::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_InternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_Encoding
::System::Text::Encoding* System::Xml::XmlParserContext::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlParserContext.get_HasDtdInfo
bool System::Xml::XmlParserContext::get_HasDtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlParserContext::get_HasDtdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDtdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 IsTextualNodeBitmap
uint System::Xml::XmlReader::_get_IsTextualNodeBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_IsTextualNodeBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "IsTextualNodeBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 IsTextualNodeBitmap
void System::Xml::XmlReader::_set_IsTextualNodeBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_IsTextualNodeBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "IsTextualNodeBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 CanReadContentAsBitmap
uint System::Xml::XmlReader::_get_CanReadContentAsBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_CanReadContentAsBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "CanReadContentAsBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CanReadContentAsBitmap
void System::Xml::XmlReader::_set_CanReadContentAsBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_CanReadContentAsBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "CanReadContentAsBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HasValueBitmap
uint System::Xml::XmlReader::_get_HasValueBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_HasValueBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "HasValueBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HasValueBitmap
void System::Xml::XmlReader::_set_HasValueBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_HasValueBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "HasValueBitmap", value));
}
// Autogenerated method: System.Xml.XmlReader.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_Name
::StringW System::Xml::XmlReader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_LocalName
::StringW System::Xml::XmlReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_Prefix
::StringW System::Xml::XmlReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.GetAttribute
::StringW System::Xml::XmlReader::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlReader.get_Item
::StringW System::Xml::XmlReader::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlReader.ReadAttributeValue
bool System::Xml::XmlReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Read
bool System::Xml::XmlReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Close
void System::Xml::XmlReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_ReadState
::System::Xml::ReadState System::Xml::XmlReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.LookupNamespace
::StringW System::Xml::XmlReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlReader.ResolveEntity
void System::Xml::XmlReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Dispose
void System::Xml::XmlReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlReader.Dispose
void System::Xml::XmlReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlReader.CalcBufferSize
int System::Xml::XmlReader::CalcBufferSize(::System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::CalcBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", "CalcBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Xml.XmlReader..cctor
void System::Xml::XmlReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.Boolean> s_enableLegacyXmlSettings
::System::Nullable_1<bool> System::Xml::XmlReaderSettings::_get_s_enableLegacyXmlSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::_get_s_enableLegacyXmlSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<bool>>("System.Xml", "XmlReaderSettings", "s_enableLegacyXmlSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.Boolean> s_enableLegacyXmlSettings
void System::Xml::XmlReaderSettings::_set_s_enableLegacyXmlSettings(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::_set_s_enableLegacyXmlSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReaderSettings", "s_enableLegacyXmlSettings", value));
}
// Autogenerated method: System.Xml.XmlReaderSettings.EnableLegacyXmlSettings
bool System::Xml::XmlReaderSettings::EnableLegacyXmlSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::EnableLegacyXmlSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReaderSettings", "EnableLegacyXmlSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlReaderSettings..cctor
void System::Xml::XmlReaderSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReaderSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReaderSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSpace
#include "System/Xml/XmlSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace None
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace None
void System::Xml::XmlSpace::_set_None(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Default
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Default
void System::Xml::XmlSpace::_set_Default(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSpace Preserve
::System::Xml::XmlSpace System::Xml::XmlSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSpace>("System.Xml", "XmlSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSpace Preserve
void System::Xml::XmlSpace::_set_Preserve(::System::Xml::XmlSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSpace", "Preserve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReader
#include "System/Xml/XmlTextReader.hpp"
// Including type: System.Xml.XmlTextReaderImpl
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl impl
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl*& System::Xml::XmlTextReader::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::XmlTextReader::System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReader*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlTextReader::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReader*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReader.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Name
::StringW System::Xml::XmlTextReader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_LocalName
::StringW System::Xml::XmlTextReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_Prefix
::StringW System::Xml::XmlTextReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.GetAttribute
::StringW System::Xml::XmlTextReader::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReader.ReadAttributeValue
bool System::Xml::XmlTextReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.Read
bool System::Xml::XmlTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.Close
void System::Xml::XmlTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_ReadState
::System::Xml::ReadState System::Xml::XmlTextReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReader.LookupNamespace
::StringW System::Xml::XmlTextReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReader.ResolveEntity
void System::Xml::XmlTextReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Xml.XmlTextReaderImpl/EntityType
#include "System/Xml/XmlTextReaderImpl_EntityType.hpp"
// Including type: System.Xml.XmlTextReaderImpl/EntityExpandType
#include "System/Xml/XmlTextReaderImpl_EntityExpandType.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlTextReaderImpl/LaterInitParam
#include "System/Xml/XmlTextReaderImpl_LaterInitParam.hpp"
// Including type: System.Xml.XmlTextReaderImpl/InitInputType
#include "System/Xml/XmlTextReaderImpl_InitInputType.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.XmlTextReaderImpl/XmlContext
#include "System/Xml/XmlTextReaderImpl_XmlContext.hpp"
// Including type: System.Xml.XmlTextReaderImpl/DtdParserProxy
#include "System/Xml/XmlTextReaderImpl_DtdParserProxy.hpp"
// Including type: System.Xml.XmlTextReaderImpl/NodeData
#include "System/Xml/XmlTextReaderImpl_NodeData.hpp"
// Including type: System.Xml.XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer
#include "System/Xml/XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer.hpp"
// Including type: System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate
#include "System/Xml/XmlTextReaderImpl_OnDefaultAttributeUseDelegate.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Xml.IncrementalReadDecoder
#include "System/Xml/IncrementalReadDecoder.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/LaterInitParam laterInitParam
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::LaterInitParam*& System::Xml::XmlTextReaderImpl::dyn_laterInitParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_laterInitParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laterInitParam"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::LaterInitParam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlTextReaderImpl::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingState ps
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingState& System::Xml::XmlTextReaderImpl::dyn_ps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ps"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingFunction parsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_parsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingFunction nextParsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_nextParsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextParsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextParsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingFunction nextNextParsingFunction
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingFunction& System::Xml::XmlTextReaderImpl::dyn_nextNextParsingFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextNextParsingFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextNextParsingFunction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/NodeData[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>& System::Xml::XmlTextReaderImpl::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/NodeData curNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::NodeData*& System::Xml::XmlTextReaderImpl::dyn_curNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_curNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::NodeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curAttrIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_curAttrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_curAttrIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curAttrIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrHashtable
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrHashtable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrDuplWalkCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attrDuplWalkCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrDuplWalkCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrDuplWalkCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attrNeedNamespaceLookup
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_attrNeedNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrNeedNamespaceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrNeedNamespaceLookup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fullAttrCleanup
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_fullAttrCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fullAttrCleanup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullAttrCleanup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/NodeData[] attrDuplSortingArray
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>& System::Xml::XmlTextReaderImpl::dyn_attrDuplSortingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attrDuplSortingArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrDuplSortingArray"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlTextReaderImpl::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::XmlTextReaderImpl::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String url
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean normalize
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_normalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_supportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_supportNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.WhitespaceHandling whitespaceHandling
[[deprecated("Use field access instead!")]] ::System::Xml::WhitespaceHandling& System::Xml::XmlTextReaderImpl::dyn_whitespaceHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_whitespaceHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whitespaceHandling"))->offset;
  return *reinterpret_cast<::System::Xml::WhitespaceHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdProcessing dtdProcessing
[[deprecated("Use field access instead!")]] ::System::Xml::DtdProcessing& System::Xml::XmlTextReaderImpl::dyn_dtdProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_dtdProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdProcessing"))->offset;
  return *reinterpret_cast<::System::Xml::DtdProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.EntityHandling entityHandling
[[deprecated("Use field access instead!")]] ::System::Xml::EntityHandling& System::Xml::XmlTextReaderImpl::dyn_entityHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_entityHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityHandling"))->offset;
  return *reinterpret_cast<::System::Xml::EntityHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignorePIs
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_ignorePIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ignorePIs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignorePIs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreComments
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_ignoreComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_ignoreComments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreComments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeInput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_closeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_closeInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersInDocument
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_maxCharactersInDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_maxCharactersInDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersInDocument"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxCharactersFromEntities
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_maxCharactersFromEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_maxCharactersFromEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCharactersFromEntities"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean v1Compat
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_v1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_v1Compat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1Compat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager namespaceManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::XmlTextReaderImpl::dyn_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_namespaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lastPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_lastPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_lastPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/XmlContext xmlContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::XmlContext*& System::Xml::XmlTextReaderImpl::dyn_xmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::XmlContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingState[] parsingStatesStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlTextReaderImpl::ParsingState>& System::Xml::XmlTextReaderImpl::dyn_parsingStatesStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingStatesStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingStatesStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlTextReaderImpl::ParsingState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parsingStatesStackTop
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_parsingStatesStackTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingStatesStackTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingStatesStackTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reportedBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_reportedBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_reportedBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding reportedEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlTextReaderImpl::dyn_reportedEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_reportedEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdInfo dtdInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdInfo*& System::Xml::XmlTextReaderImpl::dyn_dtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_dtdInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType fragmentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlTextReaderImpl::dyn_fragmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fragmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fragmentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlParserContext fragmentParserContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlParserContext*& System::Xml::XmlTextReaderImpl::dyn_fragmentParserContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_fragmentParserContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fragmentParserContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlParserContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IncrementalReadDecoder incReadDecoder
[[deprecated("Use field access instead!")]] ::System::Xml::IncrementalReadDecoder*& System::Xml::XmlTextReaderImpl::dyn_incReadDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadDecoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadDecoder"))->offset;
  return *reinterpret_cast<::System::Xml::IncrementalReadDecoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/IncrementalReadState incReadState
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::IncrementalReadState& System::Xml::XmlTextReaderImpl::dyn_incReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadState"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::IncrementalReadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.LineInfo incReadLineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::dyn_incReadLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadDepth
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadLeftStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadLeftStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLeftStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLeftStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 incReadLeftEndPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_incReadLeftEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_incReadLeftEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incReadLeftEndPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attributeValueBaseEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_attributeValueBaseEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_attributeValueBaseEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeValueBaseEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emptyEntityInAttributeResolved
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_emptyEntityInAttributeResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_emptyEntityInAttributeResolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyEntityInAttributeResolved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IValidationEventHandling validationEventHandling
[[deprecated("Use field access instead!")]] ::System::Xml::IValidationEventHandling*& System::Xml::XmlTextReaderImpl::dyn_validationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_validationEventHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationEventHandling"))->offset;
  return *reinterpret_cast<::System::Xml::IValidationEventHandling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate onDefaultAttributeUse
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate*& System::Xml::XmlTextReaderImpl::dyn_onDefaultAttributeUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_onDefaultAttributeUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDefaultAttributeUse"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validatingReaderCompatFlag
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_validatingReaderCompatFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_validatingReaderCompatFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validatingReaderCompatFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean addDefaultAttributesAndNormalize
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_addDefaultAttributesAndNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_addDefaultAttributesAndNormalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDefaultAttributesAndNormalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::XmlTextReaderImpl::dyn_stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rootElementParsed
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_rootElementParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_rootElementParsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootElementParsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean standalone
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_nextEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_nextEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl/ParsingMode parsingMode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::ParsingMode& System::Xml::XmlTextReaderImpl::dyn_parsingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parsingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingMode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::ParsingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ReadState readState
[[deprecated("Use field access instead!")]] ::System::Xml::ReadState& System::Xml::XmlTextReaderImpl::dyn_readState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_readState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readState"))->offset;
  return *reinterpret_cast<::System::Xml::ReadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdEntityInfo lastEntity
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdEntityInfo*& System::Xml::XmlTextReaderImpl::dyn_lastEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_lastEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastEntity"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdEntityInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean afterResetState
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_afterResetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_afterResetState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "afterResetState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 documentStartBytePos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_documentStartBytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_documentStartBytePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "documentStartBytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readValueOffset
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::dyn_readValueOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_readValueOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readValueOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 charactersInDocument
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_charactersInDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_charactersInDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charactersInDocument"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 charactersFromEntities
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlTextReaderImpl::dyn_charactersFromEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_charactersFromEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charactersFromEntities"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.IDtdEntityInfo,System.Xml.IDtdEntityInfo> currentEntities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::IDtdEntityInfo*, ::System::Xml::IDtdEntityInfo*>*& System::Xml::XmlTextReaderImpl::dyn_currentEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_currentEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::IDtdEntityInfo*, ::System::Xml::IDtdEntityInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disableUndeclaredEntityCheck
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_disableUndeclaredEntityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_disableUndeclaredEntityCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableUndeclaredEntityCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader outerReader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::XmlTextReaderImpl::dyn_outerReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_outerReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerReader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlResolverIsSet
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::dyn_xmlResolverIsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_xmlResolverIsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolverIsSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Xml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_Xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::dyn_XmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_XmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Tuple`4<System.Int32,System.Int32,System.Int32,System.Boolean>> parseText_dummyTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::System::Tuple_4<int, int, int, bool>*>*& System::Xml::XmlTextReaderImpl::dyn_parseText_dummyTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::dyn_parseText_dummyTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseText_dummyTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::System::Tuple_4<int, int, int, bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitUriString
void System::Xml::XmlTextReaderImpl::FinishInitUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitStream
void System::Xml::XmlTextReaderImpl::FinishInitStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInitTextReader
void System::Xml::XmlTextReaderImpl::FinishInitTextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInitTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInitTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishInit
void System::Xml::XmlTextReaderImpl::FinishInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_OuterReader
void System::Xml::XmlTextReaderImpl::set_OuterReader(::System::Xml::XmlReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_OuterReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OuterReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlTextReaderImpl::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupPrefix
::StringW System::Xml::XmlTextReaderImpl::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_NamespaceResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_DtdValidation
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_DtdValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_Normalization
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Normalization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_Normalization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_Namespaces
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_Namespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_V1CompatibilityMode
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_V1CompatibilityMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_V1CompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_BaseUri
::System::Uri* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_IsEof
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_IsEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ParsingBufferLength
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ParsingBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ParsingBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_CurrentPosition
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_CurrentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.set_DtdParserProxy_CurrentPosition
void System::Xml::XmlTextReaderImpl::set_DtdParserProxy_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::set_DtdParserProxy_CurrentPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdParserProxy_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_EntityStackLength
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_EntityStackLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_EntityStackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_IsEntityEolNormalized
bool System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_IsEntityEolNormalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_IsEntityEolNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_ValidationEventHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_ValidationEventHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnNewLine
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_LineNo
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdParserProxy_LineStartPosition
int System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdParserProxy_LineStartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdParserProxy_LineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ReadData
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNumericCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseNamedCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParsePI
void System::Xml::XmlTextReaderImpl::DtdParserProxy_ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseComment
void System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_IsResolverNull
bool System::Xml::XmlTextReaderImpl::get_IsResolverNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_IsResolverNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsResolverNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetTempResolver
::System::Xml::XmlResolver* System::Xml::XmlTextReaderImpl::GetTempResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetTempResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTempResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PopEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PopEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::IDtdEntityInfo*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushExternalSubset
bool System::Xml::XmlTextReaderImpl::DtdParserProxy_PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushExternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(publicId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_PushInternalDtd
void System::Xml::XmlTextReaderImpl::DtdParserProxy_PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_PushInternalDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_PushInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(internalDtd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_Throw
void System::Xml::XmlTextReaderImpl::DtdParserProxy_Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnSystemId
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnSystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(systemLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DtdParserProxy_OnPublicId
void System::Xml::XmlTextReaderImpl::DtdParserProxy_OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy_OnPublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DtdParserProxy_OnPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(publicLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res, args);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(int pos, ::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::StringW arg, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::StringW res, ::ArrayW<::StringW> args, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Throw
void System::Xml::XmlTextReaderImpl::Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReThrow
void System::Xml::XmlTextReaderImpl::ReThrow(::System::Exception* e, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo
void System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo(::StringW res, ::ArrayW<::StringW> args, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowWithoutLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowWithoutLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, args, innerException);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowInvalidChar
void System::Xml::XmlTextReaderImpl::ThrowInvalidChar(::ArrayW<::Il2CppChar> data, int length, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, invCharPos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetErrorState
void System::Xml::XmlTextReaderImpl::SetErrorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetErrorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetErrorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SendValidationEvent
void System::Xml::XmlTextReaderImpl::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, code, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SendValidationEvent
void System::Xml::XmlTextReaderImpl::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::System::Xml::Schema::XmlSchemaException* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, exception);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishAttributeValueIterator
void System::Xml::XmlTextReaderImpl::FinishAttributeValueIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishAttributeValueIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishAttributeValueIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_DtdValidation
bool System::Xml::XmlTextReaderImpl::get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_DtdValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::System::IO::Stream* stream, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, stream, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::StringW baseUriStr, ::System::IO::Stream* stream, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, baseUriStr, stream, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStreamInput
void System::Xml::XmlTextReaderImpl::InitStreamInput(::System::Uri* baseUri, ::StringW baseUriStr, ::System::IO::Stream* stream, ::ArrayW<uint8_t> bytes, int byteCount, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStreamInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStreamInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, baseUriStr, stream, bytes, byteCount, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitTextReaderInput
void System::Xml::XmlTextReaderImpl::InitTextReaderInput(::StringW baseUriStr, ::System::IO::TextReader* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitTextReaderInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTextReaderInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, input);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitTextReaderInput
void System::Xml::XmlTextReaderImpl::InitTextReaderInput(::StringW baseUriStr, ::System::Uri* baseUri, ::System::IO::TextReader* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitTextReaderInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTextReaderInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, baseUri, input);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InitStringInput
void System::Xml::XmlTextReaderImpl::InitStringInput(::StringW baseUriStr, ::System::Text::Encoding* originalEncoding, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitStringInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStringInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUriStr), ::il2cpp_utils::ExtractType(originalEncoding), ::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUriStr, originalEncoding, str);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ProcessDtdFromParserContext
void System::Xml::XmlTextReaderImpl::ProcessDtdFromParserContext(::System::Xml::XmlParserContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ProcessDtdFromParserContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDtdFromParserContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenUrl
void System::Xml::XmlTextReaderImpl::OpenUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenUrlDelegate
void System::Xml::XmlTextReaderImpl::OpenUrlDelegate(::Il2CppObject* xmlResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenUrlDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUrlDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlResolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlResolver);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.DetectEncoding
::System::Text::Encoding* System::Xml::XmlTextReaderImpl::DetectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DetectEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEncoding
void System::Xml::XmlTextReaderImpl::SetupEncoding(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SwitchEncoding
void System::Xml::XmlTextReaderImpl::SwitchEncoding(::System::Text::Encoding* newEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SwitchEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newEncoding);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.CheckEncoding
::System::Text::Encoding* System::Xml::XmlTextReaderImpl::CheckEncoding(::StringW newEncodingName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::CheckEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newEncodingName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method, newEncodingName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.UnDecodeChars
void System::Xml::XmlTextReaderImpl::UnDecodeChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::UnDecodeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnDecodeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SwitchEncodingToUTF8
void System::Xml::XmlTextReaderImpl::SwitchEncodingToUTF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SwitchEncodingToUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchEncodingToUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadData
int System::Xml::XmlTextReaderImpl::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetChars
int System::Xml::XmlTextReaderImpl::GetChars(int maxCharsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxCharsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxCharsCount);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.InvalidCharRecovery
void System::Xml::XmlTextReaderImpl::InvalidCharRecovery(ByRef<int> bytesCount, ByRef<int> charsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InvalidCharRecovery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidCharRecovery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesCount), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(bytesCount), byref(charsCount));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Close
void System::Xml::XmlTextReaderImpl::Close(bool closeInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeInput);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ShiftBuffer
void System::Xml::XmlTextReaderImpl::ShiftBuffer(int sourcePos, int destPos, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ShiftBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePos), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourcePos, destPos, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseXmlDeclaration
bool System::Xml::XmlTextReaderImpl::ParseXmlDeclaration(bool isTextDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isTextDecl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isTextDecl);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDocumentContent
bool System::Xml::XmlTextReaderImpl::ParseDocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDocumentContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDocumentContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseElementContent
bool System::Xml::XmlTextReaderImpl::ParseElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnclosedElements
void System::Xml::XmlTextReaderImpl::ThrowUnclosedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnclosedElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnclosedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseElement
void System::Xml::XmlTextReaderImpl::ParseElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributesAndNormalize
void System::Xml::XmlTextReaderImpl::AddDefaultAttributesAndNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributesAndNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributesAndNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEndElement
void System::Xml::XmlTextReaderImpl::ParseEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowTagMismatch
void System::Xml::XmlTextReaderImpl::ThrowTagMismatch(::System::Xml::XmlTextReaderImpl::NodeData* startTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowTagMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowTagMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTag);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributes
void System::Xml::XmlTextReaderImpl::ParseAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ElementNamespaceLookup
void System::Xml::XmlTextReaderImpl::ElementNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ElementNamespaceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementNamespaceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AttributeNamespaceLookup
void System::Xml::XmlTextReaderImpl::AttributeNamespaceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AttributeNamespaceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeNamespaceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AttributeDuplCheck
void System::Xml::XmlTextReaderImpl::AttributeDuplCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AttributeDuplCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeDuplCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnDefaultNamespaceDecl
void System::Xml::XmlTextReaderImpl::OnDefaultNamespaceDecl(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDefaultNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnNamespaceDecl
void System::Xml::XmlTextReaderImpl::OnNamespaceDecl(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnXmlReservedAttribute
void System::Xml::XmlTextReaderImpl::OnXmlReservedAttribute(::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnXmlReservedAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnXmlReservedAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributeValueSlow
void System::Xml::XmlTextReaderImpl::ParseAttributeValueSlow(int curPos, ::Il2CppChar quoteChar, ::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributeValueSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributeValueSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(quoteChar), ::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, quoteChar, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttributeChunkToList
void System::Xml::XmlTextReaderImpl::AddAttributeChunkToList(::System::Xml::XmlTextReaderImpl::NodeData* attr, ::System::Xml::XmlTextReaderImpl::NodeData* chunk, ByRef<::System::Xml::XmlTextReaderImpl::NodeData*> lastChunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttributeChunkToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeChunkToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(lastChunk)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr, chunk, byref(lastChunk));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseText
bool System::Xml::XmlTextReaderImpl::ParseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseText
bool System::Xml::XmlTextReaderImpl::ParseText(ByRef<int> startPos, ByRef<int> endPos, ByRef<int> outOrChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(outOrChars)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(startPos), byref(endPos), byref(outOrChars));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipPartialTextValue
void System::Xml::XmlTextReaderImpl::SkipPartialTextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipPartialTextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipPartialTextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadValueChunk
void System::Xml::XmlTextReaderImpl::FinishReadValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadValueChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadValueChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadContentAsBinary
void System::Xml::XmlTextReaderImpl::FinishReadContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadContentAsBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadContentAsBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishReadElementContentAsBinary
void System::Xml::XmlTextReaderImpl::FinishReadElementContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishReadElementContentAsBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishReadElementContentAsBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseRootLevelWhitespace
bool System::Xml::XmlTextReaderImpl::ParseRootLevelWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseRootLevelWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRootLevelWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEntityReference
void System::Xml::XmlTextReaderImpl::ParseEntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleEntityReference
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::HandleEntityReference(bool isInAttributeValue, ::System::Xml::XmlTextReaderImpl::EntityExpandType expandType, ByRef<int> charRefEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInAttributeValue), ::il2cpp_utils::ExtractType(expandType), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::EntityType, false>(this, ___internal__method, isInAttributeValue, expandType, byref(charRefEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleGeneralEntityReference
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::HandleGeneralEntityReference(::StringW name, bool isInAttributeValue, bool pushFakeEntityIfNullResolver, int entityStartLinePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleGeneralEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGeneralEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(isInAttributeValue), ::il2cpp_utils::ExtractType(pushFakeEntityIfNullResolver), ::il2cpp_utils::ExtractType(entityStartLinePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::EntityType, false>(this, ___internal__method, name, isInAttributeValue, pushFakeEntityIfNullResolver, entityStartLinePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_InEntity
bool System::Xml::XmlTextReaderImpl::get_InEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_InEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.HandleEntityEnd
bool System::Xml::XmlTextReaderImpl::HandleEntityEnd(bool checkEntityNesting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::HandleEntityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkEntityNesting)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, checkEntityNesting);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEndEntityNodeInContent
void System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEndEntityNodeInContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SetupEndEntityNodeInAttribute
void System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SetupEndEntityNodeInAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEndEntityNodeInAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePI
bool System::Xml::XmlTextReaderImpl::ParsePI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePI
bool System::Xml::XmlTextReaderImpl::ParsePI(::System::Text::StringBuilder* piInDtdStringBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piInDtdStringBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, piInDtdStringBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParsePIValue
bool System::Xml::XmlTextReaderImpl::ParsePIValue(ByRef<int> outStartPos, ByRef<int> outEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsePIValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePIValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(outStartPos), byref(outEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseComment
bool System::Xml::XmlTextReaderImpl::ParseComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCData
void System::Xml::XmlTextReaderImpl::ParseCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCDataOrComment
void System::Xml::XmlTextReaderImpl::ParseCDataOrComment(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCDataOrComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCDataOrComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCDataOrComment
bool System::Xml::XmlTextReaderImpl::ParseCDataOrComment(::System::Xml::XmlNodeType type, ByRef<int> outStartPos, ByRef<int> outEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCDataOrComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCDataOrComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, byref(outStartPos), byref(outEndPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDoctypeDecl
bool System::Xml::XmlTextReaderImpl::ParseDoctypeDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDoctypeDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDoctypeDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDtd
void System::Xml::XmlTextReaderImpl::ParseDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipDtd
void System::Xml::XmlTextReaderImpl::SkipDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipPublicOrSystemIdLiteral
void System::Xml::XmlTextReaderImpl::SkipPublicOrSystemIdLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipPublicOrSystemIdLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipPublicOrSystemIdLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.SkipUntil
void System::Xml::XmlTextReaderImpl::SkipUntil(::Il2CppChar stopChar, bool recognizeLiterals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::SkipUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopChar), ::il2cpp_utils::ExtractType(recognizeLiterals)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopChar, recognizeLiterals);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.EatWhitespaces
int System::Xml::XmlTextReaderImpl::EatWhitespaces(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EatWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseCharRefInline
int System::Xml::XmlTextReaderImpl::ParseCharRefInline(int startPos, ByRef<int> charCount, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, byref(charCount), byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::ParseNumericCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNumericCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder, byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNumericCharRefInline
int System::Xml::XmlTextReaderImpl::ParseNumericCharRefInline(int startPos, bool expand, ::System::Text::StringBuilder* internalSubsetBuilder, ByRef<int> charCount, ByRef<::System::Xml::XmlTextReaderImpl::EntityType> entityType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNumericCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlTextReaderImpl::EntityType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, expand, internalSubsetBuilder, byref(charCount), byref(entityType));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNamedCharRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseNamedCharRefInline
int System::Xml::XmlTextReaderImpl::ParseNamedCharRefInline(int startPos, bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseNamedCharRefInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRefInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPos, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseName
int System::Xml::XmlTextReaderImpl::ParseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseQName
int System::Xml::XmlTextReaderImpl::ParseQName(ByRef<int> colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(colonPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseQName
int System::Xml::XmlTextReaderImpl::ParseQName(bool isQName, int startOffset, ByRef<int> colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isQName), ::il2cpp_utils::ExtractType(startOffset), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, isQName, startOffset, byref(colonPos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadDataInName
bool System::Xml::XmlTextReaderImpl::ReadDataInName(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadDataInName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDataInName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pos));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseEntityName
::StringW System::Xml::XmlTextReaderImpl::ParseEntityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseEntityName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddNode
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddNode(int nodeIndex, int nodeDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex), ::il2cpp_utils::ExtractType(nodeDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, nodeIndex, nodeDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AllocNode
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AllocNode(int nodeIndex, int nodeDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AllocNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex), ::il2cpp_utils::ExtractType(nodeDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, nodeIndex, nodeDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttributeNoChecks
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttributeNoChecks(::StringW name, int attrDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttributeNoChecks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeNoChecks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, name, attrDepth);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttribute
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttribute(int endNamePos, int colonPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endNamePos), ::il2cpp_utils::ExtractType(colonPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, endNamePos, colonPos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddAttribute
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddAttribute(::StringW localName, ::StringW prefix, ::StringW nameWPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(nameWPrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, localName, prefix, nameWPrefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopElementContext
void System::Xml::XmlTextReaderImpl::PopElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopElementContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopElementContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnNewLine
void System::Xml::XmlTextReaderImpl::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OnEof
void System::Xml::XmlTextReaderImpl::OnEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnEof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::LookupNamespace(::System::Xml::XmlTextReaderImpl::NodeData* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddNamespace
void System::Xml::XmlTextReaderImpl::AddNamespace(::StringW prefix, ::StringW uri, ::System::Xml::XmlTextReaderImpl::NodeData* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri, attr);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ResetAttributes
void System::Xml::XmlTextReaderImpl::ResetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ResetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FullAttributeCleanup
void System::Xml::XmlTextReaderImpl::FullAttributeCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FullAttributeCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FullAttributeCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushXmlContext
void System::Xml::XmlTextReaderImpl::PushXmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushXmlContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushXmlContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopXmlContext
void System::Xml::XmlTextReaderImpl::PopXmlContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopXmlContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopXmlContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetWhitespaceType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::GetWhitespaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetWhitespaceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWhitespaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetTextNodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::GetTextNodeType(int orChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetTextNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(orChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method, orChars);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushExternalEntityOrSubset
void System::Xml::XmlTextReaderImpl::PushExternalEntityOrSubset(::StringW publicId, ::StringW systemId, ::System::Uri* baseUri, ::StringW entityName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushExternalEntityOrSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalEntityOrSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(entityName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, systemId, baseUri, entityName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.OpenAndPush
bool System::Xml::XmlTextReaderImpl::OpenAndPush(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OpenAndPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenAndPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushExternalEntity
bool System::Xml::XmlTextReaderImpl::PushExternalEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushExternalEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushInternalEntity
void System::Xml::XmlTextReaderImpl::PushInternalEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushInternalEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInternalEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopEntity
void System::Xml::XmlTextReaderImpl::PopEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.RegisterEntity
void System::Xml::XmlTextReaderImpl::RegisterEntity(::System::Xml::IDtdEntityInfo* entity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::RegisterEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entity);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.UnregisterEntity
void System::Xml::XmlTextReaderImpl::UnregisterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::UnregisterEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PushParsingState
void System::Xml::XmlTextReaderImpl::PushParsingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PushParsingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParsingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.PopParsingState
void System::Xml::XmlTextReaderImpl::PopParsingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::PopParsingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopParsingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.IncrementalRead
int System::Xml::XmlTextReaderImpl::IncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.FinishIncrementalRead
void System::Xml::XmlTextReaderImpl::FinishIncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::FinishIncrementalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishIncrementalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseFragmentAttribute
bool System::Xml::XmlTextReaderImpl::ParseFragmentAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseFragmentAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFragmentAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseAttributeValueChunk
bool System::Xml::XmlTextReaderImpl::ParseAttributeValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseAttributeValueChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttributeValueChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseXmlDeclarationFragment
void System::Xml::XmlTextReaderImpl::ParseXmlDeclarationFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseXmlDeclarationFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseXmlDeclarationFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(int pos, ::StringW expectedToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(::StringW expectedToken1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedToken1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedToken1);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(int pos, ::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowUnexpectedToken
void System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken(::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseUnexpectedToken
::StringW System::Xml::XmlTextReaderImpl::ParseUnexpectedToken(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseUnexpectedToken
::StringW System::Xml::XmlTextReaderImpl::ParseUnexpectedToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ThrowExpectingWhitespace
void System::Xml::XmlTextReaderImpl::ThrowExpectingWhitespace(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ThrowExpectingWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowExpectingWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithoutPrefix
int System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithoutPrefix(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithoutPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexOfAttributeWithoutPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithPrefix
int System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithPrefix(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetIndexOfAttributeWithPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexOfAttributeWithPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ZeroEndingStream
bool System::Xml::XmlTextReaderImpl::ZeroEndingStream(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ZeroEndingStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ZeroEndingStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ParseDtdFromParserContext
void System::Xml::XmlTextReaderImpl::ParseDtdFromParserContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParseDtdFromParserContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDtdFromParserContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.MoveToNextContentNode
bool System::Xml::XmlTextReaderImpl::MoveToNextContentNode(bool moveIfOnContentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::MoveToNextContentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextContentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveIfOnContentNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, moveIfOnContentNode);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributeDtd
bool System::Xml::XmlTextReaderImpl::AddDefaultAttributeDtd(::System::Xml::IDtdDefaultAttributeInfo* defAttrInfo, bool definedInDtd, ::ArrayW<::System::Xml::XmlTextReaderImpl::NodeData*> nameSortedNodeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributeDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributeDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defAttrInfo), ::il2cpp_utils::ExtractType(definedInDtd), ::il2cpp_utils::ExtractType(nameSortedNodeData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, defAttrInfo, definedInDtd, nameSortedNodeData);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.AddDefaultAttributeInternal
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::AddDefaultAttributeInternal(::StringW localName, ::StringW ns, ::StringW prefix, ::StringW value, int lineNo, int linePos, int valueLineNo, int valueLinePos, bool isXmlAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::AddDefaultAttributeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos), ::il2cpp_utils::ExtractType(valueLineNo), ::il2cpp_utils::ExtractType(valueLinePos), ::il2cpp_utils::ExtractType(isXmlAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(this, ___internal__method, localName, ns, prefix, value, lineNo, linePos, valueLineNo, valueLinePos, isXmlAttribute);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.RegisterConsumedCharacters
void System::Xml::XmlTextReaderImpl::RegisterConsumedCharacters(int64_t characters, bool inEntityReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::RegisterConsumedCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterConsumedCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters), ::il2cpp_utils::ExtractType(inEntityReference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, characters, inEntityReference);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.StripSpaces
::StringW System::Xml::XmlTextReaderImpl::StripSpaces(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.StripSpaces
void System::Xml::XmlTextReaderImpl::StripSpaces(::ArrayW<::Il2CppChar> value, int index, ByRef<int> len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, index, byref(len));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.BlockCopyChars
void System::Xml::XmlTextReaderImpl::BlockCopyChars(::ArrayW<::Il2CppChar> src, int srcOffset, ::ArrayW<::Il2CppChar> dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::BlockCopyChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "BlockCopyChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.BlockCopy
void System::Xml::XmlTextReaderImpl::BlockCopy(::ArrayW<uint8_t> src, int srcOffset, ::ArrayW<uint8_t> dst, int dstOffset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::BlockCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl", "BlockCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(srcOffset), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstOffset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, srcOffset, dst, dstOffset, count);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlTextReaderImpl::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Name
::StringW System::Xml::XmlTextReaderImpl::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_LocalName
::StringW System::Xml::XmlTextReaderImpl::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_Prefix
::StringW System::Xml::XmlTextReaderImpl::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_ReadState
::System::Xml::ReadState System::Xml::XmlTextReaderImpl::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_ReadState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.GetAttribute
::StringW System::Xml::XmlTextReaderImpl::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Read
bool System::Xml::XmlTextReaderImpl::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.Close
void System::Xml::XmlTextReaderImpl::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ReadAttributeValue
bool System::Xml::XmlTextReaderImpl::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl.ResolveEntity
void System::Xml::XmlTextReaderImpl::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/ParsingFunction
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ElementContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ElementContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ElementContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ElementContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ElementContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ElementContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ElementContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction NoData
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction NoData
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_NoData(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction OpenUrl
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_OpenUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_OpenUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "OpenUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction OpenUrl
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_OpenUrl(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_OpenUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "OpenUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction SwitchToInteractive
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction SwitchToInteractive
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractive(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction SwitchToInteractiveXmlDecl
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractiveXmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_SwitchToInteractiveXmlDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractiveXmlDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction SwitchToInteractiveXmlDecl
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractiveXmlDecl(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_SwitchToInteractiveXmlDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "SwitchToInteractiveXmlDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction DocumentContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_DocumentContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_DocumentContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "DocumentContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction DocumentContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_DocumentContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_DocumentContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "DocumentContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction MoveToElementContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_MoveToElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_MoveToElementContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "MoveToElementContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction MoveToElementContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_MoveToElementContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_MoveToElementContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "MoveToElementContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PopElementContext
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopElementContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopElementContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PopElementContext
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopElementContext(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopElementContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopElementContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PopEmptyElementContext
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopEmptyElementContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PopEmptyElementContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopEmptyElementContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PopEmptyElementContext
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopEmptyElementContext(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PopEmptyElementContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PopEmptyElementContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ResetAttributesRootLevel
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ResetAttributesRootLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ResetAttributesRootLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ResetAttributesRootLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ResetAttributesRootLevel
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ResetAttributesRootLevel(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ResetAttributesRootLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ResetAttributesRootLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction Error
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction Error
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Error(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction Eof
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction Eof
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Eof(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "Eof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ReaderClosed
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReaderClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReaderClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReaderClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ReaderClosed
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReaderClosed(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReaderClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReaderClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction EntityReference
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_EntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_EntityReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "EntityReference"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction EntityReference
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_EntityReference(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_EntityReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "EntityReference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InIncrementalRead
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InIncrementalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InIncrementalRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InIncrementalRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InIncrementalRead
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InIncrementalRead(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InIncrementalRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InIncrementalRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction FragmentAttribute
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_FragmentAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_FragmentAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "FragmentAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction FragmentAttribute
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_FragmentAttribute(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_FragmentAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "FragmentAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ReportEndEntity
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReportEndEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_ReportEndEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReportEndEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction ReportEndEntity
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReportEndEntity(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_ReportEndEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "ReportEndEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction AfterResolveEntityInContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEntityInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEntityInContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEntityInContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction AfterResolveEntityInContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEntityInContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEntityInContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEntityInContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction AfterResolveEmptyEntityInContent
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEmptyEntityInContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_AfterResolveEmptyEntityInContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEmptyEntityInContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction AfterResolveEmptyEntityInContent
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEmptyEntityInContent(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_AfterResolveEmptyEntityInContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "AfterResolveEmptyEntityInContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction XmlDeclarationFragment
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_XmlDeclarationFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_XmlDeclarationFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "XmlDeclarationFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction XmlDeclarationFragment
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_XmlDeclarationFragment(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_XmlDeclarationFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "XmlDeclarationFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction GoToEof
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_GoToEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_GoToEof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "GoToEof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction GoToEof
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_GoToEof(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_GoToEof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "GoToEof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PartialTextValue
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PartialTextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_PartialTextValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PartialTextValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction PartialTextValue
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PartialTextValue(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_PartialTextValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "PartialTextValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadAttributeValue
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadAttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadAttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadAttributeValue
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadAttributeValue(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadAttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadAttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadValueChunk
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadValueChunk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadValueChunk"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadValueChunk
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadValueChunk(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadValueChunk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadValueChunk", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadContentAsBinary
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadContentAsBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadContentAsBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadContentAsBinary
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadContentAsBinary(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadContentAsBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadContentAsBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadElementContentAsBinary
::System::Xml::XmlTextReaderImpl::ParsingFunction System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadElementContentAsBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_get_InReadElementContentAsBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingFunction>("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadElementContentAsBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingFunction InReadElementContentAsBinary
void System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadElementContentAsBinary(::System::Xml::XmlTextReaderImpl::ParsingFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::_set_InReadElementContentAsBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingFunction", "InReadElementContentAsBinary", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/ParsingMode
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingMode Full
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingMode Full
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_Full(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingMode SkipNode
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipNode"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingMode SkipNode
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipNode(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipNode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/ParsingMode SkipContent
::System::Xml::XmlTextReaderImpl::ParsingMode System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_get_SkipContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::ParsingMode>("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/ParsingMode SkipContent
void System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipContent(::System::Xml::XmlTextReaderImpl::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::_set_SkipContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/ParsingMode", "SkipContent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/EntityType
#include "System/Xml/XmlTextReaderImpl_EntityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterDec
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterDec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterDec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterDec"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterDec
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterDec(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterDec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterDec", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterHex
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterHex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterHex"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterHex
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterHex(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterHex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterHex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterNamed
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterNamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_CharacterNamed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterNamed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType CharacterNamed
void System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterNamed(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_CharacterNamed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "CharacterNamed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType Expanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Expanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Expanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Expanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType Expanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_Expanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Expanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Expanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType Skipped
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Skipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Skipped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Skipped"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType Skipped
void System::Xml::XmlTextReaderImpl::EntityType::_set_Skipped(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Skipped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Skipped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType FakeExpanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_FakeExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_FakeExpanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "FakeExpanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType FakeExpanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_FakeExpanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_FakeExpanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "FakeExpanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType Unexpanded
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_Unexpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_Unexpanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "Unexpanded"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType Unexpanded
void System::Xml::XmlTextReaderImpl::EntityType::_set_Unexpanded(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_Unexpanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "Unexpanded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityType ExpandedInAttribute
::System::Xml::XmlTextReaderImpl::EntityType System::Xml::XmlTextReaderImpl::EntityType::_get_ExpandedInAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_get_ExpandedInAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityType>("System.Xml", "XmlTextReaderImpl/EntityType", "ExpandedInAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityType ExpandedInAttribute
void System::Xml::XmlTextReaderImpl::EntityType::_set_ExpandedInAttribute(::System::Xml::XmlTextReaderImpl::EntityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::_set_ExpandedInAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityType", "ExpandedInAttribute", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::EntityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/EntityExpandType
#include "System/Xml/XmlTextReaderImpl_EntityExpandType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType All
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType All
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_All(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType OnlyGeneral
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyGeneral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyGeneral");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyGeneral"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType OnlyGeneral
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyGeneral(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyGeneral");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyGeneral", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType OnlyCharacter
::System::Xml::XmlTextReaderImpl::EntityExpandType System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_get_OnlyCharacter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::EntityExpandType>("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyCharacter"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/EntityExpandType OnlyCharacter
void System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyCharacter(::System::Xml::XmlTextReaderImpl::EntityExpandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::_set_OnlyCharacter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/EntityExpandType", "OnlyCharacter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::EntityExpandType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::EntityExpandType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/IncrementalReadState
#include "System/Xml/XmlTextReaderImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Text
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Text
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Text(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState StartTag
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_StartTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_StartTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "StartTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState StartTag
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_StartTag(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_StartTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "StartTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState PI
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState PI
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_PI(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState CDATA
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState CDATA
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_CDATA(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Comment
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Comment
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Comment(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Attributes
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Attributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState Attributes
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Attributes(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "Attributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState AttributeValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_AttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_AttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "AttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState AttributeValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_AttributeValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_AttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "AttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadData
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadData
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadData(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState EndElement
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState EndElement
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_EndElement(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState End
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState End
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_End(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadValueChunk_OnCachedValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnCachedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnCachedValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnCachedValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadValueChunk_OnCachedValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnCachedValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnCachedValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnCachedValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadValueChunk_OnPartialValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnPartialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadValueChunk_OnPartialValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnPartialValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadValueChunk_OnPartialValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnPartialValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadValueChunk_OnPartialValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadValueChunk_OnPartialValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_OnCachedValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnCachedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnCachedValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnCachedValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_OnCachedValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnCachedValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnCachedValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnCachedValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_OnPartialValue
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnPartialValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_OnPartialValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnPartialValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_OnPartialValue
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnPartialValue(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_OnPartialValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_OnPartialValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_End
::System::Xml::XmlTextReaderImpl::IncrementalReadState System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_get_ReadContentAsBinary_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::IncrementalReadState>("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_End"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/IncrementalReadState ReadContentAsBinary_End
void System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_End(::System::Xml::XmlTextReaderImpl::IncrementalReadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::_set_ReadContentAsBinary_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/IncrementalReadState", "ReadContentAsBinary_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::IncrementalReadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::IncrementalReadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/InitInputType
#include "System/Xml/XmlTextReaderImpl_InitInputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/InitInputType UriString
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_UriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_UriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "UriString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/InitInputType UriString
void System::Xml::XmlTextReaderImpl::InitInputType::_set_UriString(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_UriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "UriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/InitInputType Stream
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/InitInputType Stream
void System::Xml::XmlTextReaderImpl::InitInputType::_set_Stream(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "Stream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/InitInputType TextReader
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_TextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_TextReader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "TextReader"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/InitInputType TextReader
void System::Xml::XmlTextReaderImpl::InitInputType::_set_TextReader(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_TextReader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "TextReader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/InitInputType Invalid
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/InitInputType Invalid
void System::Xml::XmlTextReaderImpl::InitInputType::_set_Invalid(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::InitInputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/ParsingState
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlTextReaderImpl::ParsingState::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 charsUsed
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_charsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_charsUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_encoding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean appendMode
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_appendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_appendMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.Decoder decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_decoder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] bytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bytePos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytePos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bytesUsed
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytesUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.TextReader textReader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_textReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_textReader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textReader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineNo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String baseUriStr
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUriStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUriStr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUriStr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri baseUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isEof
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_isEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_isEof");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isStreamEof
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_isStreamEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_isStreamEof");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStreamEof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.IDtdEntityInfo entity
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdEntityInfo*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entity"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdEntityInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 entityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean eolNormalized
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_eolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_eolNormalized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eolNormalized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean entityResolvedManually
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityResolvedManually() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityResolvedManually");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityResolvedManually"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/ParsingState.Clear
void System::Xml::XmlTextReaderImpl::ParsingState::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/ParsingState.Close
void System::Xml::XmlTextReaderImpl::ParsingState::Close(bool closeInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeInput);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/ParsingState.get_LineNo
int System::Xml::XmlTextReaderImpl::ParsingState::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/ParsingState.get_LinePos
int System::Xml::XmlTextReaderImpl::ParsingState::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/XmlContext
#include "System/Xml/XmlTextReaderImpl_XmlContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlSpace xmlSpace
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSpace& System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String xmlLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlLang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String defaultNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::XmlContext::dyn_defaultNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_defaultNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlTextReaderImpl/XmlContext previousContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::XmlContext*& System::Xml::XmlTextReaderImpl::XmlContext::dyn_previousContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_previousContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::XmlContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/DtdParserProxy
#include "System/Xml/XmlTextReaderImpl_DtdParserProxy.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl*& System::Xml::XmlTextReaderImpl::DtdParserProxy::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_BaseUri
::System::Uri* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_BaseUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_IsEof
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_IsEof");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_ParsingBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_ParsingBufferLength
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_ParsingBufferLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_CurrentPosition
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.set_CurrentPosition
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_set_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.set_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_EntityStackLength
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_EntityStackLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.OnNewLine
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnNewLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_LineNo
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_LineNo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.get_LineStartPosition
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_LineStartPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.ReadData
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ReadData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseNumericCharRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseNamedCharRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.ParsePI
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParsePI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.ParseComment
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.PushEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.PopEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PopEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.PushExternalSubset
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushExternalSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.PushInternalDtd
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushInternalDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.Throw
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.Throw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.OnSystemId
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnSystemId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapter.OnPublicId
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnPublicId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterWithValidation_get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterWithValidation_get_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_Normalization
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_Normalization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_Namespaces
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_Namespaces");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdParserProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/NodeData
#include "System/Xml/XmlTextReaderImpl_NodeData.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlTextReaderImpl/NodeData s_None
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::NodeData::_get_s_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::_get_s_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::NodeData*>("System.Xml", "XmlTextReaderImpl/NodeData", "s_None"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlTextReaderImpl/NodeData s_None
void System::Xml::XmlTextReaderImpl::NodeData::_set_s_None(::System::Xml::XmlTextReaderImpl::NodeData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::_set_s_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/NodeData", "s_None", value));
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNodeType type
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlTextReaderImpl::NodeData::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String nameWPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_nameWPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_nameWPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameWPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlTextReaderImpl::NodeData::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_valueStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_valueStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLength
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_valueLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_valueLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.LineInfo lineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.LineInfo lineInfo2
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo2"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char quoteChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Xml::XmlTextReaderImpl::NodeData::dyn_quoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_quoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 depth
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptyOrDefault
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::NodeData::dyn_isEmptyOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_isEmptyOrDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptyOrDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 entityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_entityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_entityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean xmlContextPushed
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::NodeData::dyn_xmlContextPushed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_xmlContextPushed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlContextPushed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlTextReaderImpl/NodeData nextAttrValueChunk
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::NodeData*& System::Xml::XmlTextReaderImpl::NodeData::dyn_nextAttrValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_nextAttrValueChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextAttrValueChunk"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::NodeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object schemaType
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlTextReaderImpl::NodeData::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object typedValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlTextReaderImpl::NodeData::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.get_None
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::NodeData::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/NodeData", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.get_LineNo
int System::Xml::XmlTextReaderImpl::NodeData::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.get_LinePos
int System::Xml::XmlTextReaderImpl::NodeData::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.set_IsEmptyElement
void System::Xml::XmlTextReaderImpl::NodeData::set_IsEmptyElement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::set_IsEmptyElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.set_IsDefaultAttribute
void System::Xml::XmlTextReaderImpl::NodeData::set_IsDefaultAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::set_IsDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.get_ValueBuffered
bool System::Xml::XmlTextReaderImpl::NodeData::get_ValueBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_ValueBuffered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueBuffered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.get_StringValue
::StringW System::Xml::XmlTextReaderImpl::NodeData::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.TrimSpacesInValue
void System::Xml::XmlTextReaderImpl::NodeData::TrimSpacesInValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::TrimSpacesInValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimSpacesInValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.Clear
void System::Xml::XmlTextReaderImpl::NodeData::Clear(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.ClearName
void System::Xml::XmlTextReaderImpl::NodeData::ClearName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::ClearName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetLineInfo
void System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetLineInfo2
void System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo2(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetValueNode
void System::Xml::XmlTextReaderImpl::NodeData::SetValueNode(::System::Xml::XmlNodeType type, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValueNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetValueNode
void System::Xml::XmlTextReaderImpl::NodeData::SetValueNode(::System::Xml::XmlNodeType type, ::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValueNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, chars, startPos, len);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetNamedNode
void System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode(::System::Xml::XmlNodeType type, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(localName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, localName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetNamedNode
void System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode(::System::Xml::XmlNodeType type, ::StringW localName, ::StringW prefix, ::StringW nameWPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(nameWPrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, localName, prefix, nameWPrefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetValue
void System::Xml::XmlTextReaderImpl::NodeData::SetValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.SetValue
void System::Xml::XmlTextReaderImpl::NodeData::SetValue(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.OnBufferInvalidated
void System::Xml::XmlTextReaderImpl::NodeData::OnBufferInvalidated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::OnBufferInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBufferInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.CopyTo
void System::Xml::XmlTextReaderImpl::NodeData::CopyTo(int valueOffset, ::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueOffset), ::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueOffset, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.GetNameWPrefix
::StringW System::Xml::XmlTextReaderImpl::NodeData::GetNameWPrefix(::System::Xml::XmlNameTable* nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::GetNameWPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameWPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nt);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.CreateNameWPrefix
::StringW System::Xml::XmlTextReaderImpl::NodeData::CreateNameWPrefix(::System::Xml::XmlNameTable* nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::CreateNameWPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNameWPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nt);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/NodeData.System.IComparable.CompareTo
int System::Xml::XmlTextReaderImpl::NodeData::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::NodeData*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer
#include "System/Xml/XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IComparer`1<System.Object> s_instance
::System::Collections::Generic::IComparer_1<::Il2CppObject*>* System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IComparer_1<::Il2CppObject*>*>("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IComparer`1<System.Object> s_instance
void System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_set_s_instance(::System::Collections::Generic::IComparer_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "s_instance", value));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer.get_Instance
::System::Collections::Generic::IComparer_1<::Il2CppObject*>* System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IComparer_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer.Compare
int System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer..cctor
void System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate
#include "System/Xml/XmlTextReaderImpl_OnDefaultAttributeUseDelegate.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate.Invoke
void System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::Invoke(::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ::System::Xml::XmlTextReaderImpl* coreReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, defaultAttribute, coreReader);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate.BeginInvoke
::System::IAsyncResult* System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::BeginInvoke(::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ::System::Xml::XmlTextReaderImpl* coreReader, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, defaultAttribute, coreReader, callback, object);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/OnDefaultAttributeUseDelegate.EndInvoke
void System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlChildEnumerator
#include "System/Xml/XmlChildEnumerator.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode container
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlChildEnumerator::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode child
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlChildEnumerator::dyn_child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_child");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "child"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isFirst
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlChildEnumerator::dyn_isFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_isFirst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFirst"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlChildEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.MoveNext
bool System::Xml::XmlChildEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.Reset
void System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlChildEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlChildEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.get_Current
::System::Xml::XmlNode* System::Xml::XmlChildEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlLinkedNode next
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlLinkedNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLinkedNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlLinkedNode.get_NextSibling
::System::Xml::XmlNode* System::Xml::XmlLinkedNode::get_NextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLinkedNode::get_NextSibling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode parentNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNode::dyn_parentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::dyn_parentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNode.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_NextSibling
::System::Xml::XmlNode* System::Xml::XmlNode::get_NextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_NextSibling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_FirstChild
::System::Xml::XmlNode* System::Xml::XmlNode::get_FirstChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_FirstChild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlNode::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_LastNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.CloneNode
::System::Xml::XmlNode* System::Xml::XmlNode::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::CloneNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlNode.System.ICloneable.Clone
::Il2CppObject* System::Xml::XmlNode::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNode::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::IXmlNamespaceResolver::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IXmlNamespaceResolver::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IXmlNamespaceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::IXmlNamespaceResolver::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IXmlNamespaceResolver::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IXmlNamespaceResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::LineInfo::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::dyn_lineNo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::LineInfo::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::dyn_linePos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.LineInfo..ctor
// ABORTED elsewhere.  System::Xml::LineInfo::LineInfo(int lineNo, int linePos)
// Autogenerated method: System.Xml.LineInfo.Set
void System::Xml::LineInfo::Set(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NameTable
#include "System/Xml/NameTable.hpp"
// Including type: System.Xml.NameTable/Entry
#include "System/Xml/NameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.NameTable/Entry[] entries
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::NameTable::Entry*>& System::Xml::NameTable::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::NameTable::Entry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mask
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCodeRandomizer
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_hashCodeRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_hashCodeRandomizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCodeRandomizer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.NameTable.AddEntry
::StringW System::Xml::NameTable::AddEntry(::StringW str, int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str, hashCode);
}
// Autogenerated method: System.Xml.NameTable.Grow
void System::Xml::NameTable::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.NameTable.TextEquals
bool System::Xml::NameTable::TextEquals(::StringW str1, ::ArrayW<::Il2CppChar> str2, int str2Start, int str2Length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::TextEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "NameTable", "TextEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str2Start), ::il2cpp_utils::ExtractType(str2Length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, str2, str2Start, str2Length);
}
// Autogenerated method: System.Xml.NameTable.Add
::StringW System::Xml::NameTable::Add(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Xml.NameTable.Add
::StringW System::Xml::NameTable::Add(::ArrayW<::Il2CppChar> key, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, start, len);
}
// Autogenerated method: System.Xml.NameTable.Get
::StringW System::Xml::NameTable::Get(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NameTable/Entry
#include "System/Xml/NameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String str
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::NameTable::Entry::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::Entry::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.NameTable/Entry next
[[deprecated("Use field access instead!")]] ::System::Xml::NameTable::Entry*& System::Xml::NameTable::Entry::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::NameTable::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ref
#include "System/Xml/Ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ref.Equal
bool System::Xml::Ref::Equal(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ref::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ref", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser
#include "System/Xml/DtdParser.hpp"
// Including type: System.Xml.DtdParser/Token
#include "System/Xml/DtdParser_Token.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.DtdParser/LiteralType
#include "System/Xml/DtdParser_LiteralType.hpp"
// Including type: System.Xml.DtdParser/UndeclaredNotation
#include "System/Xml/DtdParser_UndeclaredNotation.hpp"
// Including type: System.Xml.DtdParser/ParseElementOnlyContent_LocalFrame
#include "System/Xml/DtdParser_ParseElementOnlyContent_LocalFrame.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.IDtdParserAdapterWithValidation
#include "System/Xml/IDtdParserAdapterWithValidation.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdParserAdapter readerAdapter
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdParserAdapter*& System::Xml::DtdParser::dyn_readerAdapter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_readerAdapter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerAdapter"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdParserAdapter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdParserAdapterWithValidation readerAdapterWithValidation
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdParserAdapterWithValidation*& System::Xml::DtdParser::dyn_readerAdapterWithValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_readerAdapterWithValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerAdapterWithValidation"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdParserAdapterWithValidation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::DtdParser::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo schemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::DtdParser::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::DtdParser::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean normalize
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_normalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validate
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_validate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_supportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_supportNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean v1Compat
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_v1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_v1Compat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1Compat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::DtdParser::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charsUsed
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_charsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_charsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_curPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_curPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/ScanningFunction scanningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_scanningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_scanningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/ScanningFunction nextScaningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_nextScaningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_nextScaningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextScaningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/ScanningFunction savedScanningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_savedScanningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_savedScanningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedScanningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean whitespaceSeen
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_whitespaceSeen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_whitespaceSeen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whitespaceSeen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokenStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_tokenStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_tokenStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 colonPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_colonPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_colonPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colonPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder internalSubsetValueSb
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::DtdParser::dyn_internalSubsetValueSb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_internalSubsetValueSb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalSubsetValueSb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 externalEntitiesDepth
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_externalEntitiesDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_externalEntitiesDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalEntitiesDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_currentEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_currentEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean freeFloatingDtd
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_freeFloatingDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_freeFloatingDtd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freeFloatingDtd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasFreeFloatingInternalSubset
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_hasFreeFloatingInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_hasFreeFloatingInternalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasFreeFloatingInternalSubset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::DtdParser::dyn_stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 condSectionDepth
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_condSectionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_condSectionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condSectionDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.LineInfo literalLineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::DtdParser::dyn_literalLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_literalLineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literalLineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char literalQuoteChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Xml::DtdParser::dyn_literalQuoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_literalQuoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literalQuoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String documentBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_documentBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_documentBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "documentBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String externalDtdBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_externalDtdBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_externalDtdBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalDtdBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.DtdParser/UndeclaredNotation> undeclaredNotations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::DtdParser::UndeclaredNotation*>*& System::Xml::DtdParser::dyn_undeclaredNotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_undeclaredNotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undeclaredNotations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::DtdParser::UndeclaredNotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] condSectionEntityIds
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::DtdParser::dyn_condSectionEntityIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_condSectionEntityIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condSectionEntityIds"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.DtdParser..cctor
void System::Xml::DtdParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "DtdParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Create
::System::Xml::IDtdParser* System::Xml::DtdParser::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "DtdParser", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Initialize
void System::Xml::DtdParser::Initialize(::System::Xml::IDtdParserAdapter* readerAdapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readerAdapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readerAdapter);
}
// Autogenerated method: System.Xml.DtdParser.InitializeFreeFloatingDtd
void System::Xml::DtdParser::InitializeFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::InitializeFreeFloatingDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(docTypeName), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset), ::il2cpp_utils::ExtractType(adapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated method: System.Xml.DtdParser.System.Xml.IDtdParser.ParseInternalDtd
::System::Xml::IDtdInfo* System::Xml::DtdParser::System_Xml_IDtdParser_ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::System.Xml.IDtdParser.ParseInternalDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::DtdParser*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, adapter, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.System.Xml.IDtdParser.ParseFreeFloatingDtd
::System::Xml::IDtdInfo* System::Xml::DtdParser::System_Xml_IDtdParser_ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::System.Xml.IDtdParser.ParseFreeFloatingDtd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::DtdParser*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated method: System.Xml.DtdParser.get_ParsingInternalSubset
bool System::Xml::DtdParser::get_ParsingInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_ParsingInternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingInternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_IgnoreEntityReferences
bool System::Xml::DtdParser::get_IgnoreEntityReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_IgnoreEntityReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreEntityReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_SaveInternalSubsetValue
bool System::Xml::DtdParser::get_SaveInternalSubsetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_SaveInternalSubsetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SaveInternalSubsetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_ParsingTopLevelMarkup
bool System::Xml::DtdParser::get_ParsingTopLevelMarkup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_ParsingTopLevelMarkup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingTopLevelMarkup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_SupportNamespaces
bool System::Xml::DtdParser::get_SupportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_SupportNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_Normalize
bool System::Xml::DtdParser::get_Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Parse
void System::Xml::DtdParser::Parse(bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveInternalSubset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.ParseInDocumentDtd
void System::Xml::DtdParser::ParseInDocumentDtd(bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseInDocumentDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInDocumentDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveInternalSubset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.ParseFreeFloatingDtd
void System::Xml::DtdParser::ParseFreeFloatingDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseFreeFloatingDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseInternalSubset
void System::Xml::DtdParser::ParseInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseInternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseExternalSubset
void System::Xml::DtdParser::ParseExternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseExternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseSubset
void System::Xml::DtdParser::ParseSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistDecl
void System::Xml::DtdParser::ParseAttlistDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistType
void System::Xml::DtdParser::ParseAttlistType(::System::Xml::Schema::SchemaAttDef* attrDef, ::System::Xml::Schema::SchemaElementDecl* elementDecl, bool ignoreErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrDef), ::il2cpp_utils::ExtractType(elementDecl), ::il2cpp_utils::ExtractType(ignoreErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrDef, elementDecl, ignoreErrors);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistDefault
void System::Xml::DtdParser::ParseAttlistDefault(::System::Xml::Schema::SchemaAttDef* attrDef, bool ignoreErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrDef), ::il2cpp_utils::ExtractType(ignoreErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrDef, ignoreErrors);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementDecl
void System::Xml::DtdParser::ParseElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementOnlyContent
void System::Xml::DtdParser::ParseElementOnlyContent(::System::Xml::Schema::ParticleContentValidator* pcv, int startParenEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementOnlyContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv), ::il2cpp_utils::ExtractType(startParenEntityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv, startParenEntityId);
}
// Autogenerated method: System.Xml.DtdParser.ParseHowMany
void System::Xml::DtdParser::ParseHowMany(::System::Xml::Schema::ParticleContentValidator* pcv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseHowMany");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseHowMany", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementMixedContent
void System::Xml::DtdParser::ParseElementMixedContent(::System::Xml::Schema::ParticleContentValidator* pcv, int startParenEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementMixedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementMixedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv), ::il2cpp_utils::ExtractType(startParenEntityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv, startParenEntityId);
}
// Autogenerated method: System.Xml.DtdParser.ParseEntityDecl
void System::Xml::DtdParser::ParseEntityDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseEntityDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseNotationDecl
void System::Xml::DtdParser::ParseNotationDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseNotationDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNotationDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.AddUndeclaredNotation
void System::Xml::DtdParser::AddUndeclaredNotation(::StringW notationName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::AddUndeclaredNotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUndeclaredNotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notationName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notationName);
}
// Autogenerated method: System.Xml.DtdParser.ParseComment
void System::Xml::DtdParser::ParseComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParsePI
void System::Xml::DtdParser::ParsePI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseCondSection
void System::Xml::DtdParser::ParseCondSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseCondSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCondSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseExternalId
void System::Xml::DtdParser::ParseExternalId(::System::Xml::DtdParser::Token idTokenType, ::System::Xml::DtdParser::Token declType, ByRef<::StringW> publicId, ByRef<::StringW> systemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseExternalId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idTokenType), ::il2cpp_utils::ExtractType(declType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idTokenType, declType, byref(publicId), byref(systemId));
}
// Autogenerated method: System.Xml.DtdParser.GetToken
::System::Xml::DtdParser::Token System::Xml::DtdParser::GetToken(bool needWhiteSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needWhiteSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method, needWhiteSpace);
}
// Autogenerated method: System.Xml.DtdParser.ScanSubsetContent
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanSubsetContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanSubsetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanSubsetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNameExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNameExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNameExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNameExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQNameExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanQNameExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQNameExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQNameExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNmtokenExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNmtokenExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNmtokenExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNmtokenExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanDoctype1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanDoctype1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanDoctype1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDoctype1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanDoctype2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanDoctype2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanDoctype2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDoctype2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanClosingTag
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanClosingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanClosingTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanClosingTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement4
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement5
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement6
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement7
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist4
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist5
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist6
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist7
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanLiteral
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanLiteral(::System::Xml::DtdParser::LiteralType literalType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(literalType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method, literalType);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntityName
::System::Xml::XmlQualifiedName* System::Xml::DtdParser::ScanEntityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntityName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntityName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNotation1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNotation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNotation1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNotation1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanSystemId
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanSystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanSystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanPublicId1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanPublicId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanPublicId1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanPublicId1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanPublicId2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanPublicId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanPublicId2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanPublicId2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanName
void System::Xml::DtdParser::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQName
void System::Xml::DtdParser::ScanQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQName
void System::Xml::DtdParser::ScanQName(bool isQName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isQName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isQName);
}
// Autogenerated method: System.Xml.DtdParser.ReadDataInName
bool System::Xml::DtdParser::ReadDataInName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ReadDataInName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDataInName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNmtoken
void System::Xml::DtdParser::ScanNmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNmtoken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNmtoken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.EatPublicKeyword
bool System::Xml::DtdParser::EatPublicKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::EatPublicKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatPublicKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.EatSystemKeyword
bool System::Xml::DtdParser::EatSystemKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::EatSystemKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatSystemKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetNameQualified
::System::Xml::XmlQualifiedName* System::Xml::DtdParser::GetNameQualified(bool canHavePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNameQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canHavePrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, canHavePrefix);
}
// Autogenerated method: System.Xml.DtdParser.GetNameString
::StringW System::Xml::DtdParser::GetNameString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNameString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetNmtokenString
::StringW System::Xml::DtdParser::GetNmtokenString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNmtokenString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNmtokenString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetValue
::StringW System::Xml::DtdParser::GetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetValueWithStrippedSpaces
::StringW System::Xml::DtdParser::GetValueWithStrippedSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetValueWithStrippedSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueWithStrippedSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ReadData
int System::Xml::DtdParser::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.LoadParsingBuffer
void System::Xml::DtdParser::LoadParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LoadParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.SaveParsingBuffer
void System::Xml::DtdParser::SaveParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SaveParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.SaveParsingBuffer
void System::Xml::DtdParser::SaveParsingBuffer(int internalSubsetValueEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SaveParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetValueEndPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, internalSubsetValueEndPos);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityReference
bool System::Xml::DtdParser::HandleEntityReference(bool paramEntity, bool inLiteral, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(inLiteral), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, paramEntity, inLiteral, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityReference
bool System::Xml::DtdParser::HandleEntityReference(::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool inLiteral, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(inLiteral), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entityName, paramEntity, inLiteral, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityEnd
bool System::Xml::DtdParser::HandleEntityEnd(bool inLiteral) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inLiteral)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inLiteral);
}
// Autogenerated method: System.Xml.DtdParser.VerifyEntityReference
::System::Xml::Schema::SchemaEntity* System::Xml::DtdParser::VerifyEntityReference(::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool mustBeDeclared, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::VerifyEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(mustBeDeclared), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaEntity*, false>(this, ___internal__method, entityName, paramEntity, mustBeDeclared, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(int pos, ::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, severity, code, arg);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, code, arg);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, e);
}
// Autogenerated method: System.Xml.DtdParser.IsAttributeValueType
bool System::Xml::DtdParser::IsAttributeValueType(::System::Xml::DtdParser::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::IsAttributeValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAttributeValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.DtdParser.get_LineNo
int System::Xml::DtdParser::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_LinePos
int System::Xml::DtdParser::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_BaseUriStr
::StringW System::Xml::DtdParser::get_BaseUriStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_BaseUriStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUriStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.OnUnexpectedError
void System::Xml::DtdParser::OnUnexpectedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::OnUnexpectedError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUnexpectedError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res, arg);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res, args);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(::StringW res, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowInvalidChar
void System::Xml::DtdParser::ThrowInvalidChar(int pos, ::StringW data, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, data, invCharPos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowInvalidChar
void System::Xml::DtdParser::ThrowInvalidChar(::ArrayW<::Il2CppChar> data, int length, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, invCharPos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowUnexpectedToken
void System::Xml::DtdParser::ThrowUnexpectedToken(int pos, ::StringW expectedToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken);
}
// Autogenerated method: System.Xml.DtdParser.ThrowUnexpectedToken
void System::Xml::DtdParser::ThrowUnexpectedToken(int pos, ::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.DtdParser.ParseUnexpectedToken
::StringW System::Xml::DtdParser::ParseUnexpectedToken(int startPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startPos);
}
// Autogenerated method: System.Xml.DtdParser.StripSpaces
::StringW System::Xml::DtdParser::StripSpaces(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "DtdParser", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/Token
#include "System/Xml/DtdParser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token CDATA
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token CDATA
void System::Xml::DtdParser::Token::_set_CDATA(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token ID
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token ID
void System::Xml::DtdParser::Token::_set_ID(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token IDREF
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IDREF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token IDREF
void System::Xml::DtdParser::Token::_set_IDREF(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IDREF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token IDREFS
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IDREFS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token IDREFS
void System::Xml::DtdParser::Token::_set_IDREFS(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token ENTITY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ENTITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token ENTITY
void System::Xml::DtdParser::Token::_set_ENTITY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token ENTITIES
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token ENTITIES
void System::Xml::DtdParser::Token::_set_ENTITIES(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token NMTOKEN
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token NMTOKEN
void System::Xml::DtdParser::Token::_set_NMTOKEN(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token NMTOKENS
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token NMTOKENS
void System::Xml::DtdParser::Token::_set_NMTOKENS(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token NOTATION
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NOTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token NOTATION
void System::Xml::DtdParser::Token::_set_NOTATION(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token None
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token None
void System::Xml::DtdParser::Token::_set_None(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token PERef
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PERef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PERef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PERef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token PERef
void System::Xml::DtdParser::Token::_set_PERef(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PERef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PERef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token AttlistDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_AttlistDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_AttlistDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "AttlistDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token AttlistDecl
void System::Xml::DtdParser::Token::_set_AttlistDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_AttlistDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "AttlistDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token ElementDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ElementDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ElementDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token ElementDecl
void System::Xml::DtdParser::Token::_set_ElementDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ElementDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ElementDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token EntityDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_EntityDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_EntityDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "EntityDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token EntityDecl
void System::Xml::DtdParser::Token::_set_EntityDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_EntityDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "EntityDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token NotationDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NotationDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NotationDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NotationDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token NotationDecl
void System::Xml::DtdParser::Token::_set_NotationDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NotationDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NotationDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Comment
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Comment
void System::Xml::DtdParser::Token::_set_Comment(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token PI
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token PI
void System::Xml::DtdParser::Token::_set_PI(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token CondSectionStart
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CondSectionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CondSectionStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CondSectionStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token CondSectionStart
void System::Xml::DtdParser::Token::_set_CondSectionStart(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CondSectionStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CondSectionStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token CondSectionEnd
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CondSectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CondSectionEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CondSectionEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token CondSectionEnd
void System::Xml::DtdParser::Token::_set_CondSectionEnd(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CondSectionEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CondSectionEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Eof
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Eof
void System::Xml::DtdParser::Token::_set_Eof(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Eof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token REQUIRED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_REQUIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_REQUIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "REQUIRED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token REQUIRED
void System::Xml::DtdParser::Token::_set_REQUIRED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_REQUIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "REQUIRED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token IMPLIED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IMPLIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IMPLIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IMPLIED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token IMPLIED
void System::Xml::DtdParser::Token::_set_IMPLIED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IMPLIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IMPLIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token FIXED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_FIXED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_FIXED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "FIXED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token FIXED
void System::Xml::DtdParser::Token::_set_FIXED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_FIXED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "FIXED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token QName
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token QName
void System::Xml::DtdParser::Token::_set_QName(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Name
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Name
void System::Xml::DtdParser::Token::_set_Name(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Nmtoken
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Nmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Nmtoken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Nmtoken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Nmtoken
void System::Xml::DtdParser::Token::_set_Nmtoken(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Nmtoken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Nmtoken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Quote
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Quote
void System::Xml::DtdParser::Token::_set_Quote(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token LeftParen
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_LeftParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_LeftParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "LeftParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token LeftParen
void System::Xml::DtdParser::Token::_set_LeftParen(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_LeftParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "LeftParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token RightParen
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_RightParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_RightParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "RightParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token RightParen
void System::Xml::DtdParser::Token::_set_RightParen(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_RightParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "RightParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token GreaterThan
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_GreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_GreaterThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "GreaterThan"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token GreaterThan
void System::Xml::DtdParser::Token::_set_GreaterThan(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_GreaterThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "GreaterThan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Or
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Or"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Or
void System::Xml::DtdParser::Token::_set_Or(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token LeftBracket
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_LeftBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_LeftBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "LeftBracket"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token LeftBracket
void System::Xml::DtdParser::Token::_set_LeftBracket(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_LeftBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "LeftBracket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token RightBracket
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_RightBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_RightBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "RightBracket"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token RightBracket
void System::Xml::DtdParser::Token::_set_RightBracket(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_RightBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "RightBracket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token PUBLIC
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PUBLIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PUBLIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PUBLIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token PUBLIC
void System::Xml::DtdParser::Token::_set_PUBLIC(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PUBLIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PUBLIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token SYSTEM
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_SYSTEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_SYSTEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "SYSTEM"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token SYSTEM
void System::Xml::DtdParser::Token::_set_SYSTEM(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_SYSTEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "SYSTEM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Literal
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Literal
void System::Xml::DtdParser::Token::_set_Literal(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token DOCTYPE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_DOCTYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_DOCTYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "DOCTYPE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token DOCTYPE
void System::Xml::DtdParser::Token::_set_DOCTYPE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_DOCTYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "DOCTYPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token NData
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token NData
void System::Xml::DtdParser::Token::_set_NData(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Percent
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Percent
void System::Xml::DtdParser::Token::_set_Percent(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Star
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Star() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Star");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Star"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Star
void System::Xml::DtdParser::Token::_set_Star(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Star");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Star", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token QMark
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_QMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_QMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "QMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token QMark
void System::Xml::DtdParser::Token::_set_QMark(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_QMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "QMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Plus
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Plus
void System::Xml::DtdParser::Token::_set_Plus(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token PCDATA
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PCDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PCDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token PCDATA
void System::Xml::DtdParser::Token::_set_PCDATA(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PCDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PCDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token Comma
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token Comma
void System::Xml::DtdParser::Token::_set_Comma(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token ANY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ANY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token ANY
void System::Xml::DtdParser::Token::_set_ANY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ANY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token EMPTY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token EMPTY
void System::Xml::DtdParser::Token::_set_EMPTY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token IGNORE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IGNORE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IGNORE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IGNORE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token IGNORE
void System::Xml::DtdParser::Token::_set_IGNORE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IGNORE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IGNORE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/Token INCLUDE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_INCLUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_INCLUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "INCLUDE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/Token INCLUDE
void System::Xml::DtdParser::Token::_set_INCLUDE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_INCLUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "INCLUDE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::Token::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/ScanningFunction
#include "System/Xml/DtdParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction SubsetContent
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_SubsetContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_SubsetContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "SubsetContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction SubsetContent
void System::Xml::DtdParser::ScanningFunction::_set_SubsetContent(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_SubsetContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "SubsetContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Name
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Name
void System::Xml::DtdParser::ScanningFunction::_set_Name(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction QName
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction QName
void System::Xml::DtdParser::ScanningFunction::_set_QName(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Nmtoken
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Nmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Nmtoken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Nmtoken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Nmtoken
void System::Xml::DtdParser::ScanningFunction::_set_Nmtoken(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Nmtoken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Nmtoken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Doctype1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Doctype1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Doctype1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Doctype1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Doctype1
void System::Xml::DtdParser::ScanningFunction::_set_Doctype1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Doctype1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Doctype1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Doctype2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Doctype2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Doctype2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Doctype2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Doctype2
void System::Xml::DtdParser::ScanningFunction::_set_Doctype2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Doctype2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Doctype2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element1
void System::Xml::DtdParser::ScanningFunction::_set_Element1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element2
void System::Xml::DtdParser::ScanningFunction::_set_Element2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element3
void System::Xml::DtdParser::ScanningFunction::_set_Element3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element4
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element4"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element4
void System::Xml::DtdParser::ScanningFunction::_set_Element4(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element5
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element5"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element5
void System::Xml::DtdParser::ScanningFunction::_set_Element5(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element6
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element6"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element6
void System::Xml::DtdParser::ScanningFunction::_set_Element6(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Element7
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element7"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Element7
void System::Xml::DtdParser::ScanningFunction::_set_Element7(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist1
void System::Xml::DtdParser::ScanningFunction::_set_Attlist1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist2
void System::Xml::DtdParser::ScanningFunction::_set_Attlist2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist3
void System::Xml::DtdParser::ScanningFunction::_set_Attlist3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist4
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist4"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist4
void System::Xml::DtdParser::ScanningFunction::_set_Attlist4(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist5
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist5"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist5
void System::Xml::DtdParser::ScanningFunction::_set_Attlist5(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist6
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist6"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist6
void System::Xml::DtdParser::ScanningFunction::_set_Attlist6(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Attlist7
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist7"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Attlist7
void System::Xml::DtdParser::ScanningFunction::_set_Attlist7(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Entity1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Entity1
void System::Xml::DtdParser::ScanningFunction::_set_Entity1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Entity2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Entity2
void System::Xml::DtdParser::ScanningFunction::_set_Entity2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Entity3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Entity3
void System::Xml::DtdParser::ScanningFunction::_set_Entity3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Notation1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Notation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Notation1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Notation1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Notation1
void System::Xml::DtdParser::ScanningFunction::_set_Notation1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Notation1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Notation1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction CondSection1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction CondSection1
void System::Xml::DtdParser::ScanningFunction::_set_CondSection1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction CondSection2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction CondSection2
void System::Xml::DtdParser::ScanningFunction::_set_CondSection2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction CondSection3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction CondSection3
void System::Xml::DtdParser::ScanningFunction::_set_CondSection3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction Literal
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction Literal
void System::Xml::DtdParser::ScanningFunction::_set_Literal(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction SystemId
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_SystemId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "SystemId"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction SystemId
void System::Xml::DtdParser::ScanningFunction::_set_SystemId(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_SystemId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "SystemId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction PublicId1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_PublicId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_PublicId1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "PublicId1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction PublicId1
void System::Xml::DtdParser::ScanningFunction::_set_PublicId1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_PublicId1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "PublicId1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction PublicId2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_PublicId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_PublicId2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "PublicId2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction PublicId2
void System::Xml::DtdParser::ScanningFunction::_set_PublicId2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_PublicId2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "PublicId2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction ClosingTag
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_ClosingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_ClosingTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "ClosingTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction ClosingTag
void System::Xml::DtdParser::ScanningFunction::_set_ClosingTag(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_ClosingTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "ClosingTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction ParamEntitySpace
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_ParamEntitySpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_ParamEntitySpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "ParamEntitySpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction ParamEntitySpace
void System::Xml::DtdParser::ScanningFunction::_set_ParamEntitySpace(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_ParamEntitySpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "ParamEntitySpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/ScanningFunction None
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/ScanningFunction None
void System::Xml::DtdParser::ScanningFunction::_set_None(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::ScanningFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/LiteralType
#include "System/Xml/DtdParser_LiteralType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/LiteralType AttributeValue
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_AttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_AttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "AttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/LiteralType AttributeValue
void System::Xml::DtdParser::LiteralType::_set_AttributeValue(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_AttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "AttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/LiteralType EntityReplText
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_EntityReplText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_EntityReplText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "EntityReplText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/LiteralType EntityReplText
void System::Xml::DtdParser::LiteralType::_set_EntityReplText(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_EntityReplText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "EntityReplText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/LiteralType SystemOrPublicID
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_SystemOrPublicID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_SystemOrPublicID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "SystemOrPublicID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/LiteralType SystemOrPublicID
void System::Xml::DtdParser::LiteralType::_set_SystemOrPublicID(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_SystemOrPublicID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "SystemOrPublicID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::LiteralType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/UndeclaredNotation
#include "System/Xml/DtdParser_UndeclaredNotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::UndeclaredNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::UndeclaredNotation::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_lineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::UndeclaredNotation::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_linePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.DtdParser/UndeclaredNotation next
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::UndeclaredNotation*& System::Xml::DtdParser::UndeclaredNotation::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::UndeclaredNotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/ParseElementOnlyContent_LocalFrame
#include "System/Xml/DtdParser_ParseElementOnlyContent_LocalFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 startParenEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_startParenEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_startParenEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startParenEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.DtdParser/Token parsingSchema
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::Token& System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_parsingSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_parsingSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingSchema"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType CDATA
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType CDATA
void System::Xml::XmlTokenizedType::_set_CDATA(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ID
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ID
void System::Xml::XmlTokenizedType::_set_ID(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType IDREF
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "IDREF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType IDREF
void System::Xml::XmlTokenizedType::_set_IDREF(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "IDREF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType IDREFS
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "IDREFS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType IDREFS
void System::Xml::XmlTokenizedType::_set_IDREFS(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENTITY
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENTITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENTITY
void System::Xml::XmlTokenizedType::_set_ENTITY(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENTITIES
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENTITIES
void System::Xml::XmlTokenizedType::_set_ENTITIES(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NMTOKEN
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NMTOKEN
void System::Xml::XmlTokenizedType::_set_NMTOKEN(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NMTOKENS
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NMTOKENS
void System::Xml::XmlTokenizedType::_set_NMTOKENS(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NOTATION
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NOTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NOTATION
void System::Xml::XmlTokenizedType::_set_NOTATION(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENUMERATION
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENUMERATION
void System::Xml::XmlTokenizedType::_set_ENUMERATION(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType QName
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType QName
void System::Xml::XmlTokenizedType::_set_QName(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NCName
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NCName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NCName
void System::Xml::XmlTokenizedType::_set_NCName(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NCName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType None
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType None
void System::Xml::XmlTokenizedType::_set_None(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTokenizedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ValidateNames
#include "System/Xml/ValidateNames.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
::System::Xml::XmlCharType System::Xml::ValidateNames::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlCharType>("System.Xml", "ValidateNames", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::ValidateNames::_set_xmlCharType(::System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidateNames", "xmlCharType", value));
}
// Autogenerated method: System.Xml.ValidateNames.ParseNmtokenNoNamespaces
int System::Xml::ValidateNames::ParseNmtokenNoNamespaces(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNmtokenNoNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNmtokenNoNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNameNoNamespaces
int System::Xml::ValidateNames::ParseNameNoNamespaces(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNameNoNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNameNoNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNCName
int System::Xml::ValidateNames::ParseNCName(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNCName
int System::Xml::ValidateNames::ParseNCName(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.ValidateNames.ParseQName
int System::Xml::ValidateNames::ParseQName(::StringW s, int offset, ByRef<int> colonOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset, byref(colonOffset));
}
// Autogenerated method: System.Xml.ValidateNames.ParseQNameThrow
void System::Xml::ValidateNames::ParseQNameThrow(::StringW s, ByRef<::StringW> prefix, ByRef<::StringW> localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseQNameThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseQNameThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(prefix), byref(localName));
}
// Autogenerated method: System.Xml.ValidateNames.ThrowInvalidName
void System::Xml::ValidateNames::ThrowInvalidName(::StringW s, int offsetStartChar, int offsetBadChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ThrowInvalidName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ThrowInvalidName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offsetStartChar), ::il2cpp_utils::ExtractType(offsetBadChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offsetStartChar, offsetBadChar);
}
// Autogenerated method: System.Xml.ValidateNames.GetInvalidNameException
::System::Exception* System::Xml::ValidateNames::GetInvalidNameException(::StringW s, int offsetStartChar, int offsetBadChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::GetInvalidNameException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "GetInvalidNameException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offsetStartChar), ::il2cpp_utils::ExtractType(offsetBadChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offsetStartChar, offsetBadChar);
}
// Autogenerated method: System.Xml.ValidateNames..cctor
void System::Xml::ValidateNames::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_Lock
::Il2CppObject* System::Xml::XmlCharType::_get_s_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_get_s_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Xml", "XmlCharType", "s_Lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_Lock
void System::Xml::XmlCharType::_set_s_Lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_set_s_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_Lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_CharProperties
::ArrayW<uint8_t> System::Xml::XmlCharType::_get_s_CharProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_get_s_CharProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "XmlCharType", "s_CharProperties"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_CharProperties
void System::Xml::XmlCharType::_set_s_CharProperties(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_set_s_CharProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_CharProperties", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] charProperties
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlCharType::dyn_charProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::dyn_charProperties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charProperties"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlCharType.get_StaticLock
::Il2CppObject* System::Xml::XmlCharType::get_StaticLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::get_StaticLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_StaticLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.InitInstance
void System::Xml::XmlCharType::InitInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::InitInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InitInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.SetProperties
void System::Xml::XmlCharType::SetProperties(::StringW ranges, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ranges), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ranges, value);
}
// Autogenerated method: System.Xml.XmlCharType..ctor
// ABORTED elsewhere.  System::Xml::XmlCharType::XmlCharType(::ArrayW<uint8_t> charProperties)
// Autogenerated method: System.Xml.XmlCharType.get_Instance
::System::Xml::XmlCharType System::Xml::XmlCharType::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlCharType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.IsWhiteSpace
bool System::Xml::XmlCharType::IsWhiteSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNCNameSingleChar
bool System::Xml::XmlCharType::IsNCNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNCNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNCNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsStartNCNameSingleChar
bool System::Xml::XmlCharType::IsStartNCNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsStartNCNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsStartNCNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNameSingleChar
bool System::Xml::XmlCharType::IsNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsCharData
bool System::Xml::XmlCharType::IsCharData(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsPubidChar
bool System::Xml::XmlCharType::IsPubidChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsPubidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPubidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsHighSurrogate
bool System::Xml::XmlCharType::IsHighSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsLowSurrogate
bool System::Xml::XmlCharType::IsLowSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsSurrogate
bool System::Xml::XmlCharType::IsSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.CombineSurrogateChar
int System::Xml::XmlCharType::CombineSurrogateChar(int lowChar, int highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::CombineSurrogateChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "CombineSurrogateChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlCharType.SplitSurrogateChar
void System::Xml::XmlCharType::SplitSurrogateChar(int combinedChar, ByRef<::Il2CppChar> lowChar, ByRef<::Il2CppChar> highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::SplitSurrogateChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "SplitSurrogateChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combinedChar), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, combinedChar, byref(lowChar), byref(highChar));
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyCharData
int System::Xml::XmlCharType::IsOnlyCharData(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsOnlyCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsPublicId
int System::Xml::XmlCharType::IsPublicId(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsPublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.InRange
bool System::Xml::XmlCharType::InRange(int value, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlComplianceUtil
#include "System/Xml/XmlComplianceUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlComplianceUtil.NonCDataNormalize
::StringW System::Xml::XmlComplianceUtil::NonCDataNormalize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComplianceUtil::NonCDataNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlComplianceUtil", "NonCDataNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlComplianceUtil.CDataNormalize
::StringW System::Xml::XmlComplianceUtil::CDataNormalize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComplianceUtil::CDataNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlComplianceUtil", "CDataNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType ArgumentException
::System::Xml::ExceptionType System::Xml::ExceptionType::_get_ArgumentException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_get_ArgumentException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ExceptionType>("System.Xml", "ExceptionType", "ArgumentException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType ArgumentException
void System::Xml::ExceptionType::_set_ArgumentException(::System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_set_ArgumentException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "ArgumentException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType XmlException
::System::Xml::ExceptionType System::Xml::ExceptionType::_get_XmlException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_get_XmlException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ExceptionType>("System.Xml", "ExceptionType", "XmlException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType XmlException
void System::Xml::ExceptionType::_set_XmlException(::System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_set_XmlException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "XmlException", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ExceptionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlConvert
#include "System/Xml/XmlConvert.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
::System::Xml::XmlCharType System::Xml::XmlConvert::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlCharType>("System.Xml", "XmlConvert", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::XmlConvert::_set_xmlCharType(::System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "xmlCharType", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] crt
::ArrayW<::Il2CppChar> System::Xml::XmlConvert::_get_crt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_crt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml", "XmlConvert", "crt"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] crt
void System::Xml::XmlConvert::_set_crt(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_crt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "crt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 c_EncodedCharLength
int System::Xml::XmlConvert::_get_c_EncodedCharLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_c_EncodedCharLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "XmlConvert", "c_EncodedCharLength"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 c_EncodedCharLength
void System::Xml::XmlConvert::_set_c_EncodedCharLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_c_EncodedCharLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "c_EncodedCharLength", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] WhitespaceChars
::ArrayW<::Il2CppChar> System::Xml::XmlConvert::_get_WhitespaceChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_WhitespaceChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml", "XmlConvert", "WhitespaceChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] WhitespaceChars
void System::Xml::XmlConvert::_set_WhitespaceChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_WhitespaceChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "WhitespaceChars", value));
}
// Autogenerated method: System.Xml.XmlConvert.FromBinHexString
::ArrayW<uint8_t> System::Xml::XmlConvert::FromBinHexString(::StringW s, bool allowOddCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::FromBinHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "FromBinHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(allowOddCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, allowOddCount);
}
// Autogenerated method: System.Xml.XmlConvert.ToBinHexString
::StringW System::Xml::XmlConvert::ToBinHexString(::ArrayW<uint8_t> inArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToBinHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToBinHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray);
}
// Autogenerated method: System.Xml.XmlConvert.VerifyName
::StringW System::Xml::XmlConvert::VerifyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::VerifyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyName
::System::Exception* System::Xml::XmlConvert::TryVerifyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNCName
::System::Exception* System::Xml::XmlConvert::TryVerifyNCName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyTOKEN
::System::Exception* System::Xml::XmlConvert::TryVerifyTOKEN(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyTOKEN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyTOKEN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNMTOKEN
::System::Exception* System::Xml::XmlConvert::TryVerifyNMTOKEN(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNMTOKEN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNMTOKEN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNormalizedString
::System::Exception* System::Xml::XmlConvert::TryVerifyNormalizedString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNormalizedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNormalizedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToBoolean
bool System::Xml::XmlConvert::ToBoolean(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToBoolean
::System::Exception* System::Xml::XmlConvert::TryToBoolean(::StringW s, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToChar
::Il2CppChar System::Xml::XmlConvert::ToChar(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToChar
::System::Exception* System::Xml::XmlConvert::TryToChar(::StringW s, ByRef<::Il2CppChar> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToDecimal
::System::Decimal System::Xml::XmlConvert::ToDecimal(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToDecimal
::System::Exception* System::Xml::XmlConvert::TryToDecimal(::StringW s, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInteger
::System::Decimal System::Xml::XmlConvert::ToInteger(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInteger
::System::Exception* System::Xml::XmlConvert::TryToInteger(::StringW s, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToSByte
::System::Exception* System::Xml::XmlConvert::TryToSByte(::StringW s, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt16
::System::Exception* System::Xml::XmlConvert::TryToInt16(::StringW s, ByRef<int16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInt32
int System::Xml::XmlConvert::ToInt32(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt32
::System::Exception* System::Xml::XmlConvert::TryToInt32(::StringW s, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInt64
int64_t System::Xml::XmlConvert::ToInt64(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt64
::System::Exception* System::Xml::XmlConvert::TryToInt64(::StringW s, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToByte
::System::Exception* System::Xml::XmlConvert::TryToByte(::StringW s, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt16
::System::Exception* System::Xml::XmlConvert::TryToUInt16(::StringW s, ByRef<uint16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt32
::System::Exception* System::Xml::XmlConvert::TryToUInt32(::StringW s, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt64
::System::Exception* System::Xml::XmlConvert::TryToUInt64(::StringW s, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToSingle
float System::Xml::XmlConvert::ToSingle(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToSingle
::System::Exception* System::Xml::XmlConvert::TryToSingle(::StringW s, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToDouble
double System::Xml::XmlConvert::ToDouble(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToDouble
::System::Exception* System::Xml::XmlConvert::TryToDouble(::StringW s, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToTimeSpan
::System::Exception* System::Xml::XmlConvert::TryToTimeSpan(::StringW s, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToGuid
::System::Guid System::Xml::XmlConvert::ToGuid(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToGuid
::System::Exception* System::Xml::XmlConvert::TryToGuid(::StringW s, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToUri
::System::Uri* System::Xml::XmlConvert::ToUri(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToUri
::System::Exception* System::Xml::XmlConvert::TryToUri(::StringW s, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.StrEqual
bool System::Xml::XmlConvert::StrEqual(::ArrayW<::Il2CppChar> chars, int strPos1, int strLen1, ::StringW str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::StrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "StrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(strPos1), ::il2cpp_utils::ExtractType(strLen1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, strPos1, strLen1, str2);
}
// Autogenerated method: System.Xml.XmlConvert.TrimString
::StringW System::Xml::XmlConvert::TrimString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TrimString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.SplitString
::ArrayW<::StringW> System::Xml::XmlConvert::SplitString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::SplitString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "SplitString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.IsNegativeZero
bool System::Xml::XmlConvert::IsNegativeZero(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::IsNegativeZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "IsNegativeZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.DoubleToInt64Bits
int64_t System::Xml::XmlConvert::DoubleToInt64Bits(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::DoubleToInt64Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "DoubleToInt64Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
::System::Exception* System::Xml::XmlConvert::CreateException(::StringW res, ::ArrayW<::StringW> args, ::System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidNameCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidNameCharException(::StringW name, int index, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidNameCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidNameCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, index, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidNameArgumentException
::System::ArgumentException* System::Xml::XmlConvert::CreateInvalidNameArgumentException(::StringW name, ::StringW argumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidNameArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidNameArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(argumentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, argumentName);
}
// Autogenerated method: System.Xml.XmlConvert..cctor
void System::Xml::XmlConvert::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.Xml.XmlDownloadManager/<>c__DisplayClass4_0
#include "System/Xml/XmlDownloadManager_--c__DisplayClass4_0.hpp"
// Including type: System.Xml.XmlDownloadManager/<GetNonFileStreamAsync>d__5
#include "System/Xml/XmlDownloadManager_-GetNonFileStreamAsync-d__5.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable connections
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::XmlDownloadManager::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetStream
::System::IO::Stream* System::Xml::XmlDownloadManager::GetStream(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetNonFileStream
::System::IO::Stream* System::Xml::XmlDownloadManager::GetNonFileStream(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetNonFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNonFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.Remove
void System::Xml::XmlDownloadManager::Remove(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Xml::XmlDownloadManager::GetStreamAsync(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetStreamAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetNonFileStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Xml::XmlDownloadManager::GetNonFileStreamAsync(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetNonFileStreamAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNonFileStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager/<>c__DisplayClass4_0
#include "System/Xml/XmlDownloadManager_--c__DisplayClass4_0.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager/<>c__DisplayClass4_0.<GetStreamAsync>b__0
::System::IO::Stream* System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::$GetStreamAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::<GetStreamAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetStreamAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager/<GetNonFileStreamAsync>d__5
#include "System/Xml/XmlDownloadManager_-GetNonFileStreamAsync-d__5.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.IO.Stream> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_credentials");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_proxy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Cache.RequestCachePolicy cachePolicy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_cachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_cachePolicy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachePolicy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebRequest <req>5__1
[[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$req$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$req$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<req>5__1"))->offset;
  return *reinterpret_cast<::System::Net::WebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlDownloadManager <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDownloadManager*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDownloadManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Net.WebResponse> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager/<GetNonFileStreamAsync>d__5.MoveNext
void System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDownloadManager/<GetNonFileStreamAsync>d__5.SetStateMachine
void System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.OpenedHost
#include "System/Xml/OpenedHost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 nonCachedConnectionsCount
[[deprecated("Use field access instead!")]] int& System::Xml::OpenedHost::dyn_nonCachedConnectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::OpenedHost::dyn_nonCachedConnectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonCachedConnectionsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlRegisteredNonCachedStream
#include "System/Xml/XmlRegisteredNonCachedStream.hpp"
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlRegisteredNonCachedStream::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDownloadManager downloadManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDownloadManager*& System::Xml::XmlRegisteredNonCachedStream::dyn_downloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_downloadManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDownloadManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String host
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlRegisteredNonCachedStream::dyn_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Finalize
void System::Xml::XmlRegisteredNonCachedStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Dispose
void System::Xml::XmlRegisteredNonCachedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.BeginRead
::System::IAsyncResult* System::Xml::XmlRegisteredNonCachedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.BeginWrite
::System::IAsyncResult* System::Xml::XmlRegisteredNonCachedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.EndRead
int System::Xml::XmlRegisteredNonCachedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.EndWrite
void System::Xml::XmlRegisteredNonCachedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Flush
void System::Xml::XmlRegisteredNonCachedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Read
int System::Xml::XmlRegisteredNonCachedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.ReadByte
int System::Xml::XmlRegisteredNonCachedStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Seek
int64_t System::Xml::XmlRegisteredNonCachedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.SetLength
void System::Xml::XmlRegisteredNonCachedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Write
void System::Xml::XmlRegisteredNonCachedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.WriteByte
void System::Xml::XmlRegisteredNonCachedStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanRead
bool System::Xml::XmlRegisteredNonCachedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanSeek
bool System::Xml::XmlRegisteredNonCachedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanWrite
bool System::Xml::XmlRegisteredNonCachedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_Length
int64_t System::Xml::XmlRegisteredNonCachedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_Position
int64_t System::Xml::XmlRegisteredNonCachedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.set_Position
void System::Xml::XmlRegisteredNonCachedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlCachedStream
#include "System/Xml/XmlCachedStream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlCachedStream::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCachedStream::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.UTF16Decoder
#include "System/Xml/UTF16Decoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean bigEndian
[[deprecated("Use field access instead!")]] bool& System::Xml::UTF16Decoder::dyn_bigEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::dyn_bigEndian");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bigEndian"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastByte
[[deprecated("Use field access instead!")]] int& System::Xml::UTF16Decoder::dyn_lastByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::dyn_lastByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetCharCount
int System::Xml::UTF16Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetCharCount
int System::Xml::UTF16Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count, flush);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetChars
int System::Xml::UTF16Decoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.UTF16Decoder.Convert
void System::Xml::UTF16Decoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::Convert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.SafeAsciiDecoder
#include "System/Xml/SafeAsciiDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.SafeAsciiDecoder.GetCharCount
int System::Xml::SafeAsciiDecoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.SafeAsciiDecoder.GetChars
int System::Xml::SafeAsciiDecoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.SafeAsciiDecoder.Convert
void System::Xml::SafeAsciiDecoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::Convert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding
#include "System/Xml/Ucs4Encoding.hpp"
// Including type: System.Xml.Ucs4Decoder
#include "System/Xml/Ucs4Decoder.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Ucs4Decoder ucs4Decoder
[[deprecated("Use field access instead!")]] ::System::Xml::Ucs4Decoder*& System::Xml::Ucs4Encoding::dyn_ucs4Decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::dyn_ucs4Decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ucs4Decoder"))->offset;
  return *reinterpret_cast<::System::Xml::Ucs4Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_Littleendian
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_Littleendian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_Littleendian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_Littleendian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_Bigendian
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_Bigendian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_Bigendian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_Bigendian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_2143
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_2143() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_2143");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_2143", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_3412
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_3412() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_3412");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_3412", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_WebName
::StringW System::Xml::Ucs4Encoding::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_WebName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetDecoder
::System::Text::Decoder* System::Xml::Ucs4Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetByteCount
int System::Xml::Ucs4Encoding::GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetBytes
::ArrayW<uint8_t> System::Xml::Ucs4Encoding::GetBytes(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetBytes
int System::Xml::Ucs4Encoding::GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetMaxByteCount
int System::Xml::Ucs4Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetCharCount
int System::Xml::Ucs4Encoding::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetChars
int System::Xml::Ucs4Encoding::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetMaxCharCount
int System::Xml::Ucs4Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_CodePage
int System::Xml::Ucs4Encoding::get_CodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_CodePage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetEncoder
::System::Text::Encoder* System::Xml::Ucs4Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding1234
#include "System/Xml/Ucs4Encoding1234.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding1234.get_EncodingName
::StringW System::Xml::Ucs4Encoding1234::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding1234::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding1234.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding1234::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding1234::GetPreamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding4321
#include "System/Xml/Ucs4Encoding4321.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding4321.get_EncodingName
::StringW System::Xml::Ucs4Encoding4321::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding4321::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding4321.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding4321::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding4321::GetPreamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding2143
#include "System/Xml/Ucs4Encoding2143.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding2143.get_EncodingName
::StringW System::Xml::Ucs4Encoding2143::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding2143::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding2143.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding2143::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding2143::GetPreamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding3412
#include "System/Xml/Ucs4Encoding3412.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding3412.get_EncodingName
::StringW System::Xml::Ucs4Encoding3412::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding3412::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding3412.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding3412::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding3412::GetPreamble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Encoding*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder
#include "System/Xml/Ucs4Decoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] lastBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::Ucs4Decoder::dyn_lastBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::dyn_lastBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lastBytesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Ucs4Decoder::dyn_lastBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::dyn_lastBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetFullChars
int System::Xml::Ucs4Decoder::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetFullChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Ucs4Decoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.Ucs4ToUTF16
void System::Xml::Ucs4Decoder::Ucs4ToUTF16(uint code, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::Ucs4ToUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ucs4ToUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetCharCount
int System::Xml::Ucs4Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetChars
int System::Xml::Ucs4Decoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.Convert
void System::Xml::Ucs4Decoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::Convert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::Decoder*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder4321
#include "System/Xml/Ucs4Decoder4321.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder4321.GetFullChars
int System::Xml::Ucs4Decoder4321::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder4321::GetFullChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Ucs4Decoder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder1234
#include "System/Xml/Ucs4Decoder1234.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder1234.GetFullChars
int System::Xml::Ucs4Decoder1234::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder1234::GetFullChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Ucs4Decoder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder2143
#include "System/Xml/Ucs4Decoder2143.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder2143.GetFullChars
int System::Xml::Ucs4Decoder2143::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder2143::GetFullChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Ucs4Decoder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder3412
#include "System/Xml/Ucs4Decoder3412.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder3412.GetFullChars
int System::Xml::Ucs4Decoder3412::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder3412::GetFullChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Ucs4Decoder*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlException
#include "System/Xml/XmlException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String res
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_res() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_res");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "res"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] args
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::XmlException::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::XmlException::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::XmlException::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_sourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_sourceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String message
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlException::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlException.FormatUserMessage
::StringW System::Xml::XmlException::FormatUserMessage(::StringW message, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::FormatUserMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "FormatUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.CreateMessage
::StringW System::Xml::XmlException::CreateMessage(::StringW res, ::ArrayW<::StringW> args, int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::CreateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "CreateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::StringW data, int invCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(invCharIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, invCharIndex);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::ArrayW<::Il2CppChar> data, int length, int invCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, length, invCharIndex);
}
// Autogenerated method: System.Xml.XmlException.BuildCharExceptionArgs
::ArrayW<::StringW> System::Xml::XmlException::BuildCharExceptionArgs(::Il2CppChar invChar, ::Il2CppChar nextChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::BuildCharExceptionArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlException", "BuildCharExceptionArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invChar, nextChar);
}
// Autogenerated method: System.Xml.XmlException.get_LineNumber
int System::Xml::XmlException::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.get_LinePosition
int System::Xml::XmlException::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.get_ResString
::StringW System::Xml::XmlException::get_ResString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_ResString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlException.GetObjectData
void System::Xml::XmlException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Xml.XmlException.get_Message
::StringW System::Xml::XmlException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlNameTable.Get
::StringW System::Xml::XmlNameTable::Get(::StringW array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array);
}
// Autogenerated method: System.Xml.XmlNameTable.Add
::StringW System::Xml::XmlNameTable::Add(::ArrayW<::Il2CppChar> array, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array, offset, length);
}
// Autogenerated method: System.Xml.XmlNameTable.Add
::StringW System::Xml::XmlNameTable::Add(::StringW array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameTable::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNameTable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager/NamespaceDeclaration[] nsdecls
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlNamespaceManager::NamespaceDeclaration>& System::Xml::XmlNamespaceManager::dyn_nsdecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_nsdecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsdecls"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlNamespaceManager::NamespaceDeclaration>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastDecl
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::dyn_lastDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_lastDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDecl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlNamespaceManager::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 scopeId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::dyn_scopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_scopeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> hashTable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Xml::XmlNamespaceManager::dyn_hashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_hashTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useHashtable
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlNamespaceManager::dyn_useHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_useHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useHashtable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::dyn_xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::dyn_xmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::dyn_xmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.PushScope
void System::Xml::XmlNamespaceManager::PushScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::PushScope");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.PopScope
bool System::Xml::XmlNamespaceManager::PopScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::PopScope");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.AddNamespace
void System::Xml::XmlNamespaceManager::AddNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::AddNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNamespaceManager::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupNamespace
::StringW System::Xml::XmlNamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupNamespaceDecl
int System::Xml::XmlNamespaceManager::LookupNamespaceDecl(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupNamespaceDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaceDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlNamespaceManager.LookupPrefix
::StringW System::Xml::XmlNamespaceManager::LookupPrefix(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNamespaceManager/NamespaceDeclaration
#include "System/Xml/XmlNamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scopeId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_scopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_scopeId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 previousNsIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_previousNsIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::dyn_previousNsIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousNsIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamespaceManager/NamespaceDeclaration.Set
void System::Xml::XmlNamespaceManager::NamespaceDeclaration::Set(::StringW prefix, ::StringW uri, int scopeId, int previousNsIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamespaceManager::NamespaceDeclaration::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(scopeId), ::il2cpp_utils::ExtractType(previousNsIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri, scopeId, previousNsIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType None
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType None
void System::Xml::XmlNodeType::_set_None(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Element
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Element
void System::Xml::XmlNodeType::_set_Element(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Attribute
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Attribute
void System::Xml::XmlNodeType::_set_Attribute(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Text
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Text
void System::Xml::XmlNodeType::_set_Text(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType CDATA
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType CDATA
void System::Xml::XmlNodeType::_set_CDATA(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EntityReference
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EntityReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EntityReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EntityReference"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EntityReference
void System::Xml::XmlNodeType::_set_EntityReference(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EntityReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EntityReference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Entity
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Entity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Entity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Entity
void System::Xml::XmlNodeType::_set_Entity(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Entity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Entity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType ProcessingInstruction
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType ProcessingInstruction
void System::Xml::XmlNodeType::_set_ProcessingInstruction(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Comment
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Comment
void System::Xml::XmlNodeType::_set_Comment(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Document
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Document
void System::Xml::XmlNodeType::_set_Document(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType DocumentType
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_DocumentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_DocumentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "DocumentType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType DocumentType
void System::Xml::XmlNodeType::_set_DocumentType(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_DocumentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "DocumentType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType DocumentFragment
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_DocumentFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_DocumentFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "DocumentFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType DocumentFragment
void System::Xml::XmlNodeType::_set_DocumentFragment(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_DocumentFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "DocumentFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Notation
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Notation
void System::Xml::XmlNodeType::_set_Notation(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType Whitespace
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType Whitespace
void System::Xml::XmlNodeType::_set_Whitespace(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType SignificantWhitespace
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_SignificantWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_SignificantWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "SignificantWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType SignificantWhitespace
void System::Xml::XmlNodeType::_set_SignificantWhitespace(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_SignificantWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "SignificantWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EndElement
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EndElement
void System::Xml::XmlNodeType::_set_EndElement(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType EndEntity
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_EndEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_EndEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "EndEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType EndEntity
void System::Xml::XmlNodeType::_set_EndEntity(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_EndEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "EndEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeType XmlDeclaration
::System::Xml::XmlNodeType System::Xml::XmlNodeType::_get_XmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_get_XmlDeclaration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeType>("System.Xml", "XmlNodeType", "XmlDeclaration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeType XmlDeclaration
void System::Xml::XmlNodeType::_set_XmlDeclaration(::System::Xml::XmlNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::_set_XmlDeclaration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeType", "XmlDeclaration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlQualifiedName/HashCodeOfStringDelegate hashCodeDelegate
::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::_get_hashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_get_hashCodeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*>("System.Xml", "XmlQualifiedName", "hashCodeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlQualifiedName/HashCodeOfStringDelegate hashCodeDelegate
void System::Xml::XmlQualifiedName::_set_hashCodeDelegate(::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_set_hashCodeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "hashCodeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.XmlQualifiedName Empty
::System::Xml::XmlQualifiedName* System::Xml::XmlQualifiedName::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml", "XmlQualifiedName", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.XmlQualifiedName Empty
void System::Xml::XmlQualifiedName::_set_Empty(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlQualifiedName", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlQualifiedName::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlQualifiedName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hash
[[deprecated("Use field access instead!")]] int& System::Xml::XmlQualifiedName::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Namespace
::StringW System::Xml::XmlQualifiedName::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_Name
::StringW System::Xml::XmlQualifiedName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.get_IsEmpty
bool System::Xml::XmlQualifiedName::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeDelegate
::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate* System::Xml::XmlQualifiedName::GetHashCodeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCodeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.IsRandomizedHashingDisabled
bool System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::IsRandomizedHashingDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "IsRandomizedHashingDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCodeOfString
int System::Xml::XmlQualifiedName::GetHashCodeOfString(::StringW s, int length, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, length, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Parse
::System::Xml::XmlQualifiedName* System::Xml::XmlQualifiedName::Parse(::StringW s, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, nsmgr, byref(prefix));
}
// Autogenerated method: System.Xml.XmlQualifiedName..cctor
void System::Xml::XmlQualifiedName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.GetHashCode
int System::Xml::XmlQualifiedName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.ToString
::StringW System::Xml::XmlQualifiedName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlQualifiedName.Equals
bool System::Xml::XmlQualifiedName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Equality
bool System::Xml::operator ==(::System::Xml::XmlQualifiedName* a, ::System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: System.Xml.XmlQualifiedName.op_Inequality
bool System::Xml::operator !=(::System::Xml::XmlQualifiedName* a, ::System::Xml::XmlQualifiedName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlQualifiedName", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate
#include "System/Xml/XmlQualifiedName_HashCodeOfStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.Invoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke(::StringW s, int sLen, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, sLen, additionalEntropy);
}
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.BeginInvoke
::System::IAsyncResult* System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke(::StringW s, int sLen, int64_t additionalEntropy, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, s, sLen, additionalEntropy, callback, object);
}
// Autogenerated method: System.Xml.XmlQualifiedName/HashCodeOfStringDelegate.EndInvoke
int System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlQualifiedName::HashCodeOfStringDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlResolver.GetEntity
::Il2CppObject* System::Xml::XmlResolver::GetEntity(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::GetEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated method: System.Xml.XmlResolver.ResolveUri
::System::Uri* System::Xml::XmlResolver::ResolveUri(::System::Uri* baseUri, ::StringW relativeUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::ResolveUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, baseUri, relativeUri);
}
// Autogenerated method: System.Xml.XmlResolver.SupportsType
bool System::Xml::XmlResolver::SupportsType(::System::Uri* absoluteUri, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::SupportsType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, absoluteUri, type);
}
// Autogenerated method: System.Xml.XmlResolver.GetEntityAsync
::System::Threading::Tasks::Task_1<::Il2CppObject*>* System::Xml::XmlResolver::GetEntityAsync(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlResolver::GetEntityAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUrlResolver
#include "System/Xml/XmlUrlResolver.hpp"
// Including type: System.Xml.XmlUrlResolver/<GetEntityAsync>d__15
#include "System/Xml/XmlUrlResolver_-GetEntityAsync-d__15.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_DownloadManager
::Il2CppObject* System::Xml::XmlUrlResolver::_get_s_DownloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::_get_s_DownloadManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Xml", "XmlUrlResolver", "s_DownloadManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_DownloadManager
void System::Xml::XmlUrlResolver::_set_s_DownloadManager(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::_set_s_DownloadManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlUrlResolver", "s_DownloadManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials _credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Xml::XmlUrlResolver::dyn__credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy _proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Xml::XmlUrlResolver::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCachePolicy _cachePolicy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Xml::XmlUrlResolver::dyn__cachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::dyn__cachePolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachePolicy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUrlResolver.get_DownloadManager
::System::Xml::XmlDownloadManager* System::Xml::XmlUrlResolver::get_DownloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::get_DownloadManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUrlResolver", "get_DownloadManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDownloadManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlUrlResolver.GetEntity
::Il2CppObject* System::Xml::XmlUrlResolver::GetEntity(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::GetEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated method: System.Xml.XmlUrlResolver.ResolveUri
::System::Uri* System::Xml::XmlUrlResolver::ResolveUri(::System::Uri* baseUri, ::StringW relativeUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::ResolveUri");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, baseUri, relativeUri);
}
// Autogenerated method: System.Xml.XmlUrlResolver.GetEntityAsync
::System::Threading::Tasks::Task_1<::Il2CppObject*>* System::Xml::XmlUrlResolver::GetEntityAsync(::System::Uri* absoluteUri, ::StringW role, ::System::Type* ofObjectToReturn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::GetEntityAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlResolver*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(this, ___internal__method, absoluteUri, role, ofObjectToReturn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlUrlResolver/<GetEntityAsync>d__15
#include "System/Xml/XmlUrlResolver_-GetEntityAsync-d__15.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Object> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppObject*>& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type ofObjectToReturn
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_ofObjectToReturn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_ofObjectToReturn");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ofObjectToReturn"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri absoluteUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_absoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_absoluteUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absoluteUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlUrlResolver <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::XmlUrlResolver*& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::XmlUrlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.IO.Stream> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter& System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUrlResolver/<GetEntityAsync>d__15.MoveNext
void System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUrlResolver/<GetEntityAsync>d__15.SetStateMachine
void System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Xml::XmlUrlResolver::$GetEntityAsync$d__15), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Res
#include "System/Xml/Res.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Res.GetString
::StringW System::Xml::Res::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Res.GetString
::StringW System::Xml::Res::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageXmlNmsp
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& System::Xml::XPath::XPathDocument::dyn_pageXmlNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_pageXmlNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageXmlNmsp"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxXmlNmsp
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathDocument::dyn_idxXmlNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_idxXmlNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxXmlNmsp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XPath::XPathDocument::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<MS.Internal.Xml.Cache.XPathNodeRef,MS.Internal.Xml.Cache.XPathNodeRef> mapNmsp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::MS::Internal::Xml::Cache::XPathNodeRef, ::MS::Internal::Xml::Cache::XPathNodeRef>*& System::Xml::XPath::XPathDocument::dyn_mapNmsp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::dyn_mapNmsp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mapNmsp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::MS::Internal::Xml::Cache::XPathNodeRef, ::MS::Internal::Xml::Cache::XPathNodeRef>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XPath.XPathDocument.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XPath::XPathDocument::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathDocument.GetXmlNamespaceNode
int System::Xml::XPath::XPathDocument::GetXmlNamespaceNode(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageXmlNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::GetXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageXmlNmsp));
}
// Autogenerated method: System.Xml.XPath.XPathDocument.LookupNamespaces
int System::Xml::XPath::XPathDocument::LookupNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathDocument::LookupNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathItem
#include "System/Xml/XPath/XPathItem.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XPath.XPathItem.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::XPath::XPathItem::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_XmlType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_Value
::StringW System::Xml::XPath::XPathItem::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_TypedValue
::Il2CppObject* System::Xml::XPath::XPathItem::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueType
::System::Type* System::Xml::XPath::XPathItem::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsBoolean
bool System::Xml::XPath::XPathItem::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsDateTime
::System::DateTime System::Xml::XPath::XPathItem::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsDouble
double System::Xml::XPath::XPathItem::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsInt
int System::Xml::XPath::XPathItem::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.get_ValueAsLong
int64_t System::Xml::XPath::XPathItem::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathItem.ValueAs
::Il2CppObject* System::Xml::XPath::XPathItem::ValueAs(::System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::ValueAs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType);
}
// Autogenerated method: System.Xml.XPath.XPathItem.ValueAs
::Il2CppObject* System::Xml::XPath::XPathItem::ValueAs(::System::Type* returnType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathItem::ValueAs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope All
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope All
void System::Xml::XPath::XPathNamespaceScope::_set_All(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope ExcludeXml
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_ExcludeXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_ExcludeXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "ExcludeXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope ExcludeXml
void System::Xml::XPath::XPathNamespaceScope::_set_ExcludeXml(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_ExcludeXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "ExcludeXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNamespaceScope Local
::System::Xml::XPath::XPathNamespaceScope System::Xml::XPath::XPathNamespaceScope::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNamespaceScope>("System.Xml.XPath", "XPathNamespaceScope", "Local"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNamespaceScope Local
void System::Xml::XPath::XPathNamespaceScope::_set_Local(::System::Xml::XPath::XPathNamespaceScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNamespaceScope", "Local", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathNamespaceScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNamespaceScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathNavigator
#include "System/Xml/XPath/XPathNavigator.hpp"
// Including type: System.Xml.XPath.XPathNavigatorKeyComparer
#include "System/Xml/XPath/XPathNavigatorKeyComparer.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.XPath.XPathNavigatorKeyComparer comparer
::System::Xml::XPath::XPathNavigatorKeyComparer* System::Xml::XPath::XPathNavigator::_get_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_comparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNavigatorKeyComparer*>("System.Xml.XPath", "XPathNavigator", "comparer"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.XPath.XPathNavigatorKeyComparer comparer
void System::Xml::XPath::XPathNavigator::_set_comparer(::System::Xml::XPath::XPathNavigatorKeyComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_comparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "comparer", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] NodeTypeLetter
::ArrayW<::Il2CppChar> System::Xml::XPath::XPathNavigator::_get_NodeTypeLetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_NodeTypeLetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.XPath", "XPathNavigator", "NodeTypeLetter"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] NodeTypeLetter
void System::Xml::XPath::XPathNavigator::_set_NodeTypeLetter(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_NodeTypeLetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "NodeTypeLetter", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] UniqueIdTbl
::ArrayW<::Il2CppChar> System::Xml::XPath::XPathNavigator::_get_UniqueIdTbl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_UniqueIdTbl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.XPath", "XPathNavigator", "UniqueIdTbl"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] UniqueIdTbl
void System::Xml::XPath::XPathNavigator::_set_UniqueIdTbl(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_UniqueIdTbl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "UniqueIdTbl", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ContentKindMasks
::ArrayW<int> System::Xml::XPath::XPathNavigator::_get_ContentKindMasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_get_ContentKindMasks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.XPath", "XPathNavigator", "ContentKindMasks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ContentKindMasks
void System::Xml::XPath::XPathNavigator::_set_ContentKindMasks(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::_set_ContentKindMasks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNavigator", "ContentKindMasks", value));
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.System.ICloneable.Clone
::Il2CppObject* System::Xml::XPath::XPathNavigator::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XPath::XPathNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.LookupNamespace
::StringW System::Xml::XPath::XPathNavigator::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.LookupPrefix
::StringW System::Xml::XPath::XPathNavigator::LookupPrefix(::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceURI);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.Clone
::System::Xml::XPath::XPathNavigator* System::Xml::XPath::XPathNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_LocalName
::StringW System::Xml::XPath::XPathNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_NamespaceURI
::StringW System::Xml::XPath::XPathNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_Prefix
::StringW System::Xml::XPath::XPathNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_UnderlyingObject
::Il2CppObject* System::Xml::XPath::XPathNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToNamespace
bool System::Xml::XPath::XPathNavigator::MoveToNamespace(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace
bool System::Xml::XPath::XPathNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToNextNamespace
bool System::Xml::XPath::XPathNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.MoveToParent
bool System::Xml::XPath::XPathNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.IsSamePosition
bool System::Xml::XPath::XPathNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_SchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XPath::XPathNavigator::get_SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_SchemaInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::IXmlSchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.IsText
bool System::Xml::XPath::XPathNavigator::IsText(::System::Xml::XPath::XPathNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XPath", "XPathNavigator", "IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator..cctor
void System::Xml::XPath::XPathNavigator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XPath", "XPathNavigator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.ToString
::StringW System::Xml::XPath::XPathNavigator::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::XPath::XPathNavigator::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_XmlType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_TypedValue
::Il2CppObject* System::Xml::XPath::XPathNavigator::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueType
::System::Type* System::Xml::XPath::XPathNavigator::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsBoolean
bool System::Xml::XPath::XPathNavigator::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsDateTime
::System::DateTime System::Xml::XPath::XPathNavigator::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsDouble
double System::Xml::XPath::XPathNavigator::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 10));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsInt
int System::Xml::XPath::XPathNavigator::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.get_ValueAsLong
int64_t System::Xml::XPath::XPathNavigator::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XPath.XPathNavigator.ValueAs
::Il2CppObject* System::Xml::XPath::XPathNavigator::ValueAs(::System::Type* returnType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigator::ValueAs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, returnType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XPath.XPathNavigatorKeyComparer
#include "System/Xml/XPath/XPathNavigatorKeyComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XPath.XPathNavigatorKeyComparer.System.Collections.IEqualityComparer.Equals
bool System::Xml::XPath::XPathNavigatorKeyComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* obj1, ::Il2CppObject* obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigatorKeyComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigatorKeyComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj1, obj2);
}
// Autogenerated method: System.Xml.XPath.XPathNavigatorKeyComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Xml::XPath::XPathNavigatorKeyComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNavigatorKeyComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigatorKeyComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Root
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Root
void System::Xml::XPath::XPathNodeType::_set_Root(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Element
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Element
void System::Xml::XPath::XPathNodeType::_set_Element(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Attribute
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Attribute
void System::Xml::XPath::XPathNodeType::_set_Attribute(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Namespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Namespace
void System::Xml::XPath::XPathNodeType::_set_Namespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Text
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Text
void System::Xml::XPath::XPathNodeType::_set_Text(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_SignificantWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_SignificantWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "SignificantWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType SignificantWhitespace
void System::Xml::XPath::XPathNodeType::_set_SignificantWhitespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_SignificantWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "SignificantWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Whitespace
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Whitespace
void System::Xml::XPath::XPathNodeType::_set_Whitespace(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType ProcessingInstruction
void System::Xml::XPath::XPathNodeType::_set_ProcessingInstruction(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType Comment
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType Comment
void System::Xml::XPath::XPathNodeType::_set_Comment(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XPath.XPathNodeType All
::System::Xml::XPath::XPathNodeType System::Xml::XPath::XPathNodeType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XPath::XPathNodeType>("System.Xml.XPath", "XPathNodeType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XPath.XPathNodeType All
void System::Xml::XPath::XPathNodeType::_set_All(::System::Xml::XPath::XPathNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.XPath", "XPathNodeType", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XPath::XPathNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XPath::XPathNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlAttributeAttribute
#include "System/Xml/Serialization/XmlAttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String attributeName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlAttributeAttribute::dyn_attributeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlElementAttribute
#include "System/Xml/Serialization/XmlElementAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String elementName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlElementAttribute::dyn_elementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_elementName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Serialization::XmlElementAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Xml::Serialization::XmlElementAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlEnumAttribute
#include "System/Xml/Serialization/XmlEnumAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Serialization::XmlEnumAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlEnumAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Serialization.XmlIgnoreAttribute
#include "System/Xml/Serialization/XmlIgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::BitSet::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bits
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::Schema::BitSet::dyn_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::dyn_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Count
int System::Xml::Schema::BitSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.get_Item
bool System::Xml::Schema::BitSet::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clear
void System::Xml::Schema::BitSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Set
void System::Xml::Schema::BitSet::Set(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.Get
bool System::Xml::Schema::BitSet::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.BitSet.NextSet
int System::Xml::Schema::BitSet::NextSet(int startFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::NextSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startFrom);
}
// Autogenerated method: System.Xml.Schema.BitSet.And
void System::Xml::Schema::BitSet::And(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Or
void System::Xml::Schema::BitSet::Or(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Clone
::System::Xml::Schema::BitSet* System::Xml::Schema::BitSet::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Intersects
bool System::Xml::Schema::BitSet::Intersects(::System::Xml::Schema::BitSet* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.BitSet.Subscript
int System::Xml::Schema::BitSet::Subscript(int bitIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Subscript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bitIndex);
}
// Autogenerated method: System.Xml.Schema.BitSet.EnsureLength
void System::Xml::Schema::BitSet::EnsureLength(int nRequiredLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::EnsureLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nRequiredLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nRequiredLength);
}
// Autogenerated method: System.Xml.Schema.BitSet.GetHashCode
int System::Xml::Schema::BitSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.BitSet.Equals
bool System::Xml::Schema::BitSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BitSet::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UpaException
#include "System/Xml/Schema/UpaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object particle1
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UpaException::dyn_particle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particle2
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::UpaException::dyn_particle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UpaException::dyn_particle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 last
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SymbolsDictionary::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable names
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable wildcards
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::SymbolsDictionary::dyn_wildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_wildcards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wildcards"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList particles
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::SymbolsDictionary::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object particleLast
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::SymbolsDictionary::dyn_particleLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_particleLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleLast"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isUpaEnforced
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::dyn_isUpaEnforced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isUpaEnforced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_Count
int System::Xml::Schema::SymbolsDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.get_IsUpaEnforced
bool System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::get_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.set_IsUpaEnforced
void System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::set_IsUpaEnforced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUpaEnforced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddName
int System::Xml::Schema::SymbolsDictionary::AddName(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddNamespaceList
void System::Xml::Schema::SymbolsDictionary::AddNamespaceList(::System::Xml::Schema::NamespaceList* list, ::Il2CppObject* particle, bool allowLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(allowLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, particle, allowLocal);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.AddWildcard
void System::Xml::Schema::SymbolsDictionary::AddWildcard(::StringW wildcard, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::AddWildcard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWildcard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wildcard), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wildcard, particle);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetNamespaceListSymbols
::System::Collections::ICollection* System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols(::System::Xml::Schema::NamespaceList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::GetNamespaceListSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespaceListSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, list);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.Exists
bool System::Xml::Schema::SymbolsDictionary::Exists(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SymbolsDictionary.GetParticle
::Il2CppObject* System::Xml::Schema::SymbolsDictionary::GetParticle(int symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SymbolsDictionary::GetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, symbol);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 symbol
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::Position::dyn_symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Position::dyn_symbol");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbol"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object particle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::Position::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Position::dyn_particle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Position..ctor
// ABORTED elsewhere.  System::Xml::Schema::Position::Position(int symbol, ::Il2CppObject* particle)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.Position
#include "System/Xml/Schema/Position.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList positions
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::Positions::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Positions.Add
int System::Xml::Schema::Positions::Add(int symbol, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbol), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, symbol, particle);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Item
::System::Xml::Schema::Position System::Xml::Schema::Positions::get_Item(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::Position, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.Schema.Positions.get_Count
int System::Xml::Schema::Positions::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Positions::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ExpandTree
void System::Xml::Schema::SyntaxTreeNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ConstructPos
void System::Xml::Schema::SyntaxTreeNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsNullable
bool System::Xml::Schema::SyntaxTreeNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsRangeNode
bool System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafNode
#include "System/Xml/Schema/LeafNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::LeafNode::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_Pos
int System::Xml::Schema::LeafNode::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.set_Pos
void System::Xml::Schema::LeafNode::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ExpandTree
void System::Xml::Schema::LeafNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ConstructPos
void System::Xml::Schema::LeafNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_IsNullable
bool System::Xml::Schema::LeafNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceListNode
#include "System/Xml/Schema/NamespaceListNode.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.NamespaceList namespaceList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList*& System::Xml::Schema::NamespaceListNode::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object particle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::NamespaceListNode::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.GetResolvedSymbols
::System::Collections::ICollection* System::Xml::Schema::NamespaceListNode::GetResolvedSymbols(::System::Xml::Schema::SymbolsDictionary* symbols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::GetResolvedSymbols");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::NamespaceListNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, symbols);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ExpandTree
void System::Xml::Schema::NamespaceListNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ConstructPos
void System::Xml::Schema::NamespaceListNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.get_IsNullable
bool System::Xml::Schema::NamespaceListNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode leftChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_leftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_leftChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode rightChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_rightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_rightChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_LeftChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_LeftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_LeftChild
void System::Xml::Schema::InteriorNode::set_LeftChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_RightChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_RightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_RightChild
void System::Xml::Schema::InteriorNode::set_RightChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTreeNoRecursive
void System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTreeNoRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTree
void System::Xml::Schema::InteriorNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode
#include "System/Xml/Schema/SequenceNode.hpp"
// Including type: System.Xml.Schema.SequenceNode/SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SequenceNode.ConstructPos
void System::Xml::Schema::SequenceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.get_IsNullable
bool System::Xml::Schema::SequenceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ExpandTree
void System::Xml::Schema::SequenceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::InteriorNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode/SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SequenceNode this_
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SequenceNode*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "this_"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SequenceNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastposLeft
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastposLeft"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstposRight
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstposRight"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SequenceNode/SequenceConstructPosContext..ctor
System::Xml::Schema::SequenceNode::SequenceConstructPosContext::SequenceConstructPosContext(::System::Xml::Schema::SequenceNode* node, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, firstpos, lastpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ChoiceNode
#include "System/Xml/Schema/ChoiceNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructChildPos
void System::Xml::Schema::ChoiceNode::ConstructChildPos(::System::Xml::Schema::SyntaxTreeNode* child, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructChildPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ChoiceNode", "ConstructChildPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructPos
void System::Xml::Schema::ChoiceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.get_IsNullable
bool System::Xml::Schema::ChoiceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ExpandTree
void System::Xml::Schema::ChoiceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::InteriorNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.PlusNode
#include "System/Xml/Schema/PlusNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.PlusNode.ConstructPos
void System::Xml::Schema::PlusNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.PlusNode.get_IsNullable
bool System::Xml::Schema::PlusNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.QmarkNode
#include "System/Xml/Schema/QmarkNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QmarkNode.ConstructPos
void System::Xml::Schema::QmarkNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.QmarkNode.get_IsNullable
bool System::Xml::Schema::QmarkNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.StarNode
#include "System/Xml/Schema/StarNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.StarNode.ConstructPos
void System::Xml::Schema::StarNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.StarNode.get_IsNullable
bool System::Xml::Schema::StarNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafRangeNode
#include "System/Xml/Schema/LeafRangeNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Decimal min
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal max
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet nextIteration
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::LeafRangeNode::dyn_nextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_nextIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextIteration"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Max
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Min
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_NextIteration
::System::Xml::Schema::BitSet* System::Xml::Schema::LeafRangeNode::get_NextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.set_NextIteration
void System::Xml::Schema::LeafRangeNode::set_NextIteration(::System::Xml::Schema::BitSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::set_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_IsRangeNode
bool System::Xml::Schema::LeafRangeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SyntaxTreeNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.ExpandTree
void System::Xml::Schema::LeafRangeNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::LeafNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Empty
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Empty
void System::Xml::Schema::ContentValidator::_set_Empty(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_TextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_TextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "TextOnly"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
void System::Xml::Schema::ContentValidator::_set_TextOnly(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_TextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "TextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Mixed
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Mixed
void System::Xml::Schema::ContentValidator::_set_Mixed(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Any
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Any"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Any
void System::Xml::Schema::ContentValidator::_set_Any(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::ContentValidator::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptiable
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isEmptiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_ContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::ContentValidator::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_IsOpen
bool System::Xml::Schema::ContentValidator::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator..cctor
void System::Xml::Schema::ContentValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::ParticleContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::ParticleContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Xml::Schema::ParticleContentValidator::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode contentNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::ParticleContentValidator::dyn_contentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_contentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPartial
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_isPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_isPartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableUpaCheck
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUpaCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Start
void System::Xml::Schema::ParticleContentValidator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.OpenGroup
void System::Xml::Schema::ParticleContentValidator::OpenGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::OpenGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CloseGroup
void System::Xml::Schema::ParticleContentValidator::CloseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CloseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Exists
bool System::Xml::Schema::ParticleContentValidator::Exists(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddName
void System::Xml::Schema::ParticleContentValidator::AddName(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddNamespaceList
void System::Xml::Schema::ParticleContentValidator::AddNamespaceList(::System::Xml::Schema::NamespaceList* namespaceList, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceList), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, namespaceList, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddLeafNode
void System::Xml::Schema::ParticleContentValidator::AddLeafNode(::System::Xml::Schema::SyntaxTreeNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddLeafNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLeafNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddChoice
void System::Xml::Schema::ParticleContentValidator::AddChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddSequence
void System::Xml::Schema::ParticleContentValidator::AddSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddStar
void System::Xml::Schema::ParticleContentValidator::AddStar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddStar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddPlus
void System::Xml::Schema::ParticleContentValidator::AddPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddQMark
void System::Xml::Schema::ParticleContentValidator::AddQMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddQMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Closure
void System::Xml::Schema::ParticleContentValidator::Closure(::System::Xml::Schema::InteriorNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Closure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Closure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Finish
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ParticleContentValidator::Finish(bool useDFA) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useDFA)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, useDFA);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CalculateTotalFollowposForRangeNodes
::ArrayW<::System::Xml::Schema::BitSet*> System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, ByRef<::System::Xml::Schema::BitSet*> posWithRangeTerminals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTotalFollowposForRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::BitSet*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::BitSet*>, false>(this, ___internal__method, firstpos, followpos, byref(posWithRangeTerminals));
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckCMUPAWithLeafRangeNodes
void System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCMUPAWithLeafRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.GetApplicableMinMaxFollowPos
::System::Xml::Schema::BitSet* System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos(::System::Xml::Schema::BitSet* curpos, ::System::Xml::Schema::BitSet* posWithRangeTerminals, ::ArrayW<::System::Xml::Schema::BitSet*> minmaxFollowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicableMinMaxFollowPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos), ::il2cpp_utils::ExtractType(posWithRangeTerminals), ::il2cpp_utils::ExtractType(minmaxFollowPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method, curpos, posWithRangeTerminals, minmaxFollowPos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.BuildTransitionTable
::ArrayW<::ArrayW<int>> System::Xml::Schema::ParticleContentValidator::BuildTransitionTable(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, int endMarkerPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::BuildTransitionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTransitionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractType(endMarkerPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<int>>, false>(this, ___internal__method, firstpos, followpos, endMarkerPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DfaContentValidator
#include "System/Xml/Schema/DfaContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[][] transitionTable
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Xml::Schema::DfaContentValidator::dyn_transitionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_transitionTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTable"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::DfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NfaContentValidator
#include "System/Xml/Schema/NfaContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::NfaContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::NfaContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::NfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::NfaContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RangeContentValidator
#include "System/Xml/Schema/RangeContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::RangeContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet positionsWithRangeTerminals
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsWithRangeTerminals"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::RangeContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::RangeContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaDatatypeVariety
#include "System/Xml/Schema/XmlSchemaDatatypeVariety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdSimpleValue
#include "System/Xml/Schema/XsdSimpleValue.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType xmlType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XsdSimpleValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object typedValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XsdSimpleValue::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_XmlType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XsdSimpleValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XsdSimpleValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_TypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Length
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Length"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Length
void System::Xml::Schema::RestrictionFlags::_set_Length(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Length", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinLength
void System::Xml::Schema::RestrictionFlags::_set_MinLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxLength
void System::Xml::Schema::RestrictionFlags::_set_MaxLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Pattern
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Pattern
void System::Xml::Schema::RestrictionFlags::_set_Pattern(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Enumeration
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Enumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Enumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Enumeration
void System::Xml::Schema::RestrictionFlags::_set_Enumeration(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Enumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Enumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_WhiteSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "WhiteSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
void System::Xml::Schema::RestrictionFlags::_set_WhiteSpace(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_WhiteSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "WhiteSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
void System::Xml::Schema::RestrictionFlags::_set_MinInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
void System::Xml::Schema::RestrictionFlags::_set_MinExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_TotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "TotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
void System::Xml::Schema::RestrictionFlags::_set_TotalDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_TotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "TotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_FractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "FractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
void System::Xml::Schema::RestrictionFlags::_set_FractionDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_FractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "FractionDigits", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RestrictionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable builtinTypes
::System::Collections::Hashtable* System::Xml::Schema::DatatypeImplementation::_get_builtinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_builtinTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Schema", "DatatypeImplementation", "builtinTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable builtinTypes
void System::Xml::Schema::DatatypeImplementation::_set_builtinTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_builtinTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "builtinTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>>("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
void System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_anySimpleType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
void System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
void System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnySimpleType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnyType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnyType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnyType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnyType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnyType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyURI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyURI"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
void System::Xml::Schema::DatatypeImplementation::_set_c_anyURI(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyURI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyURI", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
void System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_boolean"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
void System::Xml::Schema::DatatypeImplementation::_set_c_boolean(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_boolean", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_byte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
void System::Xml::Schema::DatatypeImplementation::_set_c_byte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_byte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
void System::Xml::Schema::DatatypeImplementation::_set_c_char(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_date"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
void System::Xml::Schema::DatatypeImplementation::_set_c_date(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_date", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTime(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_day");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_day"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
void System::Xml::Schema::DatatypeImplementation::_set_c_day(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_day");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_day", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_decimal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
void System::Xml::Schema::DatatypeImplementation::_set_c_decimal(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_decimal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_double"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
void System::Xml::Schema::DatatypeImplementation::_set_c_double(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_double", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_duration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
void System::Xml::Schema::DatatypeImplementation::_set_c_duration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_duration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
void System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_fixed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
void System::Xml::Schema::DatatypeImplementation::_set_c_fixed(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_fixed", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_float"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
void System::Xml::Schema::DatatypeImplementation::_set_c_float(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_float", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
void System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
void System::Xml::Schema::DatatypeImplementation::_set_c_ID(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREF(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREF", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_int"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
void System::Xml::Schema::DatatypeImplementation::_set_c_int(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_int", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_integer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
void System::Xml::Schema::DatatypeImplementation::_set_c_integer(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_integer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_language"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
void System::Xml::Schema::DatatypeImplementation::_set_c_language(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_language", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_long"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
void System::Xml::Schema::DatatypeImplementation::_set_c_long(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_long", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_month");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_month"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
void System::Xml::Schema::DatatypeImplementation::_set_c_month(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_month");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_month", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_monthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_monthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_monthDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
void System::Xml::Schema::DatatypeImplementation::_set_c_monthDay(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_monthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_monthDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_Name"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
void System::Xml::Schema::DatatypeImplementation::_set_c_Name(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_Name", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NCName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
void System::Xml::Schema::DatatypeImplementation::_set_c_NCName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NCName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
void System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
void System::Xml::Schema::DatatypeImplementation::_set_c_QName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_short"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
void System::Xml::Schema::DatatypeImplementation::_set_c_short(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_short", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_string");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_string"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
void System::Xml::Schema::DatatypeImplementation::_set_c_string(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_string");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_string", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_time"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
void System::Xml::Schema::DatatypeImplementation::_set_c_time(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_time", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_token"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
void System::Xml::Schema::DatatypeImplementation::_set_c_token(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_token", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_uuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
void System::Xml::Schema::DatatypeImplementation::_set_c_uuid(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_uuid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_year");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_year"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
void System::Xml::Schema::DatatypeImplementation::_set_c_year(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_year");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_year", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap[] c_XdrTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap[] c_XdrTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap[] c_XsdTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap[] c_XsdTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatypeVariety variety
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatypeVariety& System::Xml::Schema::DatatypeImplementation::dyn_variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_variety");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "variety"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatypeVariety*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFacets restriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::RestrictionFacets*& System::Xml::Schema::DatatypeImplementation::dyn_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFacets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation baseType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter valueConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::DatatypeImplementation::dyn_valueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_valueConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType parentSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation..cctor
void System::Xml::Schema::DatatypeImplementation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_AnySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_AnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_AnySimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_AnySimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_UntypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_UntypedAtomicType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXmlTokenizedType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType(::System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXmlTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromTypeName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromTypeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.StartBuiltinType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::StartBuiltinType(::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaDatatype* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::StartBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "StartBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, dataType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FinishBuiltinType
void System::Xml::Schema::DatatypeImplementation::FinishBuiltinType(::System::Xml::Schema::XmlSchemaSimpleType* derivedType, ::System::Xml::Schema::XmlSchemaSimpleType* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FinishBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FinishBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateBuiltinTypes
void System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "CreateBuiltinTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromTypeCode
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetSimpleTypeFromTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByList
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByList(int minSize, ::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::DeriveByList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minSize), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, minSize, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ListValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetTypeName
::StringW System::Xml::Schema::DatatypeImplementation::GetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.Compare
int System::Xml::Schema::DatatypeImplementation::Compare(::ArrayW<uint8_t> value1, ::ArrayW<uint8_t> value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsEqual
bool System::Xml::Schema::DatatypeImplementation::IsEqual(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::IsEqual");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o1, o2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::DatatypeImplementation::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Variety
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::DatatypeImplementation::get_Variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Variety");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatypeVariety, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::DatatypeImplementation::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Restriction
::System::Xml::Schema::RestrictionFacets* System::Xml::Schema::DatatypeImplementation::get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Restriction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, bool createAtomicValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr, createAtomicValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation type
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parentIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap.op_Explicit
System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::operator ::System::Xml::Schema::DatatypeImplementation*() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation/SchemaDatatypeMap", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap.get_Name
::StringW System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap.get_ParentIndex
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/SchemaDatatypeMap.CompareTo
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_List
#include "System/Xml/Schema/Datatype_List.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::Datatype_List::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minListSize
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::Datatype_List::dyn_minListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_minListSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minListSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_List::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.Compare
int System::Xml::Schema::Datatype_List::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_List::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_List::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_List::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_List::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_union
#include "System/Xml/Schema/Datatype_union.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_union::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_union::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] types
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::Datatype_union::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.HasAtomicMembers
bool System::Xml::Schema::Datatype_union::HasAtomicMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::HasAtomicMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAtomicMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_union::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.Compare
int System::Xml::Schema::Datatype_union::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_ValueType
::System::Type* System::Xml::Schema::Datatype_union::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_union::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_union::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_union::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_union::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_union..cctor
void System::Xml::Schema::Datatype_union::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_union", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
